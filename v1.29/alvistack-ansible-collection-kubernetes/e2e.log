  I0415 07:36:40.878731      14 e2e.go:117] Starting e2e run "89f0c345-f7cb-464f-a920-e32459ba3e18" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1713166597 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Apr 15 07:36:41.362: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 07:36:41.378: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Apr 15 07:36:41.467: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Apr 15 07:36:41.482: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds' (0 seconds elapsed)
  Apr 15 07:36:41.482: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Apr 15 07:36:41.483: INFO: e2e test version: v1.29.3
  Apr 15 07:36:41.486: INFO: kube-apiserver version: v1.29.3
  Apr 15 07:36:41.487: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 07:36:41.497: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.135 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 04/15/24 07:36:41.814
  Apr 15 07:36:41.814: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 07:36:41.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:36:41.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:36:41.856
  STEP: Creating ReplicationController "e2e-rc-fhzmx" @ 04/15/24 07:36:41.868
  Apr 15 07:36:41.882: INFO: Get Replication Controller "e2e-rc-fhzmx" to confirm replicas
  Apr 15 07:36:42.883: INFO: Get Replication Controller "e2e-rc-fhzmx" to confirm replicas
  Apr 15 07:36:42.893: INFO: Found 1 replicas for "e2e-rc-fhzmx" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-fhzmx" @ 04/15/24 07:36:42.893
  STEP: Updating a scale subresource @ 04/15/24 07:36:42.903
  STEP: Verifying replicas where modified for replication controller "e2e-rc-fhzmx" @ 04/15/24 07:36:42.921
  Apr 15 07:36:42.921: INFO: Get Replication Controller "e2e-rc-fhzmx" to confirm replicas
  Apr 15 07:36:43.921: INFO: Get Replication Controller "e2e-rc-fhzmx" to confirm replicas
  Apr 15 07:36:43.928: INFO: Found 2 replicas for "e2e-rc-fhzmx" replication controller
  Apr 15 07:36:43.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3227" for this suite. @ 04/15/24 07:36:43.941
• [2.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 04/15/24 07:36:43.957
  Apr 15 07:36:43.958: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename job @ 04/15/24 07:36:43.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:36:44.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:36:44.022
  STEP: Creating Indexed job @ 04/15/24 07:36:44.034
  STEP: Ensuring job reaches completions @ 04/15/24 07:36:44.049
  STEP: Ensuring pods with index for job exist @ 04/15/24 07:36:54.056
  Apr 15 07:36:54.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8330" for this suite. @ 04/15/24 07:36:54.081
• [10.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 04/15/24 07:36:54.098
  Apr 15 07:36:54.099: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename sched-pred @ 04/15/24 07:36:54.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:36:54.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:36:54.144
  Apr 15 07:36:54.150: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 15 07:36:54.175: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 07:36:54.182: INFO: 
  Logging pods the apiserver thinks is on node jec7saimeaph-1 before test
  Apr 15 07:36:54.202: INFO: kube-addon-manager-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.202: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 15 07:36:54.202: INFO: kube-apiserver-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.202: INFO: 	Container kube-apiserver ready: true, restart count 5
  Apr 15 07:36:54.202: INFO: kube-controller-manager-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.202: INFO: 	Container kube-controller-manager ready: true, restart count 5
  Apr 15 07:36:54.202: INFO: kube-flannel-ds-mnln7 from kube-system started at 2024-04-15 07:36:15 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.202: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:36:54.202: INFO: kube-proxy-rsrrw from kube-system started at 2024-04-15 07:36:14 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.202: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:36:54.202: INFO: kube-scheduler-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.202: INFO: 	Container kube-scheduler ready: true, restart count 5
  Apr 15 07:36:54.203: INFO: sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-q89p9 from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 07:36:54.203: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:36:54.203: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 07:36:54.203: INFO: 
  Logging pods the apiserver thinks is on node jec7saimeaph-2 before test
  Apr 15 07:36:54.218: INFO: coredns-76f75df574-wm57r from kube-system started at 2024-04-15 07:36:13 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.218: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 07:36:54.218: INFO: kube-addon-manager-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.218: INFO: 	Container kube-addon-manager ready: true, restart count 6
  Apr 15 07:36:54.218: INFO: kube-apiserver-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.218: INFO: 	Container kube-apiserver ready: true, restart count 6
  Apr 15 07:36:54.218: INFO: kube-controller-manager-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.218: INFO: 	Container kube-controller-manager ready: true, restart count 6
  Apr 15 07:36:54.218: INFO: kube-flannel-ds-bxh6k from kube-system started at 2024-04-15 07:36:16 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.218: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:36:54.218: INFO: kube-proxy-kq9zs from kube-system started at 2024-04-15 07:36:14 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.218: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:36:54.218: INFO: kube-scheduler-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.218: INFO: 	Container kube-scheduler ready: true, restart count 6
  Apr 15 07:36:54.219: INFO: sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-kf6jd from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 07:36:54.219: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:36:54.219: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 07:36:54.219: INFO: 
  Logging pods the apiserver thinks is on node jec7saimeaph-3 before test
  Apr 15 07:36:54.244: INFO: indexed-job-0-77jr9 from job-8330 started at 2024-04-15 07:36:44 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.244: INFO: 	Container c ready: false, restart count 0
  Apr 15 07:36:54.244: INFO: indexed-job-1-6nvv2 from job-8330 started at 2024-04-15 07:36:44 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.244: INFO: 	Container c ready: false, restart count 0
  Apr 15 07:36:54.244: INFO: indexed-job-2-725sw from job-8330 started at 2024-04-15 07:36:48 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.244: INFO: 	Container c ready: false, restart count 0
  Apr 15 07:36:54.244: INFO: indexed-job-3-dfhvj from job-8330 started at 2024-04-15 07:36:48 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.244: INFO: 	Container c ready: false, restart count 0
  Apr 15 07:36:54.244: INFO: coredns-76f75df574-fzgvz from kube-system started at 2024-04-15 07:36:13 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.244: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 07:36:54.244: INFO: kube-flannel-ds-g4c45 from kube-system started at 2024-04-15 07:36:15 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.244: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:36:54.244: INFO: kube-proxy-q2x5c from kube-system started at 2024-04-15 07:36:14 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.244: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:36:54.244: INFO: sonobuoy from sonobuoy started at 2024-04-15 07:36:35 +0000 UTC (1 container statuses recorded)
  Apr 15 07:36:54.244: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 15 07:36:54.244: INFO: sonobuoy-e2e-job-2b6e6deeff5c4ebe from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 07:36:54.244: INFO: 	Container e2e ready: true, restart count 0
  Apr 15 07:36:54.244: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:36:54.244: INFO: sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-gngj9 from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 07:36:54.244: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:36:54.244: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/15/24 07:36:54.244
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17c663f57e2f5889], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 04/15/24 07:36:54.303
  Apr 15 07:36:55.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4622" for this suite. @ 04/15/24 07:36:55.311
• [1.232 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 04/15/24 07:36:55.332
  Apr 15 07:36:55.332: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename sysctl @ 04/15/24 07:36:55.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:36:55.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:36:55.373
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/15/24 07:36:55.385
  STEP: Watching for error events or started pod @ 04/15/24 07:36:55.408
  STEP: Waiting for pod completion @ 04/15/24 07:36:57.42
  STEP: Checking that the pod succeeded @ 04/15/24 07:36:59.452
  STEP: Getting logs from the pod @ 04/15/24 07:36:59.452
  STEP: Checking that the sysctl is actually updated @ 04/15/24 07:36:59.493
  Apr 15 07:36:59.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9705" for this suite. @ 04/15/24 07:36:59.507
• [4.196 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 04/15/24 07:36:59.527
  Apr 15 07:36:59.527: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 07:36:59.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:36:59.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:36:59.568
  STEP: creating a ReplicationController @ 04/15/24 07:36:59.599
  STEP: waiting for RC to be added @ 04/15/24 07:36:59.629
  STEP: waiting for available Replicas @ 04/15/24 07:36:59.629
  STEP: patching ReplicationController @ 04/15/24 07:37:01.582
  STEP: waiting for RC to be modified @ 04/15/24 07:37:01.608
  STEP: patching ReplicationController status @ 04/15/24 07:37:01.61
  STEP: waiting for RC to be modified @ 04/15/24 07:37:01.631
  STEP: waiting for available Replicas @ 04/15/24 07:37:01.631
  STEP: fetching ReplicationController status @ 04/15/24 07:37:01.646
  STEP: patching ReplicationController scale @ 04/15/24 07:37:01.683
  STEP: waiting for RC to be modified @ 04/15/24 07:37:01.696
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/15/24 07:37:01.697
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/15/24 07:37:03.089
  STEP: updating ReplicationController status @ 04/15/24 07:37:03.099
  STEP: waiting for RC to be modified @ 04/15/24 07:37:03.117
  STEP: listing all ReplicationControllers @ 04/15/24 07:37:03.118
  STEP: checking that ReplicationController has expected values @ 04/15/24 07:37:03.134
  STEP: deleting ReplicationControllers by collection @ 04/15/24 07:37:03.134
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/15/24 07:37:03.161
  Apr 15 07:37:03.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 07:37:03.257806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-5260" for this suite. @ 04/15/24 07:37:03.268
• [3.753 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 04/15/24 07:37:03.286
  Apr 15 07:37:03.286: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:37:03.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:03.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:03.323
  STEP: Setting up server cert @ 04/15/24 07:37:03.375
  E0415 07:37:04.257830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:37:04.354
  STEP: Deploying the webhook pod @ 04/15/24 07:37:04.373
  STEP: Wait for the deployment to be ready @ 04/15/24 07:37:04.407
  Apr 15 07:37:04.430: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 07:37:05.258769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:06.259241      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:06.478: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:37:07.259287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:08.260885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:08.492: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:37:09.261646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:10.261881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:10.487: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:37:11.261907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:12.263033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:12.487: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:37:13.263610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:14.264303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:14.486: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:37:15.264346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:16.264545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:37:16.505
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:37:16.551
  E0415 07:37:17.265515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:17.552: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/15/24 07:37:17.577
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/15/24 07:37:17.647
  STEP: Creating a dummy validating-webhook-configuration object @ 04/15/24 07:37:17.697
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/15/24 07:37:17.722
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/15/24 07:37:17.74
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/15/24 07:37:17.765
  Apr 15 07:37:17.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4091" for this suite. @ 04/15/24 07:37:17.955
  STEP: Destroying namespace "webhook-markers-2964" for this suite. @ 04/15/24 07:37:17.972
• [14.717 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 04/15/24 07:37:18.01
  Apr 15 07:37:18.011: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:37:18.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:18.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:18.071
  STEP: Creating the pod @ 04/15/24 07:37:18.08
  E0415 07:37:18.266743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:19.267939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:20.268422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:20.688: INFO: Successfully updated pod "labelsupdate16d18fb5-e042-4619-b009-fd4a5a6ba85d"
  E0415 07:37:21.270491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:22.270188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:22.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1813" for this suite. @ 04/15/24 07:37:22.739
• [4.750 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 04/15/24 07:37:22.767
  Apr 15 07:37:22.767: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 07:37:22.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:22.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:22.819
  STEP: Creating a cronjob @ 04/15/24 07:37:22.83
  STEP: creating @ 04/15/24 07:37:22.83
  STEP: getting @ 04/15/24 07:37:22.852
  STEP: listing @ 04/15/24 07:37:22.859
  STEP: watching @ 04/15/24 07:37:22.868
  Apr 15 07:37:22.868: INFO: starting watch
  STEP: cluster-wide listing @ 04/15/24 07:37:22.871
  STEP: cluster-wide watching @ 04/15/24 07:37:22.877
  Apr 15 07:37:22.877: INFO: starting watch
  STEP: patching @ 04/15/24 07:37:22.88
  STEP: updating @ 04/15/24 07:37:22.899
  Apr 15 07:37:22.922: INFO: waiting for watch events with expected annotations
  Apr 15 07:37:22.922: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/15/24 07:37:22.923
  STEP: updating /status @ 04/15/24 07:37:22.941
  STEP: get /status @ 04/15/24 07:37:22.962
  STEP: deleting @ 04/15/24 07:37:22.97
  STEP: deleting a collection @ 04/15/24 07:37:23.02
  Apr 15 07:37:23.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-372" for this suite. @ 04/15/24 07:37:23.068
• [0.320 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 04/15/24 07:37:23.088
  Apr 15 07:37:23.088: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename controllerrevisions @ 04/15/24 07:37:23.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:23.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:23.209
  E0415 07:37:23.271074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating DaemonSet "e2e-sp72m-daemon-set" @ 04/15/24 07:37:23.375
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 07:37:23.395
  Apr 15 07:37:23.438: INFO: Number of nodes with available pods controlled by daemonset e2e-sp72m-daemon-set: 0
  Apr 15 07:37:23.438: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 07:37:24.271396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:24.465: INFO: Number of nodes with available pods controlled by daemonset e2e-sp72m-daemon-set: 0
  Apr 15 07:37:24.465: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 07:37:25.272456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:25.419: INFO: Number of nodes with available pods controlled by daemonset e2e-sp72m-daemon-set: 1
  Apr 15 07:37:25.420: INFO: Node jec7saimeaph-2 is running 0 daemon pod, expected 1
  E0415 07:37:26.272721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:26.431: INFO: Number of nodes with available pods controlled by daemonset e2e-sp72m-daemon-set: 3
  Apr 15 07:37:26.431: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-sp72m-daemon-set
  STEP: Confirm DaemonSet "e2e-sp72m-daemon-set" successfully created with "daemonset-name=e2e-sp72m-daemon-set" label @ 04/15/24 07:37:26.465
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-sp72m-daemon-set" @ 04/15/24 07:37:26.49
  Apr 15 07:37:26.500: INFO: Located ControllerRevision: "e2e-sp72m-daemon-set-b986c9cc4"
  STEP: Patching ControllerRevision "e2e-sp72m-daemon-set-b986c9cc4" @ 04/15/24 07:37:26.509
  Apr 15 07:37:26.529: INFO: e2e-sp72m-daemon-set-b986c9cc4 has been patched
  STEP: Create a new ControllerRevision @ 04/15/24 07:37:26.529
  Apr 15 07:37:26.536: INFO: Created ControllerRevision: e2e-sp72m-daemon-set-69944986d4
  STEP: Confirm that there are two ControllerRevisions @ 04/15/24 07:37:26.536
  Apr 15 07:37:26.536: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 07:37:26.543: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-sp72m-daemon-set-b986c9cc4" @ 04/15/24 07:37:26.543
  STEP: Confirm that there is only one ControllerRevision @ 04/15/24 07:37:26.556
  Apr 15 07:37:26.556: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 07:37:26.563: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-sp72m-daemon-set-69944986d4" @ 04/15/24 07:37:26.569
  Apr 15 07:37:26.590: INFO: e2e-sp72m-daemon-set-69944986d4 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/15/24 07:37:26.591
  W0415 07:37:26.606720      14 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/15/24 07:37:26.607
  Apr 15 07:37:26.607: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0415 07:37:27.272737      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:27.607: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 07:37:27.615: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-sp72m-daemon-set-69944986d4=updated" @ 04/15/24 07:37:27.615
  STEP: Confirm that there is only one ControllerRevision @ 04/15/24 07:37:27.637
  Apr 15 07:37:27.638: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 07:37:27.658: INFO: Found 1 ControllerRevisions
  Apr 15 07:37:27.671: INFO: ControllerRevision "e2e-sp72m-daemon-set-7498d8c845" has revision 3
  STEP: Deleting DaemonSet "e2e-sp72m-daemon-set" @ 04/15/24 07:37:27.678
  STEP: deleting DaemonSet.extensions e2e-sp72m-daemon-set in namespace controllerrevisions-3723, will wait for the garbage collector to delete the pods @ 04/15/24 07:37:27.679
  Apr 15 07:37:27.755: INFO: Deleting DaemonSet.extensions e2e-sp72m-daemon-set took: 12.335433ms
  Apr 15 07:37:27.856: INFO: Terminating DaemonSet.extensions e2e-sp72m-daemon-set pods took: 101.345473ms
  E0415 07:37:28.273283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:28.968: INFO: Number of nodes with available pods controlled by daemonset e2e-sp72m-daemon-set: 0
  Apr 15 07:37:28.968: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-sp72m-daemon-set
  Apr 15 07:37:28.978: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"199178"},"items":null}

  Apr 15 07:37:28.991: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"199178"},"items":null}

  Apr 15 07:37:29.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-3723" for this suite. @ 04/15/24 07:37:29.045
• [5.972 seconds]
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/15/24 07:37:29.062
  Apr 15 07:37:29.062: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename deployment @ 04/15/24 07:37:29.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:29.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:29.108
  Apr 15 07:37:29.141: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0415 07:37:29.273833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:30.277366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:31.275618      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:32.275440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:33.275669      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:34.151: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 07:37:34.152
  Apr 15 07:37:34.152: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0415 07:37:34.276478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:35.276839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:36.163: INFO: Creating deployment "test-rollover-deployment"
  Apr 15 07:37:36.199: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0415 07:37:36.277817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:37.278155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:38.221: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Apr 15 07:37:38.239: INFO: Ensure that both replica sets have 1 created replica
  Apr 15 07:37:38.263: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  E0415 07:37:38.278149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:38.285: INFO: Updating deployment test-rollover-deployment
  Apr 15 07:37:38.286: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0415 07:37:39.279306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:40.279572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:40.303: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Apr 15 07:37:40.316: INFO: Make sure deployment "test-rollover-deployment" is complete
  Apr 15 07:37:40.328: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 07:37:40.329: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:37:41.280548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:42.281478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:42.347: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 07:37:42.347: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:37:43.282364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:44.282826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:44.346: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 07:37:44.347: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:37:45.283656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:46.284693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:46.353: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 07:37:46.353: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:37:47.285360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:48.285980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:48.347: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 07:37:48.347: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 37, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 37, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:37:49.287171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:50.286754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:50.349: INFO: 
  Apr 15 07:37:50.350: INFO: Ensure that both old replica sets have no replicas
  Apr 15 07:37:50.377: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2873",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a513b42-45b1-42d5-acc3-a295e569c642",
      ResourceVersion: (string) (len=6) "199315",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763456,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763456,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763456,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763456,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 07:37:50.407: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2873",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b76294d-4596-4fd9-bce1-01f699a4d043",
      ResourceVersion: (string) (len=6) "199305",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7a513b42-45b1-42d5-acc3-a295e569c642",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 61 35 31 33 62  34 32 2d 34 35 62 31 2d  |\"7a513b42-45b1-|
              00000120  34 32 64 35 2d 61 63 63  33 2d 61 32 39 35 65 35  |42d5-acc3-a295e5|
              00000130  36 39 63 36 34 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |69c642\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:37:50.409: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Apr 15 07:37:50.410: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2873",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eafb79c0-e7a6-43b9-9b68-422041617621",
      ResourceVersion: (string) (len=6) "199314",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763449,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7a513b42-45b1-42d5-acc3-a295e569c642",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763449,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  37 61 35 31 33 62 34 32  2d 34 35 62 31 2d 34 32  |7a513b42-45b1-42|
              000000c0  64 35 2d 61 63 63 33 2d  61 32 39 35 65 35 36 39  |d5-acc3-a295e569|
              000000d0  63 36 34 32 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |c642\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:37:50.416: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2873",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a950efc5-1395-42e8-95ee-f413b0198b10",
      ResourceVersion: (string) (len=6) "199269",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763456,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7a513b42-45b1-42d5-acc3-a295e569c642",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 61 35 31 33 62  34 32 2d 34 35 62 31 2d  |\"7a513b42-45b1-|
              00000120  34 32 64 35 2d 61 63 63  33 2d 61 32 39 35 65 35  |42d5-acc3-a295e5|
              00000130  36 39 63 36 34 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |69c642\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:37:50.466: INFO: Pod "test-rollover-deployment-68774655d5-4ctdt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-4ctdt",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-2873",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b9ec671-3c29-41d9-b62b-c559d1b874ac",
      ResourceVersion: (string) (len=6) "199285",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "7b76294d-4596-4fd9-bce1-01f699a4d043",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 62  37 36 32 39 34 64 2d 34  |d\":\"7b76294d-4|
              00000090  35 39 36 2d 34 66 64 39  2d 62 63 65 31 2d 30 31  |596-4fd9-bce1-01|
              000000a0  66 36 39 39 61 34 64 30  34 33 5c 22 7d 22 3a 7b  |f699a4d043\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 39 5c 22 7d 22 3a 7b  |.233.66.19\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zm24n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zm24n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) (len=12) "10.233.66.19",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.19"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848763459,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://8c3295e3f9896ea67c1b059001c71ff93eeeeef6ac711c3a36374d6c19dae1c3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 07:37:50.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2873" for this suite. @ 04/15/24 07:37:50.493
• [21.447 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 04/15/24 07:37:50.51
  Apr 15 07:37:50.510: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 07:37:50.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:50.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:50.552
  STEP: Counting existing ResourceQuota @ 04/15/24 07:37:50.559
  E0415 07:37:51.287370      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:52.287825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:53.288166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:54.287952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:55.288659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/15/24 07:37:55.577
  STEP: Ensuring resource quota status is calculated @ 04/15/24 07:37:55.591
  E0415 07:37:56.290078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:57.290300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 04/15/24 07:37:57.599
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/15/24 07:37:57.629
  E0415 07:37:58.290824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:59.290950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/15/24 07:37:59.64
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/15/24 07:37:59.65
  STEP: Ensuring a pod cannot update its resource requirements @ 04/15/24 07:37:59.656
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/15/24 07:37:59.667
  E0415 07:38:00.291040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:01.291804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/15/24 07:38:01.677
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 07:38:01.71
  E0415 07:38:02.292742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:03.293429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:03.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3235" for this suite. @ 04/15/24 07:38:03.734
• [13.245 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 04/15/24 07:38:03.758
  Apr 15 07:38:03.758: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 07:38:03.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:38:03.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:38:03.816
  Apr 15 07:38:03.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6971" for this suite. @ 04/15/24 07:38:03.9
• [0.155 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 04/15/24 07:38:03.92
  Apr 15 07:38:03.920: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 07:38:03.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:38:03.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:38:03.964
  STEP: Creating service test in namespace statefulset-1525 @ 04/15/24 07:38:03.974
  STEP: Creating a new StatefulSet @ 04/15/24 07:38:03.987
  Apr 15 07:38:04.024: INFO: Found 0 stateful pods, waiting for 3
  E0415 07:38:04.293867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:05.293959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:06.294784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:07.294653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:08.295194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:09.295945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:10.296644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:11.297376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:12.298037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:13.298529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:14.021: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 07:38:14.022: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 07:38:14.022: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/15/24 07:38:14.043
  Apr 15 07:38:14.074: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/15/24 07:38:14.074
  E0415 07:38:14.299382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:15.299964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:16.300714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:17.300765      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:18.301214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:19.302426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:20.303231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:21.303741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:22.303992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:23.304898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/15/24 07:38:24.088
  STEP: Performing a canary update @ 04/15/24 07:38:24.088
  Apr 15 07:38:24.116: INFO: Updating stateful set ss2
  Apr 15 07:38:24.135: INFO: Waiting for Pod statefulset-1525/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0415 07:38:24.304998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:25.305960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:26.306261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:27.306816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:28.307661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:29.308359      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:30.308676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:31.309558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:32.309988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:33.310400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/15/24 07:38:34.132
  Apr 15 07:38:34.289: INFO: Found 2 stateful pods, waiting for 3
  E0415 07:38:34.310515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:35.311075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:36.311170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:37.311643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:38.312401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:39.313563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:40.313781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:41.314856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:42.314954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:43.315216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:44.258: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 07:38:44.258: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 07:38:44.258: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/15/24 07:38:44.272
  Apr 15 07:38:44.301: INFO: Updating stateful set ss2
  Apr 15 07:38:44.315: INFO: Waiting for Pod statefulset-1525/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0415 07:38:44.316328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:45.316509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:46.316627      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:47.317497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:48.317518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:49.318520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:50.319154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:51.322350      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:52.322314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:53.322952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:54.323703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:54.368: INFO: Updating stateful set ss2
  Apr 15 07:38:54.405: INFO: Waiting for StatefulSet statefulset-1525/ss2 to complete update
  Apr 15 07:38:54.405: INFO: Waiting for Pod statefulset-1525/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0415 07:38:55.324109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:56.325059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:57.325975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:58.326566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:59.327601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:00.327752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:01.329362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:02.329112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:03.329249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:04.329530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:04.386: INFO: Deleting all statefulset in ns statefulset-1525
  Apr 15 07:39:04.394: INFO: Scaling statefulset ss2 to 0
  E0415 07:39:05.329923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:06.330867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:07.331075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:08.331312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:09.332104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:10.332323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:11.333324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:12.333619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:13.333784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:14.334289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:14.425: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 07:39:14.433: INFO: Deleting statefulset ss2
  Apr 15 07:39:14.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1525" for this suite. @ 04/15/24 07:39:14.525
• [70.627 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 04/15/24 07:39:14.548
  Apr 15 07:39:14.548: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 07:39:14.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:14.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:14.582
  STEP: set up a multi version CRD @ 04/15/24 07:39:14.587
  Apr 15 07:39:14.592: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 07:39:15.334929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:16.335965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:17.336179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:18.340013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:19.341219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 04/15/24 07:39:19.379
  STEP: check the unserved version gets removed @ 04/15/24 07:39:19.45
  E0415 07:39:20.341575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:21.342228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 04/15/24 07:39:21.393
  E0415 07:39:22.342677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:23.343615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:24.344471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:24.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5530" for this suite. @ 04/15/24 07:39:24.891
• [10.364 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 04/15/24 07:39:24.919
  Apr 15 07:39:24.919: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 07:39:24.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:24.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:24.958
  STEP: Creating configMap with name configmap-test-volume-map-6bab66b2-18b3-4ac1-973c-9f17c167f157 @ 04/15/24 07:39:24.963
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:39:24.972
  E0415 07:39:25.344628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:26.346398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:27.346200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:28.346486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:39:29.019
  Apr 15 07:39:29.027: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-configmaps-65b29056-378f-4834-ada5-760a547a5f6c container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:39:29.059
  Apr 15 07:39:29.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-245" for this suite. @ 04/15/24 07:39:29.097
• [4.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 04/15/24 07:39:29.118
  Apr 15 07:39:29.118: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/15/24 07:39:29.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:29.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:29.165
  STEP: create the container to handle the HTTPGet hook request. @ 04/15/24 07:39:29.181
  E0415 07:39:29.346775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:30.347005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/15/24 07:39:31.229
  E0415 07:39:31.348153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:32.349062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/15/24 07:39:33.273
  STEP: delete the pod with lifecycle hook @ 04/15/24 07:39:33.313
  E0415 07:39:33.349549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:34.350903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:35.351178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:35.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6469" for this suite. @ 04/15/24 07:39:35.367
• [6.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 04/15/24 07:39:35.383
  Apr 15 07:39:35.383: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:39:35.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:35.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:35.434
  STEP: Starting the proxy @ 04/15/24 07:39:35.444
  Apr 15 07:39:35.448: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-6030 proxy --unix-socket=/tmp/kubectl-proxy-unix2483155287/test'
  STEP: retrieving proxy /api/ output @ 04/15/24 07:39:35.794
  Apr 15 07:39:35.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6030" for this suite. @ 04/15/24 07:39:35.811
• [0.440 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 04/15/24 07:39:35.824
  Apr 15 07:39:35.824: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 07:39:35.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:35.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:35.861
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/15/24 07:39:35.867
  Apr 15 07:39:35.868: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 07:39:36.352203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:37.353235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:38.353996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:39.355224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:40.358102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:41.359451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:42.359865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:43.360449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/15/24 07:39:43.383
  Apr 15 07:39:43.384: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 07:39:44.360773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:45.243: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 07:39:45.361473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:46.361427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:47.362478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:48.362894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:49.363214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:50.363761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:51.364215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:52.365802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:52.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2112" for this suite. @ 04/15/24 07:39:52.829
• [17.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 04/15/24 07:39:52.846
  Apr 15 07:39:52.846: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 07:39:52.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:52.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:52.889
  Apr 15 07:39:52.895: INFO: Creating ReplicaSet my-hostname-basic-ae78b3ed-7427-435d-93be-cab303e89206
  Apr 15 07:39:52.918: INFO: Pod name my-hostname-basic-ae78b3ed-7427-435d-93be-cab303e89206: Found 0 pods out of 1
  E0415 07:39:53.366018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:54.366818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:55.366925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:56.367989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:57.368820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:57.927: INFO: Pod name my-hostname-basic-ae78b3ed-7427-435d-93be-cab303e89206: Found 1 pods out of 1
  Apr 15 07:39:57.927: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-ae78b3ed-7427-435d-93be-cab303e89206" is running
  Apr 15 07:39:57.934: INFO: Pod "my-hostname-basic-ae78b3ed-7427-435d-93be-cab303e89206-wm2bn" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:39:54 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:39:52 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:39:54 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:39:54 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:39:52 +0000 UTC Reason: Message:}])
  Apr 15 07:39:57.936: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/15/24 07:39:57.937
  Apr 15 07:39:57.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6746" for this suite. @ 04/15/24 07:39:57.984
• [5.154 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 04/15/24 07:39:58
  Apr 15 07:39:58.000: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:39:58.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:58.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:58.043
  STEP: Creating configMap with name projected-configmap-test-volume-83b2e304-c306-48c5-987a-73f93d660c32 @ 04/15/24 07:39:58.05
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:39:58.058
  E0415 07:39:58.369102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:59.370017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:00.370777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:01.370648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:40:02.108
  Apr 15 07:40:02.116: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-projected-configmaps-47261fdd-d573-4d83-a6ed-c56a79b026cf container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:40:02.13
  Apr 15 07:40:02.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-172" for this suite. @ 04/15/24 07:40:02.168
• [4.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/15/24 07:40:02.19
  Apr 15 07:40:02.190: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/15/24 07:40:02.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:40:02.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:40:02.229
  E0415 07:40:02.371269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:03.371453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 04/15/24 07:40:04.302
  STEP: Cleaning up the configmap @ 04/15/24 07:40:04.319
  STEP: Cleaning up the pod @ 04/15/24 07:40:04.336
  Apr 15 07:40:04.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 07:40:04.371841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-wrapper-4403" for this suite. @ 04/15/24 07:40:04.375
• [2.198 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/15/24 07:40:04.391
  Apr 15 07:40:04.391: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 07:40:04.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:40:04.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:40:04.432
  STEP: Creating a suspended cronjob @ 04/15/24 07:40:04.442
  STEP: Ensuring no jobs are scheduled @ 04/15/24 07:40:04.464
  E0415 07:40:05.372852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:06.373438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:07.373650      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:08.374249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:09.374738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:10.374690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:11.376466      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:12.377518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:13.377709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:14.377914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:15.378537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:16.379268      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:17.380567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:18.381128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:19.380990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:20.381652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:21.382888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:22.383130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:23.383122      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:24.383519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:25.383750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:26.383804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:27.384549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:28.385217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:29.385185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:30.386536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:31.387184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:32.387341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:33.387404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:34.387633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:35.388468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:36.389180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:37.389317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:38.389746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:39.390395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:40.390361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:41.390337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:42.390992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:43.391455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:44.391754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:45.392146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:46.392489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:47.393370      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:48.394510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:49.394285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:50.403852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:51.394723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:52.394917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:53.395221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:54.395856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:55.396056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:56.396270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:57.397355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:58.397662      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:59.397982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:00.398214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:01.398311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:02.399008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:03.399309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:04.400261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:05.400366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:06.400680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:07.400715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:08.401126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:09.401806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:10.402095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:11.402298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:12.403554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:13.402739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:14.403374      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:15.404233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:16.404938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:17.405364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:18.405448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:19.405885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:20.406779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:21.406410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:22.407076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:23.407322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:24.407882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:25.408357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:26.409246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:27.410212      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:28.410728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:29.411228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:30.412012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:31.412119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:32.412388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:33.413180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:34.413213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:35.413480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:36.413712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:37.414011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:38.414070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:39.414887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:40.415840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:41.415745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:42.416474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:43.416637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:44.417173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:45.417079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:46.417275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:47.417658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:48.418070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:49.418174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:50.420152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:51.419410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:52.419876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:53.422325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:54.420287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:55.420249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:56.420443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:57.422957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:58.423033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:59.423323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:00.423331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:01.423542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:02.424493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:03.424415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:04.424738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:05.424733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:06.425689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:07.426046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:08.426168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:09.426365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:10.426950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:11.427151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:12.427439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:13.427741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:14.427895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:15.428567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:16.428700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:17.428642      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:18.428879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:19.430035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:20.430807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:21.431858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:22.432025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:23.432119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:24.432507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:25.432861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:26.433136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:27.433175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:28.433511      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:29.434091      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:30.434374      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:31.434815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:32.438235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:33.436421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:34.436698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:35.437661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:36.438904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:37.439093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:38.439265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:39.439969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:40.440212      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:41.440700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:42.440819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:43.440905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:44.441131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:45.441726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:46.444121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:47.444317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:48.444824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:49.444855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:50.445545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:51.445750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:52.446862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:53.447213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:54.447450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:55.447684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:56.447768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:57.448190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:58.448454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:59.449166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:00.449526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:01.449508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:02.450306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:03.451392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:04.451442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:05.451565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:06.452196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:07.452272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:08.453784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:09.453056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:10.453518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:11.453528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:12.453792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:13.454640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:14.454708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:15.454944      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:16.456038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:17.456972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:18.457205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:19.458580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:20.459072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:21.459044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:22.459429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:23.459658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:24.462045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:25.460447      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:26.460638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:27.461449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:28.462160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:29.462026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:30.462191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:31.462791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:32.463319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:33.463967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:34.464432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:35.465514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:36.466337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:37.466695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:38.467152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:39.467509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:40.468290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:41.468940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:42.468829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:43.469369      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:44.470338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:45.470841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:46.470706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:47.471287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:48.471657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:49.472001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:50.472857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:51.473272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:52.473322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:53.473960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:54.478648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:55.478785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:56.479724      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:57.479907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:58.480997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:59.481104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:00.481546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:01.482766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:02.483098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:03.483596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:04.484214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:05.484489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:06.485291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:07.485772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:08.485928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:09.486055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:10.486952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:11.487829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:12.487288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:13.487746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:14.488084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:15.488168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:16.489005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:17.489596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:18.490442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:19.490424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:20.490813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:21.491917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:22.492515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:23.493184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:24.493561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:25.494088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:26.494958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:27.495184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:28.495622      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:29.495852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:30.496338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:31.497018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:32.497806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:33.498028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:34.498140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:35.498715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:36.499407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:37.499611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:38.500789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:39.501599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:40.501630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:41.501794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:42.502353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:43.502553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:44.503189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:45.504136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:46.504280      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:47.504814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:48.505806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:49.506918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:50.507941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:51.508981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:52.509456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:53.509794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:54.510729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:55.511340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:56.511326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:57.511596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:58.512208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:59.513345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:00.514496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:01.514699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:02.515664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:03.515922      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/15/24 07:45:04.477
  STEP: Removing cronjob @ 04/15/24 07:45:04.483
  Apr 15 07:45:04.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-55" for this suite. @ 04/15/24 07:45:04.505
  E0415 07:45:04.516567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [300.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 04/15/24 07:45:04.529
  Apr 15 07:45:04.529: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 07:45:04.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:04.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:04.573
  STEP: Creating replication controller my-hostname-basic-32241f52-141e-41a7-85f7-2a71e93a95d4 @ 04/15/24 07:45:04.581
  Apr 15 07:45:04.608: INFO: Pod name my-hostname-basic-32241f52-141e-41a7-85f7-2a71e93a95d4: Found 0 pods out of 1
  E0415 07:45:05.516763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:06.517819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:07.518725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:08.518805      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:09.519078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:09.622: INFO: Pod name my-hostname-basic-32241f52-141e-41a7-85f7-2a71e93a95d4: Found 1 pods out of 1
  Apr 15 07:45:09.622: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-32241f52-141e-41a7-85f7-2a71e93a95d4" are running
  Apr 15 07:45:09.628: INFO: Pod "my-hostname-basic-32241f52-141e-41a7-85f7-2a71e93a95d4-lvfsh" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:45:05 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:45:04 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:45:05 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:45:05 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:45:04 +0000 UTC Reason: Message:}])
  Apr 15 07:45:09.629: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/15/24 07:45:09.629
  Apr 15 07:45:09.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3792" for this suite. @ 04/15/24 07:45:09.68
• [5.170 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 04/15/24 07:45:09.701
  Apr 15 07:45:09.701: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename job @ 04/15/24 07:45:09.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:09.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:09.751
  STEP: Creating a suspended job @ 04/15/24 07:45:09.771
  STEP: Patching the Job @ 04/15/24 07:45:09.793
  STEP: Watching for Job to be patched @ 04/15/24 07:45:09.843
  Apr 15 07:45:09.851: INFO: Event ADDED observed for Job e2e-fhrmz in namespace job-3556 with labels: map[e2e-job-label:e2e-fhrmz] and annotations: map[]
  Apr 15 07:45:09.851: INFO: Event MODIFIED observed for Job e2e-fhrmz in namespace job-3556 with labels: map[e2e-job-label:e2e-fhrmz] and annotations: map[]
  Apr 15 07:45:09.851: INFO: Event MODIFIED found for Job e2e-fhrmz in namespace job-3556 with labels: map[e2e-fhrmz:patched e2e-job-label:e2e-fhrmz] and annotations: map[]
  STEP: Updating the job @ 04/15/24 07:45:09.851
  STEP: Watching for Job to be updated @ 04/15/24 07:45:09.882
  Apr 15 07:45:09.886: INFO: Event MODIFIED found for Job e2e-fhrmz in namespace job-3556 with labels: map[e2e-fhrmz:patched e2e-job-label:e2e-fhrmz] and annotations: map[updated:true]
  Apr 15 07:45:09.887: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/15/24 07:45:09.889
  Apr 15 07:45:09.901: INFO: Job: e2e-fhrmz as labels: map[e2e-fhrmz:patched e2e-job-label:e2e-fhrmz]
  STEP: Waiting for job to complete @ 04/15/24 07:45:09.901
  E0415 07:45:10.519569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:11.519466      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:12.520671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:13.520858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:14.521934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:15.522417      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:16.522560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:17.523850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:18.524153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:19.524403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 04/15/24 07:45:19.911
  STEP: Watching for Job to be deleted @ 04/15/24 07:45:19.937
  Apr 15 07:45:19.943: INFO: Event MODIFIED observed for Job e2e-fhrmz in namespace job-3556 with labels: map[e2e-fhrmz:patched e2e-job-label:e2e-fhrmz] and annotations: map[updated:true]
  Apr 15 07:45:19.946: INFO: Event MODIFIED observed for Job e2e-fhrmz in namespace job-3556 with labels: map[e2e-fhrmz:patched e2e-job-label:e2e-fhrmz] and annotations: map[updated:true]
  Apr 15 07:45:19.947: INFO: Event MODIFIED observed for Job e2e-fhrmz in namespace job-3556 with labels: map[e2e-fhrmz:patched e2e-job-label:e2e-fhrmz] and annotations: map[updated:true]
  Apr 15 07:45:19.948: INFO: Event MODIFIED observed for Job e2e-fhrmz in namespace job-3556 with labels: map[e2e-fhrmz:patched e2e-job-label:e2e-fhrmz] and annotations: map[updated:true]
  Apr 15 07:45:19.950: INFO: Event MODIFIED observed for Job e2e-fhrmz in namespace job-3556 with labels: map[e2e-fhrmz:patched e2e-job-label:e2e-fhrmz] and annotations: map[updated:true]
  Apr 15 07:45:19.951: INFO: Event DELETED found for Job e2e-fhrmz in namespace job-3556 with labels: map[e2e-fhrmz:patched e2e-job-label:e2e-fhrmz] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/15/24 07:45:19.951
  Apr 15 07:45:19.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3556" for this suite. @ 04/15/24 07:45:19.989
• [10.305 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 04/15/24 07:45:20.006
  Apr 15 07:45:20.006: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:45:20.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:20.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:20.058
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/15/24 07:45:20.066
  E0415 07:45:20.525088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:21.526396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:22.527379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:23.527456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:45:24.113
  Apr 15 07:45:24.122: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-70518846-e25f-4911-8d79-f0ea572489b2 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:45:24.159
  Apr 15 07:45:24.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-993" for this suite. @ 04/15/24 07:45:24.201
• [4.208 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 04/15/24 07:45:24.219
  Apr 15 07:45:24.219: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:45:24.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:24.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:24.27
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:45:24.276
  E0415 07:45:24.527566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:25.528450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:26.528999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:27.529706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:45:28.324
  Apr 15 07:45:28.332: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-097abc3b-b7e8-46e4-98f9-feca680b3129 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:45:28.345
  Apr 15 07:45:28.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8206" for this suite. @ 04/15/24 07:45:28.386
• [4.183 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 04/15/24 07:45:28.407
  Apr 15 07:45:28.407: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:45:28.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:28.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:28.448
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/15/24 07:45:28.453
  E0415 07:45:28.530503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:29.530868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:30.531028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:31.531392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:45:32.499
  Apr 15 07:45:32.505: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-6caf4933-d17e-477c-b751-a6604375f858 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:45:32.517
  E0415 07:45:32.531689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:32.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5368" for this suite. @ 04/15/24 07:45:32.551
• [4.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 04/15/24 07:45:32.568
  Apr 15 07:45:32.568: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename events @ 04/15/24 07:45:32.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:32.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:32.617
  STEP: creating a test event @ 04/15/24 07:45:32.623
  STEP: listing all events in all namespaces @ 04/15/24 07:45:32.635
  STEP: patching the test event @ 04/15/24 07:45:32.652
  STEP: fetching the test event @ 04/15/24 07:45:32.662
  STEP: updating the test event @ 04/15/24 07:45:32.669
  STEP: getting the test event @ 04/15/24 07:45:32.689
  STEP: deleting the test event @ 04/15/24 07:45:32.696
  STEP: listing all events in all namespaces @ 04/15/24 07:45:32.711
  Apr 15 07:45:32.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1713" for this suite. @ 04/15/24 07:45:32.745
• [0.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 04/15/24 07:45:32.765
  Apr 15 07:45:32.766: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:45:32.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:32.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:32.813
  STEP: creating Agnhost RC @ 04/15/24 07:45:32.82
  Apr 15 07:45:32.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5537 create -f -'
  Apr 15 07:45:33.307: INFO: stderr: ""
  Apr 15 07:45:33.307: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/15/24 07:45:33.307
  E0415 07:45:33.532623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:34.318: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:45:34.318: INFO: Found 0 / 1
  E0415 07:45:34.533803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:35.315: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:45:35.316: INFO: Found 1 / 1
  Apr 15 07:45:35.316: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/15/24 07:45:35.316
  Apr 15 07:45:35.325: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:45:35.325: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 15 07:45:35.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5537 patch pod agnhost-primary-4j4vd -p {"metadata":{"annotations":{"x":"y"}}}'
  E0415 07:45:35.533746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:35.534: INFO: stderr: ""
  Apr 15 07:45:35.534: INFO: stdout: "pod/agnhost-primary-4j4vd patched\n"
  STEP: checking annotations @ 04/15/24 07:45:35.534
  Apr 15 07:45:35.541: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:45:35.541: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 15 07:45:35.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5537" for this suite. @ 04/15/24 07:45:35.551
• [2.800 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 04/15/24 07:45:35.568
  Apr 15 07:45:35.568: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 07:45:35.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:35.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:35.639
  STEP: apply creating a deployment @ 04/15/24 07:45:35.647
  Apr 15 07:45:35.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6274" for this suite. @ 04/15/24 07:45:35.692
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 04/15/24 07:45:35.708
  Apr 15 07:45:35.708: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 07:45:35.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:35.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:35.752
  Apr 15 07:45:35.761: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0415 07:45:36.534989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/15/24 07:45:36.787
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/15/24 07:45:36.798
  E0415 07:45:37.539119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/15/24 07:45:37.814
  Apr 15 07:45:37.840: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/15/24 07:45:37.841
  Apr 15 07:45:37.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1274" for this suite. @ 04/15/24 07:45:37.883
• [2.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/15/24 07:45:37.926
  Apr 15 07:45:37.927: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename secrets @ 04/15/24 07:45:37.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:37.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:37.971
  Apr 15 07:45:38.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4489" for this suite. @ 04/15/24 07:45:38.135
• [0.231 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 04/15/24 07:45:38.159
  Apr 15 07:45:38.159: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 07:45:38.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:38.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:38.226
  STEP: Creating pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762 @ 04/15/24 07:45:38.239
  E0415 07:45:38.539442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:39.540067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 07:45:40.316
  Apr 15 07:45:40.324: INFO: Initial restart count of pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b is 0
  Apr 15 07:45:40.329: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:45:40.540488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:41.541012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:42.338: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:45:42.542120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:43.542235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:44.345: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:45:44.542746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:45.543390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:46.355: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:45:46.544177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:47.544343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:48.363: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:45:48.545648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:49.546014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:50.375: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:45:50.546703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:51.547187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:52.384: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:45:52.547784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:53.548392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:54.395: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:45:54.549431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:55.557093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:56.404: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:45:56.557986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:57.558504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:58.411: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:45:58.559114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:59.560358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:00.423: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:00.561469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:01.561624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:02.432: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:02.562482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:03.562719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:04.443: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:04.562957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:05.563367      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:06.484: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:06.564793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:07.564617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:08.493: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:08.565430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:09.565601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:10.504: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:10.566648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:11.566919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:12.514: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:12.567809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:13.568268      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:14.523: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:14.569086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:15.569495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:16.531: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:16.569444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:17.569825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:18.546: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:18.569798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:19.570537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:20.559: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:20.571004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:21.572109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:22.568: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:22.572472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:23.573237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:24.573859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:24.580: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:25.574719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:26.575668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:26.592: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:27.576006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:28.576280      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:28.601: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:29.576605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:30.577109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:30.612: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:31.577414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:32.577603      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:32.626: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:33.577941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:34.579206      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:34.638: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:35.579209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:36.579564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:36.650: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:37.579820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:38.580186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:38.657: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:39.580178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:40.580004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:40.668: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:41.580653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:42.580818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:42.677: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:43.581816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:44.582436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:44.688: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:45.583045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:46.584378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:46.707: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:47.585130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:48.585383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:48.717: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:49.585397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:50.586040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:50.726: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:51.587007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:52.586820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:52.736: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:53.587081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:54.587693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:54.746: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:55.588358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:56.588521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:56.757: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:57.589278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:58.589595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:46:58.766: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:46:59.590025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:00.590893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:00.778: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:01.591123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:02.591421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:02.787: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:03.591542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:04.591737      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:04.797: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:05.592197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:06.592143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:06.806: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:07.592593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:08.592747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:08.818: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:09.593051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:10.593209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:10.827: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:11.594025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:12.594446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:12.835: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:13.595297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:14.595506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:14.846: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:15.596227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:16.597032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:16.855: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:17.598131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:18.598858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:18.864: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:19.599182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:20.599828      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:20.873: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:21.599668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:22.599995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:22.882: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:23.602676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:24.601116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:24.892: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:25.601016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:26.603236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:26.901: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:27.602492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:28.603390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:28.910: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:29.604128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:30.604751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:30.920: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:31.605636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:32.605919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:32.929: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:33.607389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:34.607276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:34.940: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:35.608126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:36.609245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:36.948: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:37.609526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:38.609654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:38.962: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:39.610291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:40.610297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:40.970: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:41.610428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:42.611017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:42.978: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:43.611004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:44.611237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:44.990: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:45.611444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:46.611623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:46.996: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:47.611837      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:48.612393      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:49.004: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:49.612696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:50.613369      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:51.016: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:51.613540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:52.613765      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:53.025: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:53.614714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:54.615273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:55.035: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:55.616163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:56.617014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:57.044: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:57.616587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:58.617288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:47:59.054: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:47:59.618251      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:00.618685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:01.065: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:01.619613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:02.619816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:03.074: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:03.619985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:04.620228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:05.083: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:05.621236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:06.621395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:07.091: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:07.621740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:08.621999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:09.103: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:09.622392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:10.623242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:11.112: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:11.622853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:12.623749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:13.121: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:13.624232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:14.624780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:15.131: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:15.625263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:16.626327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:17.141: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:17.626428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:18.626740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:19.151: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:19.627328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:20.627383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:21.159: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:21.628263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:22.628775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:23.168: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:23.629093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:24.630032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:25.179: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:25.630991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:26.632062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:27.190: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:27.631954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:28.632779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:29.198: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:29.633073      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:30.633271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:31.208: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:31.633507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:32.633970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:33.219: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:33.634933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:34.635126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:35.227: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:35.636607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:36.637358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:37.237: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:37.638405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:38.638703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:39.250: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:39.639146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:40.639438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:41.258: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:41.640313      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:42.640648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:43.267: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:43.640806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:44.641485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:45.278: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:45.642136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:46.642484      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:47.286: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:47.642430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:48.647249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:49.295: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:49.647403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:50.647802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:51.303: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:51.648865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:52.648907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:53.313: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:53.649146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:54.649481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:55.323: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:55.650404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:56.650729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:57.333: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:57.651486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:58.652106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:48:59.344: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:48:59.652733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:00.653648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:01.356: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:01.653745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:02.653890      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:03.364: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:03.654991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:04.655524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:05.375: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:05.656084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:06.656842      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:07.386: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:07.657465      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:08.657930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:09.397: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:09.658371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:10.658902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:11.405: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:11.659070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:12.659029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:13.413: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:13.659943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:14.660609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:15.424: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:15.661403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:16.662182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:17.432: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:17.662400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:18.662864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:19.440: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:19.664195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:20.664439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:21.449: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:21.664722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:22.664719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:23.462: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:23.665564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:24.665850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:25.473: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:25.666321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:26.666540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:27.481: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:27.667095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:28.668145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:29.488: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:29.669139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:30.669762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:31.497: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:31.669826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:32.670057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:33.508: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:33.670968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:34.671345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:35.517: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:35.672564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:36.673519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:37.526: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:37.674311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:38.674999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:49:39.539: INFO: Get pod busybox-a15be4d9-0d75-4c81-a2e0-056f2c6bfc3b in namespace container-probe-5762
  E0415 07:49:39.675736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:40.675962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/15/24 07:49:41.54
  Apr 15 07:49:41.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5762" for this suite. @ 04/15/24 07:49:41.598
• [243.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 04/15/24 07:49:41.618
  Apr 15 07:49:41.618: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 07:49:41.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:49:41.669
  E0415 07:49:41.675991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:49:41.678
  STEP: apply creating a deployment @ 04/15/24 07:49:41.691
  Apr 15 07:49:41.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3320" for this suite. @ 04/15/24 07:49:41.742
• [0.139 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/15/24 07:49:41.759
  Apr 15 07:49:41.760: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename subpath @ 04/15/24 07:49:41.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:49:41.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:49:41.801
  STEP: Setting up data @ 04/15/24 07:49:41.806
  STEP: Creating pod pod-subpath-test-secret-xmrx @ 04/15/24 07:49:41.832
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 07:49:41.832
  E0415 07:49:42.676437      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:43.677328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:44.677658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:45.677690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:46.678515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:47.679183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:48.679783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:49.679956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:50.680169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:51.681279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:52.681573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:53.681797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:54.682307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:55.682430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:56.682781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:57.683152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:58.684852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:59.683958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:00.685047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:01.685605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:02.686685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:03.686856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:04.687133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:05.687318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:50:05.988
  Apr 15 07:50:05.995: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-subpath-test-secret-xmrx container test-container-subpath-secret-xmrx: <nil>
  STEP: delete the pod @ 04/15/24 07:50:06.034
  STEP: Deleting pod pod-subpath-test-secret-xmrx @ 04/15/24 07:50:06.072
  Apr 15 07:50:06.072: INFO: Deleting pod "pod-subpath-test-secret-xmrx" in namespace "subpath-325"
  Apr 15 07:50:06.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-325" for this suite. @ 04/15/24 07:50:06.095
• [24.356 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 04/15/24 07:50:06.121
  Apr 15 07:50:06.121: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename security-context-test @ 04/15/24 07:50:06.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:06.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:06.163
  E0415 07:50:06.688211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:07.688554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:08.689025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:09.688875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:10.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3037" for this suite. @ 04/15/24 07:50:10.284
• [4.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 04/15/24 07:50:10.306
  Apr 15 07:50:10.306: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 07:50:10.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:10.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:10.36
  STEP: creating a Service @ 04/15/24 07:50:10.376
  STEP: watching for the Service to be added @ 04/15/24 07:50:10.428
  Apr 15 07:50:10.446: INFO: Found Service test-service-52nsw in namespace services-5896 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32179}]
  Apr 15 07:50:10.447: INFO: Service test-service-52nsw created
  STEP: Getting /status @ 04/15/24 07:50:10.447
  Apr 15 07:50:10.466: INFO: Service test-service-52nsw has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/15/24 07:50:10.467
  STEP: watching for the Service to be patched @ 04/15/24 07:50:10.524
  Apr 15 07:50:10.532: INFO: observed Service test-service-52nsw in namespace services-5896 with annotations: map[] & LoadBalancer: {[]}
  Apr 15 07:50:10.532: INFO: Found Service test-service-52nsw in namespace services-5896 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Apr 15 07:50:10.532: INFO: Service test-service-52nsw has service status patched
  STEP: updating the ServiceStatus @ 04/15/24 07:50:10.532
  Apr 15 07:50:10.559: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/15/24 07:50:10.559
  Apr 15 07:50:10.564: INFO: Observed Service test-service-52nsw in namespace services-5896 with annotations: map[] & Conditions: {[]}
  Apr 15 07:50:10.564: INFO: Observed event: &Service{ObjectMeta:{test-service-52nsw  services-5896  a78d98fb-31d5-493b-871c-405f33298c1a 201603 0 2024-04-15 07:50:10 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-04-15 07:50:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-04-15 07:50:10 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32179,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.38.244,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.38.244],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Apr 15 07:50:10.566: INFO: Found Service test-service-52nsw in namespace services-5896 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 15 07:50:10.566: INFO: Service test-service-52nsw has service status updated
  STEP: patching the service @ 04/15/24 07:50:10.566
  STEP: watching for the Service to be patched @ 04/15/24 07:50:10.612
  Apr 15 07:50:10.620: INFO: observed Service test-service-52nsw in namespace services-5896 with labels: map[test-service-static:true]
  Apr 15 07:50:10.621: INFO: observed Service test-service-52nsw in namespace services-5896 with labels: map[test-service-static:true]
  Apr 15 07:50:10.622: INFO: observed Service test-service-52nsw in namespace services-5896 with labels: map[test-service-static:true]
  Apr 15 07:50:10.622: INFO: Found Service test-service-52nsw in namespace services-5896 with labels: map[test-service:patched test-service-static:true]
  Apr 15 07:50:10.623: INFO: Service test-service-52nsw patched
  STEP: deleting the service @ 04/15/24 07:50:10.624
  STEP: watching for the Service to be deleted @ 04/15/24 07:50:10.678
  Apr 15 07:50:10.682: INFO: Observed event: ADDED
  Apr 15 07:50:10.683: INFO: Observed event: MODIFIED
  Apr 15 07:50:10.684: INFO: Observed event: MODIFIED
  Apr 15 07:50:10.685: INFO: Observed event: MODIFIED
  Apr 15 07:50:10.686: INFO: Found Service test-service-52nsw in namespace services-5896 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Apr 15 07:50:10.687: INFO: Service test-service-52nsw deleted
  Apr 15 07:50:10.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 07:50:10.689026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-5896" for this suite. @ 04/15/24 07:50:10.698
• [0.409 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 04/15/24 07:50:10.717
  Apr 15 07:50:10.717: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 07:50:10.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:10.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:10.77
  STEP: Creating configMap with name configmap-test-volume-0db1f21f-7189-45d7-9765-4fa43d06829f @ 04/15/24 07:50:10.782
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:50:10.795
  E0415 07:50:11.689495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:12.689664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:13.690768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:14.690829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:50:14.87
  Apr 15 07:50:14.879: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-configmaps-938b344c-d943-48bd-a39e-8d970f0a9cbb container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:50:14.897
  Apr 15 07:50:14.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4293" for this suite. @ 04/15/24 07:50:14.952
• [4.253 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 04/15/24 07:50:14.975
  Apr 15 07:50:14.976: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename crd-webhook @ 04/15/24 07:50:14.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:15.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:15.027
  STEP: Setting up server cert @ 04/15/24 07:50:15.035
  E0415 07:50:15.690912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/15/24 07:50:16.592
  STEP: Deploying the custom resource conversion webhook pod @ 04/15/24 07:50:16.612
  STEP: Wait for the deployment to be ready @ 04/15/24 07:50:16.647
  Apr 15 07:50:16.667: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0415 07:50:16.691105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:17.693619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:18.694838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:50:18.696
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:50:18.726
  E0415 07:50:19.695267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:19.728: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 15 07:50:19.745: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 07:50:20.696267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:21.698121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/15/24 07:50:22.554
  STEP: v2 custom resource should be converted @ 04/15/24 07:50:22.567
  E0415 07:50:22.698983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:23.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7679" for this suite. @ 04/15/24 07:50:23.331
• [8.389 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 04/15/24 07:50:23.364
  Apr 15 07:50:23.364: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:50:23.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:23.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:23.41
  STEP: Setting up server cert @ 04/15/24 07:50:23.466
  E0415 07:50:23.699817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:50:24.348
  STEP: Deploying the webhook pod @ 04/15/24 07:50:24.368
  STEP: Wait for the deployment to be ready @ 04/15/24 07:50:24.396
  Apr 15 07:50:24.423: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 07:50:24.701266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:25.701211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:26.500: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:50:26.701492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:27.701698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:28.513: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:50:28.703013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:29.703752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:30.509: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:50:30.704574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:31.704730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:32.508: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:50:32.705574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:33.705614      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:50:34.514
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:50:34.557
  E0415 07:50:34.706497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:35.558: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 15 07:50:35.580: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 07:50:35.707652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5847-crds.webhook.example.com via the AdmissionRegistration API @ 04/15/24 07:50:36.123
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/15/24 07:50:36.189
  E0415 07:50:36.708881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:37.709408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:38.709899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:39.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9659" for this suite. @ 04/15/24 07:50:39.217
  STEP: Destroying namespace "webhook-markers-2855" for this suite. @ 04/15/24 07:50:39.235
• [15.883 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 04/15/24 07:50:39.248
  Apr 15 07:50:39.248: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename chunking @ 04/15/24 07:50:39.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:39.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:39.29
  STEP: creating a large number of resources @ 04/15/24 07:50:39.298
  E0415 07:50:39.711042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:40.712331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:41.713171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:42.714308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:43.714516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:44.715452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:45.715437      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:46.715985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:47.715907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:48.716426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:49.716465      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:50.717274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:51.717811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:52.717898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:53.718632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:54.728582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:55.728874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:56.729556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 04/15/24 07:50:56.963
  Apr 15 07:50:57.017: INFO: Retrieved 40/40 results with rv 202290 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 04/15/24 07:50:57.017
  E0415 07:50:57.729513      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:58.730671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:59.731446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:00.731900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:01.731924      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:02.732315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:03.732762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:04.732921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:05.733157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:06.733507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:07.733698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:08.733765      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:09.734087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:10.734258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:11.734485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:12.735047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:13.735225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:14.736098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:15.736388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:16.736683      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:17.032: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:51:17.737080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:18.737654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:19.738788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:20.739123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:21.740041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:22.740460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:23.741237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:24.742438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:25.742794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:26.742686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:27.743228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:28.744014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:29.744706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:30.744871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:31.745160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:32.745588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:33.745875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:34.746138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:35.746979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:36.747239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:37.035: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:51:37.747590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:38.747914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:39.748172      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:40.748534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:41.748752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:42.748904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:43.749241      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:44.749500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:45.750126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:46.750452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:47.752088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:48.751792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:49.752007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:50.752319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:51.752566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:52.752873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:53.753294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:54.754060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:55.754538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:56.754990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:57.042: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:51:57.755791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:58.756734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:59.757137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:00.757527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:01.757846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:02.758383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:03.759382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:04.759214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:05.759227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:06.759756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:07.760404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:08.761544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:09.762009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:10.762417      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:11.763554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:12.763196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:13.764070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:14.764303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:15.764512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:16.764712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:17.039: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:52:17.765159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:18.765861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:19.766071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:20.766399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:21.767006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:22.767685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:23.768133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:24.768306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:25.768420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:26.769049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:27.769134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:28.770041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:29.770471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:30.770432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:31.770773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:32.770989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:33.771232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:34.771667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:35.771705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:36.772174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:37.035: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:52:37.773000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:38.773107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:39.773910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:40.775604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:41.775101      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:42.775869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:43.776473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:44.776956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:45.777618      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:46.778468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:47.778949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:48.779856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:49.779810      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:50.780854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:51.780854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:52.781109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:53.781570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:54.782241      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:55.782704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:56.783337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:57.035: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:52:57.783498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:58.784137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:59.784832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:00.785833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:01.786121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:02.786703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:03.786932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:04.787076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:05.787281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:06.788406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:07.788597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:08.788921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:09.789181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:10.790272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:11.791021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:12.791394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:13.792246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:14.792468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:15.792618      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:16.792820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:17.032: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:53:17.793156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:18.794274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:19.794405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:20.795058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:21.795660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:22.796477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:23.796841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:24.797021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:25.797902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:26.798228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:27.798784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:28.798900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:29.799628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:30.800625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:31.800870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:32.801032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:33.801308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:34.801526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:35.801770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:36.801996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:37.032: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:53:37.803187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:38.804117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:39.805039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:40.805555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:41.805904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:42.806755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:43.807041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:44.807420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:45.807901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:46.808069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:47.808324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:48.809436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:49.809719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:50.809889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:51.810134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:52.810394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:53.810545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:54.810812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:55.811702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:56.812772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:57.038: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:53:57.812982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:58.816564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:59.814055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:00.814084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:01.814226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:02.814385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:03.814662      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:04.814884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:05.815005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:06.816058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:07.816173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:08.817303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:09.817775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:10.818210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:11.819042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:12.819481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:13.820156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:14.821128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:15.821490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:16.822200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:54:17.037: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:54:17.822941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:18.824056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:19.824501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:20.824528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:21.825546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:22.826181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:23.826479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:24.826698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:25.826767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:26.826941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:27.827163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:28.827735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:29.827874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:30.828202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:31.828404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:32.828914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:33.829281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:34.829519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:35.830510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:36.831169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:54:37.040: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:54:37.832052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:38.832774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:39.833056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:40.833312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:41.833451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:42.833817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:43.834184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:44.834838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:45.834948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:46.836363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:47.836781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:48.837027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:49.837931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:50.838131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:51.838215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:52.839225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:53.838899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:54.839360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:55.839348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:56.845590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:54:57.035: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:54:57.840784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:58.841043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:59.841267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:00.841546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:01.841686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:02.841869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:03.842181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:04.842323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:05.842947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:06.843178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:07.843471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:08.843663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:09.843958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:10.844261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:11.844779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:12.845158      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:13.845476      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:14.845822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:15.845980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:16.846321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:17.044: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:55:17.846505      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:18.847090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:19.847681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:20.848099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:21.848897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:22.849487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:23.850089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:24.850522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:25.850994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:26.851857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:27.852231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:28.852893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:29.853409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:30.853505      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:31.853808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:32.853930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:33.854130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:34.854350      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:35.854679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:36.854896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:37.032: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:55:37.855471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:38.855769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:39.856064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:40.856710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:41.857391      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:42.857798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:43.858285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:44.858712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:45.859017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:46.859368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:47.859458      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:48.860316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:49.860901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:50.861360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:51.862067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:52.862975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:53.863646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:54.864041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:55.864542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:56.864812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:57.041: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:55:57.865590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:58.866067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:59.866371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:00.866745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:01.867092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:02.867432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:03.867587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:04.867890      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:05.868265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:06.868576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:07.869154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:08.869517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:09.870340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:10.871131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:11.872110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:12.872576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:13.873169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:14.873420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:15.874304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:16.874636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:17.032: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:56:17.875022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:18.874900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:19.875546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:20.875664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:21.875969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:22.876191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:23.876419      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:24.876843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:25.877438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:26.878282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:27.878849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:28.878912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:29.879404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:30.880189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:31.880343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:32.880596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:33.880809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:34.881046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:35.881173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:36.881377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:37.035: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:56:37.882489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:38.883105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:39.883196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:40.884218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:41.884450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:42.884788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:43.885316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:44.885534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:45.886706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:46.887419      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:47.887864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:48.888897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:49.889435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:50.890299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:51.891082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:52.891714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:53.892268      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:54.893467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:55.894110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:56.894683      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:57.042: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:56:57.895005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:58.895209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:59.895240      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:00.896282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:01.897235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:02.897461      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:03.897687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:04.898343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:05.899400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:06.899461      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:07.900376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:08.900980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:09.901663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:10.902327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:11.902928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:12.903924      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:13.904770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:14.905688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:15.905782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:16.906256      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:57:17.033: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyMjkwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0415 07:57:17.906657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:18.907202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:19.907396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:20.907789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:21.907870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:22.908083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:23.908350      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:24.908623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:25.909285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:26.909652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:27.910215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:28.910983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:29.911433      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:30.912354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:31.912784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:32.913591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:33.914157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:34.914768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:35.915489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:36.915879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:57:37.027: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Apr 15 07:57:37.028: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 04/15/24 07:57:37.029
  STEP: retrieving all remaining pages @ 04/15/24 07:57:37.041
  Apr 15 07:57:37.057: INFO: Retrieved 40/40 results with rv 202967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTY3LCJzdGFydCI6InRlbXBsYXRlLTAxMTlcdTAwMDAifQ
  Apr 15 07:57:37.072: INFO: Retrieved 40/40 results with rv 202967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTY3LCJzdGFydCI6InRlbXBsYXRlLTAxNTlcdTAwMDAifQ
  Apr 15 07:57:37.084: INFO: Retrieved 40/40 results with rv 202967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTY3LCJzdGFydCI6InRlbXBsYXRlLTAxOTlcdTAwMDAifQ
  Apr 15 07:57:37.103: INFO: Retrieved 40/40 results with rv 202967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTY3LCJzdGFydCI6InRlbXBsYXRlLTAyMzlcdTAwMDAifQ
  Apr 15 07:57:37.123: INFO: Retrieved 40/40 results with rv 202967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTY3LCJzdGFydCI6InRlbXBsYXRlLTAyNzlcdTAwMDAifQ
  Apr 15 07:57:37.147: INFO: Retrieved 40/40 results with rv 202967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTY3LCJzdGFydCI6InRlbXBsYXRlLTAzMTlcdTAwMDAifQ
  Apr 15 07:57:37.160: INFO: Retrieved 40/40 results with rv 202967 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjAyOTY3LCJzdGFydCI6InRlbXBsYXRlLTAzNTlcdTAwMDAifQ
  Apr 15 07:57:37.175: INFO: Retrieved 40/40 results with rv 202967 and continue 
  Apr 15 07:57:37.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7157" for this suite. @ 04/15/24 07:57:37.189
• [417.958 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 04/15/24 07:57:37.215
  Apr 15 07:57:37.216: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 07:57:37.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:37.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:37.304
  STEP: Creating configMap with name configmap-test-volume-12155831-1e6e-4b71-a261-f9cfd9b9879c @ 04/15/24 07:57:37.313
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:57:37.328
  E0415 07:57:37.916406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:38.916543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:39.916710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:40.917554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:57:41.39
  Apr 15 07:57:41.396: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-configmaps-2d517f45-88c0-4110-a27d-c28b49d93097 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:57:41.435
  Apr 15 07:57:41.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5635" for this suite. @ 04/15/24 07:57:41.477
• [4.279 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 04/15/24 07:57:41.496
  Apr 15 07:57:41.497: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 07:57:41.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:41.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:41.542
  STEP: Creating service test in namespace statefulset-3402 @ 04/15/24 07:57:41.552
  STEP: Creating statefulset ss in namespace statefulset-3402 @ 04/15/24 07:57:41.597
  Apr 15 07:57:41.618: INFO: Found 0 stateful pods, waiting for 1
  E0415 07:57:41.918292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:42.918914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:43.919298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:44.919273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:45.919846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:46.919999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:47.920135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:48.920981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:49.921147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:50.923246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:57:51.621: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0415 07:57:51.923471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:52.923807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:53.924182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:54.924528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:55.928137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:56.927391      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:57.927786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:58.928382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:59.928435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:00.929446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:01.621: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/15/24 07:58:01.639
  STEP: Getting /status @ 04/15/24 07:58:01.664
  Apr 15 07:58:01.681: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/15/24 07:58:01.681
  Apr 15 07:58:01.705: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/15/24 07:58:01.705
  Apr 15 07:58:01.710: INFO: Observed &StatefulSet event: ADDED
  Apr 15 07:58:01.710: INFO: Found Statefulset ss in namespace statefulset-3402 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 07:58:01.710: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/15/24 07:58:01.71
  Apr 15 07:58:01.710: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 15 07:58:01.729: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/15/24 07:58:01.73
  Apr 15 07:58:01.739: INFO: Observed &StatefulSet event: ADDED
  Apr 15 07:58:01.740: INFO: Observed Statefulset ss in namespace statefulset-3402 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 07:58:01.741: INFO: Observed &StatefulSet event: MODIFIED
  Apr 15 07:58:01.741: INFO: Found Statefulset ss in namespace statefulset-3402 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Apr 15 07:58:01.742: INFO: Deleting all statefulset in ns statefulset-3402
  Apr 15 07:58:01.754: INFO: Scaling statefulset ss to 0
  E0415 07:58:01.930377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:02.931269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:03.931404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:04.931748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:05.932112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:06.932242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:07.932989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:08.933241      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:09.934962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:10.935157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:11.791: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 07:58:11.799: INFO: Deleting statefulset ss
  Apr 15 07:58:11.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3402" for this suite. @ 04/15/24 07:58:11.843
• [30.375 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 04/15/24 07:58:11.874
  Apr 15 07:58:11.874: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename endpointslice @ 04/15/24 07:58:11.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:11.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:11.92
  E0415 07:58:11.935154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:11.952: INFO: Endpoints addresses: [192.168.121.146 192.168.121.90] , ports: [6443]
  Apr 15 07:58:11.952: INFO: EndpointSlices addresses: [192.168.121.146 192.168.121.90] , ports: [6443]
  Apr 15 07:58:11.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8765" for this suite. @ 04/15/24 07:58:11.963
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/15/24 07:58:11.979
  Apr 15 07:58:11.979: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename deployment @ 04/15/24 07:58:11.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:12.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:12.022
  Apr 15 07:58:12.030: INFO: Creating simple deployment test-new-deployment
  Apr 15 07:58:12.060: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  E0415 07:58:12.936020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:13.935771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 04/15/24 07:58:14.093
  STEP: updating a scale subresource @ 04/15/24 07:58:14.104
  STEP: verifying the deployment Spec.Replicas was modified @ 04/15/24 07:58:14.12
  STEP: Patch a scale subresource @ 04/15/24 07:58:14.127
  Apr 15 07:58:14.179: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-37",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a057b90f-aeec-45ab-80ad-6f42e63e3ac4",
      ResourceVersion: (string) (len=6) "203547",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764692,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 07:58:14.205: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-37",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90b33086-cc1f-4d53-b67a-0d61b4af4ce2",
      ResourceVersion: (string) (len=6) "203546",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764692,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "a057b90f-aeec-45ab-80ad-6f42e63e3ac4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 30 35 37 62 39  30 66 2d 61 65 65 63 2d  |\"a057b90f-aeec-|
              00000120  34 35 61 62 2d 38 30 61  64 2d 36 66 34 32 65 36  |45ab-80ad-6f42e6|
              00000130  33 65 33 61 63 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3e3ac4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:58:14.241: INFO: Pod "test-new-deployment-557759b7c7-bm428" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-bm428",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=13) "deployment-37",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9cd65bd2-0fb0-499d-9992-cf5ade3d7d36",
      ResourceVersion: (string) (len=6) "203550",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764694,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "90b33086-cc1f-4d53-b67a-0d61b4af4ce2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 30  62 33 33 30 38 36 2d 63  |d\":\"90b33086-c|
              00000090  63 31 66 2d 34 64 35 33  2d 62 36 37 61 2d 30 64  |c1f-4d53-b67a-0d|
              000000a0  36 31 62 34 61 66 34 63  65 32 5c 22 7d 22 3a 7b  |61b4af4ce2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qckrp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qckrp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764694,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 07:58:14.254: INFO: Pod "test-new-deployment-557759b7c7-ptl6r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-ptl6r",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=13) "deployment-37",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1bf564a-3d48-4a00-b65e-ad84afde3cc5",
      ResourceVersion: (string) (len=6) "203540",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764692,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "90b33086-cc1f-4d53-b67a-0d61b4af4ce2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 30  62 33 33 30 38 36 2d 63  |d\":\"90b33086-c|
              00000090  63 31 66 2d 34 64 35 33  2d 62 36 37 61 2d 30 64  |c1f-4d53-b67a-0d|
              000000a0  36 31 62 34 61 66 34 63  65 32 5c 22 7d 22 3a 7b  |61b4af4ce2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  34 36 5c 22 7d 22 3a 7b  |.233.66.46\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7jvzw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7jvzw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764693,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764692,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) (len=12) "10.233.66.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764692,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848764692,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://b4b02afe4c4c4080ae766807909fddfa41802a48c786a15cab04823995de433f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 07:58:14.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-37" for this suite. @ 04/15/24 07:58:14.341
• [2.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/15/24 07:58:14.368
  Apr 15 07:58:14.368: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:58:14.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:14.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:14.439
  STEP: Creating secret with name projected-secret-test-87236858-72e0-4d4e-9c64-14596fb0d299 @ 04/15/24 07:58:14.45
  STEP: Creating a pod to test consume secrets @ 04/15/24 07:58:14.48
  E0415 07:58:14.936727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:15.937940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:16.938140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:17.938378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:58:18.536
  Apr 15 07:58:18.544: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-projected-secrets-3c88364e-a359-4787-85c1-6e57397568bc container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:58:18.564
  Apr 15 07:58:18.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4088" for this suite. @ 04/15/24 07:58:18.621
• [4.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 04/15/24 07:58:18.645
  Apr 15 07:58:18.645: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 07:58:18.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:18.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:18.688
  STEP: getting /apis @ 04/15/24 07:58:18.695
  STEP: getting /apis/node.k8s.io @ 04/15/24 07:58:18.708
  STEP: getting /apis/node.k8s.io/v1 @ 04/15/24 07:58:18.711
  STEP: creating @ 04/15/24 07:58:18.714
  STEP: watching @ 04/15/24 07:58:18.751
  Apr 15 07:58:18.751: INFO: starting watch
  STEP: getting @ 04/15/24 07:58:18.766
  STEP: listing @ 04/15/24 07:58:18.773
  STEP: patching @ 04/15/24 07:58:18.781
  STEP: updating @ 04/15/24 07:58:18.793
  Apr 15 07:58:18.805: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 04/15/24 07:58:18.805
  STEP: deleting a collection @ 04/15/24 07:58:18.833
  Apr 15 07:58:18.874: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7773" for this suite. @ 04/15/24 07:58:18.887
• [0.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/15/24 07:58:18.909
  Apr 15 07:58:18.909: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename deployment @ 04/15/24 07:58:18.911
  E0415 07:58:18.941754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:18.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:18.954
  STEP: creating a Deployment @ 04/15/24 07:58:18.972
  STEP: waiting for Deployment to be created @ 04/15/24 07:58:18.987
  STEP: waiting for all Replicas to be Ready @ 04/15/24 07:58:18.991
  Apr 15 07:58:18.994: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 07:58:18.995: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 07:58:19.018: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 07:58:19.018: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 07:58:19.106: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 07:58:19.106: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 07:58:19.160: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 07:58:19.160: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0415 07:58:19.942248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:20.268: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 15 07:58:20.268: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 15 07:58:20.740: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/15/24 07:58:20.74
  Apr 15 07:58:20.766: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/15/24 07:58:20.767
  Apr 15 07:58:20.774: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0
  Apr 15 07:58:20.774: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0
  Apr 15 07:58:20.774: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0
  Apr 15 07:58:20.774: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0
  Apr 15 07:58:20.775: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0
  Apr 15 07:58:20.775: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0
  Apr 15 07:58:20.775: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0
  Apr 15 07:58:20.776: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 0
  Apr 15 07:58:20.778: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1
  Apr 15 07:58:20.778: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1
  Apr 15 07:58:20.778: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:20.778: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:20.779: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:20.779: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:20.787: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:20.787: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:20.830: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:20.830: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:20.898: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1
  Apr 15 07:58:20.899: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1
  Apr 15 07:58:20.919: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1
  Apr 15 07:58:20.920: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1
  E0415 07:58:20.942335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:21.942512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:22.293: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:22.293: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:22.436: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1
  STEP: listing Deployments @ 04/15/24 07:58:22.437
  Apr 15 07:58:22.466: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/15/24 07:58:22.466
  Apr 15 07:58:22.512: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/15/24 07:58:22.512
  Apr 15 07:58:22.541: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 07:58:22.582: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 07:58:22.732: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 07:58:22.810: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0415 07:58:22.943042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:23.943596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:24.300: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 07:58:24.363: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 07:58:24.399: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 07:58:24.470: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 07:58:24.489: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0415 07:58:24.944503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:25.827: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/15/24 07:58:25.888
  STEP: fetching the DeploymentStatus @ 04/15/24 07:58:25.912
  Apr 15 07:58:25.926: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1
  Apr 15 07:58:25.927: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1
  Apr 15 07:58:25.927: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1
  Apr 15 07:58:25.928: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 1
  Apr 15 07:58:25.928: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:25.928: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:25.928: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:25.929: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:25.929: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 2
  Apr 15 07:58:25.929: INFO: observed Deployment test-deployment in namespace deployment-1217 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/15/24 07:58:25.93
  E0415 07:58:25.945170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:25.964: INFO: observed event type MODIFIED
  Apr 15 07:58:25.964: INFO: observed event type MODIFIED
  Apr 15 07:58:25.964: INFO: observed event type MODIFIED
  Apr 15 07:58:25.965: INFO: observed event type MODIFIED
  Apr 15 07:58:25.965: INFO: observed event type MODIFIED
  Apr 15 07:58:25.965: INFO: observed event type MODIFIED
  Apr 15 07:58:25.966: INFO: observed event type MODIFIED
  Apr 15 07:58:25.966: INFO: observed event type MODIFIED
  Apr 15 07:58:25.967: INFO: observed event type MODIFIED
  Apr 15 07:58:25.967: INFO: observed event type MODIFIED
  Apr 15 07:58:25.967: INFO: observed event type MODIFIED
  Apr 15 07:58:25.968: INFO: observed event type MODIFIED
  Apr 15 07:58:25.968: INFO: observed event type MODIFIED
  Apr 15 07:58:25.975: INFO: Log out all the ReplicaSets if there is no deployment created
  Apr 15 07:58:25.986: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1217",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47a5bd60-f232-47f3-a0f2-df392cbd9cb4",
      ResourceVersion: (string) (len=6) "203807",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764700,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "71075aea-5579-4c32-92ac-11d749e1b8a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 31 30 37  35 61 65 61 2d 35 35 37  |":\"71075aea-557|
              00000130  39 2d 34 63 33 32 2d 39  32 61 63 2d 31 31 64 37  |9-4c32-92ac-11d7|
              00000140  34 39 65 31 62 38 61 32  5c 22 7d 22 3a 7b 7d 7d  |49e1b8a2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 15 07:58:26.009: INFO: pod: "test-deployment-64fd565c98-lgvc5":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-lgvc5",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-1217",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74e63551-5a94-4ade-98a2-282415f26a4c",
      ResourceVersion: (string) (len=6) "203797",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764706,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "47a5bd60-f232-47f3-a0f2-df392cbd9cb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 37 61 35 62 64 36 30  |uid\":\"47a5bd60|
              000000a0  2d 66 32 33 32 2d 34 37  66 33 2d 61 30 66 32 2d  |-f232-47f3-a0f2-|
              000000b0  64 66 33 39 32 63 62 64  39 63 62 34 5c 22 7d 22  |df392cbd9cb4\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=621) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 73 74  |:phase":{},"f:st|
              00000260  61 72 74 54 69 6d 65 22  3a 7b 7d 7d 7d           |artTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-27swp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-27swp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848764703,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848764705,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=72) "cri-o://56217d80b9964802f071e341652b973fb36d79ad8a8a4e44271b50d6979ad26b"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=72) "cri-o://56217d80b9964802f071e341652b973fb36d79ad8a8a4e44271b50d6979ad26b",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 15 07:58:26.029: INFO: pod: "test-deployment-64fd565c98-xqs2p":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-xqs2p",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-1217",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36c17a8b-024d-42ef-b6f2-d1fd286ace09",
      ResourceVersion: (string) (len=6) "203802",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764700,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764707,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "47a5bd60-f232-47f3-a0f2-df392cbd9cb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 37 61 35 62 64 36 30  |uid\":\"47a5bd60|
              000000a0  2d 66 32 33 32 2d 34 37  66 33 2d 61 30 66 32 2d  |-f232-47f3-a0f2-|
              000000b0  64 66 33 39 32 63 62 64  39 63 62 34 5c 22 7d 22  |df392cbd9cb4\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  34 39 5c 22 7d 22 3a 7b  |.233.66.49\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7nclp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7nclp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764700,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) (len=12) "10.233.66.49",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.49"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764700,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848764701,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=72) "cri-o://fcc4b9c6e2d1007c221c37425f12dc3bc7d852f5e9629f0ec0fa6c2d550ec9b3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 15 07:58:26.042: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1217",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e394b472-2c1a-4ec3-a91f-5fa8b68639a8",
      ResourceVersion: (string) (len=6) "203799",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "71075aea-5579-4c32-92ac-11d749e1b8a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 31 30 37  35 61 65 61 2d 35 35 37  |":\"71075aea-557|
              00000130  39 2d 34 63 33 32 2d 39  32 61 63 2d 31 31 64 37  |9-4c32-92ac-11d7|
              00000140  34 39 65 31 62 38 61 32  5c 22 7d 22 3a 7b 7d 7d  |49e1b8a2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 15 07:58:26.061: INFO: pod: "test-deployment-79ff746c4-6m5zt":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-6m5zt",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-1217",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "00799cb0-892f-4301-876e-e032f08d91ee",
      ResourceVersion: (string) (len=6) "203815",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764704,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764707,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "e394b472-2c1a-4ec3-a91f-5fa8b68639a8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 33 39 34 62 34 37 32  |uid\":\"e394b472|
              000000a0  2d 32 63 31 61 2d 34 65  63 33 2d 61 39 31 66 2d  |-2c1a-4ec3-a91f-|
              000000b0  35 66 61 38 62 36 38 36  33 39 61 38 5c 22 7d 22  |5fa8b68639a8\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 30 35 5c 22 7d 22 3a  |.233.65.105\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4tczg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4tczg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.90"
        }
      },
      PodIP: (string) (len=13) "10.233.65.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764704,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848764705,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://edaff36d9435c317af7068cc7298fc05b0d406903a9e295844110b0c51b612f7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 15 07:58:26.068: INFO: pod: "test-deployment-79ff746c4-s5hsc":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-s5hsc",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-1217",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "752f2357-5652-473b-87ac-c550a9f126f8",
      ResourceVersion: (string) (len=6) "203816",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764707,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "e394b472-2c1a-4ec3-a91f-5fa8b68639a8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 33 39 34 62 34 37 32  |uid\":\"e394b472|
              000000a0  2d 32 63 31 61 2d 34 65  63 33 2d 61 39 31 66 2d  |-2c1a-4ec3-a91f-|
              000000b0  35 66 61 38 62 36 38 36  33 39 61 38 5c 22 7d 22  |5fa8b68639a8\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  35 30 5c 22 7d 22 3a 7b  |.233.66.50\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5f49d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5f49d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764704,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) (len=12) "10.233.66.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764702,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848764703,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://0aa23af77d57788106056dd020df8b7d5ca560117532c56bcf76efbedb0ddf54",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 15 07:58:26.073: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1217",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "815af826-3c24-4e66-9c28-65644134f9e4",
      ResourceVersion: (string) (len=6) "203719",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764698,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "71075aea-5579-4c32-92ac-11d749e1b8a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 37 31 30 37  35 61 65 61 2d 35 35 37  |":\"71075aea-557|
              00000130  39 2d 34 63 33 32 2d 39  32 61 63 2d 31 31 64 37  |9-4c32-92ac-11d7|
              00000140  34 39 65 31 62 38 61 32  5c 22 7d 22 3a 7b 7d 7d  |49e1b8a2\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764702,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 15 07:58:26.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1217" for this suite. @ 04/15/24 07:58:26.108
• [7.229 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 04/15/24 07:58:26.142
  Apr 15 07:58:26.142: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename endpointslice @ 04/15/24 07:58:26.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:26.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:26.193
  Apr 15 07:58:26.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4445" for this suite. @ 04/15/24 07:58:26.366
• [0.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 04/15/24 07:58:26.409
  Apr 15 07:58:26.409: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename dns @ 04/15/24 07:58:26.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:26.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:26.477
  STEP: Creating a test externalName service @ 04/15/24 07:58:26.49
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6694.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6694.svc.cluster.local; sleep 1; done
   @ 04/15/24 07:58:26.509
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6694.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6694.svc.cluster.local; sleep 1; done
   @ 04/15/24 07:58:26.509
  STEP: creating a pod to probe DNS @ 04/15/24 07:58:26.509
  STEP: submitting the pod to kubernetes @ 04/15/24 07:58:26.509
  E0415 07:58:26.945671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:27.946902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 07:58:28.588
  STEP: looking for the results for each expected name from probers @ 04/15/24 07:58:28.598
  Apr 15 07:58:28.635: INFO: DNS probes using dns-test-c7d08c5e-14ff-4ef8-8755-cff9c22bbd14 succeeded

  STEP: changing the externalName to bar.example.com @ 04/15/24 07:58:28.636
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6694.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6694.svc.cluster.local; sleep 1; done
   @ 04/15/24 07:58:28.665
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6694.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6694.svc.cluster.local; sleep 1; done
   @ 04/15/24 07:58:28.666
  STEP: creating a second pod to probe DNS @ 04/15/24 07:58:28.666
  STEP: submitting the pod to kubernetes @ 04/15/24 07:58:28.667
  E0415 07:58:28.947728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:29.947628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 07:58:30.712
  STEP: looking for the results for each expected name from probers @ 04/15/24 07:58:30.723
  Apr 15 07:58:30.750: INFO: File jessie_udp@dns-test-service-3.dns-6694.svc.cluster.local from pod  dns-6694/dns-test-033da30b-7960-44de-8e36-638f0cfbadb4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 07:58:30.750: INFO: Lookups using dns-6694/dns-test-033da30b-7960-44de-8e36-638f0cfbadb4 failed for: [jessie_udp@dns-test-service-3.dns-6694.svc.cluster.local]

  Apr 15 07:58:30.766: INFO: Pod client logs for webserver: 
  Apr 15 07:58:30.782: INFO: Pod client logs for querier: 
  Apr 15 07:58:30.801: INFO: Pod client logs for jessie-querier: 
  E0415 07:58:30.948929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:31.949238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:32.949956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:33.950264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:34.951254      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:35.732: INFO: File wheezy_udp@dns-test-service-3.dns-6694.svc.cluster.local from pod  dns-6694/dns-test-033da30b-7960-44de-8e36-638f0cfbadb4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 07:58:35.743: INFO: File jessie_udp@dns-test-service-3.dns-6694.svc.cluster.local from pod  dns-6694/dns-test-033da30b-7960-44de-8e36-638f0cfbadb4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 07:58:35.743: INFO: Lookups using dns-6694/dns-test-033da30b-7960-44de-8e36-638f0cfbadb4 failed for: [wheezy_udp@dns-test-service-3.dns-6694.svc.cluster.local jessie_udp@dns-test-service-3.dns-6694.svc.cluster.local]

  Apr 15 07:58:35.766: INFO: Pod client logs for webserver: 
  Apr 15 07:58:35.791: INFO: Pod client logs for querier: 
  Apr 15 07:58:35.810: INFO: Pod client logs for jessie-querier: 
  E0415 07:58:35.951368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:36.952127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:37.952096      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:38.951957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:39.952293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:40.748: INFO: DNS probes using dns-test-033da30b-7960-44de-8e36-638f0cfbadb4 succeeded

  STEP: changing the service to type=ClusterIP @ 04/15/24 07:58:40.748
  W0415 07:58:40.790272      14 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6694.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-6694.svc.cluster.local; sleep 1; done
   @ 04/15/24 07:58:40.79
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6694.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6694.svc.cluster.local; sleep 1; done
   @ 04/15/24 07:58:40.791
  STEP: creating a third pod to probe DNS @ 04/15/24 07:58:40.791
  STEP: submitting the pod to kubernetes @ 04/15/24 07:58:40.81
  E0415 07:58:40.952940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:41.953912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 07:58:42.851
  STEP: looking for the results for each expected name from probers @ 04/15/24 07:58:42.859
  Apr 15 07:58:42.904: INFO: DNS probes using dns-test-926997c0-3051-45bb-b9a1-c8f11602a8d4 succeeded

  STEP: deleting the pod @ 04/15/24 07:58:42.906
  STEP: deleting the pod @ 04/15/24 07:58:42.938
  E0415 07:58:42.954743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/15/24 07:58:42.985
  STEP: deleting the test externalName service @ 04/15/24 07:58:43.022
  Apr 15 07:58:43.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6694" for this suite. @ 04/15/24 07:58:43.088
• [16.707 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 04/15/24 07:58:43.128
  Apr 15 07:58:43.128: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 07:58:43.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:43.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:43.235
  STEP: Creating service test in namespace statefulset-1575 @ 04/15/24 07:58:43.244
  STEP: Creating statefulset ss in namespace statefulset-1575 @ 04/15/24 07:58:43.264
  Apr 15 07:58:43.299: INFO: Found 0 stateful pods, waiting for 1
  E0415 07:58:43.955610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:44.956421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:45.956777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:46.957348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:47.957340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:48.958573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:49.959840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:50.960340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:51.960879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:52.961336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:53.296: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/15/24 07:58:53.317
  STEP: updating a scale subresource @ 04/15/24 07:58:53.327
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/15/24 07:58:53.346
  STEP: Patch a scale subresource @ 04/15/24 07:58:53.356
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/15/24 07:58:53.376
  Apr 15 07:58:53.399: INFO: Deleting all statefulset in ns statefulset-1575
  Apr 15 07:58:53.449: INFO: Scaling statefulset ss to 0
  E0415 07:58:53.963543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:54.963255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:55.963320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:56.963544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:57.963738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:58.964144      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:59.964666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:00.965424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:01.965599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:02.965930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:59:03.490: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 07:59:03.497: INFO: Deleting statefulset ss
  Apr 15 07:59:03.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1575" for this suite. @ 04/15/24 07:59:03.553
• [20.449 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 04/15/24 07:59:03.577
  Apr 15 07:59:03.577: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 07:59:03.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:59:03.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:59:03.626
  STEP: Creating service test in namespace statefulset-5124 @ 04/15/24 07:59:03.633
  STEP: Creating a new StatefulSet @ 04/15/24 07:59:03.649
  Apr 15 07:59:03.678: INFO: Found 0 stateful pods, waiting for 3
  E0415 07:59:03.966707      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:04.967526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:05.967111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:06.967319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:07.967734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:08.968377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:09.968591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:10.969623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:11.970029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:12.969942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:59:13.687: INFO: Found 1 stateful pods, waiting for 3
  E0415 07:59:13.971291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:14.971402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:15.972236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:16.972910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:17.973165      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:18.974073      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:19.974396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:20.974912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:21.975104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:22.976147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:59:23.680: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 07:59:23.680: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 07:59:23.680: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 07:59:23.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-5124 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0415 07:59:23.977240      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:59:24.105: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 07:59:24.105: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 07:59:24.105: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0415 07:59:24.977427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:25.978484      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:26.978758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:27.979043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:28.979940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:29.980245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:30.980879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:31.981001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:32.981162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:33.981274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/15/24 07:59:34.122
  Apr 15 07:59:34.155: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/15/24 07:59:34.155
  E0415 07:59:34.981516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:35.982687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:36.983466      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:37.983274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:38.984439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:39.984911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:40.986320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:41.985665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:42.988493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:43.986818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 04/15/24 07:59:44.179
  Apr 15 07:59:44.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-5124 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 07:59:44.567: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 07:59:44.567: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 07:59:44.567: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0415 07:59:44.987590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:45.988504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:46.989746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:47.990089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:48.990079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:49.990397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:50.991361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:51.991503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:52.992169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:53.992187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 04/15/24 07:59:54.616
  Apr 15 07:59:54.617: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-5124 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0415 07:59:54.992749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:59:54.993: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 07:59:54.993: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 07:59:54.993: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0415 07:59:55.993504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:56.994762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:57.994820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:58.995754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:59.996212      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:00.997246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:01.997587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:02.997981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:03.998421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:04.998954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:05.049: INFO: Updating stateful set ss2
  E0415 08:00:06.000162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:07.000142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:08.001012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:09.001261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:10.002093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:11.002875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:12.003866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:13.004009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:14.004645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:15.005513      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 04/15/24 08:00:15.076
  Apr 15 08:00:15.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-5124 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 08:00:15.459: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 08:00:15.459: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 08:00:15.459: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0415 08:00:16.006342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:17.006530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:18.007075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:19.008020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:20.008316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:21.009298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:22.012293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:23.009880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:24.010006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:25.010318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:25.496: INFO: Deleting all statefulset in ns statefulset-5124
  Apr 15 08:00:25.503: INFO: Scaling statefulset ss2 to 0
  E0415 08:00:26.011342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:27.011482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:28.011586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:29.012219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:30.012504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:31.013347      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:32.013634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:33.013833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:34.014015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:35.014536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:35.529: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 08:00:35.536: INFO: Deleting statefulset ss2
  Apr 15 08:00:35.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5124" for this suite. @ 04/15/24 08:00:35.579
• [92.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 04/15/24 08:00:35.624
  Apr 15 08:00:35.624: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:00:35.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:35.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:35.685
  STEP: Creating configMap with name projected-configmap-test-volume-map-f535e100-8f5e-408c-a5a1-dc36f64a3798 @ 04/15/24 08:00:35.691
  STEP: Creating a pod to test consume configMaps @ 04/15/24 08:00:35.706
  E0415 08:00:36.015230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:37.015445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:38.016596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:39.017641      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:00:39.755
  Apr 15 08:00:39.762: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-projected-configmaps-f38c83ce-b851-4e88-b2ad-029307331f54 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 08:00:39.797
  Apr 15 08:00:39.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2296" for this suite. @ 04/15/24 08:00:39.853
• [4.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 04/15/24 08:00:39.875
  Apr 15 08:00:39.876: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:00:39.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:39.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:39.929
  Apr 15 08:00:39.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5978 create -f -'
  E0415 08:00:40.017986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:40.306: INFO: stderr: ""
  Apr 15 08:00:40.306: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Apr 15 08:00:40.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5978 create -f -'
  Apr 15 08:00:40.728: INFO: stderr: ""
  Apr 15 08:00:40.728: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/15/24 08:00:40.728
  E0415 08:00:41.018995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:41.741: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 08:00:41.741: INFO: Found 0 / 1
  E0415 08:00:42.019641      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:42.736: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 08:00:42.736: INFO: Found 1 / 1
  Apr 15 08:00:42.737: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 15 08:00:42.745: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 08:00:42.745: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 15 08:00:42.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5978 describe pod agnhost-primary-8pwwh'
  Apr 15 08:00:42.979: INFO: stderr: ""
  Apr 15 08:00:42.979: INFO: stdout: "Name:             agnhost-primary-8pwwh\nNamespace:        kubectl-5978\nPriority:         0\nService Account:  default\nNode:             jec7saimeaph-3/192.168.121.234\nStart Time:       Mon, 15 Apr 2024 08:00:40 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.66.58\nIPs:\n  IP:           10.233.66.58\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://47907aa37a3c0a6ffe4a3157aa4c851f985bff41d3044c41222e9857d447c69b\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 15 Apr 2024 08:00:41 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-fnww8 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-fnww8:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-5978/agnhost-primary-8pwwh to jec7saimeaph-3\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Apr 15 08:00:42.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5978 describe rc agnhost-primary'
  E0415 08:00:43.020265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:43.202: INFO: stderr: ""
  Apr 15 08:00:43.202: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5978\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-8pwwh\n"
  Apr 15 08:00:43.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5978 describe service agnhost-primary'
  Apr 15 08:00:43.363: INFO: stderr: ""
  Apr 15 08:00:43.364: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-5978\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.6.49\nIPs:               10.233.6.49\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.66.58:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Apr 15 08:00:43.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5978 describe node jec7saimeaph-1'
  Apr 15 08:00:43.632: INFO: stderr: ""
  Apr 15 08:00:43.633: INFO: stdout: "Name:               jec7saimeaph-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=jec7saimeaph-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"96:37:84:a9:a8:13\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.121.146\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 14 Apr 2024 14:57:46 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  jec7saimeaph-1\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 15 Apr 2024 08:00:34 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 15 Apr 2024 07:36:19 +0000   Mon, 15 Apr 2024 07:36:19 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Mon, 15 Apr 2024 08:00:17 +0000   Mon, 15 Apr 2024 06:11:55 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 15 Apr 2024 08:00:17 +0000   Mon, 15 Apr 2024 06:11:55 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 15 Apr 2024 08:00:17 +0000   Mon, 15 Apr 2024 06:11:55 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 15 Apr 2024 08:00:17 +0000   Mon, 15 Apr 2024 06:11:55 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.121.146\n  Hostname:    jec7saimeaph-1\nCapacity:\n  cpu:                2\n  ephemeral-storage:  115008636Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8123552Ki\n  pods:               110\nAllocatable:\n  cpu:                1600m\n  ephemeral-storage:  111880401014\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3273888Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 879718b967d841248171500f9341760b\n  System UUID:                879718b9-67d8-4124-8171-500f9341760b\n  Boot ID:                    47936f79-97a7-4827-baea-cc464cc1812c\n  Kernel Version:             6.5.0-27-generic\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.29.2\n  Kubelet Version:            v1.29.3\n  Kube-Proxy Version:         v1.29.3\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (7 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 kube-addon-manager-jec7saimeaph-1                          5m (0%)       0 (0%)      50Mi (1%)        0 (0%)         24m\n  kube-system                 kube-apiserver-jec7saimeaph-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         24m\n  kube-system                 kube-controller-manager-jec7saimeaph-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         24m\n  kube-system                 kube-flannel-ds-mnln7                                      100m (6%)     0 (0%)      50Mi (1%)        0 (0%)         24m\n  kube-system                 kube-proxy-rsrrw                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         24m\n  kube-system                 kube-scheduler-jec7saimeaph-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         24m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-q89p9    0 (0%)        0 (0%)      0 (0%)           0 (0%)         24m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                655m (40%)  0 (0%)\n  memory             100Mi (3%)  0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type    Reason    Age   From        Message\n  ----    ------    ----  ----        -------\n  Normal  Starting  24m   kube-proxy  \n"
  Apr 15 08:00:43.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5978 describe namespace kubectl-5978'
  Apr 15 08:00:43.811: INFO: stderr: ""
  Apr 15 08:00:43.811: INFO: stdout: "Name:         kubectl-5978\nLabels:       e2e-framework=kubectl\n              e2e-run=89f0c345-f7cb-464f-a920-e32459ba3e18\n              kubernetes.io/metadata.name=kubectl-5978\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Apr 15 08:00:43.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5978" for this suite. @ 04/15/24 08:00:43.823
• [3.962 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/15/24 08:00:43.839
  Apr 15 08:00:43.839: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename secrets @ 04/15/24 08:00:43.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:43.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:43.877
  STEP: Creating secret with name secret-test-5287840a-4180-493b-bd67-c134b4669dc3 @ 04/15/24 08:00:43.889
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:00:43.902
  E0415 08:00:44.020381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:45.020631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:46.021098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:47.021914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:00:47.956
  Apr 15 08:00:47.963: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-secrets-913aa252-5939-4ecf-9942-f1498aefa10d container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:00:47.984
  E0415 08:00:48.022325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:48.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3836" for this suite. @ 04/15/24 08:00:48.036
• [4.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 04/15/24 08:00:48.06
  Apr 15 08:00:48.060: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 08:00:48.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:48.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:48.109
  STEP: Creating simple DaemonSet "daemon-set" @ 04/15/24 08:00:48.17
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 08:00:48.19
  Apr 15 08:00:48.213: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:00:48.213: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:00:49.022523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:49.239: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:00:49.240: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:00:50.022994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:50.222: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 08:00:50.222: INFO: Node jec7saimeaph-2 is running 0 daemon pod, expected 1
  E0415 08:00:51.023816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:51.214: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 08:00:51.214: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 04/15/24 08:00:51.229
  Apr 15 08:00:51.245: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/15/24 08:00:51.245
  Apr 15 08:00:51.276: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/15/24 08:00:51.276
  Apr 15 08:00:51.283: INFO: Observed &DaemonSet event: ADDED
  Apr 15 08:00:51.283: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:00:51.284: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:00:51.285: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:00:51.285: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:00:51.286: INFO: Found daemon set daemon-set in namespace daemonsets-6024 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 15 08:00:51.286: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/15/24 08:00:51.287
  STEP: watching for the daemon set status to be patched @ 04/15/24 08:00:51.302
  Apr 15 08:00:51.311: INFO: Observed &DaemonSet event: ADDED
  Apr 15 08:00:51.312: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:00:51.313: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:00:51.314: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:00:51.315: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:00:51.315: INFO: Observed daemon set daemon-set in namespace daemonsets-6024 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 15 08:00:51.316: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:00:51.316: INFO: Found daemon set daemon-set in namespace daemonsets-6024 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Apr 15 08:00:51.317: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 08:00:51.329
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6024, will wait for the garbage collector to delete the pods @ 04/15/24 08:00:51.33
  Apr 15 08:00:51.403: INFO: Deleting DaemonSet.extensions daemon-set took: 15.782616ms
  Apr 15 08:00:51.503: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.621373ms
  E0415 08:00:52.024645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:53.025409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:53.713: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:00:53.713: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 08:00:53.722: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"204909"},"items":null}

  Apr 15 08:00:53.730: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"204909"},"items":null}

  Apr 15 08:00:53.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6024" for this suite. @ 04/15/24 08:00:53.791
• [5.746 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/15/24 08:00:53.808
  Apr 15 08:00:53.808: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:00:53.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:53.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:53.873
  STEP: Creating projection with secret that has name projected-secret-test-map-604b7486-9ef6-4a9a-8b4a-3cb2f491ae0b @ 04/15/24 08:00:53.881
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:00:53.893
  E0415 08:00:54.026941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:55.027209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:56.028151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:57.028477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:00:57.948
  Apr 15 08:00:57.959: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-projected-secrets-00c1b9c4-30f9-4ac4-a3fb-4422d50beb8f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:00:57.974
  Apr 15 08:00:58.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 08:00:58.029492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-1778" for this suite. @ 04/15/24 08:00:58.039
• [4.252 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/15/24 08:00:58.061
  Apr 15 08:00:58.061: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:00:58.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:58.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:58.146
  STEP: creating the pod @ 04/15/24 08:00:58.164
  STEP: setting up watch @ 04/15/24 08:00:58.165
  STEP: submitting the pod to kubernetes @ 04/15/24 08:00:58.275
  STEP: verifying the pod is in kubernetes @ 04/15/24 08:00:58.292
  STEP: verifying pod creation was observed @ 04/15/24 08:00:58.309
  E0415 08:00:59.029197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:00.029468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/15/24 08:01:00.343
  STEP: verifying pod deletion was observed @ 04/15/24 08:01:00.363
  E0415 08:01:01.030170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:01.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2638" for this suite. @ 04/15/24 08:01:01.315
• [3.269 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 04/15/24 08:01:01.33
  Apr 15 08:01:01.330: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:01:01.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:01.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:01.365
  STEP: Setting up server cert @ 04/15/24 08:01:01.416
  E0415 08:01:02.030652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:01:02.242
  STEP: Deploying the webhook pod @ 04/15/24 08:01:02.257
  STEP: Wait for the deployment to be ready @ 04/15/24 08:01:02.285
  Apr 15 08:01:02.306: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0415 08:01:03.031107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:04.031830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:04.334: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:01:05.031933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:06.032339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:06.347: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:01:07.032634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:08.032968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:08.345: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:01:09.033167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:10.033756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:10.346: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:01:11.034463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:12.034722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:12.347: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:01:13.034941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:14.035125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 08:01:14.345
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:01:14.393
  E0415 08:01:15.036284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:15.394: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/15/24 08:01:15.415
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 08:01:15.467
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/15/24 08:01:15.493
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 08:01:15.518
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/15/24 08:01:15.55
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 08:01:15.568
  Apr 15 08:01:15.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5048" for this suite. @ 04/15/24 08:01:15.73
  STEP: Destroying namespace "webhook-markers-6380" for this suite. @ 04/15/24 08:01:15.757
• [14.442 seconds]
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 04/15/24 08:01:15.773
  Apr 15 08:01:15.773: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename disruption @ 04/15/24 08:01:15.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:15.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:15.83
  STEP: Creating a kubernetes client @ 04/15/24 08:01:15.836
  Apr 15 08:01:15.836: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename disruption-2 @ 04/15/24 08:01:15.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:15.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:15.878
  STEP: Waiting for the pdb to be processed @ 04/15/24 08:01:15.897
  E0415 08:01:16.036379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:17.037260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/15/24 08:01:17.918
  E0415 08:01:18.037178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:19.038017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/15/24 08:01:19.948
  E0415 08:01:20.039013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:21.039452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 04/15/24 08:01:21.965
  STEP: listing a collection of PDBs in namespace disruption-7691 @ 04/15/24 08:01:21.975
  STEP: deleting a collection of PDBs @ 04/15/24 08:01:21.983
  STEP: Waiting for the PDB collection to be deleted @ 04/15/24 08:01:22.016
  Apr 15 08:01:22.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 08:01:22.039728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "disruption-2-3978" for this suite. @ 04/15/24 08:01:22.044
  Apr 15 08:01:22.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7691" for this suite. @ 04/15/24 08:01:22.077
• [6.318 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 04/15/24 08:01:22.096
  Apr 15 08:01:22.096: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename dns @ 04/15/24 08:01:22.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:22.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:22.15
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/15/24 08:01:22.167
  Apr 15 08:01:22.188: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7102  03fb4f94-2460-481e-9906-220ed80e4c65 205139 0 2024-04-15 08:01:22 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-04-15 08:01:22 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-26t2t,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-26t2t,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0415 08:01:23.039880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:24.040736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/15/24 08:01:24.21
  Apr 15 08:01:24.211: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7102 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:01:24.211: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:01:24.214: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:01:24.214: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-7102/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/15/24 08:01:24.438
  Apr 15 08:01:24.438: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7102 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:01:24.439: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:01:24.441: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:01:24.441: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-7102/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 08:01:24.594: INFO: Deleting pod test-dns-nameservers...
  Apr 15 08:01:24.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7102" for this suite. @ 04/15/24 08:01:24.651
• [2.582 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 04/15/24 08:01:24.68
  Apr 15 08:01:24.680: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:01:24.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:24.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:24.724
  STEP: Setting up server cert @ 04/15/24 08:01:24.791
  E0415 08:01:25.040702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:26.041396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:01:26.86
  STEP: Deploying the webhook pod @ 04/15/24 08:01:26.874
  STEP: Wait for the deployment to be ready @ 04/15/24 08:01:26.907
  Apr 15 08:01:26.936: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 08:01:27.041857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:28.043265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 08:01:28.969
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:01:28.999
  E0415 08:01:29.044259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:30.000: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0415 08:01:30.044364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 04/15/24 08:01:30.241
  STEP: Creating a configMap that should be mutated @ 04/15/24 08:01:30.288
  STEP: Deleting the collection of validation webhooks @ 04/15/24 08:01:30.382
  STEP: Creating a configMap that should not be mutated @ 04/15/24 08:01:30.612
  Apr 15 08:01:30.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9061" for this suite. @ 04/15/24 08:01:30.784
  STEP: Destroying namespace "webhook-markers-5943" for this suite. @ 04/15/24 08:01:30.806
• [6.147 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 04/15/24 08:01:30.828
  Apr 15 08:01:30.828: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename job @ 04/15/24 08:01:30.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:30.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:30.876
  STEP: Creating a job @ 04/15/24 08:01:30.883
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/15/24 08:01:30.9
  E0415 08:01:31.044697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:32.045262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/15/24 08:01:32.91
  STEP: updating /status @ 04/15/24 08:01:32.93
  STEP: get /status @ 04/15/24 08:01:32.956
  Apr 15 08:01:32.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2798" for this suite. @ 04/15/24 08:01:32.983
• [2.171 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/15/24 08:01:33.009
  Apr 15 08:01:33.009: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename watch @ 04/15/24 08:01:33.013
  E0415 08:01:33.046528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:33.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:33.066
  STEP: creating a watch on configmaps @ 04/15/24 08:01:33.071
  STEP: creating a new configmap @ 04/15/24 08:01:33.073
  STEP: modifying the configmap once @ 04/15/24 08:01:33.09
  STEP: closing the watch once it receives two notifications @ 04/15/24 08:01:33.11
  Apr 15 08:01:33.110: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2165  dd5fbac7-628c-4628-a124-5ce4e0e4e872 205286 0 2024-04-15 08:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-15 08:01:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:01:33.111: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2165  dd5fbac7-628c-4628-a124-5ce4e0e4e872 205287 0 2024-04-15 08:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-15 08:01:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/15/24 08:01:33.112
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/15/24 08:01:33.142
  STEP: deleting the configmap @ 04/15/24 08:01:33.146
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/15/24 08:01:33.159
  Apr 15 08:01:33.159: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2165  dd5fbac7-628c-4628-a124-5ce4e0e4e872 205288 0 2024-04-15 08:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-15 08:01:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:01:33.162: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2165  dd5fbac7-628c-4628-a124-5ce4e0e4e872 205289 0 2024-04-15 08:01:33 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-15 08:01:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:01:33.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2165" for this suite. @ 04/15/24 08:01:33.181
• [0.234 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 04/15/24 08:01:33.245
  Apr 15 08:01:33.245: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 08:01:33.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:33.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:33.286
  Apr 15 08:01:33.293: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 08:01:34.046859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:35.047955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/15/24 08:01:35.243
  Apr 15 08:01:35.244: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-4356 --namespace=crd-publish-openapi-4356 create -f -'
  Apr 15 08:01:35.693: INFO: stderr: ""
  Apr 15 08:01:35.693: INFO: stdout: "e2e-test-crd-publish-openapi-5211-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 15 08:01:35.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-4356 --namespace=crd-publish-openapi-4356 delete e2e-test-crd-publish-openapi-5211-crds test-cr'
  Apr 15 08:01:35.921: INFO: stderr: ""
  Apr 15 08:01:35.921: INFO: stdout: "e2e-test-crd-publish-openapi-5211-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Apr 15 08:01:35.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-4356 --namespace=crd-publish-openapi-4356 apply -f -'
  E0415 08:01:36.048125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:36.162: INFO: stderr: ""
  Apr 15 08:01:36.162: INFO: stdout: "e2e-test-crd-publish-openapi-5211-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 15 08:01:36.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-4356 --namespace=crd-publish-openapi-4356 delete e2e-test-crd-publish-openapi-5211-crds test-cr'
  Apr 15 08:01:36.526: INFO: stderr: ""
  Apr 15 08:01:36.526: INFO: stdout: "e2e-test-crd-publish-openapi-5211-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/15/24 08:01:36.527
  Apr 15 08:01:36.527: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-4356 explain e2e-test-crd-publish-openapi-5211-crds'
  Apr 15 08:01:36.691: INFO: stderr: ""
  Apr 15 08:01:36.691: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5211-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0415 08:01:37.048722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:38.048840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:39.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 08:01:39.049178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-publish-openapi-4356" for this suite. @ 04/15/24 08:01:39.056
• [5.840 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 04/15/24 08:01:39.095
  Apr 15 08:01:39.095: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename job @ 04/15/24 08:01:39.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:39.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:39.175
  STEP: Creating a job @ 04/15/24 08:01:39.182
  STEP: Ensuring active pods == parallelism @ 04/15/24 08:01:39.201
  E0415 08:01:40.049995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:41.050681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 04/15/24 08:01:41.212
  STEP: deleting Job.batch foo in namespace job-6005, will wait for the garbage collector to delete the pods @ 04/15/24 08:01:41.213
  Apr 15 08:01:41.286: INFO: Deleting Job.batch foo took: 14.732619ms
  Apr 15 08:01:41.388: INFO: Terminating Job.batch foo pods took: 101.936791ms
  E0415 08:01:42.051362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 04/15/24 08:01:42.788
  Apr 15 08:01:42.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6005" for this suite. @ 04/15/24 08:01:42.807
• [3.729 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 04/15/24 08:01:42.826
  Apr 15 08:01:42.826: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 08:01:42.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:42.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:42.881
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/15/24 08:01:42.885
  E0415 08:01:43.053113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:44.052637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:45.053507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:46.054357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:01:46.965
  Apr 15 08:01:46.973: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-a351efbe-52be-43b4-9e35-d67b621cef2e container test-container: <nil>
  STEP: delete the pod @ 04/15/24 08:01:47.006
  Apr 15 08:01:47.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 08:01:47.055213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-5026" for this suite. @ 04/15/24 08:01:47.065
• [4.259 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 04/15/24 08:01:47.087
  Apr 15 08:01:47.087: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 08:01:47.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:47.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:47.142
  Apr 15 08:01:47.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-353" for this suite. @ 04/15/24 08:01:47.186
• [0.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 04/15/24 08:01:47.215
  Apr 15 08:01:47.215: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 08:01:47.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:47.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:47.264
  STEP: creating a ServiceAccount @ 04/15/24 08:01:47.27
  STEP: watching for the ServiceAccount to be added @ 04/15/24 08:01:47.292
  STEP: patching the ServiceAccount @ 04/15/24 08:01:47.302
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/15/24 08:01:47.316
  STEP: deleting the ServiceAccount @ 04/15/24 08:01:47.327
  Apr 15 08:01:47.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3057" for this suite. @ 04/15/24 08:01:47.373
• [0.173 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/15/24 08:01:47.391
  Apr 15 08:01:47.391: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 08:01:47.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:47.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:47.447
  STEP: create the container @ 04/15/24 08:01:47.456
  W0415 08:01:47.477344      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/15/24 08:01:47.477
  E0415 08:01:48.055366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:49.056524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:50.056695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/15/24 08:01:50.516
  STEP: the container should be terminated @ 04/15/24 08:01:50.526
  STEP: the termination message should be set @ 04/15/24 08:01:50.526
  Apr 15 08:01:50.526: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/15/24 08:01:50.526
  Apr 15 08:01:50.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2016" for this suite. @ 04/15/24 08:01:50.573
• [3.205 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 04/15/24 08:01:50.599
  Apr 15 08:01:50.599: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename containers @ 04/15/24 08:01:50.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:50.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:50.657
  E0415 08:01:51.057678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:52.058946      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:52.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9158" for this suite. @ 04/15/24 08:01:52.736
• [2.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 04/15/24 08:01:52.752
  Apr 15 08:01:52.752: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 08:01:52.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:52.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:52.799
  E0415 08:01:53.059051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:54.059947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:55.060197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:56.060996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:57.061671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:58.063594      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:59.064225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:00.064323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:01.064468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:02.065531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:03.065853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:04.066781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:05.067233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:06.067778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:07.068369      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:08.068480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:09.069285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:10.070384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:11.071232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:12.072120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:13.072717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:14.073605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:15.074000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:16.075087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:17.076235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:18.077307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:19.077505      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:20.078336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:21.078818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:22.079504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:23.079378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:24.080343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:25.080791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:26.081452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:27.081619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:28.082637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:29.085105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:30.085216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:31.085284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:32.085821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:33.086047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:34.086713      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:35.086931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:36.087605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:37.087968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:38.089038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:39.089503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:40.090373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:41.090536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:42.091016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:43.090904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:44.091054      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:45.091935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:46.092177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:47.093246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:48.094109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:49.094546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:50.094943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:51.095286      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:52.095511      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:02:52.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8569" for this suite. @ 04/15/24 08:02:52.847
• [60.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 04/15/24 08:02:52.866
  Apr 15 08:02:52.867: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 08:02:52.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:02:52.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:02:52.927
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/15/24 08:02:52.933
  E0415 08:02:53.096044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:54.096967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:55.097794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:56.098747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:02:56.983
  Apr 15 08:02:56.990: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-e7b4286f-cf88-46e0-b402-164c543fa9b8 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 08:02:57.012
  Apr 15 08:02:57.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8464" for this suite. @ 04/15/24 08:02:57.06
• [4.206 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/15/24 08:02:57.072
  Apr 15 08:02:57.072: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/15/24 08:02:57.076
  E0415 08:02:57.098520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:02:57.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:02:57.117
  STEP: Creating two CSIDrivers @ 04/15/24 08:02:57.127
  STEP: Getting "inline-driver-d77e97e0-9d99-45d9-a31e-41c7a316eee1" & "inline-driver-5c803961-7eec-412a-a205-bd94c0344fb2" @ 04/15/24 08:02:57.171
  STEP: Patching the CSIDriver "inline-driver-5c803961-7eec-412a-a205-bd94c0344fb2" @ 04/15/24 08:02:57.222
  STEP: Updating the CSIDriver "inline-driver-5c803961-7eec-412a-a205-bd94c0344fb2" @ 04/15/24 08:02:57.233
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9130" @ 04/15/24 08:02:57.254
  STEP: Deleting CSIDriver "inline-driver-d77e97e0-9d99-45d9-a31e-41c7a316eee1" @ 04/15/24 08:02:57.262
  STEP: Confirm deletion of CSIDriver "inline-driver-d77e97e0-9d99-45d9-a31e-41c7a316eee1" @ 04/15/24 08:02:57.275
  STEP: Deleting CSIDriver "inline-driver-5c803961-7eec-412a-a205-bd94c0344fb2" via DeleteCollection @ 04/15/24 08:02:57.283
  STEP: Confirm deletion of CSIDriver "inline-driver-5c803961-7eec-412a-a205-bd94c0344fb2" @ 04/15/24 08:02:57.302
  Apr 15 08:02:57.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9130" for this suite. @ 04/15/24 08:02:57.32
• [0.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/15/24 08:02:57.348
  Apr 15 08:02:57.348: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/15/24 08:02:57.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:02:57.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:02:57.407
  STEP: mirroring a new custom Endpoint @ 04/15/24 08:02:57.443
  STEP: mirroring an update to a custom Endpoint @ 04/15/24 08:02:57.469
  Apr 15 08:02:57.492: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0415 08:02:58.099343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:59.099920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 04/15/24 08:02:59.501
  Apr 15 08:02:59.528: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0415 08:03:00.099666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:01.100456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:03:01.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8165" for this suite. @ 04/15/24 08:03:01.548
• [4.213 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/15/24 08:03:01.562
  Apr 15 08:03:01.562: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/15/24 08:03:01.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:03:01.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:03:01.615
  STEP: Creating 50 configmaps @ 04/15/24 08:03:01.625
  E0415 08:03:02.100664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 04/15/24 08:03:02.169
  Apr 15 08:03:02.218: INFO: Pod name wrapped-volume-race-44b474eb-6775-44d3-900c-fc6b0b77a65c: Found 0 pods out of 5
  E0415 08:03:03.102104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:04.103452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:05.104628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:06.104767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:07.105736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:03:07.237: INFO: Pod name wrapped-volume-race-44b474eb-6775-44d3-900c-fc6b0b77a65c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/15/24 08:03:07.238
  STEP: Creating RC which spawns configmap-volume pods @ 04/15/24 08:03:07.294
  Apr 15 08:03:07.334: INFO: Pod name wrapped-volume-race-8ab52766-a5dc-449e-842d-3a794170baf2: Found 0 pods out of 5
  E0415 08:03:08.105831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:09.106415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:10.107066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:11.107149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:12.107308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:03:12.363: INFO: Pod name wrapped-volume-race-8ab52766-a5dc-449e-842d-3a794170baf2: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/15/24 08:03:12.363
  STEP: Creating RC which spawns configmap-volume pods @ 04/15/24 08:03:12.42
  Apr 15 08:03:12.454: INFO: Pod name wrapped-volume-race-f167dca1-be00-4343-94a4-5f8acfb75042: Found 0 pods out of 5
  E0415 08:03:13.108092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:14.108947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:15.109151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:16.109466      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:17.109745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:03:17.480: INFO: Pod name wrapped-volume-race-f167dca1-be00-4343-94a4-5f8acfb75042: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/15/24 08:03:17.48
  STEP: deleting ReplicationController wrapped-volume-race-f167dca1-be00-4343-94a4-5f8acfb75042 in namespace emptydir-wrapper-1892, will wait for the garbage collector to delete the pods @ 04/15/24 08:03:17.534
  Apr 15 08:03:17.611: INFO: Deleting ReplicationController wrapped-volume-race-f167dca1-be00-4343-94a4-5f8acfb75042 took: 16.775703ms
  Apr 15 08:03:17.813: INFO: Terminating ReplicationController wrapped-volume-race-f167dca1-be00-4343-94a4-5f8acfb75042 pods took: 201.417791ms
  E0415 08:03:18.110840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:19.115843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:20.116451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-8ab52766-a5dc-449e-842d-3a794170baf2 in namespace emptydir-wrapper-1892, will wait for the garbage collector to delete the pods @ 04/15/24 08:03:20.814
  Apr 15 08:03:20.894: INFO: Deleting ReplicationController wrapped-volume-race-8ab52766-a5dc-449e-842d-3a794170baf2 took: 19.446469ms
  Apr 15 08:03:21.096: INFO: Terminating ReplicationController wrapped-volume-race-8ab52766-a5dc-449e-842d-3a794170baf2 pods took: 201.298205ms
  E0415 08:03:21.117348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:22.118425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-44b474eb-6775-44d3-900c-fc6b0b77a65c in namespace emptydir-wrapper-1892, will wait for the garbage collector to delete the pods @ 04/15/24 08:03:22.898
  Apr 15 08:03:22.975: INFO: Deleting ReplicationController wrapped-volume-race-44b474eb-6775-44d3-900c-fc6b0b77a65c took: 15.845078ms
  E0415 08:03:23.131187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:03:23.183: INFO: Terminating ReplicationController wrapped-volume-race-44b474eb-6775-44d3-900c-fc6b0b77a65c pods took: 208.258934ms
  E0415 08:03:24.131921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:25.131962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 04/15/24 08:03:25.185
  Apr 15 08:03:25.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1892" for this suite. @ 04/15/24 08:03:25.972
• [24.427 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 04/15/24 08:03:25.992
  Apr 15 08:03:25.992: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 08:03:25.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:03:26.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:03:26.043
  E0415 08:03:26.132883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:27.133714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:28.133923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:29.136895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:03:30.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-412" for this suite. @ 04/15/24 08:03:30.113
• [4.133 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 04/15/24 08:03:30.129
  Apr 15 08:03:30.129: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename gc @ 04/15/24 08:03:30.134
  E0415 08:03:30.135547      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:03:30.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:03:30.176
  Apr 15 08:03:30.270: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"c62ced31-3835-4004-8568-7f97db6922b1", Controller:(*bool)(0xc003a68202), BlockOwnerDeletion:(*bool)(0xc003a68203)}}
  Apr 15 08:03:30.287: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"ca703753-a789-442e-a14f-5f0184aeb3d6", Controller:(*bool)(0xc0039527fa), BlockOwnerDeletion:(*bool)(0xc0039527fb)}}
  Apr 15 08:03:30.309: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"691f9669-e797-461a-aaf0-4d22c461c0e5", Controller:(*bool)(0xc003952a2a), BlockOwnerDeletion:(*bool)(0xc003952a2b)}}
  E0415 08:03:31.136406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:32.136519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:33.136653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:34.137207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:35.137301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:03:35.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2726" for this suite. @ 04/15/24 08:03:35.353
• [5.252 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 04/15/24 08:03:35.381
  Apr 15 08:03:35.381: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:03:35.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:03:35.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:03:35.433
  STEP: creating the pod @ 04/15/24 08:03:35.441
  Apr 15 08:03:35.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-3048 create -f -'
  Apr 15 08:03:35.858: INFO: stderr: ""
  Apr 15 08:03:35.858: INFO: stdout: "pod/pause created\n"
  E0415 08:03:36.137406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:37.137752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/15/24 08:03:37.876
  Apr 15 08:03:37.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-3048 label pods pause testing-label=testing-label-value'
  Apr 15 08:03:38.084: INFO: stderr: ""
  Apr 15 08:03:38.084: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/15/24 08:03:38.084
  Apr 15 08:03:38.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-3048 get pod pause -L testing-label'
  E0415 08:03:38.138858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:03:38.237: INFO: stderr: ""
  Apr 15 08:03:38.237: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/15/24 08:03:38.237
  Apr 15 08:03:38.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-3048 label pods pause testing-label-'
  Apr 15 08:03:38.519: INFO: stderr: ""
  Apr 15 08:03:38.519: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/15/24 08:03:38.519
  Apr 15 08:03:38.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-3048 get pod pause -L testing-label'
  Apr 15 08:03:38.692: INFO: stderr: ""
  Apr 15 08:03:38.692: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 04/15/24 08:03:38.692
  Apr 15 08:03:38.692: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-3048 delete --grace-period=0 --force -f -'
  Apr 15 08:03:38.857: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 08:03:38.857: INFO: stdout: "pod \"pause\" force deleted\n"
  Apr 15 08:03:38.858: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-3048 get rc,svc -l name=pause --no-headers'
  Apr 15 08:03:39.037: INFO: stderr: "No resources found in kubectl-3048 namespace.\n"
  Apr 15 08:03:39.037: INFO: stdout: ""
  Apr 15 08:03:39.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-3048 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E0415 08:03:39.142870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:03:39.226: INFO: stderr: ""
  Apr 15 08:03:39.226: INFO: stdout: ""
  Apr 15 08:03:39.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3048" for this suite. @ 04/15/24 08:03:39.239
• [3.874 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 04/15/24 08:03:39.26
  Apr 15 08:03:39.260: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename csi-storageclass @ 04/15/24 08:03:39.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:03:39.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:03:39.315
  STEP: Creating a StorageClass @ 04/15/24 08:03:39.324
  STEP: Get StorageClass "e2e-66bgw" @ 04/15/24 08:03:39.337
  STEP: Patching the StorageClass "e2e-66bgw" @ 04/15/24 08:03:39.346
  STEP: Delete StorageClass "e2e-66bgw" @ 04/15/24 08:03:39.358
  STEP: Confirm deletion of StorageClass "e2e-66bgw" @ 04/15/24 08:03:39.378
  STEP: Create a replacement StorageClass @ 04/15/24 08:03:39.385
  STEP: Updating StorageClass "e2e-v2-fqzf5" @ 04/15/24 08:03:39.397
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-fqzf5=updated" @ 04/15/24 08:03:39.41
  STEP: Deleting StorageClass "e2e-v2-fqzf5" via DeleteCollection @ 04/15/24 08:03:39.416
  STEP: Confirm deletion of StorageClass "e2e-v2-fqzf5" @ 04/15/24 08:03:39.434
  Apr 15 08:03:39.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-2003" for this suite. @ 04/15/24 08:03:39.457
• [0.216 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 04/15/24 08:03:39.48
  Apr 15 08:03:39.480: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename disruption @ 04/15/24 08:03:39.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:03:39.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:03:39.517
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/15/24 08:03:39.522
  STEP: Waiting for the pdb to be processed @ 04/15/24 08:03:39.534
  E0415 08:03:40.143953      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:41.144481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/15/24 08:03:41.554
  STEP: Waiting for all pods to be running @ 04/15/24 08:03:41.555
  Apr 15 08:03:41.565: INFO: pods: 0 < 3
  E0415 08:03:42.145064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:43.145676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/15/24 08:03:43.565
  STEP: Updating the pdb to allow a pod to be evicted @ 04/15/24 08:03:43.594
  STEP: Waiting for the pdb to be processed @ 04/15/24 08:03:43.617
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/15/24 08:03:43.625
  STEP: Waiting for all pods to be running @ 04/15/24 08:03:43.626
  STEP: Waiting for the pdb to observed all healthy pods @ 04/15/24 08:03:43.636
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/15/24 08:03:43.686
  STEP: Waiting for the pdb to be processed @ 04/15/24 08:03:43.723
  E0415 08:03:44.146189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:45.146575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 04/15/24 08:03:45.735
  STEP: locating a running pod @ 04/15/24 08:03:45.745
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/15/24 08:03:45.765
  STEP: Waiting for the pdb to be deleted @ 04/15/24 08:03:45.785
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/15/24 08:03:45.792
  STEP: Waiting for all pods to be running @ 04/15/24 08:03:45.792
  Apr 15 08:03:45.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9667" for this suite. @ 04/15/24 08:03:45.858
• [6.409 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 04/15/24 08:03:45.892
  Apr 15 08:03:45.892: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 08:03:45.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:03:45.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:03:45.95
  Apr 15 08:03:45.961: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  W0415 08:03:45.964814      14 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000bdfcf0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0415 08:03:46.147414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:47.147885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:48.147813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0415 08:03:48.737767      14 warnings.go:70] unknown field "alpha"
  W0415 08:03:48.737819      14 warnings.go:70] unknown field "beta"
  W0415 08:03:48.737843      14 warnings.go:70] unknown field "delta"
  W0415 08:03:48.737856      14 warnings.go:70] unknown field "epsilon"
  W0415 08:03:48.737868      14 warnings.go:70] unknown field "gamma"
  E0415 08:03:49.148805      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:03:49.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1549" for this suite. @ 04/15/24 08:03:49.329
• [3.453 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 04/15/24 08:03:49.345
  Apr 15 08:03:49.345: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:03:49.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:03:49.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:03:49.4
  STEP: Creating configMap with name projected-configmap-test-volume-29f94654-8552-4fb0-8178-8ff3c9c7953c @ 04/15/24 08:03:49.411
  STEP: Creating a pod to test consume configMaps @ 04/15/24 08:03:49.424
  E0415 08:03:50.149134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:51.149675      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:52.150402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:53.150401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:03:53.48
  Apr 15 08:03:53.487: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-projected-configmaps-cf97166c-3fce-4221-a556-e9471ccdb1e5 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 08:03:53.501
  Apr 15 08:03:53.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6217" for this suite. @ 04/15/24 08:03:53.54
• [4.208 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/15/24 08:03:53.555
  Apr 15 08:03:53.555: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 08:03:53.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:03:53.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:03:53.607
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/15/24 08:03:53.636
  E0415 08:03:54.151291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:55.151791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:56.152510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:57.153579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:58.153941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:03:59.153912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:00.153994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:01.155121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:02.155590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:03.155827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:04.156796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:05.157517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:06.158134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:07.159047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:08.159324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:09.160682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:10.161652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/15/24 08:04:10.827
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/15/24 08:04:10.835
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/15/24 08:04:10.85
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 04/15/24 08:04:10.851
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/15/24 08:04:10.911
  E0415 08:04:11.161585      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:12.162207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:13.163372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/15/24 08:04:13.946
  E0415 08:04:14.166743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/15/24 08:04:14.966
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/15/24 08:04:14.985
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 04/15/24 08:04:14.985
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/15/24 08:04:15.045
  E0415 08:04:15.165625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/15/24 08:04:16.079
  E0415 08:04:16.166673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:17.167099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/15/24 08:04:18.106
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/15/24 08:04:18.119
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 04/15/24 08:04:18.119
  E0415 08:04:18.167611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:18.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9749" for this suite. @ 04/15/24 08:04:18.191
• [24.654 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 04/15/24 08:04:18.212
  Apr 15 08:04:18.212: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:04:18.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:04:18.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:04:18.267
  STEP: Creating a pod to test downward api env vars @ 04/15/24 08:04:18.273
  E0415 08:04:19.168353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:20.168807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:04:20.319
  Apr 15 08:04:20.325: INFO: Trying to get logs from node jec7saimeaph-3 pod downward-api-ad1a3897-8893-4d9e-9328-23eedbc22c02 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 08:04:20.351
  Apr 15 08:04:20.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-658" for this suite. @ 04/15/24 08:04:20.403
• [2.209 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 04/15/24 08:04:20.422
  Apr 15 08:04:20.422: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 08:04:20.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:04:20.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:04:20.465
  Apr 15 08:04:20.471: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 08:04:21.168924      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:22.169129      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:23.169801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:24.169885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:25.170132      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:26.171400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:27.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8026" for this suite. @ 04/15/24 08:04:27.035
• [6.629 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/15/24 08:04:27.051
  Apr 15 08:04:27.052: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 08:04:27.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:04:27.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:04:27.099
  STEP: Creating simple DaemonSet "daemon-set" @ 04/15/24 08:04:27.166
  E0415 08:04:27.172480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 08:04:27.182
  Apr 15 08:04:27.204: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:04:27.204: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:04:28.172678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:28.206: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:04:28.206: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:04:29.172980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:29.224: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 08:04:29.224: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/15/24 08:04:29.232
  Apr 15 08:04:29.285: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 08:04:29.287: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:04:30.173520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:30.298: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 08:04:30.298: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:04:31.174182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:31.284: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 08:04:31.284: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:04:32.175042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:32.283: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 08:04:32.283: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 08:04:32.291
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-890, will wait for the garbage collector to delete the pods @ 04/15/24 08:04:32.291
  Apr 15 08:04:32.360: INFO: Deleting DaemonSet.extensions daemon-set took: 12.664059ms
  Apr 15 08:04:32.561: INFO: Terminating DaemonSet.extensions daemon-set pods took: 200.944221ms
  E0415 08:04:33.176629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:34.176905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:35.174: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:04:35.174: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  E0415 08:04:35.177384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:35.181: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"206859"},"items":null}

  Apr 15 08:04:35.203: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"206859"},"items":null}

  Apr 15 08:04:35.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-890" for this suite. @ 04/15/24 08:04:35.254
• [8.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 04/15/24 08:04:35.282
  Apr 15 08:04:35.282: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 08:04:35.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:04:35.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:04:35.327
  STEP: Creating namespace "e2e-ns-gzwzb" @ 04/15/24 08:04:35.334
  Apr 15 08:04:35.378: INFO: Namespace "e2e-ns-gzwzb-7295" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-gzwzb-7295" @ 04/15/24 08:04:35.378
  Apr 15 08:04:35.400: INFO: Namespace "e2e-ns-gzwzb-7295" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-gzwzb-7295" @ 04/15/24 08:04:35.401
  Apr 15 08:04:35.430: INFO: Namespace "e2e-ns-gzwzb-7295" has []v1.FinalizerName{"kubernetes"}
  Apr 15 08:04:35.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1074" for this suite. @ 04/15/24 08:04:35.46
  STEP: Destroying namespace "e2e-ns-gzwzb-7295" for this suite. @ 04/15/24 08:04:35.478
• [0.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 04/15/24 08:04:35.499
  Apr 15 08:04:35.499: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 08:04:35.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:04:35.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:04:35.555
  STEP: Creating pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910 @ 04/15/24 08:04:35.573
  E0415 08:04:36.177822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:37.178351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 08:04:37.626
  Apr 15 08:04:37.633: INFO: Initial restart count of pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 is 0
  Apr 15 08:04:37.639: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:04:38.178484      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:39.178491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:39.653: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:04:40.178975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:41.179569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:41.661: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:04:42.180298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:43.180503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:43.669: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:04:44.181491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:45.182148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:45.680: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:04:46.182715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:47.183681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:47.691: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:04:48.183658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:49.184182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:49.705: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:04:50.185124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:51.185586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:51.716: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:04:52.186258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:53.186430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:53.723: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:04:54.186759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:55.187134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:55.744: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:04:56.187428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:57.187610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:57.754: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:04:58.187551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:04:59.188249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:04:59.763: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:00.188480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:01.188711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:01.774: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:02.191047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:03.189379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:03.788: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:04.191431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:05.191573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:05.801: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:06.192392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:07.192165      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:07.811: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:08.193384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:09.193472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:09.821: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:10.194675      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:11.194490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:11.829: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:12.194737      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:13.195435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:13.842: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:14.195873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:15.196056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:15.853: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:16.196815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:17.197710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:17.860: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:18.198079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:19.199048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:19.871: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:20.198718      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:21.199598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:21.883: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:22.200020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:23.200885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:23.899: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:24.201520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:25.201663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:25.909: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:26.202086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:27.202402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:27.917: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:28.202657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:29.203354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:29.924: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:30.204418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:31.205492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:31.935: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:32.205845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:33.206000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:33.947: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:34.207488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:35.208431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:35.957: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:36.209590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:37.209728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:37.965: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:38.210829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:39.211453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:39.974: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:40.211464      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:41.212403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:41.982: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:42.212616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:43.213560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:43.991: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:44.213827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:45.214728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:46.003: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:46.215061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:47.216029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:48.013: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:48.216610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:49.216978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:50.022: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:50.217596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:51.217624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:52.031: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:52.218022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:53.218930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:54.040: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:54.219232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:55.219667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:56.052: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:56.219741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:57.220692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:05:58.062: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:05:58.220766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:05:59.221265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:00.071: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:00.221951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:01.222477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:02.081: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:02.222978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:03.223131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:04.092: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:04.223866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:05.224259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:06.104: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:06.224427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:07.224791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:08.120: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:08.225673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:09.226177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:10.132: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:10.226737      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:11.227803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:12.142: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:12.229289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:13.229463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:14.151: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:14.229900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:15.230538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:16.163: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:16.231392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:17.231683      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:18.175: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:18.232264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:19.232521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:20.185: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:20.232636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:21.234074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:22.194: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:22.234481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:23.235006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:24.205: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:24.235835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:25.236818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:26.217: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:26.237268      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:27.237601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:28.226: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:28.237901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:29.238969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:30.236: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:30.239028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:31.239760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:32.240048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:32.245: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:33.240992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:34.241236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:34.254: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:35.242885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:36.242039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:36.269: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:37.242168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:38.242569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:38.278: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:39.243314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:40.244368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:40.287: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:41.245291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:42.245977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:42.301: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:43.248696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:44.246701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:44.319: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:45.247408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:46.247611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:46.329: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:47.247974      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:48.249508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:48.343: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:49.249266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:50.250076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:50.352: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:51.250375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:52.251007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:52.364: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:53.252003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:54.252973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:54.373: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:55.253580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:56.254164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:56.387: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:57.255090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:06:58.254985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:06:58.396: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:06:59.255100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:00.255665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:00.410: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:01.258718      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:02.257059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:02.419: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:03.257644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:04.257814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:04.432: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:05.258326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:06.258762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:06.484: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:07.259127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:08.259668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:08.497: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:09.260899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:10.260709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:10.507: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:11.261944      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:12.262762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:12.518: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:13.263199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:14.264117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:14.527: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:15.263849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:16.264807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:16.537: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:17.266100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:18.266365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:18.547: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:19.266746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:20.267225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:20.558: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:21.267786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:22.268330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:22.566: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:23.268535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:24.272905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:24.574: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:25.269095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:26.269987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:26.583: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:27.270201      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:28.270660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:28.592: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:29.270854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:30.271082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:30.605: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:31.271404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:32.272242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:32.617: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:33.273388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:34.273681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:34.633: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:35.274240      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:36.274730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:36.643: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:37.275334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:38.276622      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:38.652: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:39.276666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:40.277190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:40.662: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:41.278053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:42.278339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:42.672: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:43.279135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:44.280502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:44.684: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:45.281243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:46.282030      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:46.694: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:47.282405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:48.282301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:48.704: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:49.282856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:50.282944      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:50.713: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:51.283732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:52.284098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:52.723: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:53.284386      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:54.286322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:54.736: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:55.286522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:56.286573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:56.748: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:57.287003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:07:58.287363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:07:58.758: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:07:59.287710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:00.288185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:00.767: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:01.289225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:02.289600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:02.780: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:03.289923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:04.290100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:04.790: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:05.290532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:06.290703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:06.801: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:07.290925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:08.291051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:08.812: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:09.291096      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:10.291410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:10.822: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:11.292354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:12.293156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:12.836: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:13.293201      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:14.293398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:14.845: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:15.294653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:16.294651      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:16.857: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:17.294845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:18.295832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:18.866: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:19.296111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:20.297237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:20.874: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:21.298227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:22.298470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:22.887: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:23.299580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:24.300206      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:24.899: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:25.301262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:26.301831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:26.914: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:27.302253      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:28.302247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:28.922: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:29.303177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:30.304040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:30.932: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:31.304403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:32.305243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:32.940: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:33.306055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:34.307036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:34.951: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:35.307075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:36.307456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:36.962: INFO: Get pod test-webserver-ad42f7bc-5fb1-4ee1-81ed-c2c4fa4955d1 in namespace container-probe-3910
  E0415 08:08:37.308687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:38.308689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/15/24 08:08:38.964
  Apr 15 08:08:39.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3910" for this suite. @ 04/15/24 08:08:39.036
• [243.552 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 04/15/24 08:08:39.054
  Apr 15 08:08:39.054: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename server-version @ 04/15/24 08:08:39.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:08:39.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:08:39.16
  STEP: Request ServerVersion @ 04/15/24 08:08:39.17
  STEP: Confirm major version @ 04/15/24 08:08:39.174
  Apr 15 08:08:39.176: INFO: Major version: 1
  STEP: Confirm minor version @ 04/15/24 08:08:39.179
  Apr 15 08:08:39.179: INFO: cleanMinorVersion: 29
  Apr 15 08:08:39.183: INFO: Minor version: 29
  Apr 15 08:08:39.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-9640" for this suite. @ 04/15/24 08:08:39.21
• [0.180 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 04/15/24 08:08:39.25
  Apr 15 08:08:39.250: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:08:39.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:08:39.3
  E0415 08:08:39.308686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:08:39.308
  STEP: Setting up server cert @ 04/15/24 08:08:39.374
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:08:40.286
  STEP: Deploying the webhook pod @ 04/15/24 08:08:40.306
  E0415 08:08:40.309470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 04/15/24 08:08:40.333
  Apr 15 08:08:40.365: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 08:08:41.309943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:42.310391      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 08:08:42.393
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:08:42.423
  E0415 08:08:43.310842      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:43.424: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/15/24 08:08:43.445
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/15/24 08:08:43.486
  Apr 15 08:08:43.486: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:08:43.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-305" for this suite. @ 04/15/24 08:08:43.686
  STEP: Destroying namespace "webhook-markers-6256" for this suite. @ 04/15/24 08:08:43.7
• [4.466 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/15/24 08:08:43.717
  Apr 15 08:08:43.717: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 08:08:43.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:08:43.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:08:43.762
  Apr 15 08:08:43.814: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 08:08:43.826
  Apr 15 08:08:43.845: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:08:43.845: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:08:44.311156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:44.871: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:08:44.872: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:08:45.312109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:45.846: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 08:08:45.846: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/15/24 08:08:45.894
  STEP: Check that daemon pods images are updated. @ 04/15/24 08:08:45.922
  Apr 15 08:08:45.933: INFO: Wrong image for pod: daemon-set-84cv9. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 08:08:45.934: INFO: Wrong image for pod: daemon-set-qdhjx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 08:08:45.934: INFO: Wrong image for pod: daemon-set-xj5rx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0415 08:08:46.312309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:46.937: INFO: Pod daemon-set-2x245 is not available
  Apr 15 08:08:46.937: INFO: Wrong image for pod: daemon-set-qdhjx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 08:08:46.938: INFO: Wrong image for pod: daemon-set-xj5rx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0415 08:08:47.312727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:47.934: INFO: Pod daemon-set-2x245 is not available
  Apr 15 08:08:47.934: INFO: Wrong image for pod: daemon-set-qdhjx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 08:08:47.934: INFO: Wrong image for pod: daemon-set-xj5rx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0415 08:08:48.312798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:48.941: INFO: Pod daemon-set-vwzbp is not available
  Apr 15 08:08:48.941: INFO: Wrong image for pod: daemon-set-xj5rx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0415 08:08:49.313716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:49.932: INFO: Pod daemon-set-vwzbp is not available
  Apr 15 08:08:49.933: INFO: Wrong image for pod: daemon-set-xj5rx. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0415 08:08:50.313860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:50.935: INFO: Pod daemon-set-7ldbx is not available
  E0415 08:08:51.314229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:51.952: INFO: Pod daemon-set-7ldbx is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/15/24 08:08:51.963
  Apr 15 08:08:51.984: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 08:08:51.984: INFO: Node jec7saimeaph-3 is running 0 daemon pod, expected 1
  E0415 08:08:52.315126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:52.987: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 08:08:52.987: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 08:08:53.029
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5999, will wait for the garbage collector to delete the pods @ 04/15/24 08:08:53.029
  Apr 15 08:08:53.108: INFO: Deleting DaemonSet.extensions daemon-set took: 21.131783ms
  Apr 15 08:08:53.309: INFO: Terminating DaemonSet.extensions daemon-set pods took: 201.016938ms
  E0415 08:08:53.316198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:54.316868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:08:54.318: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:08:54.319: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 08:08:54.326: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"207554"},"items":null}

  Apr 15 08:08:54.333: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"207554"},"items":null}

  Apr 15 08:08:54.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5999" for this suite. @ 04/15/24 08:08:54.377
• [10.674 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 04/15/24 08:08:54.402
  Apr 15 08:08:54.403: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 08:08:54.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:08:54.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:08:54.479
  STEP: Creating a ResourceQuota with best effort scope @ 04/15/24 08:08:54.485
  STEP: Ensuring ResourceQuota status is calculated @ 04/15/24 08:08:54.499
  E0415 08:08:55.317155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:56.317875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 04/15/24 08:08:56.52
  STEP: Ensuring ResourceQuota status is calculated @ 04/15/24 08:08:56.542
  E0415 08:08:57.318226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:08:58.318761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 04/15/24 08:08:58.557
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/15/24 08:08:58.615
  E0415 08:08:59.318964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:00.319108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/15/24 08:09:00.624
  E0415 08:09:01.319512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:02.319712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/15/24 08:09:02.632
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 08:09:02.671
  E0415 08:09:03.320883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:04.321214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 04/15/24 08:09:04.685
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/15/24 08:09:04.721
  E0415 08:09:05.322254      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:06.322625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/15/24 08:09:06.732
  E0415 08:09:07.323756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:08.324028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/15/24 08:09:08.743
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 08:09:08.772
  E0415 08:09:09.324018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:10.324781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:09:10.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6345" for this suite. @ 04/15/24 08:09:10.792
• [16.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 04/15/24 08:09:10.814
  Apr 15 08:09:10.814: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:09:10.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:10.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:10.872
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:09:10.884
  E0415 08:09:11.324962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:12.325033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:13.325285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:14.326200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:09:14.945
  Apr 15 08:09:14.953: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-8254dbc2-579b-43dd-ba1d-29c0a422293b container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:09:15.006
  Apr 15 08:09:15.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6987" for this suite. @ 04/15/24 08:09:15.054
• [4.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 04/15/24 08:09:15.092
  Apr 15 08:09:15.093: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 08:09:15.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:15.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:15.205
  STEP: creating a collection of services @ 04/15/24 08:09:15.215
  Apr 15 08:09:15.216: INFO: Creating e2e-svc-a-j95lm
  Apr 15 08:09:15.251: INFO: Creating e2e-svc-b-524nc
  Apr 15 08:09:15.274: INFO: Creating e2e-svc-c-qptn4
  STEP: deleting service collection @ 04/15/24 08:09:15.323
  E0415 08:09:15.326918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:09:15.414: INFO: Collection of services has been deleted
  Apr 15 08:09:15.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8389" for this suite. @ 04/15/24 08:09:15.428
• [0.356 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 04/15/24 08:09:15.452
  Apr 15 08:09:15.452: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 08:09:15.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:15.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:15.505
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/15/24 08:09:15.528
  Apr 15 08:09:15.529: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 08:09:16.326868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:17.327071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:09:17.739: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 08:09:18.327606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:19.327807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:20.328090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:21.328708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:22.330066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:23.330841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:24.330915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:25.331961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:09:25.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-162" for this suite. @ 04/15/24 08:09:25.495
• [10.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 04/15/24 08:09:25.512
  Apr 15 08:09:25.512: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 08:09:25.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:25.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:25.564
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1120 @ 04/15/24 08:09:25.576
  STEP: changing the ExternalName service to type=NodePort @ 04/15/24 08:09:25.588
  STEP: creating replication controller externalname-service in namespace services-1120 @ 04/15/24 08:09:25.637
  I0415 08:09:25.648938      14 runners.go:197] Created replication controller with name: externalname-service, namespace: services-1120, replica count: 2
  E0415 08:09:26.332245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:27.333156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:28.334114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 08:09:28.701200      14 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 08:09:28.701: INFO: Creating new exec pod
  E0415 08:09:29.334099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:30.334757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:31.335355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:09:31.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-1120 exec execpodzdlrq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 15 08:09:32.273: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 15 08:09:32.273: INFO: stdout: ""
  E0415 08:09:32.336199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:09:32.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-1120 exec execpodzdlrq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 15 08:09:33.059: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 15 08:09:33.059: INFO: stdout: ""
  E0415 08:09:33.336867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:09:33.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-1120 exec execpodzdlrq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 15 08:09:34.085: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 15 08:09:34.086: INFO: stdout: "externalname-service-jczsg"
  Apr 15 08:09:34.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-1120 exec execpodzdlrq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.33.129 80'
  E0415 08:09:34.338928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:09:34.411: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.33.129 80\nConnection to 10.233.33.129 80 port [tcp/http] succeeded!\n"
  Apr 15 08:09:34.411: INFO: stdout: "externalname-service-ttt6p"
  Apr 15 08:09:34.411: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-1120 exec execpodzdlrq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.234 30670'
  Apr 15 08:09:34.692: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.234 30670\nConnection to 192.168.121.234 30670 port [tcp/*] succeeded!\n"
  Apr 15 08:09:34.692: INFO: stdout: ""
  E0415 08:09:35.339879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:09:35.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-1120 exec execpodzdlrq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.234 30670'
  Apr 15 08:09:35.801: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.234 30670\nConnection to 192.168.121.234 30670 port [tcp/*] succeeded!\n"
  Apr 15 08:09:35.801: INFO: stdout: ""
  E0415 08:09:36.340565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:09:36.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-1120 exec execpodzdlrq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.234 30670'
  Apr 15 08:09:36.753: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.234 30670\nConnection to 192.168.121.234 30670 port [tcp/*] succeeded!\n"
  Apr 15 08:09:36.753: INFO: stdout: "externalname-service-jczsg"
  Apr 15 08:09:36.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-1120 exec execpodzdlrq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.146 30670'
  Apr 15 08:09:37.040: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.146 30670\nConnection to 192.168.121.146 30670 port [tcp/*] succeeded!\n"
  Apr 15 08:09:37.040: INFO: stdout: "externalname-service-jczsg"
  Apr 15 08:09:37.040: INFO: Cleaning up the ExternalName to NodePort test service
  Apr 15 08:09:37.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1120" for this suite. @ 04/15/24 08:09:37.112
• [11.648 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 04/15/24 08:09:37.161
  Apr 15 08:09:37.161: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:09:37.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:37.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:37.249
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:09:37.255
  E0415 08:09:37.341790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:38.342482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:39.342525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:40.343330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:09:41.318
  Apr 15 08:09:41.325: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-5b738225-f8bb-422e-bca0-1bc5287f004d container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:09:41.342
  E0415 08:09:41.343430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:09:41.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7831" for this suite. @ 04/15/24 08:09:41.406
• [4.261 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 04/15/24 08:09:41.422
  Apr 15 08:09:41.422: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:09:41.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:41.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:41.471
  STEP: Creating a pod to test downward api env vars @ 04/15/24 08:09:41.477
  E0415 08:09:42.344082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:43.344587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:44.344865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:45.345352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:09:45.52
  Apr 15 08:09:45.531: INFO: Trying to get logs from node jec7saimeaph-3 pod downward-api-7a7437e9-ca19-4857-9891-d3e7f7293bc3 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 08:09:45.554
  Apr 15 08:09:45.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2999" for this suite. @ 04/15/24 08:09:45.598
• [4.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/15/24 08:09:45.616
  Apr 15 08:09:45.616: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename secrets @ 04/15/24 08:09:45.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:45.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:45.667
  STEP: Creating secret with name secret-test-42da9fcb-8178-4576-9f1b-813456973d7a @ 04/15/24 08:09:45.675
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:09:45.686
  E0415 08:09:46.345444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:47.345625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:48.346707      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:49.346904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:09:49.746
  Apr 15 08:09:49.754: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-secrets-c1dbdfed-c016-45d0-ab7c-82cd1514dd9f container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:09:49.769
  Apr 15 08:09:49.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8917" for this suite. @ 04/15/24 08:09:49.827
• [4.236 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/15/24 08:09:49.853
  Apr 15 08:09:49.853: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename init-container @ 04/15/24 08:09:49.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:49.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:49.901
  STEP: creating the pod @ 04/15/24 08:09:49.907
  Apr 15 08:09:49.907: INFO: PodSpec: initContainers in spec.initContainers
  E0415 08:09:50.347647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:51.347870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:52.348003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:53.348233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:09:53.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8639" for this suite. @ 04/15/24 08:09:53.687
• [3.858 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 04/15/24 08:09:53.716
  Apr 15 08:09:53.717: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 08:09:53.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:53.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:53.785
  E0415 08:09:54.349311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:55.349759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:09:55.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7699" for this suite. @ 04/15/24 08:09:55.858
• [2.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 04/15/24 08:09:55.873
  Apr 15 08:09:55.873: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:09:55.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:55.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:55.919
  STEP: Setting up server cert @ 04/15/24 08:09:55.965
  E0415 08:09:56.350199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:57.350671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:09:57.719
  STEP: Deploying the webhook pod @ 04/15/24 08:09:57.744
  STEP: Wait for the deployment to be ready @ 04/15/24 08:09:57.765
  Apr 15 08:09:57.797: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 08:09:58.350979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:09:59.351229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 08:09:59.819
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:09:59.845
  E0415 08:10:00.351600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:00.846: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/15/24 08:10:00.976
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 08:10:01.1
  STEP: Deleting the collection of validation webhooks @ 04/15/24 08:10:01.195
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 08:10:01.344
  E0415 08:10:01.352192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:01.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8278" for this suite. @ 04/15/24 08:10:01.496
  STEP: Destroying namespace "webhook-markers-6373" for this suite. @ 04/15/24 08:10:01.511
• [5.657 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 04/15/24 08:10:01.53
  Apr 15 08:10:01.531: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:10:01.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:01.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:01.588
  STEP: Setting up server cert @ 04/15/24 08:10:01.661
  E0415 08:10:02.352796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:10:03.322
  STEP: Deploying the webhook pod @ 04/15/24 08:10:03.333
  E0415 08:10:03.353249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 04/15/24 08:10:03.358
  Apr 15 08:10:03.386: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 08:10:04.353613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:05.353998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 08:10:05.412
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:10:05.433
  E0415 08:10:06.354221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:06.435: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/15/24 08:10:06.468
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/15/24 08:10:06.52
  STEP: Creating a configMap that should not be mutated @ 04/15/24 08:10:06.534
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/15/24 08:10:06.56
  STEP: Creating a configMap that should be mutated @ 04/15/24 08:10:06.575
  Apr 15 08:10:06.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4168" for this suite. @ 04/15/24 08:10:06.777
  STEP: Destroying namespace "webhook-markers-3907" for this suite. @ 04/15/24 08:10:06.793
• [5.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/15/24 08:10:06.818
  Apr 15 08:10:06.818: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:10:06.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:06.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:06.882
  E0415 08:10:07.355576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:08.355701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:09.359358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:10.357967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:11.358786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:12.359882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:10:13.029
  Apr 15 08:10:13.039: INFO: Trying to get logs from node jec7saimeaph-3 pod client-envvars-ae49125f-bc15-4e93-83c4-35bbcf608dc0 container env3cont: <nil>
  STEP: delete the pod @ 04/15/24 08:10:13.058
  Apr 15 08:10:13.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9362" for this suite. @ 04/15/24 08:10:13.1
• [6.303 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 04/15/24 08:10:13.125
  Apr 15 08:10:13.125: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:10:13.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:13.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:13.223
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:10:13.228
  E0415 08:10:13.359515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:14.360109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:15.360692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:16.361026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:10:17.295
  Apr 15 08:10:17.304: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-58c469d9-a369-481e-af74-0d9f6092d4c3 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:10:17.32
  Apr 15 08:10:17.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 08:10:17.361406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-7364" for this suite. @ 04/15/24 08:10:17.369
• [4.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 04/15/24 08:10:17.398
  Apr 15 08:10:17.398: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename job @ 04/15/24 08:10:17.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:17.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:17.446
  STEP: Creating a job @ 04/15/24 08:10:17.451
  STEP: Ensuring active pods == parallelism @ 04/15/24 08:10:17.464
  E0415 08:10:18.362143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:19.363358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 04/15/24 08:10:19.476
  Apr 15 08:10:20.013: INFO: Successfully updated pod "adopt-release-btsrt"
  STEP: Checking that the Job readopts the Pod @ 04/15/24 08:10:20.013
  E0415 08:10:20.363568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:21.364690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 04/15/24 08:10:22.033
  E0415 08:10:22.365838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:22.555: INFO: Successfully updated pod "adopt-release-btsrt"
  STEP: Checking that the Job releases the Pod @ 04/15/24 08:10:22.556
  E0415 08:10:23.366910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:24.367671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:24.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6137" for this suite. @ 04/15/24 08:10:24.583
• [7.196 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/15/24 08:10:24.595
  Apr 15 08:10:24.595: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:10:24.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:24.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:24.64
  STEP: Create set of pods @ 04/15/24 08:10:24.646
  Apr 15 08:10:24.664: INFO: created test-pod-1
  Apr 15 08:10:24.679: INFO: created test-pod-2
  Apr 15 08:10:24.703: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/15/24 08:10:24.703
  E0415 08:10:25.368817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:26.369843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 04/15/24 08:10:26.855
  Apr 15 08:10:26.872: INFO: Pod quantity 3 is different from expected quantity 0
  E0415 08:10:27.370949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:27.864: INFO: Pod quantity 2 is different from expected quantity 0
  E0415 08:10:28.371065      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:28.864: INFO: Pod quantity 1 is different from expected quantity 0
  E0415 08:10:29.371175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:29.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1888" for this suite. @ 04/15/24 08:10:29.873
• [5.295 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 04/15/24 08:10:29.892
  Apr 15 08:10:29.892: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename podtemplate @ 04/15/24 08:10:29.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:29.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:29.94
  Apr 15 08:10:30.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-514" for this suite. @ 04/15/24 08:10:30.032
• [0.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 04/15/24 08:10:30.046
  Apr 15 08:10:30.046: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename deployment @ 04/15/24 08:10:30.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:30.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:30.094
  STEP: creating a Deployment @ 04/15/24 08:10:30.117
  Apr 15 08:10:30.119: INFO: Creating simple deployment test-deployment-vbg5v
  Apr 15 08:10:30.167: INFO: deployment "test-deployment-vbg5v" doesn't have the required revision set
  E0415 08:10:30.371363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:31.371527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 04/15/24 08:10:32.218
  Apr 15 08:10:32.230: INFO: Deployment test-deployment-vbg5v has Conditions: [{Available True 2024-04-15 08:10:31 +0000 UTC 2024-04-15 08:10:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-04-15 08:10:31 +0000 UTC 2024-04-15 08:10:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vbg5v-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/15/24 08:10:32.23
  Apr 15 08:10:32.258: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 10, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 10, 31, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 10, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 10, 30, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-vbg5v-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/15/24 08:10:32.259
  Apr 15 08:10:32.268: INFO: Observed &Deployment event: ADDED
  Apr 15 08:10:32.268: INFO: Observed Deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 08:10:30 +0000 UTC 2024-04-15 08:10:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vbg5v-5d576bd769"}
  Apr 15 08:10:32.269: INFO: Observed &Deployment event: MODIFIED
  Apr 15 08:10:32.269: INFO: Observed Deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 08:10:30 +0000 UTC 2024-04-15 08:10:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vbg5v-5d576bd769"}
  Apr 15 08:10:32.270: INFO: Observed Deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-15 08:10:30 +0000 UTC 2024-04-15 08:10:30 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 15 08:10:32.270: INFO: Observed &Deployment event: MODIFIED
  Apr 15 08:10:32.271: INFO: Observed Deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-15 08:10:30 +0000 UTC 2024-04-15 08:10:30 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 15 08:10:32.271: INFO: Observed Deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 08:10:30 +0000 UTC 2024-04-15 08:10:30 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vbg5v-5d576bd769" is progressing.}
  Apr 15 08:10:32.271: INFO: Observed &Deployment event: MODIFIED
  Apr 15 08:10:32.271: INFO: Observed Deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-15 08:10:31 +0000 UTC 2024-04-15 08:10:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 15 08:10:32.271: INFO: Observed Deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 08:10:31 +0000 UTC 2024-04-15 08:10:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vbg5v-5d576bd769" has successfully progressed.}
  Apr 15 08:10:32.272: INFO: Observed &Deployment event: MODIFIED
  Apr 15 08:10:32.272: INFO: Observed Deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-15 08:10:31 +0000 UTC 2024-04-15 08:10:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 15 08:10:32.272: INFO: Observed Deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 08:10:31 +0000 UTC 2024-04-15 08:10:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vbg5v-5d576bd769" has successfully progressed.}
  Apr 15 08:10:32.272: INFO: Found Deployment test-deployment-vbg5v in namespace deployment-6323 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 08:10:32.273: INFO: Deployment test-deployment-vbg5v has an updated status
  STEP: patching the Statefulset Status @ 04/15/24 08:10:32.273
  Apr 15 08:10:32.273: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 15 08:10:32.288: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/15/24 08:10:32.288
  Apr 15 08:10:32.293: INFO: Observed &Deployment event: ADDED
  Apr 15 08:10:32.294: INFO: Observed deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 08:10:30 +0000 UTC 2024-04-15 08:10:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vbg5v-5d576bd769"}
  Apr 15 08:10:32.294: INFO: Observed &Deployment event: MODIFIED
  Apr 15 08:10:32.295: INFO: Observed deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 08:10:30 +0000 UTC 2024-04-15 08:10:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-vbg5v-5d576bd769"}
  Apr 15 08:10:32.296: INFO: Observed deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-15 08:10:30 +0000 UTC 2024-04-15 08:10:30 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 15 08:10:32.297: INFO: Observed &Deployment event: MODIFIED
  Apr 15 08:10:32.298: INFO: Observed deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-15 08:10:30 +0000 UTC 2024-04-15 08:10:30 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 15 08:10:32.299: INFO: Observed deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 08:10:30 +0000 UTC 2024-04-15 08:10:30 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-vbg5v-5d576bd769" is progressing.}
  Apr 15 08:10:32.301: INFO: Observed &Deployment event: MODIFIED
  Apr 15 08:10:32.303: INFO: Observed deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-15 08:10:31 +0000 UTC 2024-04-15 08:10:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 15 08:10:32.304: INFO: Observed deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 08:10:31 +0000 UTC 2024-04-15 08:10:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vbg5v-5d576bd769" has successfully progressed.}
  Apr 15 08:10:32.307: INFO: Observed &Deployment event: MODIFIED
  Apr 15 08:10:32.307: INFO: Observed deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-15 08:10:31 +0000 UTC 2024-04-15 08:10:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 15 08:10:32.308: INFO: Observed deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 08:10:31 +0000 UTC 2024-04-15 08:10:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-vbg5v-5d576bd769" has successfully progressed.}
  Apr 15 08:10:32.308: INFO: Observed deployment test-deployment-vbg5v in namespace deployment-6323 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 08:10:32.309: INFO: Observed &Deployment event: MODIFIED
  Apr 15 08:10:32.309: INFO: Found deployment test-deployment-vbg5v in namespace deployment-6323 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Apr 15 08:10:32.310: INFO: Deployment test-deployment-vbg5v has a patched status
  Apr 15 08:10:32.324: INFO: Deployment "test-deployment-vbg5v":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-vbg5v",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6323",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e48ce81-ebda-4830-87da-224e1a5d8992",
      ResourceVersion: (string) (len=6) "208457",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848765430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-vbg5v-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 08:10:32.341: INFO: New ReplicaSet "test-deployment-vbg5v-5d576bd769" of Deployment "test-deployment-vbg5v":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-vbg5v-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6323",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70d3d710-dbe5-4195-914c-d9d5aa5acbfa",
      ResourceVersion: (string) (len=6) "208452",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848765430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-vbg5v",
          UID: (types.UID) (len=36) "2e48ce81-ebda-4830-87da-224e1a5d8992",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 32 65 34  |k:{\"uid\":\"2e4|
              00000120  38 63 65 38 31 2d 65 62  64 61 2d 34 38 33 30 2d  |8ce81-ebda-4830-|
              00000130  38 37 64 61 2d 32 32 34  65 31 61 35 64 38 39 39  |87da-224e1a5d899|
              00000140  32 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |2\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 08:10:32.357: INFO: Pod "test-deployment-vbg5v-5d576bd769-rlh5g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-vbg5v-5d576bd769-rlh5g",
      GenerateName: (string) (len=33) "test-deployment-vbg5v-5d576bd769-",
      Namespace: (string) (len=15) "deployment-6323",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "865cd559-1ed4-41ff-882e-8dd714d92e27",
      ResourceVersion: (string) (len=6) "208451",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848765430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-vbg5v-5d576bd769",
          UID: (types.UID) (len=36) "70d3d710-dbe5-4195-914c-d9d5aa5acbfa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 30 64 33 64 37 31  30 2d 64 62 65 35 2d 34  |"70d3d710-dbe5-4|
              000000a0  31 39 35 2d 39 31 34 63  2d 64 39 64 35 61 61 35  |195-914c-d9d5aa5|
              000000b0  61 63 62 66 61 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |acbfa\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 34 33 5c 22 7d 22 3a  |.233.64.143\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-22gbb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-22gbb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848765430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.146"
        }
      },
      PodIP: (string) (len=13) "10.233.64.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848765430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848765431,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://ff250e3bad0152d47428c92f0ae7710dc06990223f4b1b0820e0407aa259b6c3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:10:32.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 08:10:32.372106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-6323" for this suite. @ 04/15/24 08:10:32.376
• [2.349 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/15/24 08:10:32.401
  Apr 15 08:10:32.401: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 08:10:32.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:32.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:32.443
  Apr 15 08:10:32.498: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/15/24 08:10:32.511
  Apr 15 08:10:32.526: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:10:32.527: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/15/24 08:10:32.527
  Apr 15 08:10:32.577: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:10:32.577: INFO: Node jec7saimeaph-3 is running 0 daemon pod, expected 1
  E0415 08:10:33.372615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:33.577: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:10:33.577: INFO: Node jec7saimeaph-3 is running 0 daemon pod, expected 1
  E0415 08:10:34.373695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:34.577: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 08:10:34.577: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/15/24 08:10:34.587
  Apr 15 08:10:34.642: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 08:10:34.647: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0415 08:10:35.374261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:35.635: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:10:35.635: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/15/24 08:10:35.635
  Apr 15 08:10:35.663: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:10:35.664: INFO: Node jec7saimeaph-3 is running 0 daemon pod, expected 1
  E0415 08:10:36.375008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:36.659: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:10:36.659: INFO: Node jec7saimeaph-3 is running 0 daemon pod, expected 1
  E0415 08:10:37.377412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:37.658: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 08:10:37.658: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 08:10:37.675
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6396, will wait for the garbage collector to delete the pods @ 04/15/24 08:10:37.676
  Apr 15 08:10:37.759: INFO: Deleting DaemonSet.extensions daemon-set took: 24.271567ms
  Apr 15 08:10:37.860: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.857532ms
  E0415 08:10:38.377634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:10:39.069: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:10:39.070: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 08:10:39.090: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"208563"},"items":null}

  Apr 15 08:10:39.095: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"208563"},"items":null}

  Apr 15 08:10:39.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6396" for this suite. @ 04/15/24 08:10:39.231
• [6.852 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/15/24 08:10:39.256
  Apr 15 08:10:39.256: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:10:39.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:39.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:39.321
  STEP: Creating secret with name s-test-opt-del-dca53f90-eccc-4362-950c-40f9f0b16265 @ 04/15/24 08:10:39.356
  STEP: Creating secret with name s-test-opt-upd-fde968c9-d831-4a17-8f9d-77265d8a42fc @ 04/15/24 08:10:39.373
  E0415 08:10:39.379480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating the pod @ 04/15/24 08:10:39.404
  E0415 08:10:40.378921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:41.379818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-dca53f90-eccc-4362-950c-40f9f0b16265 @ 04/15/24 08:10:41.533
  STEP: Updating secret s-test-opt-upd-fde968c9-d831-4a17-8f9d-77265d8a42fc @ 04/15/24 08:10:41.547
  STEP: Creating secret with name s-test-opt-create-530ed3c1-d142-4d16-98b4-c695eb00342b @ 04/15/24 08:10:41.558
  STEP: waiting to observe update in volume @ 04/15/24 08:10:41.572
  E0415 08:10:42.380707      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:43.381244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:44.381233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:45.381442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:46.381901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:47.382063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:48.382262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:49.382273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:50.382692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:51.383411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:52.383722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:53.384049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:54.384015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:55.384252      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:56.384639      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:57.385417      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:58.385933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:10:59.387231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:00.386939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:01.388244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:02.388250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:03.388977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:04.390123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:05.390368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:06.390817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:07.391233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:08.391402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:09.392198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:10.392689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:11.393952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:12.394164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:13.395168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:14.396295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:15.396713      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:16.397132      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:17.397446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:18.399446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:19.399919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:20.400156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:21.400470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:22.401521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:23.401784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:24.402387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:25.403071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:26.403155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:27.404060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:28.405002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:29.405307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:30.406191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:31.406776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:32.407490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:33.408281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:34.408561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:35.409058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:36.409495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:37.409892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:38.415071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:39.412063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:40.413300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:41.413531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:42.414433      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:43.414452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:44.415222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:45.415438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:46.415814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:47.416493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:48.417470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:49.418283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:50.418850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:51.419086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:52.420000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:53.420211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:54.420806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:55.421459      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:56.421649      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:57.421872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:58.423021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:11:59.423949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:00.424775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:01.425956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:02.426930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:12:02.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5298" for this suite. @ 04/15/24 08:12:02.478
• [83.245 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 04/15/24 08:12:02.503
  Apr 15 08:12:02.503: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename secrets @ 04/15/24 08:12:02.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:12:02.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:12:02.558
  STEP: creating a secret @ 04/15/24 08:12:02.564
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/15/24 08:12:02.575
  STEP: patching the secret @ 04/15/24 08:12:02.583
  STEP: deleting the secret using a LabelSelector @ 04/15/24 08:12:02.603
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/15/24 08:12:02.626
  Apr 15 08:12:02.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4382" for this suite. @ 04/15/24 08:12:02.649
• [0.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 04/15/24 08:12:02.666
  Apr 15 08:12:02.667: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 08:12:02.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:12:02.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:12:02.721
  STEP: Creating a pod to test service account token:  @ 04/15/24 08:12:02.727
  E0415 08:12:03.427314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:04.427358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:05.427566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:06.428363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:12:06.777
  Apr 15 08:12:06.784: INFO: Trying to get logs from node jec7saimeaph-1 pod test-pod-e7b247eb-2ef3-4d3e-862d-da9506231eea container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 08:12:06.832
  Apr 15 08:12:06.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7002" for this suite. @ 04/15/24 08:12:06.878
• [4.227 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/15/24 08:12:06.896
  Apr 15 08:12:06.896: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename subpath @ 04/15/24 08:12:06.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:12:06.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:12:06.944
  STEP: Setting up data @ 04/15/24 08:12:06.952
  STEP: Creating pod pod-subpath-test-configmap-r68z @ 04/15/24 08:12:06.977
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 08:12:06.977
  E0415 08:12:07.428576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:08.428870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:09.429327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:10.430220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:11.430514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:12.430953      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:13.431082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:14.432061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:15.432469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:16.432968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:17.433208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:18.433536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:19.435033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:20.435007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:21.435657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:22.436589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:23.437147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:24.436956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:25.437911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:26.437913      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:27.438391      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:28.438415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:29.439081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:30.439130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:12:31.144
  Apr 15 08:12:31.155: INFO: Trying to get logs from node jec7saimeaph-1 pod pod-subpath-test-configmap-r68z container test-container-subpath-configmap-r68z: <nil>
  STEP: delete the pod @ 04/15/24 08:12:31.195
  STEP: Deleting pod pod-subpath-test-configmap-r68z @ 04/15/24 08:12:31.24
  Apr 15 08:12:31.241: INFO: Deleting pod "pod-subpath-test-configmap-r68z" in namespace "subpath-377"
  Apr 15 08:12:31.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-377" for this suite. @ 04/15/24 08:12:31.265
• [24.385 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 04/15/24 08:12:31.284
  Apr 15 08:12:31.284: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:12:31.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:12:31.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:12:31.333
  STEP: Setting up server cert @ 04/15/24 08:12:31.413
  E0415 08:12:31.439470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:12:31.895
  STEP: Deploying the webhook pod @ 04/15/24 08:12:31.914
  STEP: Wait for the deployment to be ready @ 04/15/24 08:12:31.939
  Apr 15 08:12:31.960: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0415 08:12:32.439961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:33.439919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:12:33.982: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 12, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:12:34.440139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:35.440975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:12:35.991: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 12, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:12:36.441957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:37.442298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:12:37.993: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 12, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:12:38.442407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:39.442518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:12:39.991: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 12, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:12:40.442706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:41.443086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:12:41.993: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 12, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 12, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:12:42.444981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:43.443821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 08:12:43.993
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:12:44.024
  E0415 08:12:44.445323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:12:45.025: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/15/24 08:12:45.042
  STEP: create a configmap that should be updated by the webhook @ 04/15/24 08:12:45.079
  Apr 15 08:12:45.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-103" for this suite. @ 04/15/24 08:12:45.266
  STEP: Destroying namespace "webhook-markers-7045" for this suite. @ 04/15/24 08:12:45.299
• [14.033 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 04/15/24 08:12:45.318
  Apr 15 08:12:45.318: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename sched-pred @ 04/15/24 08:12:45.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:12:45.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:12:45.363
  Apr 15 08:12:45.373: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 15 08:12:45.401: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 08:12:45.410: INFO: 
  Logging pods the apiserver thinks is on node jec7saimeaph-1 before test
  Apr 15 08:12:45.431: INFO: kube-addon-manager-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.431: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 15 08:12:45.432: INFO: kube-apiserver-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.432: INFO: 	Container kube-apiserver ready: true, restart count 5
  Apr 15 08:12:45.432: INFO: kube-controller-manager-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.433: INFO: 	Container kube-controller-manager ready: true, restart count 5
  Apr 15 08:12:45.433: INFO: kube-flannel-ds-mnln7 from kube-system started at 2024-04-15 07:36:15 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.433: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 08:12:45.434: INFO: kube-proxy-rsrrw from kube-system started at 2024-04-15 07:36:14 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.434: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 08:12:45.434: INFO: kube-scheduler-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.434: INFO: 	Container kube-scheduler ready: true, restart count 5
  Apr 15 08:12:45.434: INFO: sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-q89p9 from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 08:12:45.434: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:12:45.434: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 08:12:45.434: INFO: 
  Logging pods the apiserver thinks is on node jec7saimeaph-2 before test
  E0415 08:12:45.444976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:12:45.458: INFO: coredns-76f75df574-wm57r from kube-system started at 2024-04-15 07:36:13 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.458: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 08:12:45.458: INFO: kube-addon-manager-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.459: INFO: 	Container kube-addon-manager ready: true, restart count 6
  Apr 15 08:12:45.459: INFO: kube-apiserver-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.459: INFO: 	Container kube-apiserver ready: true, restart count 6
  Apr 15 08:12:45.459: INFO: kube-controller-manager-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.459: INFO: 	Container kube-controller-manager ready: true, restart count 6
  Apr 15 08:12:45.459: INFO: kube-flannel-ds-bxh6k from kube-system started at 2024-04-15 07:36:16 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.459: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 08:12:45.459: INFO: kube-proxy-kq9zs from kube-system started at 2024-04-15 07:36:14 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.459: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 08:12:45.459: INFO: kube-scheduler-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.459: INFO: 	Container kube-scheduler ready: true, restart count 6
  Apr 15 08:12:45.459: INFO: sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-kf6jd from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 08:12:45.459: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:12:45.459: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 08:12:45.459: INFO: 
  Logging pods the apiserver thinks is on node jec7saimeaph-3 before test
  Apr 15 08:12:45.482: INFO: coredns-76f75df574-fzgvz from kube-system started at 2024-04-15 07:36:13 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.482: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 08:12:45.482: INFO: kube-flannel-ds-g4c45 from kube-system started at 2024-04-15 07:36:15 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.482: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 08:12:45.482: INFO: kube-proxy-q2x5c from kube-system started at 2024-04-15 07:36:14 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.482: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 08:12:45.482: INFO: sonobuoy from sonobuoy started at 2024-04-15 07:36:35 +0000 UTC (1 container statuses recorded)
  Apr 15 08:12:45.482: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 15 08:12:45.482: INFO: sonobuoy-e2e-job-2b6e6deeff5c4ebe from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 08:12:45.482: INFO: 	Container e2e ready: true, restart count 0
  Apr 15 08:12:45.482: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:12:45.482: INFO: sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-gngj9 from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 08:12:45.482: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:12:45.482: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node jec7saimeaph-1 @ 04/15/24 08:12:45.526
  STEP: verifying the node has the label node jec7saimeaph-2 @ 04/15/24 08:12:45.581
  STEP: verifying the node has the label node jec7saimeaph-3 @ 04/15/24 08:12:45.613
  Apr 15 08:12:45.652: INFO: Pod coredns-76f75df574-fzgvz requesting resource cpu=100m on Node jec7saimeaph-3
  Apr 15 08:12:45.653: INFO: Pod coredns-76f75df574-wm57r requesting resource cpu=100m on Node jec7saimeaph-2
  Apr 15 08:12:45.654: INFO: Pod kube-addon-manager-jec7saimeaph-1 requesting resource cpu=5m on Node jec7saimeaph-1
  Apr 15 08:12:45.655: INFO: Pod kube-addon-manager-jec7saimeaph-2 requesting resource cpu=5m on Node jec7saimeaph-2
  Apr 15 08:12:45.655: INFO: Pod kube-apiserver-jec7saimeaph-1 requesting resource cpu=250m on Node jec7saimeaph-1
  Apr 15 08:12:45.656: INFO: Pod kube-apiserver-jec7saimeaph-2 requesting resource cpu=250m on Node jec7saimeaph-2
  Apr 15 08:12:45.656: INFO: Pod kube-controller-manager-jec7saimeaph-1 requesting resource cpu=200m on Node jec7saimeaph-1
  Apr 15 08:12:45.657: INFO: Pod kube-controller-manager-jec7saimeaph-2 requesting resource cpu=200m on Node jec7saimeaph-2
  Apr 15 08:12:45.658: INFO: Pod kube-flannel-ds-bxh6k requesting resource cpu=100m on Node jec7saimeaph-2
  Apr 15 08:12:45.659: INFO: Pod kube-flannel-ds-g4c45 requesting resource cpu=100m on Node jec7saimeaph-3
  Apr 15 08:12:45.659: INFO: Pod kube-flannel-ds-mnln7 requesting resource cpu=100m on Node jec7saimeaph-1
  Apr 15 08:12:45.660: INFO: Pod kube-proxy-kq9zs requesting resource cpu=0m on Node jec7saimeaph-2
  Apr 15 08:12:45.660: INFO: Pod kube-proxy-q2x5c requesting resource cpu=0m on Node jec7saimeaph-3
  Apr 15 08:12:45.661: INFO: Pod kube-proxy-rsrrw requesting resource cpu=0m on Node jec7saimeaph-1
  Apr 15 08:12:45.661: INFO: Pod kube-scheduler-jec7saimeaph-1 requesting resource cpu=100m on Node jec7saimeaph-1
  Apr 15 08:12:45.662: INFO: Pod kube-scheduler-jec7saimeaph-2 requesting resource cpu=100m on Node jec7saimeaph-2
  Apr 15 08:12:45.662: INFO: Pod sonobuoy requesting resource cpu=0m on Node jec7saimeaph-3
  Apr 15 08:12:45.663: INFO: Pod sonobuoy-e2e-job-2b6e6deeff5c4ebe requesting resource cpu=0m on Node jec7saimeaph-3
  Apr 15 08:12:45.663: INFO: Pod sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-gngj9 requesting resource cpu=0m on Node jec7saimeaph-3
  Apr 15 08:12:45.664: INFO: Pod sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-kf6jd requesting resource cpu=0m on Node jec7saimeaph-2
  Apr 15 08:12:45.664: INFO: Pod sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-q89p9 requesting resource cpu=0m on Node jec7saimeaph-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/15/24 08:12:45.666
  Apr 15 08:12:45.666: INFO: Creating a pod which consumes cpu=661m on Node jec7saimeaph-1
  Apr 15 08:12:45.689: INFO: Creating a pod which consumes cpu=591m on Node jec7saimeaph-2
  Apr 15 08:12:45.714: INFO: Creating a pod which consumes cpu=980m on Node jec7saimeaph-3
  E0415 08:12:46.447679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:47.447107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/15/24 08:12:47.8
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2d404031-d748-43f9-a308-bcea9cc0c29b.17c665ea68067df8], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4330/filler-pod-2d404031-d748-43f9-a308-bcea9cc0c29b to jec7saimeaph-1] @ 04/15/24 08:12:47.814
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2d404031-d748-43f9-a308-bcea9cc0c29b.17c665ea883054c5], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/15/24 08:12:47.815
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2d404031-d748-43f9-a308-bcea9cc0c29b.17c665ea914fc8eb], Reason = [Created], Message = [Created container filler-pod-2d404031-d748-43f9-a308-bcea9cc0c29b] @ 04/15/24 08:12:47.815
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2d404031-d748-43f9-a308-bcea9cc0c29b.17c665ea94e5e470], Reason = [Started], Message = [Started container filler-pod-2d404031-d748-43f9-a308-bcea9cc0c29b] @ 04/15/24 08:12:47.815
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ae4857c5-8b7e-4fe6-9261-cfefc5c83feb.17c665ea6d4eb78c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4330/filler-pod-ae4857c5-8b7e-4fe6-9261-cfefc5c83feb to jec7saimeaph-3] @ 04/15/24 08:12:47.815
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ae4857c5-8b7e-4fe6-9261-cfefc5c83feb.17c665ea8ddcf433], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/15/24 08:12:47.816
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ae4857c5-8b7e-4fe6-9261-cfefc5c83feb.17c665ea9d285966], Reason = [Created], Message = [Created container filler-pod-ae4857c5-8b7e-4fe6-9261-cfefc5c83feb] @ 04/15/24 08:12:47.816
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ae4857c5-8b7e-4fe6-9261-cfefc5c83feb.17c665ea9f42156a], Reason = [Started], Message = [Started container filler-pod-ae4857c5-8b7e-4fe6-9261-cfefc5c83feb] @ 04/15/24 08:12:47.817
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-afbb4133-43ee-477f-b59f-dcbff5e45c4a.17c665ea6b492182], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4330/filler-pod-afbb4133-43ee-477f-b59f-dcbff5e45c4a to jec7saimeaph-2] @ 04/15/24 08:12:47.817
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-afbb4133-43ee-477f-b59f-dcbff5e45c4a.17c665ea88362909], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/15/24 08:12:47.818
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-afbb4133-43ee-477f-b59f-dcbff5e45c4a.17c665ea99cb58cc], Reason = [Created], Message = [Created container filler-pod-afbb4133-43ee-477f-b59f-dcbff5e45c4a] @ 04/15/24 08:12:47.818
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-afbb4133-43ee-477f-b59f-dcbff5e45c4a.17c665eaa0a8b2be], Reason = [Started], Message = [Started container filler-pod-afbb4133-43ee-477f-b59f-dcbff5e45c4a] @ 04/15/24 08:12:47.819
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17c665eae70d46b9], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 04/15/24 08:12:47.839
  E0415 08:12:48.448014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node jec7saimeaph-1 @ 04/15/24 08:12:48.844
  STEP: verifying the node doesn't have the label node @ 04/15/24 08:12:48.873
  STEP: removing the label node off the node jec7saimeaph-2 @ 04/15/24 08:12:48.883
  STEP: verifying the node doesn't have the label node @ 04/15/24 08:12:48.915
  STEP: removing the label node off the node jec7saimeaph-3 @ 04/15/24 08:12:48.928
  STEP: verifying the node doesn't have the label node @ 04/15/24 08:12:48.963
  Apr 15 08:12:48.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4330" for this suite. @ 04/15/24 08:12:48.996
• [3.696 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 04/15/24 08:12:49.015
  Apr 15 08:12:49.016: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:12:49.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:12:49.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:12:49.076
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:12:49.085
  E0415 08:12:49.448631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:50.448833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:51.448985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:52.449777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:12:53.142
  Apr 15 08:12:53.151: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-a615ba4c-a0f4-435b-934a-053c7006523e container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:12:53.165
  Apr 15 08:12:53.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4743" for this suite. @ 04/15/24 08:12:53.242
• [4.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/15/24 08:12:53.263
  Apr 15 08:12:53.263: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename events @ 04/15/24 08:12:53.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:12:53.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:12:53.3
  STEP: Create set of events @ 04/15/24 08:12:53.306
  STEP: get a list of Events with a label in the current namespace @ 04/15/24 08:12:53.339
  STEP: delete a list of events @ 04/15/24 08:12:53.346
  Apr 15 08:12:53.346: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/15/24 08:12:53.399
  Apr 15 08:12:53.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2697" for this suite. @ 04/15/24 08:12:53.416
• [0.168 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 04/15/24 08:12:53.432
  Apr 15 08:12:53.432: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 08:12:53.434
  E0415 08:12:53.450392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:12:53.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:12:53.469
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/15/24 08:12:53.474
  E0415 08:12:54.450907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:55.451261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:56.451725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:57.452319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:12:57.51
  Apr 15 08:12:57.515: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-271a141d-b187-44f6-b0f3-831b6d62d679 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 08:12:57.526
  Apr 15 08:12:57.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2795" for this suite. @ 04/15/24 08:12:57.572
• [4.155 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 04/15/24 08:12:57.588
  Apr 15 08:12:57.588: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:12:57.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:12:57.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:12:57.635
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-22f6845f-9728-406a-8e7f-6a84e42478f2 @ 04/15/24 08:12:57.65
  STEP: Creating the pod @ 04/15/24 08:12:57.657
  E0415 08:12:58.452621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:12:59.453736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-22f6845f-9728-406a-8e7f-6a84e42478f2 @ 04/15/24 08:12:59.705
  STEP: waiting to observe update in volume @ 04/15/24 08:12:59.716
  E0415 08:13:00.454772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:01.455654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:02.456361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:03.457123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:04.458884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:05.457466      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:06.458137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:07.457932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:08.458316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:09.459247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:10.459141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:11.460089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:12.460405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:13.460617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:14.461156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:15.461377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:16.461682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:17.462392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:18.462704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:19.463597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:20.463910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:21.465052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:22.465926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:23.466106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:24.466303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:25.466986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:26.467244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:27.467468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:28.468463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:29.469378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:30.469700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:31.470574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:32.470849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:33.470909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:34.471163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:35.472042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:36.472240      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:37.472390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:38.473189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:39.474036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:40.474949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:41.475117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:42.475546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:43.476237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:44.476741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:45.476786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:46.477547      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:47.477778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:48.478722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:49.479345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:50.480335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:51.481004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:52.481137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:53.481821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:54.481947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:55.482186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:56.483634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:57.484349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:58.485208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:13:59.485272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:00.485412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:01.485644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:02.485789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:03.486639      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:04.486896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:05.487118      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:06.487272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:07.487439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:08.487920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:09.488035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:10.488293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:11.488501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:12.488883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:13.489660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:14.489955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:15.490134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:16.490908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:17.491322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:18.491778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:19.492084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:20.492900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:21.494260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:22.494381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:14:22.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8120" for this suite. @ 04/15/24 08:14:22.539
• [84.972 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 04/15/24 08:14:22.561
  Apr 15 08:14:22.561: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 08:14:22.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:14:22.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:14:22.639
  Apr 15 08:14:22.659: INFO: Got root ca configmap in namespace "svcaccounts-2487"
  Apr 15 08:14:22.675: INFO: Deleted root ca configmap in namespace "svcaccounts-2487"
  STEP: waiting for a new root ca configmap created @ 04/15/24 08:14:23.176
  Apr 15 08:14:23.183: INFO: Recreated root ca configmap in namespace "svcaccounts-2487"
  Apr 15 08:14:23.194: INFO: Updated root ca configmap in namespace "svcaccounts-2487"
  E0415 08:14:23.494529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 04/15/24 08:14:23.695
  Apr 15 08:14:23.705: INFO: Reconciled root ca configmap in namespace "svcaccounts-2487"
  Apr 15 08:14:23.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2487" for this suite. @ 04/15/24 08:14:23.719
• [1.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/15/24 08:14:23.739
  Apr 15 08:14:23.740: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 08:14:23.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:14:23.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:14:23.786
  Apr 15 08:14:23.845: INFO: Create a RollingUpdate DaemonSet
  Apr 15 08:14:23.861: INFO: Check that daemon pods launch on every node of the cluster
  Apr 15 08:14:23.883: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:14:23.883: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:14:24.495160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:14:24.888: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:14:24.888: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:14:25.496107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:14:25.889: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 08:14:25.889: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Apr 15 08:14:25.889: INFO: Update the DaemonSet to trigger a rollout
  Apr 15 08:14:25.908: INFO: Updating DaemonSet daemon-set
  E0415 08:14:26.496366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:14:26.949: INFO: Roll back the DaemonSet before rollout is complete
  Apr 15 08:14:26.989: INFO: Updating DaemonSet daemon-set
  Apr 15 08:14:26.989: INFO: Make sure DaemonSet rollback is complete
  Apr 15 08:14:26.999: INFO: Wrong image for pod: daemon-set-6hxmc. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Apr 15 08:14:27.000: INFO: Pod daemon-set-6hxmc is not available
  E0415 08:14:27.498658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:28.499742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:29.500786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:30.501019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:31.501135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:32.501411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:14:33.008: INFO: Pod daemon-set-9qqxm is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 08:14:33.053
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-35, will wait for the garbage collector to delete the pods @ 04/15/24 08:14:33.053
  Apr 15 08:14:33.124: INFO: Deleting DaemonSet.extensions daemon-set took: 13.280091ms
  Apr 15 08:14:33.326: INFO: Terminating DaemonSet.extensions daemon-set pods took: 201.830685ms
  E0415 08:14:33.502404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:34.503426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:14:35.035: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:14:35.036: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 08:14:35.041: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"209432"},"items":null}

  Apr 15 08:14:35.046: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"209432"},"items":null}

  Apr 15 08:14:35.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-35" for this suite. @ 04/15/24 08:14:35.086
• [11.387 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 04/15/24 08:14:35.132
  Apr 15 08:14:35.132: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 08:14:35.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:14:35.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:14:35.182
  STEP: Creating Pod @ 04/15/24 08:14:35.19
  E0415 08:14:35.504214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:36.504112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 04/15/24 08:14:37.237
  Apr 15 08:14:37.238: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1688 PodName:pod-sharedvolume-fc8a757f-a2c0-4fca-82d4-9ddec110fbc5 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:14:37.238: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:14:37.241: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:14:37.241: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-1688/pods/pod-sharedvolume-fc8a757f-a2c0-4fca-82d4-9ddec110fbc5/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Apr 15 08:14:37.371: INFO: Exec stderr: ""
  Apr 15 08:14:37.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1688" for this suite. @ 04/15/24 08:14:37.386
• [2.275 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 04/15/24 08:14:37.408
  Apr 15 08:14:37.408: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 08:14:37.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:14:37.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:14:37.469
  STEP: Create a Replicaset @ 04/15/24 08:14:37.483
  STEP: Verify that the required pods have come up. @ 04/15/24 08:14:37.503
  E0415 08:14:37.504137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:14:37.514: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0415 08:14:38.504548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:39.504737      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:40.505565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:41.506490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:42.507284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:14:42.523: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 08:14:42.524
  STEP: Getting /status @ 04/15/24 08:14:42.524
  Apr 15 08:14:42.533: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/15/24 08:14:42.533
  Apr 15 08:14:42.557: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/15/24 08:14:42.557
  Apr 15 08:14:42.562: INFO: Observed &ReplicaSet event: ADDED
  Apr 15 08:14:42.562: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 08:14:42.563: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 08:14:42.563: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 08:14:42.563: INFO: Found replicaset test-rs in namespace replicaset-5401 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 15 08:14:42.563: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/15/24 08:14:42.563
  Apr 15 08:14:42.563: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 15 08:14:42.575: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/15/24 08:14:42.575
  Apr 15 08:14:42.579: INFO: Observed &ReplicaSet event: ADDED
  Apr 15 08:14:42.579: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 08:14:42.580: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 08:14:42.580: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 08:14:42.580: INFO: Observed replicaset test-rs in namespace replicaset-5401 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 08:14:42.581: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 08:14:42.581: INFO: Found replicaset test-rs in namespace replicaset-5401 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Apr 15 08:14:42.581: INFO: Replicaset test-rs has a patched status
  Apr 15 08:14:42.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5401" for this suite. @ 04/15/24 08:14:42.592
• [5.203 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 04/15/24 08:14:42.611
  Apr 15 08:14:42.611: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pv @ 04/15/24 08:14:42.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:14:42.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:14:42.664
  STEP: Creating initial PV and PVC @ 04/15/24 08:14:42.669
  Apr 15 08:14:42.669: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-253" @ 04/15/24 08:14:42.7
  STEP: Listing PVCs in namespace "pv-253" @ 04/15/24 08:14:42.71
  STEP: Reading "pvc-v7x92" Status @ 04/15/24 08:14:42.722
  STEP: Reading "pv-253-8xn6v" Status @ 04/15/24 08:14:42.729
  STEP: Patching "pvc-v7x92" Status @ 04/15/24 08:14:42.744
  STEP: Patching "pv-253-8xn6v" Status @ 04/15/24 08:14:42.758
  STEP: Updating "pvc-v7x92" Status @ 04/15/24 08:14:42.782
  STEP: Updating "pv-253-8xn6v" Status @ 04/15/24 08:14:42.798
  Apr 15 08:14:42.846: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Apr 15 08:14:42.846: INFO: Deleting PersistentVolumeClaim "pvc-v7x92"
  Apr 15 08:14:42.873: INFO: Deleting PersistentVolume "pv-253-8xn6v"
  Apr 15 08:14:42.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-253" for this suite. @ 04/15/24 08:14:42.906
• [0.315 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 04/15/24 08:14:42.931
  Apr 15 08:14:42.931: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 08:14:42.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:14:42.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:14:42.986
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/15/24 08:14:43
  E0415 08:14:43.507526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:44.507727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 04/15/24 08:14:45.086
  STEP: Then the orphan pod is adopted @ 04/15/24 08:14:45.097
  E0415 08:14:45.508619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 04/15/24 08:14:46.119
  Apr 15 08:14:46.125: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/15/24 08:14:46.147
  E0415 08:14:46.509455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:14:47.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2034" for this suite. @ 04/15/24 08:14:47.176
• [4.266 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/15/24 08:14:47.198
  Apr 15 08:14:47.198: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:14:47.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:14:47.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:14:47.246
  STEP: creating pod @ 04/15/24 08:14:47.252
  E0415 08:14:47.510094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:48.510532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:14:49.304: INFO: Pod pod-hostip-fa44697e-8b2b-4850-a2e8-14ff237a4329 has hostIP: 192.168.121.234
  Apr 15 08:14:49.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8798" for this suite. @ 04/15/24 08:14:49.313
• [2.129 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 04/15/24 08:14:49.328
  Apr 15 08:14:49.328: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pod-network-test @ 04/15/24 08:14:49.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:14:49.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:14:49.371
  STEP: Performing setup for networking test in namespace pod-network-test-8777 @ 04/15/24 08:14:49.379
  STEP: creating a selector @ 04/15/24 08:14:49.379
  STEP: Creating the service pods in kubernetes @ 04/15/24 08:14:49.38
  Apr 15 08:14:49.380: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0415 08:14:49.511076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:50.511500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:51.513042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:52.512793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:53.513670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:54.514368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:55.514574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:56.514950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:57.515360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:58.515637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:14:59.515776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:00.516608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:01.516507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:02.517126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:03.517768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:04.517700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:05.517885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:06.518435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:07.518450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:08.519130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:09.519708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:10.521563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:11.521008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:12.521160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:13.521410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:14.521534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:15.521776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:16.522383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:17.522418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:18.523401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:19.523306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:20.524062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:21.524300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/15/24 08:15:21.701
  E0415 08:15:22.524937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:23.525555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:23.791: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 15 08:15:23.792: INFO: Going to poll 10.233.64.149 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 08:15:23.797: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.149:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8777 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:15:23.798: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:15:23.802: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:15:23.802: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8777/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.149%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 08:15:23.978: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 15 08:15:23.978: INFO: Going to poll 10.233.65.117 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 08:15:23.986: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.117:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8777 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:15:23.986: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:15:23.990: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:15:23.991: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8777/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.117%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 08:15:24.142: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 15 08:15:24.142: INFO: Going to poll 10.233.66.129 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 08:15:24.152: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.129:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8777 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:15:24.152: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:15:24.154: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:15:24.154: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-8777/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.129%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 08:15:24.284: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 15 08:15:24.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8777" for this suite. @ 04/15/24 08:15:24.31
• [34.999 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 04/15/24 08:15:24.334
  Apr 15 08:15:24.335: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename aggregator @ 04/15/24 08:15:24.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:15:24.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:15:24.383
  Apr 15 08:15:24.388: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Registering the sample API server. @ 04/15/24 08:15:24.392
  E0415 08:15:24.525192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:25.263: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Apr 15 08:15:25.320: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  E0415 08:15:25.526319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:26.527039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:27.426: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:27.527098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:28.527454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:29.438: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:29.528390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:30.528834      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:31.439: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:31.529803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:32.529485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:33.434: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:33.530396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:34.530664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:35.435: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:35.531422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:36.531530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:37.438: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:37.532175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:38.532798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:39.440: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:39.533746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:40.533925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:41.437: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:41.534963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:42.535383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:43.441: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:43.535744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:44.536034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:45.435: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:45.537093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:46.537263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:47.538966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:47.591: INFO: Waited 135.508069ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/15/24 08:15:47.695
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/15/24 08:15:47.706
  STEP: List APIServices @ 04/15/24 08:15:47.728
  Apr 15 08:15:47.747: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/15/24 08:15:47.747
  Apr 15 08:15:47.778: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/15/24 08:15:47.778
  Apr 15 08:15:47.797: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 47, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/15/24 08:15:47.798
  Apr 15 08:15:47.809: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-04-15 08:15:47 +0000 UTC Passed all checks passed}
  Apr 15 08:15:47.809: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 08:15:47.809: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/15/24 08:15:47.809
  Apr 15 08:15:47.832: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-701296348" @ 04/15/24 08:15:47.832
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/15/24 08:15:47.861
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/15/24 08:15:47.875
  STEP: Patch APIService Status @ 04/15/24 08:15:47.883
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/15/24 08:15:47.898
  Apr 15 08:15:47.909: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-04-15 08:15:47 +0000 UTC Passed all checks passed}
  Apr 15 08:15:47.909: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 08:15:47.909: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Apr 15 08:15:47.909: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 04/15/24 08:15:47.909
  STEP: Confirm that the generated APIService has been deleted @ 04/15/24 08:15:47.933
  Apr 15 08:15:47.933: INFO: Requesting list of APIServices to confirm quantity
  Apr 15 08:15:47.944: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Apr 15 08:15:47.944: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Apr 15 08:15:48.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1369" for this suite. @ 04/15/24 08:15:48.249
• [23.932 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 04/15/24 08:15:48.271
  Apr 15 08:15:48.271: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:15:48.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:15:48.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:15:48.367
  STEP: Setting up server cert @ 04/15/24 08:15:48.446
  E0415 08:15:48.539468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:15:49.169
  STEP: Deploying the webhook pod @ 04/15/24 08:15:49.213
  STEP: Wait for the deployment to be ready @ 04/15/24 08:15:49.242
  Apr 15 08:15:49.255: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0415 08:15:49.540156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:50.540195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:51.279: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:51.540817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:52.540947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:53.287: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:53.542012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:54.542979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:55.288: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:55.543773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:56.544169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:57.288: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:57.545275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:15:58.545395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:15:59.287: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 15, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:15:59.546387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:00.546564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 08:16:01.287
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:16:01.308
  E0415 08:16:01.547729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:16:02.309: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 15 08:16:02.327: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 08:16:02.548460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4544-crds.webhook.example.com via the AdmissionRegistration API @ 04/15/24 08:16:02.853
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/15/24 08:16:02.888
  E0415 08:16:03.549070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:04.549249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:05.549565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:16:05.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4404" for this suite. @ 04/15/24 08:16:05.914
  STEP: Destroying namespace "webhook-markers-2508" for this suite. @ 04/15/24 08:16:05.93
• [17.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/15/24 08:16:05.95
  Apr 15 08:16:05.950: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:16:05.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:05.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:05.994
  Apr 15 08:16:05.999: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: creating the pod @ 04/15/24 08:16:06.002
  STEP: submitting the pod to kubernetes @ 04/15/24 08:16:06.003
  E0415 08:16:06.550536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:07.551189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:16:08.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6412" for this suite. @ 04/15/24 08:16:08.187
• [2.250 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/15/24 08:16:08.201
  Apr 15 08:16:08.201: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename events @ 04/15/24 08:16:08.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:08.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:08.239
  STEP: creating a test event @ 04/15/24 08:16:08.244
  STEP: listing events in all namespaces @ 04/15/24 08:16:08.257
  STEP: listing events in test namespace @ 04/15/24 08:16:08.275
  STEP: listing events with field selection filtering on source @ 04/15/24 08:16:08.282
  STEP: listing events with field selection filtering on reportingController @ 04/15/24 08:16:08.291
  STEP: getting the test event @ 04/15/24 08:16:08.296
  STEP: patching the test event @ 04/15/24 08:16:08.303
  STEP: getting the test event @ 04/15/24 08:16:08.333
  STEP: updating the test event @ 04/15/24 08:16:08.34
  STEP: getting the test event @ 04/15/24 08:16:08.356
  STEP: deleting the test event @ 04/15/24 08:16:08.362
  STEP: listing events in all namespaces @ 04/15/24 08:16:08.381
  STEP: listing events in test namespace @ 04/15/24 08:16:08.404
  Apr 15 08:16:08.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3940" for this suite. @ 04/15/24 08:16:08.417
• [0.230 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 04/15/24 08:16:08.431
  Apr 15 08:16:08.431: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 08:16:08.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:08.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:08.471
  Apr 15 08:16:08.478: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 08:16:08.551585      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:09.552422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/15/24 08:16:10.29
  Apr 15 08:16:10.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 --namespace=crd-publish-openapi-7098 create -f -'
  E0415 08:16:10.552812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:16:10.702: INFO: stderr: ""
  Apr 15 08:16:10.702: INFO: stdout: "e2e-test-crd-publish-openapi-4285-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 15 08:16:10.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 --namespace=crd-publish-openapi-7098 delete e2e-test-crd-publish-openapi-4285-crds test-foo'
  Apr 15 08:16:10.906: INFO: stderr: ""
  Apr 15 08:16:10.906: INFO: stdout: "e2e-test-crd-publish-openapi-4285-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Apr 15 08:16:10.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 --namespace=crd-publish-openapi-7098 apply -f -'
  Apr 15 08:16:11.351: INFO: stderr: ""
  Apr 15 08:16:11.351: INFO: stdout: "e2e-test-crd-publish-openapi-4285-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 15 08:16:11.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 --namespace=crd-publish-openapi-7098 delete e2e-test-crd-publish-openapi-4285-crds test-foo'
  E0415 08:16:11.552921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:16:11.579: INFO: stderr: ""
  Apr 15 08:16:11.579: INFO: stdout: "e2e-test-crd-publish-openapi-4285-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/15/24 08:16:11.579
  Apr 15 08:16:11.580: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 --namespace=crd-publish-openapi-7098 create -f -'
  Apr 15 08:16:11.759: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/15/24 08:16:11.759
  Apr 15 08:16:11.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 --namespace=crd-publish-openapi-7098 create -f -'
  Apr 15 08:16:11.922: INFO: rc: 1
  Apr 15 08:16:11.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 --namespace=crd-publish-openapi-7098 apply -f -'
  Apr 15 08:16:12.087: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/15/24 08:16:12.088
  Apr 15 08:16:12.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 --namespace=crd-publish-openapi-7098 create -f -'
  Apr 15 08:16:12.249: INFO: rc: 1
  Apr 15 08:16:12.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 --namespace=crd-publish-openapi-7098 apply -f -'
  Apr 15 08:16:12.422: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/15/24 08:16:12.423
  Apr 15 08:16:12.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 explain e2e-test-crd-publish-openapi-4285-crds'
  E0415 08:16:12.553340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:16:12.585: INFO: stderr: ""
  Apr 15 08:16:12.585: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4285-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/15/24 08:16:12.586
  Apr 15 08:16:12.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 explain e2e-test-crd-publish-openapi-4285-crds.metadata'
  Apr 15 08:16:12.761: INFO: stderr: ""
  Apr 15 08:16:12.761: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4285-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Apr 15 08:16:12.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 explain e2e-test-crd-publish-openapi-4285-crds.spec'
  Apr 15 08:16:12.912: INFO: stderr: ""
  Apr 15 08:16:12.912: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4285-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Apr 15 08:16:12.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 explain e2e-test-crd-publish-openapi-4285-crds.spec.bars'
  Apr 15 08:16:13.057: INFO: stderr: ""
  Apr 15 08:16:13.057: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4285-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/15/24 08:16:13.057
  Apr 15 08:16:13.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-7098 explain e2e-test-crd-publish-openapi-4285-crds.spec.bars2'
  Apr 15 08:16:13.226: INFO: rc: 1
  E0415 08:16:13.554910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:14.555890      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:16:15.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7098" for this suite. @ 04/15/24 08:16:15.163
• [6.746 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 04/15/24 08:16:15.178
  Apr 15 08:16:15.178: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 08:16:15.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:15.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:15.218
  E0415 08:16:15.556345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:16.556445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:17.557516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:18.558127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:19.559082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:20.559927      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:21.560159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:22.561002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:23.561997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:24.562187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:25.562511      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:26.562653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:27.563202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:28.564317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:29.564804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:30.564949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:31.565099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 04/15/24 08:16:32.232
  E0415 08:16:32.566080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:33.567066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:34.568220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:35.568292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:36.569239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/15/24 08:16:37.239
  STEP: Ensuring resource quota status is calculated @ 04/15/24 08:16:37.253
  E0415 08:16:37.569850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:38.570089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 04/15/24 08:16:39.263
  STEP: Ensuring resource quota status captures configMap creation @ 04/15/24 08:16:39.286
  E0415 08:16:39.571088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:40.571812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 04/15/24 08:16:41.297
  STEP: Ensuring resource quota status released usage @ 04/15/24 08:16:41.316
  E0415 08:16:41.571902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:42.572086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:16:43.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3829" for this suite. @ 04/15/24 08:16:43.335
• [28.174 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 04/15/24 08:16:43.364
  Apr 15 08:16:43.365: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 08:16:43.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:43.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:43.423
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/15/24 08:16:43.429
  E0415 08:16:43.572823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:44.573540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:45.574197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:46.574418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:16:47.478
  Apr 15 08:16:47.486: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-55219d44-5c71-4e72-a6d4-da21087884da container test-container: <nil>
  STEP: delete the pod @ 04/15/24 08:16:47.519
  Apr 15 08:16:47.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 08:16:47.575040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-6254" for this suite. @ 04/15/24 08:16:47.585
• [4.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 04/15/24 08:16:47.606
  Apr 15 08:16:47.606: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:16:47.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:47.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:47.68
  STEP: creating Agnhost RC @ 04/15/24 08:16:47.688
  Apr 15 08:16:47.688: INFO: namespace kubectl-5841
  Apr 15 08:16:47.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5841 create -f -'
  Apr 15 08:16:48.068: INFO: stderr: ""
  Apr 15 08:16:48.069: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/15/24 08:16:48.069
  E0415 08:16:48.575670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:16:49.080: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 08:16:49.080: INFO: Found 0 / 1
  E0415 08:16:49.576668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:16:50.077: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 08:16:50.077: INFO: Found 1 / 1
  Apr 15 08:16:50.077: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 15 08:16:50.083: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 08:16:50.083: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 15 08:16:50.083: INFO: wait on agnhost-primary startup in kubectl-5841 
  Apr 15 08:16:50.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5841 logs agnhost-primary-9sskc agnhost-primary'
  Apr 15 08:16:50.296: INFO: stderr: ""
  Apr 15 08:16:50.296: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 04/15/24 08:16:50.296
  Apr 15 08:16:50.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5841 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Apr 15 08:16:50.515: INFO: stderr: ""
  Apr 15 08:16:50.515: INFO: stdout: "service/rm2 exposed\n"
  Apr 15 08:16:50.535: INFO: Service rm2 in namespace kubectl-5841 found.
  E0415 08:16:50.577199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:51.577886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 04/15/24 08:16:52.556
  Apr 15 08:16:52.556: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5841 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  E0415 08:16:52.578412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:16:52.778: INFO: stderr: ""
  Apr 15 08:16:52.778: INFO: stdout: "service/rm3 exposed\n"
  Apr 15 08:16:52.799: INFO: Service rm3 in namespace kubectl-5841 found.
  E0415 08:16:53.580999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:54.580071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:16:54.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5841" for this suite. @ 04/15/24 08:16:54.838
• [7.254 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/15/24 08:16:54.862
  Apr 15 08:16:54.862: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/15/24 08:16:54.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:54.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:54.925
  STEP: creating a target pod @ 04/15/24 08:16:54.933
  E0415 08:16:55.580543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:56.581094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/15/24 08:16:56.995
  E0415 08:16:57.581199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:16:58.581108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/15/24 08:16:59.078
  Apr 15 08:16:59.078: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4853 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:16:59.079: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:16:59.080: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:16:59.081: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-4853/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 15 08:16:59.268: INFO: Exec stderr: ""
  Apr 15 08:16:59.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4853" for this suite. @ 04/15/24 08:16:59.299
• [4.456 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 04/15/24 08:16:59.32
  Apr 15 08:16:59.320: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 08:16:59.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:59.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:59.364
  STEP: Counting existing ResourceQuota @ 04/15/24 08:16:59.375
  E0415 08:16:59.581293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:00.583205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:01.582503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:02.582667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:03.582778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/15/24 08:17:04.402
  STEP: Ensuring resource quota status is calculated @ 04/15/24 08:17:04.424
  E0415 08:17:04.583402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:05.585630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 04/15/24 08:17:06.432
  STEP: Creating a NodePort Service @ 04/15/24 08:17:06.49
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/15/24 08:17:06.537
  E0415 08:17:06.585028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures service creation @ 04/15/24 08:17:06.599
  E0415 08:17:07.585141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:08.585400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 04/15/24 08:17:08.608
  STEP: Ensuring resource quota status released usage @ 04/15/24 08:17:08.711
  E0415 08:17:09.586087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:10.586512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:17:10.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4838" for this suite. @ 04/15/24 08:17:10.731
• [11.426 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/15/24 08:17:10.747
  Apr 15 08:17:10.747: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:17:10.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:17:10.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:17:10.793
  STEP: Creating projection with secret that has name projected-secret-test-0a811791-c496-48b0-9057-706a6282c21c @ 04/15/24 08:17:10.799
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:17:10.81
  E0415 08:17:11.588501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:12.587093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:13.587283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:14.587398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:17:14.855
  Apr 15 08:17:14.862: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-projected-secrets-7f25a8bd-dc63-4a6a-b732-22a0a5fee341 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:17:14.89
  Apr 15 08:17:14.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1945" for this suite. @ 04/15/24 08:17:14.961
• [4.235 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/15/24 08:17:14.983
  Apr 15 08:17:14.983: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:17:14.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:17:15.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:17:15.026
  STEP: Creating configMap with name configmap-projected-all-test-volume-8eaa0ce5-1824-4143-9d4f-7007726c6360 @ 04/15/24 08:17:15.031
  STEP: Creating secret with name secret-projected-all-test-volume-abfb5e1f-4f3e-4302-9e18-2292d5550ec4 @ 04/15/24 08:17:15.042
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/15/24 08:17:15.052
  E0415 08:17:15.587884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:16.588014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:17:17.133
  Apr 15 08:17:17.141: INFO: Trying to get logs from node jec7saimeaph-3 pod projected-volume-4c927a86-5647-4e6a-9b28-30fcb5fa7595 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:17:17.153
  Apr 15 08:17:17.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3187" for this suite. @ 04/15/24 08:17:17.231
• [2.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 04/15/24 08:17:17.249
  Apr 15 08:17:17.249: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename security-context-test @ 04/15/24 08:17:17.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:17:17.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:17:17.293
  E0415 08:17:17.588133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:18.589245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:19.590160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:20.590948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:17:21.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4839" for this suite. @ 04/15/24 08:17:21.359
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 04/15/24 08:17:21.374
  Apr 15 08:17:21.374: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 08:17:21.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:17:21.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:17:21.438
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/15/24 08:17:21.445
  Apr 15 08:17:21.469: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0415 08:17:21.593444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:22.593956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:23.594573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:24.595469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:25.595945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:17:26.488: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 08:17:26.488
  STEP: getting scale subresource @ 04/15/24 08:17:26.489
  STEP: updating a scale subresource @ 04/15/24 08:17:26.5
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/15/24 08:17:26.517
  STEP: Patch a scale subresource @ 04/15/24 08:17:26.528
  Apr 15 08:17:26.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9278" for this suite. @ 04/15/24 08:17:26.579
  E0415 08:17:26.597788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [5.227 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 04/15/24 08:17:26.602
  Apr 15 08:17:26.602: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 08:17:26.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:17:26.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:17:26.689
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/15/24 08:17:26.697
  E0415 08:17:27.597447      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:28.597905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:29.598204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:30.598476      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:17:30.746
  Apr 15 08:17:30.753: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-47a4781c-571b-4fc5-add6-c8735752c178 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 08:17:30.766
  Apr 15 08:17:30.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-760" for this suite. @ 04/15/24 08:17:30.811
• [4.223 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 04/15/24 08:17:30.827
  Apr 15 08:17:30.827: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:17:30.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:17:30.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:17:30.87
  STEP: Creating a pod to test downward api env vars @ 04/15/24 08:17:30.875
  E0415 08:17:31.598785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:32.599793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:33.599416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:34.600009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:17:34.921
  Apr 15 08:17:34.928: INFO: Trying to get logs from node jec7saimeaph-3 pod downward-api-8c4e7d61-9654-41ed-8b2f-ade65b859ce6 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 08:17:34.948
  Apr 15 08:17:34.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7781" for this suite. @ 04/15/24 08:17:35.003
• [4.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 04/15/24 08:17:35.026
  Apr 15 08:17:35.026: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 08:17:35.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:17:35.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:17:35.083
  STEP: Creating service test in namespace statefulset-2219 @ 04/15/24 08:17:35.092
  STEP: Creating stateful set ss in namespace statefulset-2219 @ 04/15/24 08:17:35.103
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2219 @ 04/15/24 08:17:35.115
  Apr 15 08:17:35.123: INFO: Found 0 stateful pods, waiting for 1
  E0415 08:17:35.600889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:36.601011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:37.601239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:38.601372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:39.601582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:40.601956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:41.603039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:42.604191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:43.604290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:44.604505      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:17:45.128: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/15/24 08:17:45.128
  Apr 15 08:17:45.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-2219 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 08:17:45.463: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:17:45.463: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:17:45.463: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 08:17:45.473: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0415 08:17:45.604941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:46.605111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:47.605357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:48.605551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:49.606762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:50.606986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:51.607663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:52.607580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:53.608184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:54.608629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:17:55.484: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 08:17:55.484: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 15 08:17:55.539: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Apr 15 08:17:55.539: INFO: ss-0  jec7saimeaph-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:35 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:35 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:45 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:45 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:35 +0000 UTC  }]
  Apr 15 08:17:55.540: INFO: 
  Apr 15 08:17:55.540: INFO: StatefulSet ss has not reached scale 3, at 1
  E0415 08:17:55.609005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:17:56.562: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.985650167s
  E0415 08:17:56.609148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:17:57.573: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.963001298s
  E0415 08:17:57.610211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:17:58.602: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.952719187s
  E0415 08:17:58.611032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:17:59.611679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:17:59.613: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.924078053s
  E0415 08:18:00.611846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:00.626: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.912424029s
  E0415 08:18:01.612059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:01.637: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.899440528s
  E0415 08:18:02.612425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:02.649: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.887715532s
  E0415 08:18:03.612475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:03.661: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.876407372s
  E0415 08:18:04.613135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:04.671: INFO: Verifying statefulset ss doesn't scale past 3 for another 863.95582ms
  E0415 08:18:05.613356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2219 @ 04/15/24 08:18:05.672
  Apr 15 08:18:05.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-2219 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 08:18:06.012: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 08:18:06.012: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 08:18:06.012: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 08:18:06.012: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-2219 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 08:18:06.351: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 15 08:18:06.351: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 08:18:06.351: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 08:18:06.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-2219 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0415 08:18:06.613515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:06.744: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 15 08:18:06.744: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 08:18:06.744: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 08:18:06.752: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 08:18:06.752: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 08:18:06.752: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/15/24 08:18:06.752
  Apr 15 08:18:06.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-2219 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 08:18:07.067: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:18:07.067: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:18:07.067: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 08:18:07.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-2219 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 08:18:07.365: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:18:07.365: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:18:07.365: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 08:18:07.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-2219 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0415 08:18:07.613838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:07.629: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:18:07.629: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:18:07.629: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 08:18:07.629: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 15 08:18:07.638: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0415 08:18:08.613996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:09.614307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:10.615008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:11.614936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:12.615133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:13.615372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:14.615578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:15.615895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:16.616727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:17.616938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:17.649: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 08:18:17.650: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 08:18:17.650: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 08:18:17.685: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Apr 15 08:18:17.685: INFO: ss-0  jec7saimeaph-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:35 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:35 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:18:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:18:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:35 +0000 UTC  }]
  Apr 15 08:18:17.685: INFO: ss-1  jec7saimeaph-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:56 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:55 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:18:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:18:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:55 +0000 UTC  }]
  Apr 15 08:18:17.685: INFO: ss-2  jec7saimeaph-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:56 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:55 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:18:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:18:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:55 +0000 UTC  }]
  Apr 15 08:18:17.686: INFO: 
  Apr 15 08:18:17.686: INFO: StatefulSet ss has not reached scale 0, at 3
  E0415 08:18:18.617155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:18.694: INFO: POD   NODE            PHASE      GRACE  CONDITIONS
  Apr 15 08:18:18.694: INFO: ss-1  jec7saimeaph-2  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:18:18 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:55 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:18:07 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:18:07 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:17:55 +0000 UTC  }]
  Apr 15 08:18:18.694: INFO: 
  Apr 15 08:18:18.694: INFO: StatefulSet ss has not reached scale 0, at 1
  E0415 08:18:19.618024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:19.705: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.974576299s
  E0415 08:18:20.619126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:20.713: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.964149313s
  E0415 08:18:21.618975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:21.720: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.955455448s
  E0415 08:18:22.619204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:22.727: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.949080228s
  E0415 08:18:23.619284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:23.736: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.942209653s
  E0415 08:18:24.619521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:24.745: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.932425066s
  E0415 08:18:25.619656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:25.754: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.924177567s
  E0415 08:18:26.621422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:26.763: INFO: Verifying statefulset ss doesn't scale past 0 for another 914.131398ms
  E0415 08:18:27.620053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2219 @ 04/15/24 08:18:27.765
  Apr 15 08:18:27.774: INFO: Scaling statefulset ss to 0
  Apr 15 08:18:27.796: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 08:18:27.805: INFO: Deleting all statefulset in ns statefulset-2219
  Apr 15 08:18:27.817: INFO: Scaling statefulset ss to 0
  Apr 15 08:18:27.841: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 08:18:27.847: INFO: Deleting statefulset ss
  Apr 15 08:18:27.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2219" for this suite. @ 04/15/24 08:18:27.891
• [52.898 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/15/24 08:18:27.926
  Apr 15 08:18:27.926: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename secrets @ 04/15/24 08:18:27.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:27.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:27.992
  STEP: Creating secret with name secret-test-map-bae46c91-80d4-4c12-8845-785b42d774a7 @ 04/15/24 08:18:28.004
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:18:28.024
  E0415 08:18:28.621083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:29.622971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:30.624162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:31.624397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:18:32.087
  Apr 15 08:18:32.094: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-secrets-1f427cc5-1738-4cf1-a2bc-ab6898b2d256 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:18:32.114
  Apr 15 08:18:32.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8292" for this suite. @ 04/15/24 08:18:32.182
• [4.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 04/15/24 08:18:32.206
  Apr 15 08:18:32.206: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:18:32.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:32.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:32.257
  STEP: create deployment with httpd image @ 04/15/24 08:18:32.263
  Apr 15 08:18:32.264: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-1990 create -f -'
  Apr 15 08:18:32.528: INFO: stderr: ""
  Apr 15 08:18:32.529: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/15/24 08:18:32.529
  Apr 15 08:18:32.529: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-1990 diff -f -'
  E0415 08:18:32.624548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:32.874: INFO: rc: 1
  Apr 15 08:18:32.875: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-1990 delete -f -'
  Apr 15 08:18:33.141: INFO: stderr: ""
  Apr 15 08:18:33.141: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Apr 15 08:18:33.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1990" for this suite. @ 04/15/24 08:18:33.16
• [0.982 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 04/15/24 08:18:33.188
  Apr 15 08:18:33.188: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 08:18:33.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:33.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:33.25
  E0415 08:18:33.625334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:34.625951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 04/15/24 08:18:35.322
  Apr 15 08:18:35.333: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6532 pod-service-account-73c5f701-7915-4196-b651-9e4c34e600b4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  E0415 08:18:35.627542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 04/15/24 08:18:35.709
  Apr 15 08:18:35.711: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6532 pod-service-account-73c5f701-7915-4196-b651-9e4c34e600b4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/15/24 08:18:35.995
  Apr 15 08:18:35.995: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6532 pod-service-account-73c5f701-7915-4196-b651-9e4c34e600b4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Apr 15 08:18:36.311: INFO: Got root ca configmap in namespace "svcaccounts-6532"
  Apr 15 08:18:36.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6532" for this suite. @ 04/15/24 08:18:36.325
• [3.153 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 04/15/24 08:18:36.343
  Apr 15 08:18:36.343: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 08:18:36.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:36.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:36.394
  STEP: Creating configMap with name configmap-test-volume-d8a1eb94-3b37-4e23-aeb5-e5694d9dc987 @ 04/15/24 08:18:36.405
  STEP: Creating a pod to test consume configMaps @ 04/15/24 08:18:36.417
  E0415 08:18:36.628612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:37.628499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:38.628504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:39.629304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:18:40.492
  Apr 15 08:18:40.501: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-configmaps-6d9a03c0-56b2-47cc-ac45-3476bf150e73 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 08:18:40.521
  Apr 15 08:18:40.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2656" for this suite. @ 04/15/24 08:18:40.571
• [4.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/15/24 08:18:40.593
  Apr 15 08:18:40.593: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename secrets @ 04/15/24 08:18:40.596
  E0415 08:18:40.628877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:40.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:40.648
  STEP: Creating secret with name secret-test-map-d703ac37-2ae2-4271-9e52-c55a8d34d286 @ 04/15/24 08:18:40.654
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:18:40.662
  E0415 08:18:41.629174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:42.629424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:43.629885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:44.630673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:18:44.711
  Apr 15 08:18:44.730: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-secrets-d97790f3-3342-4f78-9564-a4569821fc83 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:18:44.743
  Apr 15 08:18:44.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1659" for this suite. @ 04/15/24 08:18:44.776
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 04/15/24 08:18:44.794
  Apr 15 08:18:44.794: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 08:18:44.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:44.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:44.839
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/15/24 08:18:44.846
  E0415 08:18:45.631127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:46.631609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:47.632083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:48.632429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:18:48.892
  Apr 15 08:18:48.900: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-c45e6ee8-bf5f-44b0-a10e-5a268f6e139b container test-container: <nil>
  STEP: delete the pod @ 04/15/24 08:18:48.915
  Apr 15 08:18:48.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3397" for this suite. @ 04/15/24 08:18:48.959
• [4.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 04/15/24 08:18:48.972
  Apr 15 08:18:48.972: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 08:18:48.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:49.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:49.011
  STEP: creating an Endpoint @ 04/15/24 08:18:49.025
  STEP: waiting for available Endpoint @ 04/15/24 08:18:49.034
  STEP: listing all Endpoints @ 04/15/24 08:18:49.037
  STEP: updating the Endpoint @ 04/15/24 08:18:49.044
  STEP: fetching the Endpoint @ 04/15/24 08:18:49.056
  STEP: patching the Endpoint @ 04/15/24 08:18:49.062
  STEP: fetching the Endpoint @ 04/15/24 08:18:49.085
  STEP: deleting the Endpoint by Collection @ 04/15/24 08:18:49.092
  STEP: waiting for Endpoint deletion @ 04/15/24 08:18:49.108
  STEP: fetching the Endpoint @ 04/15/24 08:18:49.112
  Apr 15 08:18:49.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5977" for this suite. @ 04/15/24 08:18:49.145
• [0.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 04/15/24 08:18:49.168
  Apr 15 08:18:49.168: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 08:18:49.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:49.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:49.236
  STEP: Creating pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090 @ 04/15/24 08:18:49.243
  E0415 08:18:49.633387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:50.634050      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 08:18:51.279
  Apr 15 08:18:51.286: INFO: Initial restart count of pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 is 0
  Apr 15 08:18:51.295: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:18:51.634297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:52.635035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:53.306: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:18:53.635934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:54.636389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:55.314: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:18:55.637089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:56.638155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:57.335: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:18:57.638406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:18:58.638233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:18:59.345: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:18:59.638818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:00.639048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:01.353: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:01.639971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:02.640195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:03.360: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:03.640400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:04.640962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:05.369: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:05.641150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:06.641318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:07.393: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:07.641609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:08.642057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:09.403: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:09.643171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:10.643339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:11.413: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:11.643761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:12.644428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:13.428: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:13.644898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:14.645322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:15.437: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:15.646148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:16.647426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:17.447: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:17.647527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:18.648421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:19.458: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:19.648936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:20.649306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:21.471: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:21.649515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:22.650369      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:23.481: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:23.651572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:24.652381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:25.490: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:25.652291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:26.652929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:27.500: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:27.653936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:28.654098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:29.510: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:29.653990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:30.654138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:31.520: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:31.654581      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:32.655550      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:33.535: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:33.656002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:34.656804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:35.544: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:35.656561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:36.656534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:37.555: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:37.657314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:38.658090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:39.575: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:39.658701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:40.659726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:41.583: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:41.660649      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:42.660992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:43.596: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:43.662080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:44.662067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:45.605: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:45.663200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:46.663414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:47.613: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:47.664727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:48.664980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:49.627: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:49.665640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:50.665898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:51.636: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:51.666042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:52.666410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:53.646: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:53.667197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:54.668082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:55.656: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  E0415 08:19:55.668787      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:56.668886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:57.665: INFO: Get pod test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 in namespace container-probe-4090
  Apr 15 08:19:57.665: INFO: Restart count of pod container-probe-4090/test-grpc-b36d041b-e081-4c4c-b15b-216a4e275933 is now 1 (1m6.377958999s elapsed)
  STEP: deleting the pod @ 04/15/24 08:19:57.665
  E0415 08:19:57.669162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:19:57.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4090" for this suite. @ 04/15/24 08:19:57.718
• [68.581 seconds]
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 04/15/24 08:19:57.75
  Apr 15 08:19:57.750: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 08:19:57.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:57.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:57.833
  STEP: Creating configMap that has name configmap-test-emptyKey-da0977f8-329d-4f1e-ab0e-0bf632fbf475 @ 04/15/24 08:19:57.84
  Apr 15 08:19:57.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9834" for this suite. @ 04/15/24 08:19:57.861
• [0.132 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 04/15/24 08:19:57.883
  Apr 15 08:19:57.883: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 08:19:57.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:57.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:57.96
  STEP: Creating a ResourceQuota @ 04/15/24 08:19:57.968
  STEP: Getting a ResourceQuota @ 04/15/24 08:19:57.981
  STEP: Updating a ResourceQuota @ 04/15/24 08:19:57.989
  STEP: Verifying a ResourceQuota was modified @ 04/15/24 08:19:58.012
  STEP: Deleting a ResourceQuota @ 04/15/24 08:19:58.023
  STEP: Verifying the deleted ResourceQuota @ 04/15/24 08:19:58.041
  Apr 15 08:19:58.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8636" for this suite. @ 04/15/24 08:19:58.069
• [0.204 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/15/24 08:19:58.087
  Apr 15 08:19:58.087: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename watch @ 04/15/24 08:19:58.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:58.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:58.138
  STEP: creating a new configmap @ 04/15/24 08:19:58.145
  STEP: modifying the configmap once @ 04/15/24 08:19:58.159
  STEP: modifying the configmap a second time @ 04/15/24 08:19:58.181
  STEP: deleting the configmap @ 04/15/24 08:19:58.202
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/15/24 08:19:58.218
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/15/24 08:19:58.221
  Apr 15 08:19:58.222: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3959  68868d16-eba1-4666-8ea7-6896210b4524 211221 0 2024-04-15 08:19:58 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-15 08:19:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:19:58.223: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3959  68868d16-eba1-4666-8ea7-6896210b4524 211223 0 2024-04-15 08:19:58 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-15 08:19:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:19:58.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3959" for this suite. @ 04/15/24 08:19:58.242
• [0.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 04/15/24 08:19:58.278
  Apr 15 08:19:58.278: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 08:19:58.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:58.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:58.337
  STEP: Creating pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467 @ 04/15/24 08:19:58.347
  E0415 08:19:58.670322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:19:59.671114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 08:20:00.411
  Apr 15 08:20:00.420: INFO: Initial restart count of pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 is 0
  Apr 15 08:20:00.428: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:00.672966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:01.672686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:02.436: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:02.673539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:03.673808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:04.445: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:04.674940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:05.675216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:06.470: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:06.675530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:07.675999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:08.478: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:08.676712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:09.677779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:10.511: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:10.678221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:11.678968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:12.521: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:12.680165      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:13.680878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:14.529: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:14.683035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:15.684274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:16.539: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:16.684545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:17.684753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:18.549: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:18.685636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:19.685976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:20.557: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:20.687034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:21.687910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:22.568: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:22.688611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:23.689431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:24.577: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:24.689884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:25.690336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:26.586: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:26.691365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:27.692341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:28.595: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:28.692420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:29.692588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:30.606: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:30.693445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:31.693524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:32.615: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:32.693964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:33.694172      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:34.633: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:34.695255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:35.695431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:36.641: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:36.695635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:37.696114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:38.650: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:38.697368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:39.697415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:40.659: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:40.697551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:41.698123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:42.671: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:42.698877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:43.699037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:44.681: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:44.699740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:45.699966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:46.692: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:46.700410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:47.700780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:48.701901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:48.703: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:49.702321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:50.703468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:50.714: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:51.703454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:52.704035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:52.725: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:53.704451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:54.705338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:54.736: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:55.705353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:56.705744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:56.747: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:57.706031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:20:58.707485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:20:58.769: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:20:59.707956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:00.708021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:00.784: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:01.708055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:02.710436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:02.799: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:03.709363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:04.709995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:04.816: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:05.710547      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:06.710940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:06.827: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:07.711509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:08.711991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:08.837: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:09.712376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:10.712532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:10.849: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:11.713361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:12.713695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:12.859: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:13.713633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:14.715498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:14.872: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:15.715070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:16.715154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:16.881: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:17.716318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:18.716395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:18.892: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:19.716887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:20.718235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:20.913: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:21.718295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:22.719187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:22.923: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:23.719656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:24.720200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:24.933: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:25.720792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:26.721271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:26.943: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:27.721641      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:28.722564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:28.957: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:29.722894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:30.723472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:30.970: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:31.723768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:32.724247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:32.981: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:33.724137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:34.724184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:34.995: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:35.724631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:36.725058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:37.005: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:37.725263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:38.726083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:39.016: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:39.726233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:40.727569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:41.027: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:41.728186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:42.728619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:43.037: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:43.728480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:44.729227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:45.047: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:45.729427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:46.729619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:47.055: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:47.730539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:48.731054      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:49.066: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:49.731548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:50.731725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:51.078: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:51.732036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:52.732879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:53.089: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:53.733128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:54.733520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:55.102: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:55.733640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:56.733891      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:57.114: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:57.734302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:21:58.734334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:21:59.137: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:21:59.734869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:00.734868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:01.153: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:01.735224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:02.736199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:03.168: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:03.736386      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:04.736780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:05.243: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:05.737700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:06.737690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:07.252: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:07.738021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:08.739017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:09.260: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:09.740003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:10.740684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:11.293: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:11.741093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:12.742181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:13.303: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:13.743060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:14.743072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:15.315: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:15.743675      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:16.744061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:17.323: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:17.745018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:18.746098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:19.331: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:19.747252      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:20.748172      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:21.341: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:21.749369      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:22.749524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:23.350: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:23.750338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:24.750692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:25.359: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:25.750961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:26.750928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:27.371: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:27.752064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:28.752893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:29.392: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:29.753734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:30.754117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:31.401: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:31.754968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:32.755639      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:33.409: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:33.756554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:34.757551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:35.419: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:35.757741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:36.758046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:37.426: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:37.758185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:38.759164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:39.441: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:39.760425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:40.760476      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:41.454: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:41.763076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:42.763258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:43.462: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:43.764186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:44.764378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:45.473: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:45.765401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:46.765761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:47.481: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:47.766668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:48.767454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:49.489: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:49.768259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:50.768449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:51.501: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:51.769382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:52.769677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:53.510: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:53.770527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:54.770545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:55.520: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:55.771374      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:56.771683      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:57.529: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:57.772105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:22:58.774025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:22:59.538: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:22:59.774086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:00.774812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:01.548: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:01.775032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:02.775196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:03.561: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:03.775746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:04.776814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:05.578: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:05.776789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:06.777077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:07.587: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:07.777629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:08.778301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:09.602: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:09.778988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:10.778800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:11.614: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:11.779812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:12.779992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:13.633: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:13.779980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:14.780319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:15.641: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:15.781523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:16.782070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:17.651: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:17.782700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:18.783631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:19.661: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:19.784233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:20.785043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:21.670: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:21.786288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:22.786523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:23.678: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:23.787490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:24.788157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:25.686: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:25.788673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:26.789270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:27.696: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:27.790389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:28.791114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:29.706: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:29.791416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:30.791769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:31.715: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:31.792301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:32.793089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:33.725: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:33.793968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:34.798815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:35.734: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:35.796686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:36.797876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:37.743: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:37.799003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:38.801129      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:39.752: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:39.801181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:40.801519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:41.761: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:41.802301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:42.802878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:43.771: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:43.803696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:44.803826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:45.780: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:45.804728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:46.804863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:47.788: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:47.805164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:48.805818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:49.796: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:49.806526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:50.806999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:51.805: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:51.806926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:52.807302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:53.807698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:53.813: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:54.807844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:55.808836      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:55.822: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:56.809247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:57.809381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:57.831: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:23:58.810044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:23:59.811111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:23:59.838: INFO: Get pod test-grpc-b4644f61-2598-4d3b-b1ed-9f7c4b76fa30 in namespace container-probe-9467
  E0415 08:24:00.811346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:01.811541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/15/24 08:24:01.839
  Apr 15 08:24:01.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9467" for this suite. @ 04/15/24 08:24:01.89
• [243.658 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 04/15/24 08:24:01.937
  Apr 15 08:24:01.937: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 08:24:01.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:24:01.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:24:01.997
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1919 @ 04/15/24 08:24:02.003
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/15/24 08:24:02.029
  STEP: creating service externalsvc in namespace services-1919 @ 04/15/24 08:24:02.03
  STEP: creating replication controller externalsvc in namespace services-1919 @ 04/15/24 08:24:02.084
  I0415 08:24:02.109731      14 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1919, replica count: 2
  E0415 08:24:02.811776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:03.812613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:04.813535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 08:24:05.163484      14 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/15/24 08:24:05.171
  Apr 15 08:24:05.233: INFO: Creating new exec pod
  E0415 08:24:05.814485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:06.815063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:24:07.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-1919 exec execpodzp7w6 -- /bin/sh -x -c nslookup nodeport-service.services-1919.svc.cluster.local'
  Apr 15 08:24:07.788: INFO: stderr: "+ nslookup nodeport-service.services-1919.svc.cluster.local\n"
  Apr 15 08:24:07.788: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-1919.svc.cluster.local\tcanonical name = externalsvc.services-1919.svc.cluster.local.\nName:\texternalsvc.services-1919.svc.cluster.local\nAddress: 10.233.11.5\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1919, will wait for the garbage collector to delete the pods @ 04/15/24 08:24:07.788
  E0415 08:24:07.815026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:24:07.862: INFO: Deleting ReplicationController externalsvc took: 15.409496ms
  Apr 15 08:24:07.962: INFO: Terminating ReplicationController externalsvc pods took: 100.607261ms
  E0415 08:24:08.815582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:09.815780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:10.816790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:24:11.417: INFO: Cleaning up the NodePort to ExternalName test service
  Apr 15 08:24:11.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1919" for this suite. @ 04/15/24 08:24:11.464
• [9.541 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/15/24 08:24:11.481
  Apr 15 08:24:11.481: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename secrets @ 04/15/24 08:24:11.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:24:11.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:24:11.529
  STEP: Creating secret with name s-test-opt-del-d179cfc8-0145-4749-838e-1dc1f6935367 @ 04/15/24 08:24:11.549
  STEP: Creating secret with name s-test-opt-upd-93964256-61f5-4495-857a-68140836fd1b @ 04/15/24 08:24:11.563
  STEP: Creating the pod @ 04/15/24 08:24:11.577
  E0415 08:24:11.817981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:12.818870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:13.819812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:14.820345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-d179cfc8-0145-4749-838e-1dc1f6935367 @ 04/15/24 08:24:15.725
  STEP: Updating secret s-test-opt-upd-93964256-61f5-4495-857a-68140836fd1b @ 04/15/24 08:24:15.74
  STEP: Creating secret with name s-test-opt-create-562ab667-526f-4dc1-be09-63a1881ff712 @ 04/15/24 08:24:15.749
  STEP: waiting to observe update in volume @ 04/15/24 08:24:15.76
  E0415 08:24:15.820685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:16.820777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:17.821765      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:18.821907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:19.822563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:20.823275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:21.824162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:22.824398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:23.824827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:24.825141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:25.825175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:26.826088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:27.826379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:28.827085      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:29.828186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:30.828264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:31.829128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:32.829671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:33.830578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:34.830759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:35.831377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:36.832182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:37.832457      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:38.832978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:39.833320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:40.833724      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:41.834179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:42.834769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:43.834937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:44.834885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:45.835192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:46.838056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:47.837129      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:48.837061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:49.837619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:50.837983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:51.837984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:52.838782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:53.839131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:54.841346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:55.842148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:56.841560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:57.842580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:58.843060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:24:59.850373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:00.844858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:01.844162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:02.844963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:03.844800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:04.845177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:05.845542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:06.845708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:07.845785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:08.846944      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:09.847107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:10.848384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:11.848551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:12.848619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:13.848987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:14.849412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:15.850403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:16.851621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:17.852250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:18.853322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:19.854043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:20.854831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:21.855503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:22.855678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:23.855902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:24.856491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:25.856656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:26.856954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:27.857112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:28.857584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:29.858230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:30.858532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:31.859616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:32.860689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:33.860852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:34.861935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:35.862817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:36.864146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:37.864466      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:38.865073      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:39.865236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:40.866412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:41.866659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:25:42.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8984" for this suite. @ 04/15/24 08:25:42.798
• [91.331 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 04/15/24 08:25:42.814
  Apr 15 08:25:42.814: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 08:25:42.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:25:42.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:25:42.861
  STEP: Creating a ResourceQuota with terminating scope @ 04/15/24 08:25:42.866
  E0415 08:25:42.866857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring ResourceQuota status is calculated @ 04/15/24 08:25:42.876
  E0415 08:25:43.867185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:44.867428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 04/15/24 08:25:44.884
  STEP: Ensuring ResourceQuota status is calculated @ 04/15/24 08:25:44.893
  E0415 08:25:45.867502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:46.867720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 04/15/24 08:25:46.901
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/15/24 08:25:46.935
  E0415 08:25:47.867941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:48.868832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/15/24 08:25:48.947
  E0415 08:25:49.868987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:50.869190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/15/24 08:25:50.954
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 08:25:50.979
  E0415 08:25:51.869568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:52.869890      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 04/15/24 08:25:52.992
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/15/24 08:25:53.027
  E0415 08:25:53.871023      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:54.871920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/15/24 08:25:55.039
  E0415 08:25:55.872291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:56.872527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/15/24 08:25:57.046
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 08:25:57.075
  E0415 08:25:57.873738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:25:58.874220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:25:59.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-619" for this suite. @ 04/15/24 08:25:59.107
• [16.305 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/15/24 08:25:59.119
  Apr 15 08:25:59.119: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename subpath @ 04/15/24 08:25:59.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:25:59.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:25:59.184
  STEP: Setting up data @ 04/15/24 08:25:59.189
  STEP: Creating pod pod-subpath-test-projected-2kbn @ 04/15/24 08:25:59.206
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 08:25:59.206
  E0415 08:25:59.875127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:00.875493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:01.875827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:02.875987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:03.876672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:04.876664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:05.877439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:06.878749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:07.879568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:08.879779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:09.879960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:10.880211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:11.880495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:12.880620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:13.880999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:14.881333      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:15.882371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:16.882246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:17.882451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:18.883717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:19.884723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:20.885167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:21.885334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:22.886375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:26:23.364
  Apr 15 08:26:23.368: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-subpath-test-projected-2kbn container test-container-subpath-projected-2kbn: <nil>
  STEP: delete the pod @ 04/15/24 08:26:23.388
  STEP: Deleting pod pod-subpath-test-projected-2kbn @ 04/15/24 08:26:23.417
  Apr 15 08:26:23.417: INFO: Deleting pod "pod-subpath-test-projected-2kbn" in namespace "subpath-1287"
  Apr 15 08:26:23.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1287" for this suite. @ 04/15/24 08:26:23.433
• [24.328 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 04/15/24 08:26:23.448
  Apr 15 08:26:23.448: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:26:23.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:26:23.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:26:23.492
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:26:23.499
  E0415 08:26:23.886505      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:24.887657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:25.888754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:26.889700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:26:27.55
  Apr 15 08:26:27.558: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-75d93c7c-7fb6-452e-b6a8-8f72cb703980 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:26:27.575
  Apr 15 08:26:27.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2637" for this suite. @ 04/15/24 08:26:27.63
• [4.197 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/15/24 08:26:27.648
  Apr 15 08:26:27.648: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename watch @ 04/15/24 08:26:27.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:26:27.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:26:27.696
  STEP: getting a starting resourceVersion @ 04/15/24 08:26:27.702
  STEP: starting a background goroutine to produce watch events @ 04/15/24 08:26:27.709
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/15/24 08:26:27.71
  E0415 08:26:27.890444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:28.891569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:29.892577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:26:30.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5235" for this suite. @ 04/15/24 08:26:30.515
• [2.925 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 04/15/24 08:26:30.575
  Apr 15 08:26:30.575: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename security-context-test @ 04/15/24 08:26:30.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:26:30.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:26:30.629
  E0415 08:26:30.892870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:31.893717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:32.894164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:33.895228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:26:34.700: INFO: Got logs for pod "busybox-privileged-false-cd9eecf8-4fc3-4a6d-aafa-b8b026a4f18b": "ip: RTNETLINK answers: Operation not permitted\n"
  Apr 15 08:26:34.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8370" for this suite. @ 04/15/24 08:26:34.716
• [4.155 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 04/15/24 08:26:34.731
  Apr 15 08:26:34.731: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 08:26:34.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:26:34.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:26:34.772
  STEP: creating service in namespace services-7918 @ 04/15/24 08:26:34.782
  STEP: creating service affinity-nodeport in namespace services-7918 @ 04/15/24 08:26:34.783
  STEP: creating replication controller affinity-nodeport in namespace services-7918 @ 04/15/24 08:26:34.819
  I0415 08:26:34.832842      14 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-7918, replica count: 3
  E0415 08:26:34.895502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:35.895463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:36.896363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 08:26:37.884397      14 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0415 08:26:37.897624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:26:37.934: INFO: Creating new exec pod
  E0415 08:26:38.898702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:39.898959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:40.899087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:26:41.000: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7918 exec execpod-affinity97h8b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Apr 15 08:26:41.484: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Apr 15 08:26:41.484: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:26:41.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7918 exec execpod-affinity97h8b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.224 80'
  Apr 15 08:26:41.867: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.54.224 80\nConnection to 10.233.54.224 80 port [tcp/http] succeeded!\n"
  Apr 15 08:26:41.867: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:26:41.868: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7918 exec execpod-affinity97h8b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.90 30814'
  E0415 08:26:41.900243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:26:42.213: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.90 30814\nConnection to 192.168.121.90 30814 port [tcp/*] succeeded!\n"
  Apr 15 08:26:42.213: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:26:42.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7918 exec execpod-affinity97h8b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.146 30814'
  Apr 15 08:26:42.534: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.146 30814\nConnection to 192.168.121.146 30814 port [tcp/*] succeeded!\n"
  Apr 15 08:26:42.534: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:26:42.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7918 exec execpod-affinity97h8b -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.146:30814/ ; done'
  E0415 08:26:42.900886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:26:43.078: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30814/\n"
  Apr 15 08:26:43.078: INFO: stdout: "\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk\naffinity-nodeport-2rbbk"
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.078: INFO: Received response from host: affinity-nodeport-2rbbk
  Apr 15 08:26:43.079: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-7918, will wait for the garbage collector to delete the pods @ 04/15/24 08:26:43.131
  Apr 15 08:26:43.264: INFO: Deleting ReplicationController affinity-nodeport took: 15.471428ms
  Apr 15 08:26:43.465: INFO: Terminating ReplicationController affinity-nodeport pods took: 201.186527ms
  E0415 08:26:43.901584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:44.902019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:45.903212      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:46.904479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:26:46.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7918" for this suite. @ 04/15/24 08:26:46.942
• [12.226 seconds]
------------------------------
S
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 04/15/24 08:26:46.96
  Apr 15 08:26:46.960: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename lease-test @ 04/15/24 08:26:46.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:26:47.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:26:47.022
  Apr 15 08:26:47.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1132" for this suite. @ 04/15/24 08:26:47.17
• [0.222 seconds]
------------------------------
SSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/15/24 08:26:47.183
  Apr 15 08:26:47.183: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename conformance-tests @ 04/15/24 08:26:47.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:26:47.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:26:47.229
  STEP: Getting node addresses @ 04/15/24 08:26:47.233
  Apr 15 08:26:47.234: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Apr 15 08:26:47.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-441" for this suite. @ 04/15/24 08:26:47.257
• [0.084 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/15/24 08:26:47.268
  Apr 15 08:26:47.268: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename subjectreview @ 04/15/24 08:26:47.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:26:47.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:26:47.308
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8563" @ 04/15/24 08:26:47.313
  Apr 15 08:26:47.323: INFO: saUsername: "system:serviceaccount:subjectreview-8563:e2e"
  Apr 15 08:26:47.323: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8563"}
  Apr 15 08:26:47.323: INFO: saUID: "b3823391-b311-4160-aa2e-c4155b3707f1"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8563:e2e" @ 04/15/24 08:26:47.324
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8563:e2e" @ 04/15/24 08:26:47.325
  Apr 15 08:26:47.328: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8563:e2e" api 'list' configmaps in "subjectreview-8563" namespace @ 04/15/24 08:26:47.328
  Apr 15 08:26:47.331: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8563:e2e" @ 04/15/24 08:26:47.331
  Apr 15 08:26:47.334: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Apr 15 08:26:47.335: INFO: LocalSubjectAccessReview has been verified
  Apr 15 08:26:47.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8563" for this suite. @ 04/15/24 08:26:47.346
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 04/15/24 08:26:47.362
  Apr 15 08:26:47.362: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/15/24 08:26:47.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:26:47.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:26:47.408
  STEP: create the container to handle the HTTPGet hook request. @ 04/15/24 08:26:47.427
  E0415 08:26:47.904087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:48.904939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/15/24 08:26:49.472
  E0415 08:26:49.905222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:50.906292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/15/24 08:26:51.517
  E0415 08:26:51.907980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:52.906822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/15/24 08:26:53.565
  Apr 15 08:26:53.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-623" for this suite. @ 04/15/24 08:26:53.644
• [6.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 04/15/24 08:26:53.675
  Apr 15 08:26:53.675: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:26:53.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:26:53.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:26:53.745
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:26:53.754
  E0415 08:26:53.907347      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:54.907510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:55.908221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:56.909326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:26:57.812
  Apr 15 08:26:57.820: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-53117f13-9091-4810-850e-07063fd96a38 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:26:57.84
  Apr 15 08:26:57.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9706" for this suite. @ 04/15/24 08:26:57.885
• [4.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 04/15/24 08:26:57.9
  Apr 15 08:26:57.900: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename security-context-test @ 04/15/24 08:26:57.903
  E0415 08:26:57.909741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:26:57.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:26:57.95
  E0415 08:26:58.910045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:26:59.910261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:00.910558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:01.910853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:27:02.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7757" for this suite. @ 04/15/24 08:27:02.046
• [4.163 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 04/15/24 08:27:02.067
  Apr 15 08:27:02.068: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 08:27:02.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:27:02.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:27:02.111
  STEP: creating service in namespace services-8602 @ 04/15/24 08:27:02.117
  STEP: creating service affinity-nodeport-transition in namespace services-8602 @ 04/15/24 08:27:02.117
  STEP: creating replication controller affinity-nodeport-transition in namespace services-8602 @ 04/15/24 08:27:02.15
  I0415 08:27:02.176226      14 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-8602, replica count: 3
  E0415 08:27:02.911188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:03.911979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:04.912307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 08:27:05.228679      14 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 08:27:05.263: INFO: Creating new exec pod
  E0415 08:27:05.912812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:06.912994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:07.912964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:27:08.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-8602 exec execpod-affinity5mrlj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Apr 15 08:27:08.705: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Apr 15 08:27:08.705: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:27:08.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-8602 exec execpod-affinity5mrlj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.49.51 80'
  E0415 08:27:08.914818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:27:09.002: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.49.51 80\nConnection to 10.233.49.51 80 port [tcp/http] succeeded!\n"
  Apr 15 08:27:09.002: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:27:09.002: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-8602 exec execpod-affinity5mrlj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.234 30245'
  Apr 15 08:27:09.279: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.234 30245\nConnection to 192.168.121.234 30245 port [tcp/*] succeeded!\n"
  Apr 15 08:27:09.279: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:27:09.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-8602 exec execpod-affinity5mrlj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.90 30245'
  Apr 15 08:27:09.608: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.90 30245\nConnection to 192.168.121.90 30245 port [tcp/*] succeeded!\n"
  Apr 15 08:27:09.608: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:27:09.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-8602 exec execpod-affinity5mrlj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.146:30245/ ; done'
  E0415 08:27:09.914514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:27:10.229: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n"
  Apr 15 08:27:10.229: INFO: stdout: "\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-rlxjz\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-p8tjd\naffinity-nodeport-transition-p8tjd\naffinity-nodeport-transition-rlxjz\naffinity-nodeport-transition-rlxjz\naffinity-nodeport-transition-rlxjz\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-rlxjz\naffinity-nodeport-transition-p8tjd\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-rlxjz\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-p8tjd"
  Apr 15 08:27:10.229: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.229: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.229: INFO: Received response from host: affinity-nodeport-transition-rlxjz
  Apr 15 08:27:10.229: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.229: INFO: Received response from host: affinity-nodeport-transition-p8tjd
  Apr 15 08:27:10.230: INFO: Received response from host: affinity-nodeport-transition-p8tjd
  Apr 15 08:27:10.230: INFO: Received response from host: affinity-nodeport-transition-rlxjz
  Apr 15 08:27:10.230: INFO: Received response from host: affinity-nodeport-transition-rlxjz
  Apr 15 08:27:10.230: INFO: Received response from host: affinity-nodeport-transition-rlxjz
  Apr 15 08:27:10.230: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.230: INFO: Received response from host: affinity-nodeport-transition-rlxjz
  Apr 15 08:27:10.230: INFO: Received response from host: affinity-nodeport-transition-p8tjd
  Apr 15 08:27:10.230: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.230: INFO: Received response from host: affinity-nodeport-transition-rlxjz
  Apr 15 08:27:10.231: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.231: INFO: Received response from host: affinity-nodeport-transition-p8tjd
  Apr 15 08:27:10.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-8602 exec execpod-affinity5mrlj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.146:30245/ ; done'
  Apr 15 08:27:10.790: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.146:30245/\n"
  Apr 15 08:27:10.790: INFO: stdout: "\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b\naffinity-nodeport-transition-6jh9b"
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Received response from host: affinity-nodeport-transition-6jh9b
  Apr 15 08:27:10.790: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-8602, will wait for the garbage collector to delete the pods @ 04/15/24 08:27:10.812
  Apr 15 08:27:10.895: INFO: Deleting ReplicationController affinity-nodeport-transition took: 21.296337ms
  E0415 08:27:10.915387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:27:10.996: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.88425ms
  E0415 08:27:11.916346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:12.917409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:13.917767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:27:14.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8602" for this suite. @ 04/15/24 08:27:14.086
• [12.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/15/24 08:27:14.106
  Apr 15 08:27:14.106: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 08:27:14.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:27:14.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:27:14.16
  STEP: Creating a ForbidConcurrent cronjob @ 04/15/24 08:27:14.167
  STEP: Ensuring a job is scheduled @ 04/15/24 08:27:14.18
  E0415 08:27:14.918689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:15.919427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:16.919756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:17.919936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:18.920081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:19.920753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:20.920968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:21.920921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:22.920861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:23.921996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:24.923026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:25.923576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:26.924696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:27.925377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:28.926422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:29.926540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:30.927002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:31.927596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:32.928034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:33.928980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:34.928793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:35.931362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:36.929879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:37.930259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:38.931440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:39.931763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:40.932482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:41.932845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:42.933120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:43.933258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:44.933471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:45.934543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:46.934884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:47.935074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:48.935415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:49.936043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:50.936349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:51.936790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:52.940341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:53.941540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:54.941733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:55.943111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:56.943192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:57.943895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:58.943975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:27:59.944339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/15/24 08:28:00.191
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/15/24 08:28:00.199
  STEP: Ensuring no more jobs are scheduled @ 04/15/24 08:28:00.209
  E0415 08:28:00.945298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:01.945424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:02.945652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:03.946769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:04.946930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:05.947446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:06.948443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:07.948570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:08.949149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:09.949346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:10.950181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:11.950686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:12.950698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:13.950924      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:14.951467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:15.952253      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:16.952624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:17.953742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:18.953839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:19.954055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:20.955128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:21.955314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:22.956281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:23.956412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:24.957638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:25.958535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:26.959011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:27.959900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:28.960380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:29.960704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:30.961515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:31.961925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:32.962411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:33.962574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:34.963603      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:35.965251      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:36.965423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:37.965731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:38.965721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:39.966210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:40.966063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:41.966865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:42.967105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:43.967435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:44.967517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:45.968304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:46.969066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:47.969743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:48.970490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:49.970362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:50.970814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:51.973433      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:52.972401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:53.972847      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:54.972855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:55.973472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:56.973460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:57.974028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:58.974166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:28:59.975127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:00.975566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:01.975772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:02.977816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:03.977240      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:04.977870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:05.978557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:06.978964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:07.979074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:08.980224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:09.981110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:10.981915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:11.982054      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:12.982562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:13.983758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:14.983344      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:15.984059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:16.985259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:17.986298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:18.987083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:19.987515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:20.988523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:21.988567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:22.988841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:23.989997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:24.990029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:25.991342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:26.992274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:27.993168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:28.993406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:29.994009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:30.994177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:31.994367      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:32.995318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:33.996195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:34.996325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:35.997442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:36.998562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:37.999246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:38.999938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:40.001116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:41.001304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:42.002887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:43.002175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:44.002343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:45.003480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:46.004514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:47.005454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:48.005752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:49.005938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:50.006668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:51.007293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:52.008156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:53.009190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:54.010103      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:55.010317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:56.010541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:57.010657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:58.011744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:29:59.012101      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:00.012742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:01.013270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:02.013402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:03.013510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:04.013709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:05.014884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:06.015232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:07.015431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:08.016295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:09.016831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:10.017056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:11.017190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:12.018977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:13.019109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:14.020084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:15.020354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:16.021369      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:17.021545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:18.021766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:19.022743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:20.023030      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:21.023472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:22.023651      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:23.023832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:24.024688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:25.024774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:26.025450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:27.025714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:28.026343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:29.027112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:30.027925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:31.028492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:32.028754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:33.029555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:34.029790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:35.029998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:36.031015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:37.031459      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:38.032312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:39.032820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:40.033520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:41.034159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:42.034362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:43.034784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:44.034827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:45.035218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:46.035138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:47.035853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:48.036152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:49.036878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:50.037551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:51.038472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:52.038760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:53.040236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:54.040124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:55.040389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:56.040503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:57.040836      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:58.040999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:30:59.041819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:00.041904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:01.042304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:02.042047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:03.042901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:04.043141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:05.044233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:06.044336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:07.044567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:08.044894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:09.045035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:10.045147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:11.046316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:12.046204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:13.046429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:14.047204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:15.047395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:16.047455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:17.047680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:18.048411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:19.050210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:20.049854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:21.051138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:22.052045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:23.052817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:24.053432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:25.053211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:26.053816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:27.053923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:28.054721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:29.055769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:30.056170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:31.056569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:32.057085      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:33.057248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:34.057259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:35.058343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:36.058684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:37.059509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:38.061176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:39.061619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:40.062124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:41.062289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:42.062365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:43.062767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:44.063257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:45.063742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:46.063905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:47.064668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:48.065194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:49.066266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:50.066261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:51.066771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:52.067396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:53.068315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:54.068642      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:55.069118      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:56.069734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:57.069852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:58.071081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:31:59.071278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:00.071520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:01.071998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:02.072289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:03.072353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:04.072915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:05.072899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:06.073945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:07.073914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:08.074080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:09.074124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:10.074574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:11.075970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:12.076521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:13.076873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:14.077128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:15.077789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:16.078663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:17.079980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:18.079340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:19.079696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:20.080152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:21.080185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:22.080314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:23.080485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:24.080684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:25.081125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:26.081671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:27.082068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:28.082738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:29.083425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:30.084161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:31.084678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:32.084918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:33.085165      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:34.086043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:35.087001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:36.087391      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:37.087844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:38.088095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:39.088046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:40.088471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:41.088757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:42.089071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:43.089326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:44.089364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:45.089519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:46.090510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:47.090840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:48.091726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:49.092633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:50.092725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:51.093807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:52.093991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:53.094936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:54.095744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:55.096784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:56.096693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:57.096957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:58.097659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:32:59.097832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:00.098005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/15/24 08:33:00.23
  Apr 15 08:33:00.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7606" for this suite. @ 04/15/24 08:33:00.266
• [346.179 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 04/15/24 08:33:00.286
  Apr 15 08:33:00.286: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 08:33:00.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:33:00.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:33:00.358
  STEP: creating service multi-endpoint-test in namespace services-6787 @ 04/15/24 08:33:00.372
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6787 to expose endpoints map[] @ 04/15/24 08:33:00.423
  Apr 15 08:33:00.455: INFO: successfully validated that service multi-endpoint-test in namespace services-6787 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6787 @ 04/15/24 08:33:00.456
  E0415 08:33:01.104576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:02.099158      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6787 to expose endpoints map[pod1:[100]] @ 04/15/24 08:33:02.508
  Apr 15 08:33:02.537: INFO: successfully validated that service multi-endpoint-test in namespace services-6787 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-6787 @ 04/15/24 08:33:02.537
  E0415 08:33:03.099403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:04.100200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6787 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/15/24 08:33:04.581
  Apr 15 08:33:04.611: INFO: successfully validated that service multi-endpoint-test in namespace services-6787 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/15/24 08:33:04.611
  Apr 15 08:33:04.611: INFO: Creating new exec pod
  E0415 08:33:05.100867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:06.101390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:07.101580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:33:07.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-6787 exec execpod4l2dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0415 08:33:08.101860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:09.102896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:33:10.056: INFO: rc: 1
  Apr 15 08:33:10.056: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-6787 exec execpod4l2dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:33:10.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-6787 exec execpod4l2dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0415 08:33:10.102992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:11.104113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:12.105009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:33:12.434: INFO: rc: 1
  Apr 15 08:33:12.434: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-6787 exec execpod4l2dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:33:12.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-6787 exec execpod4l2dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0415 08:33:13.105411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:14.106146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:33:14.754: INFO: rc: 1
  Apr 15 08:33:14.754: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-6787 exec execpod4l2dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:33:14.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-6787 exec execpod4l2dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0415 08:33:15.107188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:16.108055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:33:17.108: INFO: rc: 1
  Apr 15 08:33:17.108: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-6787 exec execpod4l2dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80:
  Command stdout:

  stderr:
  + + echonc hostName -v -t
   -w 2 multi-endpoint-test 80
  nc: connect to multi-endpoint-test port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0415 08:33:17.108915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:33:17.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-6787 exec execpod4l2dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Apr 15 08:33:17.487: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Apr 15 08:33:17.487: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:33:17.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-6787 exec execpod4l2dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.49.181 80'
  Apr 15 08:33:17.757: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.49.181 80\nConnection to 10.233.49.181 80 port [tcp/http] succeeded!\n"
  Apr 15 08:33:17.757: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:33:17.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-6787 exec execpod4l2dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Apr 15 08:33:18.052: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Apr 15 08:33:18.052: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:33:18.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-6787 exec execpod4l2dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.49.181 81'
  E0415 08:33:18.109571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:33:18.359: INFO: stderr: "+ + nc -vecho -t hostName -w\n 2 10.233.49.181 81\nConnection to 10.233.49.181 81 port [tcp/*] succeeded!\n"
  Apr 15 08:33:18.359: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6787 @ 04/15/24 08:33:18.359
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6787 to expose endpoints map[pod2:[101]] @ 04/15/24 08:33:18.391
  E0415 08:33:19.111003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:33:19.448: INFO: successfully validated that service multi-endpoint-test in namespace services-6787 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-6787 @ 04/15/24 08:33:19.449
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6787 to expose endpoints map[] @ 04/15/24 08:33:19.504
  Apr 15 08:33:19.573: INFO: successfully validated that service multi-endpoint-test in namespace services-6787 exposes endpoints map[]
  Apr 15 08:33:19.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6787" for this suite. @ 04/15/24 08:33:19.704
• [19.433 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/15/24 08:33:19.722
  Apr 15 08:33:19.722: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/15/24 08:33:19.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:33:19.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:33:19.777
  STEP: creating @ 04/15/24 08:33:19.785
  STEP: getting @ 04/15/24 08:33:19.831
  STEP: listing in namespace @ 04/15/24 08:33:19.846
  STEP: patching @ 04/15/24 08:33:19.881
  STEP: deleting @ 04/15/24 08:33:19.901
  Apr 15 08:33:19.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1214" for this suite. @ 04/15/24 08:33:19.947
• [0.248 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 04/15/24 08:33:19.973
  Apr 15 08:33:19.973: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/15/24 08:33:19.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:33:20.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:33:20.076
  Apr 15 08:33:20.084: INFO: Waiting up to 1m0s for all nodes to be ready
  E0415 08:33:20.111149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:21.111474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:22.112560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:23.112514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:24.113382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:25.113540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:26.114427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:27.115441      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:28.115648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:29.116578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:30.116631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:31.116833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:32.117650      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:33.118070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:34.118238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:35.118325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:36.119464      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:37.120158      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:38.121218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:39.122284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:40.122448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:41.122767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:42.123645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:43.123857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:44.125014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:45.125384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:46.125728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:47.126262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:48.127358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:49.127491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:50.128013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:51.128196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:52.129168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:53.129510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:54.130350      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:55.130972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:56.132361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:57.132499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:58.133477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:33:59.133442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:00.133523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:01.133726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:02.134517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:03.134873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:04.135427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:05.136327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:06.137134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:07.137743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:08.138940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:09.139753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:10.140379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:11.140218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:12.140632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:13.141377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:14.142330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:15.142920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:16.143286      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:17.158478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:18.144342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:19.144068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:34:20.085: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 08:34:20.094: INFO: Starting informer...
  STEP: Starting pods... @ 04/15/24 08:34:20.095
  E0415 08:34:20.145420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:34:20.351: INFO: Pod1 is running on jec7saimeaph-3. Tainting Node
  E0415 08:34:21.146360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:22.146384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:34:22.607: INFO: Pod2 is running on jec7saimeaph-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/15/24 08:34:22.607
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/15/24 08:34:22.64
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/15/24 08:34:22.655
  E0415 08:34:23.146839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:24.147178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:25.147739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:26.148431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:27.148614      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:28.150811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:34:28.464: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0415 08:34:29.150743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:30.150925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:31.151319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:32.151773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:33.152155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:34.152352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:35.152324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:36.153505      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:37.153656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:38.153899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:39.154064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:40.155068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:41.155588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:42.156209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:43.156365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:44.156542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:45.156871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:46.157516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:47.158575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:48.158714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:34:48.450: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/15/24 08:34:48.478
  Apr 15 08:34:48.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-4595" for this suite. @ 04/15/24 08:34:48.501
• [88.544 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 04/15/24 08:34:48.521
  Apr 15 08:34:48.521: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:34:48.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:34:48.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:34:48.627
  STEP: Creating configMap with name cm-test-opt-del-ab325cc6-3051-410c-a7c8-d0418574a97b @ 04/15/24 08:34:48.644
  STEP: Creating configMap with name cm-test-opt-upd-fe2974b2-078d-440d-b930-d725df6cafbc @ 04/15/24 08:34:48.655
  STEP: Creating the pod @ 04/15/24 08:34:48.665
  E0415 08:34:49.160881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:50.161479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-ab325cc6-3051-410c-a7c8-d0418574a97b @ 04/15/24 08:34:50.79
  STEP: Updating configmap cm-test-opt-upd-fe2974b2-078d-440d-b930-d725df6cafbc @ 04/15/24 08:34:50.806
  STEP: Creating configMap with name cm-test-opt-create-2d333a68-a3a8-4172-8351-54bef90266b3 @ 04/15/24 08:34:50.82
  STEP: waiting to observe update in volume @ 04/15/24 08:34:50.841
  E0415 08:34:51.161582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:52.162366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:34:52.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8993" for this suite. @ 04/15/24 08:34:52.933
• [4.431 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 04/15/24 08:34:52.955
  Apr 15 08:34:52.955: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 08:34:52.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:34:53.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:34:53.011
  Apr 15 08:34:53.071: INFO: created pod pod-service-account-defaultsa
  Apr 15 08:34:53.071: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Apr 15 08:34:53.086: INFO: created pod pod-service-account-mountsa
  Apr 15 08:34:53.086: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Apr 15 08:34:53.099: INFO: created pod pod-service-account-nomountsa
  Apr 15 08:34:53.099: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Apr 15 08:34:53.117: INFO: created pod pod-service-account-defaultsa-mountspec
  Apr 15 08:34:53.118: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Apr 15 08:34:53.145: INFO: created pod pod-service-account-mountsa-mountspec
  Apr 15 08:34:53.146: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  E0415 08:34:53.163097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:34:53.243: INFO: created pod pod-service-account-nomountsa-mountspec
  Apr 15 08:34:53.243: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Apr 15 08:34:53.278: INFO: created pod pod-service-account-defaultsa-nomountspec
  Apr 15 08:34:53.278: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Apr 15 08:34:53.409: INFO: created pod pod-service-account-mountsa-nomountspec
  Apr 15 08:34:53.409: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Apr 15 08:34:53.430: INFO: created pod pod-service-account-nomountsa-nomountspec
  Apr 15 08:34:53.430: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Apr 15 08:34:53.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8355" for this suite. @ 04/15/24 08:34:53.517
• [0.675 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/15/24 08:34:53.632
  Apr 15 08:34:53.632: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 08:34:53.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:34:53.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:34:53.741
  STEP: create the container @ 04/15/24 08:34:53.75
  W0415 08:34:53.777619      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/15/24 08:34:53.778
  E0415 08:34:54.163254      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:55.163949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:56.164338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:57.167951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:58.169857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:34:59.169340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/15/24 08:34:59.903
  STEP: the container should be terminated @ 04/15/24 08:34:59.928
  STEP: the termination message should be set @ 04/15/24 08:34:59.929
  Apr 15 08:34:59.929: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/15/24 08:34:59.929
  Apr 15 08:35:00.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2893" for this suite. @ 04/15/24 08:35:00.057
• [6.479 seconds]
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 04/15/24 08:35:00.112
  Apr 15 08:35:00.112: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 08:35:00.118
  E0415 08:35:00.170388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:35:00.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:35:00.192
  STEP: Create a ReplicaSet @ 04/15/24 08:35:00.203
  STEP: Verify that the required pods have come up @ 04/15/24 08:35:00.221
  Apr 15 08:35:00.230: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0415 08:35:01.171174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:02.172741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:03.172511      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:04.173149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:05.172897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:35:05.250: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/15/24 08:35:05.251
  Apr 15 08:35:05.261: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/15/24 08:35:05.261
  STEP: DeleteCollection of the ReplicaSets @ 04/15/24 08:35:05.269
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/15/24 08:35:05.295
  Apr 15 08:35:05.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1058" for this suite. @ 04/15/24 08:35:05.328
• [5.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 04/15/24 08:35:05.36
  Apr 15 08:35:05.360: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename podtemplate @ 04/15/24 08:35:05.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:35:05.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:35:05.489
  STEP: Create set of pod templates @ 04/15/24 08:35:05.499
  Apr 15 08:35:05.515: INFO: created test-podtemplate-1
  Apr 15 08:35:05.541: INFO: created test-podtemplate-2
  Apr 15 08:35:05.554: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/15/24 08:35:05.554
  STEP: delete collection of pod templates @ 04/15/24 08:35:05.563
  Apr 15 08:35:05.563: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/15/24 08:35:05.72
  Apr 15 08:35:05.721: INFO: requesting list of pod templates to confirm quantity
  Apr 15 08:35:05.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4957" for this suite. @ 04/15/24 08:35:05.776
• [0.444 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 04/15/24 08:35:05.805
  Apr 15 08:35:05.805: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 08:35:05.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:35:05.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:35:05.872
  Apr 15 08:35:06.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1936" for this suite. @ 04/15/24 08:35:06.022
• [0.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/15/24 08:35:06.04
  Apr 15 08:35:06.040: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename prestop @ 04/15/24 08:35:06.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:35:06.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:35:06.101
  STEP: Creating server pod server in namespace prestop-9024 @ 04/15/24 08:35:06.108
  STEP: Waiting for pods to come up. @ 04/15/24 08:35:06.136
  E0415 08:35:06.174961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:07.174997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-9024 @ 04/15/24 08:35:08.166
  E0415 08:35:08.175894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:09.177565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:10.178190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 04/15/24 08:35:10.222
  E0415 08:35:11.177315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:12.178990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:13.177948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:14.178056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:15.178375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:35:15.265: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 04/15/24 08:35:15.272
  Apr 15 08:35:15.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9024" for this suite. @ 04/15/24 08:35:15.315
• [9.295 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 04/15/24 08:35:15.336
  Apr 15 08:35:15.336: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 08:35:15.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:35:15.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:35:15.413
  STEP: Waiting for pod completion @ 04/15/24 08:35:15.448
  E0415 08:35:16.179896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:17.180822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:18.180450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:19.180801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:35:19.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7507" for this suite. @ 04/15/24 08:35:19.515
• [4.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 04/15/24 08:35:19.54
  Apr 15 08:35:19.540: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename gc @ 04/15/24 08:35:19.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:35:19.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:35:19.59
  STEP: create the rc @ 04/15/24 08:35:19.609
  W0415 08:35:19.636124      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0415 08:35:20.182096      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:21.183097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:22.183206      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:23.183379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:24.183675      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:25.183848      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/15/24 08:35:25.859
  STEP: wait for the rc to be deleted @ 04/15/24 08:35:25.902
  E0415 08:35:26.184685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:27.185653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:35:27.575: INFO: 80 pods remaining
  Apr 15 08:35:27.575: INFO: 80 pods has nil DeletionTimestamp
  Apr 15 08:35:27.575: INFO: 
  E0415 08:35:28.185700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:35:28.570: INFO: 72 pods remaining
  Apr 15 08:35:28.570: INFO: 64 pods has nil DeletionTimestamp
  Apr 15 08:35:28.570: INFO: 
  Apr 15 08:35:29.093: INFO: 60 pods remaining
  Apr 15 08:35:29.093: INFO: 55 pods has nil DeletionTimestamp
  Apr 15 08:35:29.093: INFO: 
  E0415 08:35:29.187227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:35:30.076: INFO: 42 pods remaining
  Apr 15 08:35:30.077: INFO: 41 pods has nil DeletionTimestamp
  Apr 15 08:35:30.077: INFO: 
  E0415 08:35:30.187769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:31.188052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:35:31.192: INFO: 35 pods remaining
  Apr 15 08:35:31.192: INFO: 33 pods has nil DeletionTimestamp
  Apr 15 08:35:31.192: INFO: 
  Apr 15 08:35:32.151: INFO: 15 pods remaining
  Apr 15 08:35:32.151: INFO: 15 pods has nil DeletionTimestamp
  Apr 15 08:35:32.151: INFO: 
  E0415 08:35:32.188747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:35:33.148: INFO: 5 pods remaining
  Apr 15 08:35:33.170: INFO: 0 pods has nil DeletionTimestamp
  Apr 15 08:35:33.170: INFO: 
  E0415 08:35:33.189302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/15/24 08:35:33.943
  E0415 08:35:34.190219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:35.191376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:35:36.017: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 08:35:36.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9254" for this suite. @ 04/15/24 08:35:36.054
• [16.548 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 04/15/24 08:35:36.12
  Apr 15 08:35:36.121: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 08:35:36.126
  E0415 08:35:36.192097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:35:36.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:35:36.211
  STEP: Creating configMap with name configmap-test-volume-map-071dc059-133e-4952-afdc-8753aec927f7 @ 04/15/24 08:35:36.218
  STEP: Creating a pod to test consume configMaps @ 04/15/24 08:35:36.261
  E0415 08:35:37.192440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:38.192364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:39.193542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:40.194084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:41.194219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:42.194906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:43.196018      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:44.196533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:35:44.635
  Apr 15 08:35:44.645: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-configmaps-08227fd4-9beb-4a46-8837-165aa04da171 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 08:35:44.678
  Apr 15 08:35:44.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7131" for this suite. @ 04/15/24 08:35:44.78
• [8.687 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 04/15/24 08:35:44.816
  Apr 15 08:35:44.817: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:35:44.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:35:44.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:35:44.918
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:35:44.927
  E0415 08:35:45.197082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:46.197887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:47.197845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:48.198173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:35:49.114
  Apr 15 08:35:49.182: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-57eb3aa1-1877-4a36-9942-19381ca44558 container client-container: <nil>
  E0415 08:35:49.199053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 04/15/24 08:35:49.259
  Apr 15 08:35:49.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4369" for this suite. @ 04/15/24 08:35:49.745
• [4.963 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/15/24 08:35:49.782
  Apr 15 08:35:49.783: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename deployment @ 04/15/24 08:35:49.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:35:49.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:35:49.868
  Apr 15 08:35:49.877: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Apr 15 08:35:49.915: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0415 08:35:50.200078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:51.201483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:52.201276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:53.201564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:54.202950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:35:54.947: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 08:35:54.948
  Apr 15 08:35:54.949: INFO: Creating deployment "test-rolling-update-deployment"
  Apr 15 08:35:55.053: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Apr 15 08:35:55.132: INFO: deployment "test-rolling-update-deployment" doesn't have the required revision set
  E0415 08:35:55.203179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:56.203430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:57.203813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:35:57.251: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Apr 15 08:35:57.310: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 35, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 35, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 35, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 35, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:35:58.204012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:35:59.204294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:35:59.324: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Apr 15 08:35:59.361: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11021152-8663-4caa-a445-125ae55c9cb8",
      ResourceVersion: (string) (len=6) "215466",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 08:35:59.383: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ac2f4ef-7962-4c44-b72b-ec257b925757",
      ResourceVersion: (string) (len=6) "215455",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766955,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "11021152-8663-4caa-a445-125ae55c9cb8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 31 30 32 31 31  35 32 2d 38 36 36 33 2d  |\"11021152-8663-|
              00000120  34 63 61 61 2d 61 34 34  35 2d 31 32 35 61 65 35  |4caa-a445-125ae5|
              00000130  35 63 39 63 62 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5c9cb8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 08:35:59.385: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Apr 15 08:35:59.386: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b81b49a-f2f0-49fa-aaa0-0015c1625f18",
      ResourceVersion: (string) (len=6) "215465",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "11021152-8663-4caa-a445-125ae55c9cb8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 31 31 30 32 31 31 35  |"uid\":\"1102115|
              000000b0  32 2d 38 36 36 33 2d 34  63 61 61 2d 61 34 34 35  |2-8663-4caa-a445|
              000000c0  2d 31 32 35 61 65 35 35  63 39 63 62 38 5c 22 7d  |-125ae55c9cb8\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 08:35:59.416: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-zcgpp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-zcgpp",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-9653",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f67b752-a158-4354-8d97-13cfdd401929",
      ResourceVersion: (string) (len=6) "215454",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766955,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "9ac2f4ef-7962-4c44-b72b-ec257b925757",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 61  63 32 66 34 65 66 2d 37  |d\":\"9ac2f4ef-7|
              00000090  39 36 32 2d 34 63 34 34  2d 62 37 32 62 2d 65 63  |962-4c44-b72b-ec|
              000000a0  32 35 37 62 39 32 35 37  35 37 5c 22 7d 22 3a 7b  |257b925757\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 31 37 5c 22 7d 22 3a  |.233.66.217\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zwft5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zwft5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766955,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) (len=13) "10.233.66.217",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.217"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766955,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848766956,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://929fa0bcea671a6035de78dba82f5a3898f56950c1e14d740fe553f6d4c4bb37",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:35:59.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9653" for this suite. @ 04/15/24 08:35:59.44
• [9.671 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/15/24 08:35:59.455
  Apr 15 08:35:59.455: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename watch @ 04/15/24 08:35:59.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:35:59.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:35:59.499
  STEP: creating a watch on configmaps with a certain label @ 04/15/24 08:35:59.506
  STEP: creating a new configmap @ 04/15/24 08:35:59.51
  STEP: modifying the configmap once @ 04/15/24 08:35:59.521
  STEP: changing the label value of the configmap @ 04/15/24 08:35:59.545
  STEP: Expecting to observe a delete notification for the watched object @ 04/15/24 08:35:59.56
  Apr 15 08:35:59.570: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6942  7acf0eee-c08d-4d4a-8517-27427da137ee 215479 0 2024-04-15 08:35:59 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 08:35:59 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:35:59.573: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6942  7acf0eee-c08d-4d4a-8517-27427da137ee 215480 0 2024-04-15 08:35:59 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 08:35:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:35:59.574: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6942  7acf0eee-c08d-4d4a-8517-27427da137ee 215481 0 2024-04-15 08:35:59 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 08:35:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/15/24 08:35:59.576
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/15/24 08:35:59.597
  E0415 08:36:00.204643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:01.204817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:02.205903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:03.206250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:04.207027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:05.207333      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:06.207916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:07.208010      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:08.208422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:09.209569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 04/15/24 08:36:09.598
  STEP: modifying the configmap a third time @ 04/15/24 08:36:09.619
  STEP: deleting the configmap @ 04/15/24 08:36:09.641
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/15/24 08:36:09.654
  Apr 15 08:36:09.654: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6942  7acf0eee-c08d-4d4a-8517-27427da137ee 215526 0 2024-04-15 08:35:59 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 08:36:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:36:09.655: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6942  7acf0eee-c08d-4d4a-8517-27427da137ee 215527 0 2024-04-15 08:35:59 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 08:36:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:36:09.655: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6942  7acf0eee-c08d-4d4a-8517-27427da137ee 215528 0 2024-04-15 08:35:59 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 08:36:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:36:09.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6942" for this suite. @ 04/15/24 08:36:09.668
• [10.230 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 04/15/24 08:36:09.689
  Apr 15 08:36:09.689: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 08:36:09.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:36:09.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:36:09.739
  STEP: Updating Namespace "namespaces-8738" @ 04/15/24 08:36:09.75
  Apr 15 08:36:09.772: INFO: Namespace "namespaces-8738" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"89f0c345-f7cb-464f-a920-e32459ba3e18", "kubernetes.io/metadata.name":"namespaces-8738", "namespaces-8738":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Apr 15 08:36:09.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8738" for this suite. @ 04/15/24 08:36:09.788
• [0.121 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 04/15/24 08:36:09.811
  Apr 15 08:36:09.812: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename sched-preemption @ 04/15/24 08:36:09.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:36:09.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:36:09.87
  Apr 15 08:36:09.911: INFO: Waiting up to 1m0s for all nodes to be ready
  E0415 08:36:10.210051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:11.210703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:12.210892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:13.211053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:14.211512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:15.211921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:16.211971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:17.212576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:18.212629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:19.212799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:20.213803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:21.214692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:22.215691      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:23.215795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:24.216268      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:25.216912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:26.217729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:27.218839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:28.219683      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:29.220330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:30.220681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:31.221799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:32.222794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:33.222975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:34.223394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:35.223812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:36.224715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:37.224891      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:38.224989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:39.225201      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:40.226284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:41.226413      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:42.226721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:43.227178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:44.228069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:45.228827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:46.229039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:47.229188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:48.230188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:49.231176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:50.232123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:51.232288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:52.233327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:53.233785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:54.234321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:55.234387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:56.235319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:57.235726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:58.235835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:36:59.236559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:00.237547      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:01.237686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:02.238089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:03.238048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:04.238822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:05.239119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:06.239771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:07.240031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:08.240227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:09.241358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:37:09.922: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/15/24 08:37:09.931
  Apr 15 08:37:09.992: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 15 08:37:10.034: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 15 08:37:10.144: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 15 08:37:10.174: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  E0415 08:37:10.242264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:37:10.263: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 15 08:37:10.291: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/15/24 08:37:10.291
  E0415 08:37:11.243200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:12.243473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/15/24 08:37:12.363
  E0415 08:37:13.244075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:14.244524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:15.245571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:16.246394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:37:16.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9782" for this suite. @ 04/15/24 08:37:16.598
• [66.802 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 04/15/24 08:37:16.615
  Apr 15 08:37:16.615: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 08:37:16.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:37:16.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:37:16.668
  E0415 08:37:17.247086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:18.247483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:37:18.721: INFO: Deleting pod "var-expansion-6a0a3f4a-adc4-4b05-a9fe-47965cbf4456" in namespace "var-expansion-7056"
  Apr 15 08:37:18.737: INFO: Wait up to 5m0s for pod "var-expansion-6a0a3f4a-adc4-4b05-a9fe-47965cbf4456" to be fully deleted
  E0415 08:37:19.248238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:20.248289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:37:20.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7056" for this suite. @ 04/15/24 08:37:20.767
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 04/15/24 08:37:20.795
  Apr 15 08:37:20.795: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename sched-preemption @ 04/15/24 08:37:20.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:37:20.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:37:20.85
  Apr 15 08:37:20.905: INFO: Waiting up to 1m0s for all nodes to be ready
  E0415 08:37:21.248275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:22.248420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:23.249444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:24.250023      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:25.251227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:26.250376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:27.251321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:28.251357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:29.252429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:30.253309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:31.253964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:32.254169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:33.255351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:34.255509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:35.255784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:36.256584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:37.257586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:38.258126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:39.258738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:40.258864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:41.260453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:42.260213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:43.260752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:44.261263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:45.262183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:46.262932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:47.263570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:48.263749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:49.265005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:50.265735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:51.266845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:52.266963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:53.267548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:54.267837      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:55.267994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:56.268671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:57.269442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:58.269773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:37:59.269962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:00.271276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:01.271134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:02.272126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:03.273112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:04.273304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:05.274031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:06.274270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:07.274900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:08.275256      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:09.276905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:10.276978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:11.277821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:12.278259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:13.278684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:14.278837      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:15.278981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:16.280043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:17.280343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:18.281321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:19.282258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:20.282532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:38:20.920: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/15/24 08:38:20.929
  Apr 15 08:38:20.929: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/15/24 08:38:20.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:38:20.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:38:20.982
  STEP: Finding an available node @ 04/15/24 08:38:20.991
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/15/24 08:38:20.992
  E0415 08:38:21.283064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:22.283620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/15/24 08:38:23.047
  Apr 15 08:38:23.107: INFO: found a healthy node: jec7saimeaph-3
  E0415 08:38:23.284537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:24.293624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:25.294107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:26.295256      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:27.296503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:28.296577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:38:29.279: INFO: pods created so far: [1 1 1]
  Apr 15 08:38:29.279: INFO: length of pods created so far: 3
  E0415 08:38:29.297107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:30.298267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:31.299508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:38:31.304: INFO: pods created so far: [2 2 1]
  E0415 08:38:32.300356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:33.300152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:34.300784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:35.300965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:36.301650      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:37.301941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:38.302049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:38:38.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9953" for this suite. @ 04/15/24 08:38:38.531
  Apr 15 08:38:38.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8802" for this suite. @ 04/15/24 08:38:38.563
• [77.786 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/15/24 08:38:38.585
  Apr 15 08:38:38.585: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:38:38.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:38:38.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:38:38.631
  STEP: creating the pod @ 04/15/24 08:38:38.637
  STEP: submitting the pod to kubernetes @ 04/15/24 08:38:38.638
  E0415 08:38:39.302479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:40.303443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/15/24 08:38:40.689
  STEP: updating the pod @ 04/15/24 08:38:40.702
  Apr 15 08:38:41.222: INFO: Successfully updated pod "pod-update-722ebc24-645d-46ee-a7ab-68000f83dedb"
  STEP: verifying the updated pod is in kubernetes @ 04/15/24 08:38:41.229
  Apr 15 08:38:41.253: INFO: Pod update OK
  Apr 15 08:38:41.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5012" for this suite. @ 04/15/24 08:38:41.269
• [2.707 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/15/24 08:38:41.301
  Apr 15 08:38:41.301: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 08:38:41.304034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename svc-latency @ 04/15/24 08:38:41.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:38:41.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:38:41.348
  Apr 15 08:38:41.353: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1818 @ 04/15/24 08:38:41.356
  I0415 08:38:41.380901      14 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1818, replica count: 1
  E0415 08:38:42.304524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 08:38:42.435312      14 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0415 08:38:43.304789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 08:38:43.436726      14 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 08:38:43.573: INFO: Created: latency-svc-ckrjz
  Apr 15 08:38:43.661: INFO: Got endpoints: latency-svc-ckrjz [123.240773ms]
  Apr 15 08:38:43.718: INFO: Created: latency-svc-qm5gs
  Apr 15 08:38:43.725: INFO: Got endpoints: latency-svc-qm5gs [61.83377ms]
  Apr 15 08:38:43.735: INFO: Created: latency-svc-7mbsn
  Apr 15 08:38:43.742: INFO: Created: latency-svc-8bnjk
  Apr 15 08:38:43.764: INFO: Created: latency-svc-r9hgp
  Apr 15 08:38:43.768: INFO: Got endpoints: latency-svc-7mbsn [105.850894ms]
  Apr 15 08:38:43.779: INFO: Got endpoints: latency-svc-8bnjk [111.61372ms]
  Apr 15 08:38:43.788: INFO: Created: latency-svc-2n9nb
  Apr 15 08:38:43.800: INFO: Got endpoints: latency-svc-r9hgp [132.206796ms]
  Apr 15 08:38:43.815: INFO: Created: latency-svc-zpmfx
  Apr 15 08:38:43.835: INFO: Created: latency-svc-22c6f
  Apr 15 08:38:43.837: INFO: Got endpoints: latency-svc-2n9nb [167.704892ms]
  Apr 15 08:38:43.847: INFO: Got endpoints: latency-svc-zpmfx [177.048288ms]
  Apr 15 08:38:43.861: INFO: Created: latency-svc-pljdj
  Apr 15 08:38:43.866: INFO: Created: latency-svc-4z2sh
  Apr 15 08:38:43.882: INFO: Got endpoints: latency-svc-22c6f [211.697903ms]
  Apr 15 08:38:43.882: INFO: Got endpoints: latency-svc-pljdj [213.342122ms]
  Apr 15 08:38:43.897: INFO: Got endpoints: latency-svc-4z2sh [226.271469ms]
  Apr 15 08:38:43.908: INFO: Created: latency-svc-2kwpw
  Apr 15 08:38:43.919: INFO: Created: latency-svc-6dtn5
  Apr 15 08:38:43.925: INFO: Got endpoints: latency-svc-2kwpw [253.717677ms]
  Apr 15 08:38:43.937: INFO: Created: latency-svc-v8699
  Apr 15 08:38:43.952: INFO: Created: latency-svc-rrnmz
  Apr 15 08:38:43.969: INFO: Created: latency-svc-dq6kp
  Apr 15 08:38:43.970: INFO: Got endpoints: latency-svc-6dtn5 [299.861838ms]
  Apr 15 08:38:43.973: INFO: Got endpoints: latency-svc-v8699 [301.277563ms]
  Apr 15 08:38:43.994: INFO: Created: latency-svc-hjcxw
  Apr 15 08:38:44.005: INFO: Created: latency-svc-ftxxc
  Apr 15 08:38:44.019: INFO: Got endpoints: latency-svc-dq6kp [347.689151ms]
  Apr 15 08:38:44.020: INFO: Got endpoints: latency-svc-rrnmz [349.994332ms]
  Apr 15 08:38:44.030: INFO: Created: latency-svc-pdwl4
  Apr 15 08:38:44.039: INFO: Got endpoints: latency-svc-hjcxw [367.643647ms]
  Apr 15 08:38:44.040: INFO: Got endpoints: latency-svc-ftxxc [315.358871ms]
  Apr 15 08:38:44.042: INFO: Created: latency-svc-fr9wx
  Apr 15 08:38:44.059: INFO: Created: latency-svc-g69ph
  Apr 15 08:38:44.073: INFO: Created: latency-svc-8fj4p
  Apr 15 08:38:44.078: INFO: Got endpoints: latency-svc-pdwl4 [309.937611ms]
  Apr 15 08:38:44.086: INFO: Created: latency-svc-9q4n4
  Apr 15 08:38:44.091: INFO: Got endpoints: latency-svc-fr9wx [311.509017ms]
  Apr 15 08:38:44.110: INFO: Created: latency-svc-5k8kp
  Apr 15 08:38:44.125: INFO: Created: latency-svc-lfmf7
  Apr 15 08:38:44.131: INFO: Created: latency-svc-qpfdd
  Apr 15 08:38:44.147: INFO: Created: latency-svc-fdb8h
  Apr 15 08:38:44.152: INFO: Got endpoints: latency-svc-8fj4p [314.900237ms]
  Apr 15 08:38:44.152: INFO: Got endpoints: latency-svc-g69ph [351.360099ms]
  Apr 15 08:38:44.155: INFO: Created: latency-svc-gdjft
  Apr 15 08:38:44.171: INFO: Got endpoints: latency-svc-9q4n4 [323.927716ms]
  Apr 15 08:38:44.182: INFO: Got endpoints: latency-svc-5k8kp [299.527647ms]
  Apr 15 08:38:44.185: INFO: Created: latency-svc-bvj8k
  Apr 15 08:38:44.197: INFO: Got endpoints: latency-svc-lfmf7 [314.487229ms]
  Apr 15 08:38:44.210: INFO: Created: latency-svc-h2mpp
  Apr 15 08:38:44.233: INFO: Got endpoints: latency-svc-fdb8h [307.213576ms]
  Apr 15 08:38:44.234: INFO: Got endpoints: latency-svc-qpfdd [336.161824ms]
  Apr 15 08:38:44.251: INFO: Got endpoints: latency-svc-bvj8k [278.71002ms]
  Apr 15 08:38:44.253: INFO: Created: latency-svc-7rld8
  Apr 15 08:38:44.254: INFO: Created: latency-svc-rcnmk
  Apr 15 08:38:44.268: INFO: Created: latency-svc-9qk4g
  Apr 15 08:38:44.277: INFO: Got endpoints: latency-svc-h2mpp [257.729814ms]
  Apr 15 08:38:44.277: INFO: Got endpoints: latency-svc-gdjft [307.001536ms]
  Apr 15 08:38:44.292: INFO: Created: latency-svc-dzrfv
  Apr 15 08:38:44.296: INFO: Created: latency-svc-6m9l7
  E0415 08:38:44.305029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:38:44.313: INFO: Got endpoints: latency-svc-7rld8 [292.760641ms]
  Apr 15 08:38:44.315: INFO: Created: latency-svc-94mj2
  Apr 15 08:38:44.323: INFO: Got endpoints: latency-svc-rcnmk [282.829923ms]
  Apr 15 08:38:44.331: INFO: Created: latency-svc-qp9q6
  Apr 15 08:38:44.339: INFO: Created: latency-svc-99gj8
  Apr 15 08:38:44.352: INFO: Created: latency-svc-cd678
  Apr 15 08:38:44.359: INFO: Got endpoints: latency-svc-9qk4g [318.625124ms]
  Apr 15 08:38:44.368: INFO: Got endpoints: latency-svc-dzrfv [289.10685ms]
  Apr 15 08:38:44.369: INFO: Created: latency-svc-sfx4c
  Apr 15 08:38:44.380: INFO: Created: latency-svc-cldkx
  Apr 15 08:38:44.400: INFO: Created: latency-svc-klp7t
  Apr 15 08:38:44.407: INFO: Created: latency-svc-lqn99
  Apr 15 08:38:44.425: INFO: Created: latency-svc-b8slv
  Apr 15 08:38:44.433: INFO: Got endpoints: latency-svc-6m9l7 [341.305427ms]
  Apr 15 08:38:44.438: INFO: Got endpoints: latency-svc-94mj2 [284.936993ms]
  Apr 15 08:38:44.438: INFO: Got endpoints: latency-svc-qp9q6 [285.644966ms]
  Apr 15 08:38:44.448: INFO: Created: latency-svc-642kb
  Apr 15 08:38:44.457: INFO: Got endpoints: latency-svc-cd678 [275.204898ms]
  Apr 15 08:38:44.472: INFO: Created: latency-svc-hqkj4
  Apr 15 08:38:44.478: INFO: Got endpoints: latency-svc-99gj8 [306.282886ms]
  Apr 15 08:38:44.483: INFO: Created: latency-svc-9kdmh
  Apr 15 08:38:44.490: INFO: Created: latency-svc-4gj5m
  Apr 15 08:38:44.506: INFO: Created: latency-svc-m2rbr
  Apr 15 08:38:44.531: INFO: Created: latency-svc-592mw
  Apr 15 08:38:44.544: INFO: Got endpoints: latency-svc-sfx4c [346.589056ms]
  Apr 15 08:38:44.561: INFO: Got endpoints: latency-svc-cldkx [328.018114ms]
  Apr 15 08:38:44.564: INFO: Created: latency-svc-2pwbb
  Apr 15 08:38:44.576: INFO: Got endpoints: latency-svc-klp7t [342.800188ms]
  Apr 15 08:38:44.578: INFO: Got endpoints: latency-svc-lqn99 [326.249011ms]
  Apr 15 08:38:44.590: INFO: Created: latency-svc-ggxwx
  Apr 15 08:38:44.594: INFO: Got endpoints: latency-svc-642kb [316.612606ms]
  Apr 15 08:38:44.596: INFO: Got endpoints: latency-svc-b8slv [318.581402ms]
  Apr 15 08:38:44.605: INFO: Created: latency-svc-g9gf9
  Apr 15 08:38:44.613: INFO: Got endpoints: latency-svc-hqkj4 [299.03172ms]
  Apr 15 08:38:44.631: INFO: Created: latency-svc-psc4v
  Apr 15 08:38:44.640: INFO: Created: latency-svc-ljhmc
  Apr 15 08:38:44.650: INFO: Got endpoints: latency-svc-4gj5m [290.524693ms]
  Apr 15 08:38:44.650: INFO: Got endpoints: latency-svc-9kdmh [326.005449ms]
  Apr 15 08:38:44.659: INFO: Created: latency-svc-xlw7q
  Apr 15 08:38:44.667: INFO: Got endpoints: latency-svc-m2rbr [298.978555ms]
  Apr 15 08:38:44.677: INFO: Created: latency-svc-8hfck
  Apr 15 08:38:44.680: INFO: Got endpoints: latency-svc-592mw [247.474874ms]
  Apr 15 08:38:44.687: INFO: Created: latency-svc-4pfxm
  Apr 15 08:38:44.694: INFO: Created: latency-svc-vr8lq
  Apr 15 08:38:44.712: INFO: Created: latency-svc-xm2b6
  Apr 15 08:38:44.719: INFO: Created: latency-svc-njj78
  Apr 15 08:38:44.728: INFO: Created: latency-svc-vpkqr
  Apr 15 08:38:44.739: INFO: Got endpoints: latency-svc-2pwbb [300.639931ms]
  Apr 15 08:38:44.749: INFO: Created: latency-svc-xjhfp
  Apr 15 08:38:44.755: INFO: Got endpoints: latency-svc-g9gf9 [297.987436ms]
  Apr 15 08:38:44.768: INFO: Created: latency-svc-5xt9r
  Apr 15 08:38:44.780: INFO: Created: latency-svc-mhq25
  Apr 15 08:38:44.785: INFO: Got endpoints: latency-svc-ggxwx [346.403545ms]
  Apr 15 08:38:44.799: INFO: Created: latency-svc-hmjpc
  Apr 15 08:38:44.807: INFO: Created: latency-svc-c6szw
  Apr 15 08:38:44.826: INFO: Got endpoints: latency-svc-psc4v [347.398151ms]
  Apr 15 08:38:44.836: INFO: Created: latency-svc-45pnf
  Apr 15 08:38:44.851: INFO: Created: latency-svc-cz8bh
  Apr 15 08:38:44.866: INFO: Got endpoints: latency-svc-ljhmc [322.187413ms]
  Apr 15 08:38:44.892: INFO: Created: latency-svc-qzdx4
  Apr 15 08:38:44.927: INFO: Got endpoints: latency-svc-xlw7q [365.226084ms]
  Apr 15 08:38:44.960: INFO: Created: latency-svc-wvcqv
  Apr 15 08:38:45.038: INFO: Got endpoints: latency-svc-8hfck [459.688143ms]
  Apr 15 08:38:45.074: INFO: Got endpoints: latency-svc-4pfxm [495.90567ms]
  Apr 15 08:38:45.101: INFO: Got endpoints: latency-svc-vr8lq [505.61434ms]
  Apr 15 08:38:45.107: INFO: Created: latency-svc-v8l4j
  Apr 15 08:38:45.137: INFO: Created: latency-svc-sbkqs
  Apr 15 08:38:45.138: INFO: Created: latency-svc-zqh2c
  Apr 15 08:38:45.224: INFO: Got endpoints: latency-svc-xm2b6 [628.841949ms]
  Apr 15 08:38:45.275: INFO: Created: latency-svc-pdrrg
  Apr 15 08:38:45.280: INFO: Got endpoints: latency-svc-njj78 [667.231231ms]
  Apr 15 08:38:45.293: INFO: Got endpoints: latency-svc-vpkqr [639.536717ms]
  E0415 08:38:45.305013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:38:45.317: INFO: Created: latency-svc-hmbv2
  Apr 15 08:38:45.321: INFO: Created: latency-svc-rf7gm
  Apr 15 08:38:45.324: INFO: Got endpoints: latency-svc-xjhfp [670.852885ms]
  Apr 15 08:38:45.347: INFO: Created: latency-svc-n2mbg
  Apr 15 08:38:45.375: INFO: Got endpoints: latency-svc-mhq25 [693.006634ms]
  Apr 15 08:38:45.375: INFO: Got endpoints: latency-svc-5xt9r [708.238771ms]
  Apr 15 08:38:45.425: INFO: Created: latency-svc-f7j9k
  Apr 15 08:38:45.426: INFO: Created: latency-svc-r8pfd
  Apr 15 08:38:45.427: INFO: Got endpoints: latency-svc-hmjpc [687.950955ms]
  Apr 15 08:38:45.453: INFO: Created: latency-svc-wb84b
  Apr 15 08:38:45.493: INFO: Got endpoints: latency-svc-c6szw [737.289021ms]
  Apr 15 08:38:45.517: INFO: Got endpoints: latency-svc-45pnf [731.811409ms]
  Apr 15 08:38:45.532: INFO: Created: latency-svc-wz7t7
  Apr 15 08:38:45.551: INFO: Created: latency-svc-4xdmk
  Apr 15 08:38:45.578: INFO: Got endpoints: latency-svc-cz8bh [751.946314ms]
  Apr 15 08:38:45.601: INFO: Created: latency-svc-29czh
  Apr 15 08:38:45.624: INFO: Got endpoints: latency-svc-qzdx4 [756.704233ms]
  Apr 15 08:38:45.666: INFO: Created: latency-svc-tvfzv
  Apr 15 08:38:45.668: INFO: Got endpoints: latency-svc-wvcqv [741.21068ms]
  Apr 15 08:38:45.687: INFO: Created: latency-svc-5w2l5
  Apr 15 08:38:45.720: INFO: Got endpoints: latency-svc-v8l4j [682.204676ms]
  Apr 15 08:38:45.759: INFO: Created: latency-svc-wq9pt
  Apr 15 08:38:45.779: INFO: Got endpoints: latency-svc-sbkqs [705.071526ms]
  Apr 15 08:38:45.800: INFO: Created: latency-svc-jqf6c
  Apr 15 08:38:45.822: INFO: Got endpoints: latency-svc-zqh2c [720.797827ms]
  Apr 15 08:38:45.843: INFO: Created: latency-svc-d6brl
  Apr 15 08:38:45.869: INFO: Got endpoints: latency-svc-pdrrg [643.826488ms]
  Apr 15 08:38:45.888: INFO: Created: latency-svc-jk4zm
  Apr 15 08:38:45.921: INFO: Got endpoints: latency-svc-hmbv2 [640.154115ms]
  Apr 15 08:38:45.942: INFO: Created: latency-svc-wlwss
  Apr 15 08:38:45.973: INFO: Got endpoints: latency-svc-rf7gm [679.720074ms]
  Apr 15 08:38:46.039: INFO: Got endpoints: latency-svc-n2mbg [715.523452ms]
  Apr 15 08:38:46.040: INFO: Created: latency-svc-7pcln
  Apr 15 08:38:46.075: INFO: Created: latency-svc-qqwnl
  Apr 15 08:38:46.081: INFO: Got endpoints: latency-svc-f7j9k [705.577723ms]
  Apr 15 08:38:46.116: INFO: Created: latency-svc-k6vm8
  Apr 15 08:38:46.128: INFO: Got endpoints: latency-svc-r8pfd [752.795547ms]
  Apr 15 08:38:46.168: INFO: Created: latency-svc-2886z
  Apr 15 08:38:46.203: INFO: Got endpoints: latency-svc-wb84b [775.667691ms]
  Apr 15 08:38:46.221: INFO: Created: latency-svc-p7w62
  Apr 15 08:38:46.228: INFO: Got endpoints: latency-svc-wz7t7 [734.155192ms]
  Apr 15 08:38:46.256: INFO: Created: latency-svc-kd4kp
  Apr 15 08:38:46.264: INFO: Got endpoints: latency-svc-4xdmk [747.439984ms]
  Apr 15 08:38:46.283: INFO: Created: latency-svc-5mq5h
  E0415 08:38:46.306092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:38:46.315: INFO: Got endpoints: latency-svc-29czh [737.042496ms]
  Apr 15 08:38:46.345: INFO: Created: latency-svc-svxcb
  Apr 15 08:38:46.372: INFO: Got endpoints: latency-svc-tvfzv [747.76423ms]
  Apr 15 08:38:46.394: INFO: Created: latency-svc-9vstr
  Apr 15 08:38:46.418: INFO: Got endpoints: latency-svc-5w2l5 [749.119775ms]
  Apr 15 08:38:46.496: INFO: Got endpoints: latency-svc-wq9pt [775.698977ms]
  Apr 15 08:38:46.498: INFO: Created: latency-svc-h7kdx
  Apr 15 08:38:46.521: INFO: Got endpoints: latency-svc-jqf6c [741.962074ms]
  Apr 15 08:38:46.544: INFO: Created: latency-svc-fstkj
  Apr 15 08:38:46.563: INFO: Got endpoints: latency-svc-d6brl [740.904839ms]
  Apr 15 08:38:46.567: INFO: Created: latency-svc-f2f4w
  Apr 15 08:38:46.591: INFO: Created: latency-svc-j9pr5
  Apr 15 08:38:46.621: INFO: Got endpoints: latency-svc-jk4zm [751.670873ms]
  Apr 15 08:38:46.641: INFO: Created: latency-svc-mm6cf
  Apr 15 08:38:46.671: INFO: Got endpoints: latency-svc-wlwss [750.000393ms]
  Apr 15 08:38:46.709: INFO: Created: latency-svc-w4d2x
  Apr 15 08:38:46.719: INFO: Got endpoints: latency-svc-7pcln [746.136612ms]
  Apr 15 08:38:46.774: INFO: Created: latency-svc-kbv9x
  Apr 15 08:38:46.774: INFO: Got endpoints: latency-svc-qqwnl [734.933675ms]
  Apr 15 08:38:46.811: INFO: Created: latency-svc-wcffj
  Apr 15 08:38:46.827: INFO: Got endpoints: latency-svc-k6vm8 [745.769791ms]
  Apr 15 08:38:46.875: INFO: Got endpoints: latency-svc-2886z [747.294859ms]
  Apr 15 08:38:46.923: INFO: Created: latency-svc-mc2nt
  Apr 15 08:38:46.948: INFO: Got endpoints: latency-svc-p7w62 [744.719134ms]
  Apr 15 08:38:46.963: INFO: Created: latency-svc-9rjdf
  Apr 15 08:38:46.981: INFO: Created: latency-svc-9n62z
  Apr 15 08:38:46.995: INFO: Got endpoints: latency-svc-kd4kp [767.060975ms]
  Apr 15 08:38:47.027: INFO: Got endpoints: latency-svc-5mq5h [762.129171ms]
  Apr 15 08:38:47.036: INFO: Created: latency-svc-6q4k8
  Apr 15 08:38:47.052: INFO: Created: latency-svc-xm7hc
  Apr 15 08:38:47.064: INFO: Got endpoints: latency-svc-svxcb [748.552365ms]
  Apr 15 08:38:47.081: INFO: Created: latency-svc-rcmhc
  Apr 15 08:38:47.119: INFO: Got endpoints: latency-svc-9vstr [747.018239ms]
  Apr 15 08:38:47.164: INFO: Got endpoints: latency-svc-h7kdx [746.24381ms]
  Apr 15 08:38:47.196: INFO: Created: latency-svc-r69h8
  Apr 15 08:38:47.213: INFO: Got endpoints: latency-svc-fstkj [716.155871ms]
  Apr 15 08:38:47.244: INFO: Created: latency-svc-2g9qg
  Apr 15 08:38:47.270: INFO: Got endpoints: latency-svc-f2f4w [749.223401ms]
  Apr 15 08:38:47.279: INFO: Created: latency-svc-fmkww
  Apr 15 08:38:47.301: INFO: Created: latency-svc-kb8fk
  E0415 08:38:47.306722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:38:47.323: INFO: Got endpoints: latency-svc-j9pr5 [759.951362ms]
  Apr 15 08:38:47.341: INFO: Created: latency-svc-pd8j7
  Apr 15 08:38:47.372: INFO: Got endpoints: latency-svc-mm6cf [750.559137ms]
  Apr 15 08:38:47.390: INFO: Created: latency-svc-7tw47
  Apr 15 08:38:47.415: INFO: Got endpoints: latency-svc-w4d2x [744.149506ms]
  Apr 15 08:38:47.439: INFO: Created: latency-svc-c7wtg
  Apr 15 08:38:47.466: INFO: Got endpoints: latency-svc-kbv9x [746.92748ms]
  Apr 15 08:38:47.492: INFO: Created: latency-svc-v2hm7
  Apr 15 08:38:47.520: INFO: Got endpoints: latency-svc-wcffj [744.970062ms]
  Apr 15 08:38:47.540: INFO: Created: latency-svc-bx4cg
  Apr 15 08:38:47.569: INFO: Got endpoints: latency-svc-mc2nt [742.128788ms]
  Apr 15 08:38:47.590: INFO: Created: latency-svc-pfgmd
  Apr 15 08:38:47.615: INFO: Got endpoints: latency-svc-9rjdf [739.760269ms]
  Apr 15 08:38:47.643: INFO: Created: latency-svc-dzkzf
  Apr 15 08:38:47.671: INFO: Got endpoints: latency-svc-9n62z [722.709836ms]
  Apr 15 08:38:47.694: INFO: Created: latency-svc-6s2n7
  Apr 15 08:38:47.717: INFO: Got endpoints: latency-svc-6q4k8 [721.179291ms]
  Apr 15 08:38:47.740: INFO: Created: latency-svc-cv2fs
  Apr 15 08:38:47.768: INFO: Got endpoints: latency-svc-xm7hc [740.488394ms]
  Apr 15 08:38:47.790: INFO: Created: latency-svc-bjxgn
  Apr 15 08:38:47.824: INFO: Got endpoints: latency-svc-rcmhc [760.550723ms]
  Apr 15 08:38:47.846: INFO: Created: latency-svc-z6b9n
  Apr 15 08:38:47.868: INFO: Got endpoints: latency-svc-r69h8 [749.503013ms]
  Apr 15 08:38:47.893: INFO: Created: latency-svc-t9mdt
  Apr 15 08:38:47.915: INFO: Got endpoints: latency-svc-2g9qg [750.90073ms]
  Apr 15 08:38:47.937: INFO: Created: latency-svc-q4kl9
  Apr 15 08:38:47.968: INFO: Got endpoints: latency-svc-fmkww [755.745255ms]
  Apr 15 08:38:47.985: INFO: Created: latency-svc-pzl8t
  Apr 15 08:38:48.014: INFO: Got endpoints: latency-svc-kb8fk [743.809532ms]
  Apr 15 08:38:48.034: INFO: Created: latency-svc-r4jmx
  Apr 15 08:38:48.071: INFO: Got endpoints: latency-svc-pd8j7 [747.283888ms]
  Apr 15 08:38:48.092: INFO: Created: latency-svc-b7wvt
  Apr 15 08:38:48.115: INFO: Got endpoints: latency-svc-7tw47 [742.822689ms]
  Apr 15 08:38:48.133: INFO: Created: latency-svc-x8f6f
  Apr 15 08:38:48.165: INFO: Got endpoints: latency-svc-c7wtg [750.115487ms]
  Apr 15 08:38:48.184: INFO: Created: latency-svc-lwcrs
  Apr 15 08:38:48.215: INFO: Got endpoints: latency-svc-v2hm7 [749.207505ms]
  Apr 15 08:38:48.235: INFO: Created: latency-svc-5fbxj
  Apr 15 08:38:48.264: INFO: Got endpoints: latency-svc-bx4cg [743.796976ms]
  Apr 15 08:38:48.284: INFO: Created: latency-svc-mczv7
  E0415 08:38:48.307416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:38:48.314: INFO: Got endpoints: latency-svc-pfgmd [745.247104ms]
  Apr 15 08:38:48.333: INFO: Created: latency-svc-gqh5z
  Apr 15 08:38:48.366: INFO: Got endpoints: latency-svc-dzkzf [750.277812ms]
  Apr 15 08:38:48.389: INFO: Created: latency-svc-mcvnn
  Apr 15 08:38:48.417: INFO: Got endpoints: latency-svc-6s2n7 [745.502092ms]
  Apr 15 08:38:48.435: INFO: Created: latency-svc-gl5pj
  Apr 15 08:38:48.464: INFO: Got endpoints: latency-svc-cv2fs [746.735098ms]
  Apr 15 08:38:48.483: INFO: Created: latency-svc-xgk7v
  Apr 15 08:38:48.513: INFO: Got endpoints: latency-svc-bjxgn [744.884149ms]
  Apr 15 08:38:48.529: INFO: Created: latency-svc-wm67c
  Apr 15 08:38:48.565: INFO: Got endpoints: latency-svc-z6b9n [740.498369ms]
  Apr 15 08:38:48.587: INFO: Created: latency-svc-p9s5g
  Apr 15 08:38:48.623: INFO: Got endpoints: latency-svc-t9mdt [754.020256ms]
  Apr 15 08:38:48.649: INFO: Created: latency-svc-mhjv2
  Apr 15 08:38:48.665: INFO: Got endpoints: latency-svc-q4kl9 [749.301732ms]
  Apr 15 08:38:48.693: INFO: Created: latency-svc-849jk
  Apr 15 08:38:48.718: INFO: Got endpoints: latency-svc-pzl8t [749.217521ms]
  Apr 15 08:38:48.738: INFO: Created: latency-svc-rcgqx
  Apr 15 08:38:48.765: INFO: Got endpoints: latency-svc-r4jmx [750.047082ms]
  Apr 15 08:38:48.784: INFO: Created: latency-svc-smff4
  Apr 15 08:38:48.815: INFO: Got endpoints: latency-svc-b7wvt [742.995322ms]
  Apr 15 08:38:48.836: INFO: Created: latency-svc-pssgk
  Apr 15 08:38:48.864: INFO: Got endpoints: latency-svc-x8f6f [748.856402ms]
  Apr 15 08:38:48.882: INFO: Created: latency-svc-vk47k
  Apr 15 08:38:48.915: INFO: Got endpoints: latency-svc-lwcrs [749.082976ms]
  Apr 15 08:38:48.934: INFO: Created: latency-svc-gr2dr
  Apr 15 08:38:48.963: INFO: Got endpoints: latency-svc-5fbxj [747.485277ms]
  Apr 15 08:38:48.980: INFO: Created: latency-svc-kd8tf
  Apr 15 08:38:49.016: INFO: Got endpoints: latency-svc-mczv7 [751.50211ms]
  Apr 15 08:38:49.035: INFO: Created: latency-svc-lfjs7
  Apr 15 08:38:49.065: INFO: Got endpoints: latency-svc-gqh5z [749.975567ms]
  Apr 15 08:38:49.087: INFO: Created: latency-svc-xjp45
  Apr 15 08:38:49.114: INFO: Got endpoints: latency-svc-mcvnn [747.895763ms]
  Apr 15 08:38:49.164: INFO: Created: latency-svc-br76z
  Apr 15 08:38:49.167: INFO: Got endpoints: latency-svc-gl5pj [749.70169ms]
  Apr 15 08:38:49.207: INFO: Created: latency-svc-c9995
  Apr 15 08:38:49.222: INFO: Got endpoints: latency-svc-xgk7v [757.65ms]
  Apr 15 08:38:49.249: INFO: Created: latency-svc-shwcp
  Apr 15 08:38:49.262: INFO: Got endpoints: latency-svc-wm67c [748.78886ms]
  Apr 15 08:38:49.281: INFO: Created: latency-svc-mrzlz
  E0415 08:38:49.308187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:38:49.315: INFO: Got endpoints: latency-svc-p9s5g [749.644213ms]
  Apr 15 08:38:49.337: INFO: Created: latency-svc-g46ws
  Apr 15 08:38:49.368: INFO: Got endpoints: latency-svc-mhjv2 [744.5437ms]
  Apr 15 08:38:49.393: INFO: Created: latency-svc-wwvsn
  Apr 15 08:38:49.413: INFO: Got endpoints: latency-svc-849jk [747.396646ms]
  Apr 15 08:38:49.429: INFO: Created: latency-svc-npkhv
  Apr 15 08:38:49.464: INFO: Got endpoints: latency-svc-rcgqx [745.398757ms]
  Apr 15 08:38:49.481: INFO: Created: latency-svc-x658m
  Apr 15 08:38:49.513: INFO: Got endpoints: latency-svc-smff4 [747.60515ms]
  Apr 15 08:38:49.547: INFO: Created: latency-svc-r7d8f
  Apr 15 08:38:49.563: INFO: Got endpoints: latency-svc-pssgk [747.617243ms]
  Apr 15 08:38:49.585: INFO: Created: latency-svc-t6mxm
  Apr 15 08:38:49.618: INFO: Got endpoints: latency-svc-vk47k [753.518375ms]
  Apr 15 08:38:49.663: INFO: Created: latency-svc-ghx6l
  Apr 15 08:38:49.671: INFO: Got endpoints: latency-svc-gr2dr [756.211135ms]
  Apr 15 08:38:49.700: INFO: Created: latency-svc-9nqdz
  Apr 15 08:38:49.722: INFO: Got endpoints: latency-svc-kd8tf [758.174245ms]
  Apr 15 08:38:49.746: INFO: Created: latency-svc-zddmc
  Apr 15 08:38:49.770: INFO: Got endpoints: latency-svc-lfjs7 [753.301607ms]
  Apr 15 08:38:49.792: INFO: Created: latency-svc-q6xgr
  Apr 15 08:38:49.818: INFO: Got endpoints: latency-svc-xjp45 [753.457526ms]
  Apr 15 08:38:49.838: INFO: Created: latency-svc-s5f96
  Apr 15 08:38:49.864: INFO: Got endpoints: latency-svc-br76z [749.205167ms]
  Apr 15 08:38:49.883: INFO: Created: latency-svc-gmdf4
  Apr 15 08:38:49.915: INFO: Got endpoints: latency-svc-c9995 [747.351253ms]
  Apr 15 08:38:49.938: INFO: Created: latency-svc-bd94k
  Apr 15 08:38:49.967: INFO: Got endpoints: latency-svc-shwcp [744.840024ms]
  Apr 15 08:38:49.986: INFO: Created: latency-svc-6x7df
  Apr 15 08:38:50.018: INFO: Got endpoints: latency-svc-mrzlz [755.819049ms]
  Apr 15 08:38:50.040: INFO: Created: latency-svc-cs5cj
  Apr 15 08:38:50.065: INFO: Got endpoints: latency-svc-g46ws [749.611318ms]
  Apr 15 08:38:50.084: INFO: Created: latency-svc-8smc9
  Apr 15 08:38:50.121: INFO: Got endpoints: latency-svc-wwvsn [753.389314ms]
  Apr 15 08:38:50.140: INFO: Created: latency-svc-k56vt
  Apr 15 08:38:50.170: INFO: Got endpoints: latency-svc-npkhv [756.916932ms]
  Apr 15 08:38:50.186: INFO: Created: latency-svc-w884p
  Apr 15 08:38:50.216: INFO: Got endpoints: latency-svc-x658m [752.227956ms]
  Apr 15 08:38:50.240: INFO: Created: latency-svc-sqncr
  Apr 15 08:38:50.264: INFO: Got endpoints: latency-svc-r7d8f [751.441281ms]
  Apr 15 08:38:50.294: INFO: Created: latency-svc-h8t87
  E0415 08:38:50.309231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:38:50.321: INFO: Got endpoints: latency-svc-t6mxm [758.199666ms]
  Apr 15 08:38:50.339: INFO: Created: latency-svc-w49jn
  Apr 15 08:38:50.364: INFO: Got endpoints: latency-svc-ghx6l [745.784261ms]
  Apr 15 08:38:50.386: INFO: Created: latency-svc-gk4dq
  Apr 15 08:38:50.414: INFO: Got endpoints: latency-svc-9nqdz [742.514006ms]
  Apr 15 08:38:50.439: INFO: Created: latency-svc-h6gs8
  Apr 15 08:38:50.476: INFO: Got endpoints: latency-svc-zddmc [753.817451ms]
  Apr 15 08:38:50.494: INFO: Created: latency-svc-twn4r
  Apr 15 08:38:50.513: INFO: Got endpoints: latency-svc-q6xgr [743.491651ms]
  Apr 15 08:38:50.535: INFO: Created: latency-svc-6h7p4
  Apr 15 08:38:50.568: INFO: Got endpoints: latency-svc-s5f96 [749.307442ms]
  Apr 15 08:38:50.592: INFO: Created: latency-svc-s6z2s
  Apr 15 08:38:50.617: INFO: Got endpoints: latency-svc-gmdf4 [753.244805ms]
  Apr 15 08:38:50.647: INFO: Created: latency-svc-4wwpc
  Apr 15 08:38:50.668: INFO: Got endpoints: latency-svc-bd94k [753.194822ms]
  Apr 15 08:38:50.688: INFO: Created: latency-svc-l6pgx
  Apr 15 08:38:50.716: INFO: Got endpoints: latency-svc-6x7df [749.003139ms]
  Apr 15 08:38:50.739: INFO: Created: latency-svc-v4csn
  Apr 15 08:38:50.764: INFO: Got endpoints: latency-svc-cs5cj [744.381592ms]
  Apr 15 08:38:50.786: INFO: Created: latency-svc-5zslq
  Apr 15 08:38:50.815: INFO: Got endpoints: latency-svc-8smc9 [749.599909ms]
  Apr 15 08:38:50.834: INFO: Created: latency-svc-v8fl7
  Apr 15 08:38:50.863: INFO: Got endpoints: latency-svc-k56vt [741.345697ms]
  Apr 15 08:38:50.883: INFO: Created: latency-svc-fn76n
  Apr 15 08:38:50.918: INFO: Got endpoints: latency-svc-w884p [746.788762ms]
  Apr 15 08:38:50.937: INFO: Created: latency-svc-cnkfk
  Apr 15 08:38:50.964: INFO: Got endpoints: latency-svc-sqncr [747.701019ms]
  Apr 15 08:38:50.986: INFO: Created: latency-svc-ll4s7
  Apr 15 08:38:51.018: INFO: Got endpoints: latency-svc-h8t87 [753.181601ms]
  Apr 15 08:38:51.045: INFO: Created: latency-svc-vvw6m
  Apr 15 08:38:51.064: INFO: Got endpoints: latency-svc-w49jn [742.153447ms]
  Apr 15 08:38:51.084: INFO: Created: latency-svc-jwk2h
  Apr 15 08:38:51.120: INFO: Got endpoints: latency-svc-gk4dq [755.185833ms]
  Apr 15 08:38:51.165: INFO: Created: latency-svc-wf4gg
  Apr 15 08:38:51.170: INFO: Got endpoints: latency-svc-h6gs8 [756.00921ms]
  Apr 15 08:38:51.189: INFO: Created: latency-svc-96mqj
  Apr 15 08:38:51.213: INFO: Got endpoints: latency-svc-twn4r [737.36102ms]
  Apr 15 08:38:51.232: INFO: Created: latency-svc-5mn6b
  Apr 15 08:38:51.268: INFO: Got endpoints: latency-svc-6h7p4 [754.051108ms]
  Apr 15 08:38:51.291: INFO: Created: latency-svc-5xxfp
  E0415 08:38:51.309853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:38:51.317: INFO: Got endpoints: latency-svc-s6z2s [748.302921ms]
  Apr 15 08:38:51.343: INFO: Created: latency-svc-2ds2p
  Apr 15 08:38:51.366: INFO: Got endpoints: latency-svc-4wwpc [749.077547ms]
  Apr 15 08:38:51.385: INFO: Created: latency-svc-mt6gr
  Apr 15 08:38:51.414: INFO: Got endpoints: latency-svc-l6pgx [745.716621ms]
  Apr 15 08:38:51.432: INFO: Created: latency-svc-qvl82
  Apr 15 08:38:51.464: INFO: Got endpoints: latency-svc-v4csn [746.810452ms]
  Apr 15 08:38:51.483: INFO: Created: latency-svc-s6qx4
  Apr 15 08:38:51.515: INFO: Got endpoints: latency-svc-5zslq [750.365537ms]
  Apr 15 08:38:51.575: INFO: Got endpoints: latency-svc-v8fl7 [759.160851ms]
  Apr 15 08:38:51.613: INFO: Got endpoints: latency-svc-fn76n [750.072978ms]
  Apr 15 08:38:51.663: INFO: Got endpoints: latency-svc-cnkfk [745.499864ms]
  Apr 15 08:38:51.715: INFO: Got endpoints: latency-svc-ll4s7 [751.212797ms]
  Apr 15 08:38:51.765: INFO: Got endpoints: latency-svc-vvw6m [746.670887ms]
  Apr 15 08:38:51.822: INFO: Got endpoints: latency-svc-jwk2h [758.43031ms]
  Apr 15 08:38:51.867: INFO: Got endpoints: latency-svc-wf4gg [747.114091ms]
  Apr 15 08:38:51.915: INFO: Got endpoints: latency-svc-96mqj [744.952226ms]
  Apr 15 08:38:51.967: INFO: Got endpoints: latency-svc-5mn6b [753.761032ms]
  Apr 15 08:38:52.016: INFO: Got endpoints: latency-svc-5xxfp [748.161954ms]
  Apr 15 08:38:52.063: INFO: Got endpoints: latency-svc-2ds2p [746.402582ms]
  Apr 15 08:38:52.122: INFO: Got endpoints: latency-svc-mt6gr [755.505844ms]
  Apr 15 08:38:52.163: INFO: Got endpoints: latency-svc-qvl82 [748.641988ms]
  Apr 15 08:38:52.215: INFO: Got endpoints: latency-svc-s6qx4 [750.646434ms]
  Apr 15 08:38:52.215: INFO: Latencies: [61.83377ms 105.850894ms 111.61372ms 132.206796ms 167.704892ms 177.048288ms 211.697903ms 213.342122ms 226.271469ms 247.474874ms 253.717677ms 257.729814ms 275.204898ms 278.71002ms 282.829923ms 284.936993ms 285.644966ms 289.10685ms 290.524693ms 292.760641ms 297.987436ms 298.978555ms 299.03172ms 299.527647ms 299.861838ms 300.639931ms 301.277563ms 306.282886ms 307.001536ms 307.213576ms 309.937611ms 311.509017ms 314.487229ms 314.900237ms 315.358871ms 316.612606ms 318.581402ms 318.625124ms 322.187413ms 323.927716ms 326.005449ms 326.249011ms 328.018114ms 336.161824ms 341.305427ms 342.800188ms 346.403545ms 346.589056ms 347.398151ms 347.689151ms 349.994332ms 351.360099ms 365.226084ms 367.643647ms 459.688143ms 495.90567ms 505.61434ms 628.841949ms 639.536717ms 640.154115ms 643.826488ms 667.231231ms 670.852885ms 679.720074ms 682.204676ms 687.950955ms 693.006634ms 705.071526ms 705.577723ms 708.238771ms 715.523452ms 716.155871ms 720.797827ms 721.179291ms 722.709836ms 731.811409ms 734.155192ms 734.933675ms 737.042496ms 737.289021ms 737.36102ms 739.760269ms 740.488394ms 740.498369ms 740.904839ms 741.21068ms 741.345697ms 741.962074ms 742.128788ms 742.153447ms 742.514006ms 742.822689ms 742.995322ms 743.491651ms 743.796976ms 743.809532ms 744.149506ms 744.381592ms 744.5437ms 744.719134ms 744.840024ms 744.884149ms 744.952226ms 744.970062ms 745.247104ms 745.398757ms 745.499864ms 745.502092ms 745.716621ms 745.769791ms 745.784261ms 746.136612ms 746.24381ms 746.402582ms 746.670887ms 746.735098ms 746.788762ms 746.810452ms 746.92748ms 747.018239ms 747.114091ms 747.283888ms 747.294859ms 747.351253ms 747.396646ms 747.439984ms 747.485277ms 747.60515ms 747.617243ms 747.701019ms 747.76423ms 747.895763ms 748.161954ms 748.302921ms 748.552365ms 748.641988ms 748.78886ms 748.856402ms 749.003139ms 749.077547ms 749.082976ms 749.119775ms 749.205167ms 749.207505ms 749.217521ms 749.223401ms 749.301732ms 749.307442ms 749.503013ms 749.599909ms 749.611318ms 749.644213ms 749.70169ms 749.975567ms 750.000393ms 750.047082ms 750.072978ms 750.115487ms 750.277812ms 750.365537ms 750.559137ms 750.646434ms 750.90073ms 751.212797ms 751.441281ms 751.50211ms 751.670873ms 751.946314ms 752.227956ms 752.795547ms 753.181601ms 753.194822ms 753.244805ms 753.301607ms 753.389314ms 753.457526ms 753.518375ms 753.761032ms 753.817451ms 754.020256ms 754.051108ms 755.185833ms 755.505844ms 755.745255ms 755.819049ms 756.00921ms 756.211135ms 756.704233ms 756.916932ms 757.65ms 758.174245ms 758.199666ms 758.43031ms 759.160851ms 759.951362ms 760.550723ms 762.129171ms 767.060975ms 775.667691ms 775.698977ms]
  Apr 15 08:38:52.215: INFO: 50 %ile: 744.840024ms
  Apr 15 08:38:52.215: INFO: 90 %ile: 754.051108ms
  Apr 15 08:38:52.215: INFO: 99 %ile: 775.667691ms
  Apr 15 08:38:52.215: INFO: Total sample count: 200
  Apr 15 08:38:52.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1818" for this suite. @ 04/15/24 08:38:52.231
• [10.948 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 04/15/24 08:38:52.25
  Apr 15 08:38:52.250: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 08:38:52.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:38:52.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:38:52.296
  STEP: Creating a pod to test env composition @ 04/15/24 08:38:52.306
  E0415 08:38:52.309988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:53.312121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:54.311157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:55.311446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:56.311630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:38:56.365
  Apr 15 08:38:56.375: INFO: Trying to get logs from node jec7saimeaph-3 pod var-expansion-fb0062c8-9c6a-4937-8d76-656f0f628dd4 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 08:38:56.422
  Apr 15 08:38:56.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7196" for this suite. @ 04/15/24 08:38:56.487
• [4.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 04/15/24 08:38:56.507
  Apr 15 08:38:56.507: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 08:38:56.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:38:56.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:38:56.552
  E0415 08:38:57.312274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:58.312750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:38:59.313225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:00.315477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:01.315184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:02.315951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:03.315873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:04.316855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:05.317415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:06.318504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:07.318929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:08.318956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:09.320069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:10.321137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:11.321821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:12.322699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:13.323595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:14.324071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:15.324308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:16.324716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:17.324767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:18.325126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:19.325546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:20.325449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:21.325593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:22.325918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:23.326839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:24.327062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:25.327302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:26.327528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:27.327698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:28.328571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:28.805: INFO: Container started at 2024-04-15 08:38:57 +0000 UTC, pod became ready at 2024-04-15 08:39:26 +0000 UTC
  Apr 15 08:39:28.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2241" for this suite. @ 04/15/24 08:39:28.819
• [32.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 04/15/24 08:39:28.841
  Apr 15 08:39:28.841: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 08:39:28.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:39:28.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:39:28.892
  STEP: Creating pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020 @ 04/15/24 08:39:28.898
  E0415 08:39:29.328590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:30.328983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 08:39:30.939
  Apr 15 08:39:30.947: INFO: Initial restart count of pod busybox-a76c5e95-2007-4196-9328-004a08482f01 is 0
  Apr 15 08:39:30.954: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:31.329405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:32.329451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:32.970: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:33.329959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:34.330853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:34.980: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:35.331643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:36.333213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:36.989: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:37.333376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:38.334020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:38.998: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:39.334229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:40.334293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:41.007: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:41.335124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:42.335231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:43.023: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:43.335418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:44.336346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:45.035: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:45.336322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:46.336827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:47.048: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:47.338765      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:48.339338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:49.057: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:49.339630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:50.340480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:51.069: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:51.340192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:52.341187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:53.081: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:53.341739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:54.343399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:55.108: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:55.344213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:56.344614      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:57.118: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:57.345385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:39:58.346178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:39:59.127: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:39:59.346897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:00.347378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:40:01.144: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:40:01.347870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:02.348264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:40:03.155: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:40:03.349161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:04.349863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:40:05.163: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:40:05.350496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:06.350719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:40:07.204: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:40:07.351196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:08.352530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:40:09.213: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:40:09.352538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:10.353454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:40:11.222: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:40:11.354563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:12.355034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:40:13.231: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:40:13.356034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:14.356394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:40:15.247: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:40:15.357021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:16.357225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:40:17.256: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:40:17.357841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:18.358143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:40:19.265: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  E0415 08:40:19.358885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:20.359117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:40:21.273: INFO: Get pod busybox-a76c5e95-2007-4196-9328-004a08482f01 in namespace container-probe-3020
  Apr 15 08:40:21.273: INFO: Restart count of pod container-probe-3020/busybox-a76c5e95-2007-4196-9328-004a08482f01 is now 1 (50.326241342s elapsed)
  STEP: deleting the pod @ 04/15/24 08:40:21.274
  Apr 15 08:40:21.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3020" for this suite. @ 04/15/24 08:40:21.338
• [52.511 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/15/24 08:40:21.356
  Apr 15 08:40:21.356: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 08:40:21.359109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:40:21.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:40:21.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:40:21.403
  STEP: Creating projection with secret that has name projected-secret-test-5de7ce97-ac80-4b3a-af54-be2acfb68943 @ 04/15/24 08:40:21.409
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:40:21.425
  E0415 08:40:22.359434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:23.359772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:40:23.469
  Apr 15 08:40:23.483: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-projected-secrets-53a09694-2f95-490f-bed4-87111108b460 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:40:23.516
  Apr 15 08:40:23.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8576" for this suite. @ 04/15/24 08:40:23.589
• [2.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 04/15/24 08:40:23.617
  Apr 15 08:40:23.618: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 08:40:23.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:40:23.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:40:23.683
  STEP: Creating a pod to test substitution in container's command @ 04/15/24 08:40:23.697
  E0415 08:40:24.359986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:25.360311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:26.361106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:27.361708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:40:27.74
  Apr 15 08:40:27.746: INFO: Trying to get logs from node jec7saimeaph-3 pod var-expansion-666bffc6-7be5-4b25-af09-bb6de4d7ffeb container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 08:40:27.759
  Apr 15 08:40:27.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3175" for this suite. @ 04/15/24 08:40:27.8
• [4.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 04/15/24 08:40:27.823
  Apr 15 08:40:27.824: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename secrets @ 04/15/24 08:40:27.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:40:27.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:40:27.868
  STEP: Creating secret with name secret-test-0492823c-854b-44ef-a4a6-307f99c6214f @ 04/15/24 08:40:27.875
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:40:27.885
  E0415 08:40:28.361841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:29.362453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:30.363275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:31.363594      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:40:31.941
  Apr 15 08:40:31.952: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-secrets-d778daf9-a553-4f01-a868-2c14e574a001 container secret-env-test: <nil>
  STEP: delete the pod @ 04/15/24 08:40:31.971
  Apr 15 08:40:32.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8329" for this suite. @ 04/15/24 08:40:32.018
• [4.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 04/15/24 08:40:32.047
  Apr 15 08:40:32.047: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 08:40:32.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:40:32.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:40:32.101
  Apr 15 08:40:32.108: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 08:40:32.364797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:33.365305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:34.365453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0415 08:40:34.890012      14 warnings.go:70] unknown field "alpha"
  W0415 08:40:34.890420      14 warnings.go:70] unknown field "beta"
  W0415 08:40:34.892236      14 warnings.go:70] unknown field "delta"
  W0415 08:40:34.892511      14 warnings.go:70] unknown field "epsilon"
  W0415 08:40:34.892803      14 warnings.go:70] unknown field "gamma"
  E0415 08:40:35.366140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:40:35.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3218" for this suite. @ 04/15/24 08:40:35.513
• [3.485 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 04/15/24 08:40:35.533
  Apr 15 08:40:35.533: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename sched-preemption @ 04/15/24 08:40:35.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:40:35.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:40:35.578
  Apr 15 08:40:35.620: INFO: Waiting up to 1m0s for all nodes to be ready
  E0415 08:40:36.366798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:37.367029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:38.366984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:39.367989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:40.368933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:41.369978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:42.370270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:43.370896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:44.371406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:45.372506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:46.373378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:47.374649      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:48.374156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:49.374342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:50.375166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:51.375407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:52.376315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:53.377105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:54.377600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:55.377692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:56.378790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:57.379591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:58.379371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:40:59.380092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:00.380512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:01.381391      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:02.381800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:03.383474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:04.382769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:05.383092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:06.384079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:07.384249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:08.385441      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:09.386009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:10.386491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:11.386631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:12.386877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:13.387076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:14.387196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:15.388034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:16.388191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:17.389026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:18.389125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:19.389290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:20.389517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:21.389613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:22.389745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:23.390216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:24.390520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:25.391201      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:26.391659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:27.392116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:28.392829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:29.392879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:30.393125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:31.393221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:32.393366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:33.393554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:34.393682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:35.393841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:41:35.635: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/15/24 08:41:35.643
  Apr 15 08:41:35.703: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 15 08:41:35.733: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 15 08:41:35.805: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 15 08:41:35.868: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 15 08:41:35.945: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 15 08:41:35.963: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/15/24 08:41:35.963
  E0415 08:41:36.394942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:37.395127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:38.396041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:39.396164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/15/24 08:41:40.04
  E0415 08:41:40.396460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:41.397726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:42.398397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:43.398659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:41:44.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1206" for this suite. @ 04/15/24 08:41:44.314
• [68.801 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 04/15/24 08:41:44.338
  Apr 15 08:41:44.339: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename chunking @ 04/15/24 08:41:44.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:41:44.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:41:44.39
  E0415 08:41:44.398548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a large number of resources @ 04/15/24 08:41:44.402
  E0415 08:41:45.399024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:46.400004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:47.400213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:48.400307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:49.400555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:50.401001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:51.401575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:52.402721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:53.403484      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:54.404255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:55.405731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:56.406483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:57.406686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:58.407302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:41:59.407732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:00.407819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:01.408855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 08:42:01.709933      14 request.go:697] Waited for 1.000114465s due to client-side throttling, not priority and fairness, request: POST:https://10.233.0.1:443/api/v1/namespaces/chunking-4537/podtemplates
  STEP: retrieving those results in paged fashion several times @ 04/15/24 08:42:02.06
  Apr 15 08:42:02.109: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Apr 15 08:42:02.158: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Apr 15 08:42:02.208: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Apr 15 08:42:02.258: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Apr 15 08:42:02.309: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Apr 15 08:42:02.359: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  E0415 08:42:02.409138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:42:02.410: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Apr 15 08:42:02.481: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Apr 15 08:42:02.506: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Apr 15 08:42:02.557: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Apr 15 08:42:02.608: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Apr 15 08:42:02.659: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Apr 15 08:42:02.713: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Apr 15 08:42:02.759: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Apr 15 08:42:02.810: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Apr 15 08:42:02.863: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Apr 15 08:42:02.907: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Apr 15 08:42:02.962: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Apr 15 08:42:03.013: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Apr 15 08:42:03.063: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Apr 15 08:42:03.109: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Apr 15 08:42:03.199: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Apr 15 08:42:03.210: INFO: Retrieved 17/17 results with rv 218895 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk1LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Apr 15 08:42:03.258: INFO: Retrieved 9/17 results with rv 218895 and continue 
  Apr 15 08:42:03.311: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Apr 15 08:42:03.358: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  E0415 08:42:03.409507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:42:03.411: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Apr 15 08:42:03.461: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Apr 15 08:42:03.510: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Apr 15 08:42:03.558: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Apr 15 08:42:03.609: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Apr 15 08:42:03.658: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Apr 15 08:42:03.710: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Apr 15 08:42:03.758: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Apr 15 08:42:03.809: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Apr 15 08:42:03.857: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Apr 15 08:42:03.909: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Apr 15 08:42:03.958: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Apr 15 08:42:04.008: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Apr 15 08:42:04.059: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Apr 15 08:42:04.108: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Apr 15 08:42:04.161: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Apr 15 08:42:04.214: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Apr 15 08:42:04.260: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Apr 15 08:42:04.310: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Apr 15 08:42:04.361: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Apr 15 08:42:04.408: INFO: Retrieved 17/17 results with rv 218897 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk3LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  E0415 08:42:04.410195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:42:04.457: INFO: Retrieved 9/17 results with rv 218897 and continue 
  Apr 15 08:42:04.510: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Apr 15 08:42:04.562: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Apr 15 08:42:04.610: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Apr 15 08:42:04.658: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Apr 15 08:42:04.710: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Apr 15 08:42:04.760: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Apr 15 08:42:04.813: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Apr 15 08:42:04.864: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Apr 15 08:42:04.908: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Apr 15 08:42:04.958: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Apr 15 08:42:05.007: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Apr 15 08:42:05.057: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Apr 15 08:42:05.108: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Apr 15 08:42:05.163: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Apr 15 08:42:05.208: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Apr 15 08:42:05.259: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Apr 15 08:42:05.308: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Apr 15 08:42:05.357: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Apr 15 08:42:05.408: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  E0415 08:42:05.410232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:42:05.460: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Apr 15 08:42:05.508: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Apr 15 08:42:05.563: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Apr 15 08:42:05.612: INFO: Retrieved 17/17 results with rv 218898 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4ODk4LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Apr 15 08:42:05.657: INFO: Retrieved 9/17 results with rv 218898 and continue 
  STEP: retrieving those results all at once @ 04/15/24 08:42:05.658
  Apr 15 08:42:05.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4537" for this suite. @ 04/15/24 08:42:05.771
• [21.475 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 04/15/24 08:42:05.814
  Apr 15 08:42:05.815: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename gc @ 04/15/24 08:42:05.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:42:05.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:42:05.865
  STEP: create the deployment @ 04/15/24 08:42:05.873
  W0415 08:42:05.886740      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/15/24 08:42:05.887
  E0415 08:42:06.410977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 04/15/24 08:42:06.422
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/15/24 08:42:06.473
  STEP: Gathering metrics @ 04/15/24 08:42:07.006
  Apr 15 08:42:07.244: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 08:42:07.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1438" for this suite. @ 04/15/24 08:42:07.265
• [1.461 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 04/15/24 08:42:07.281
  Apr 15 08:42:07.281: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 08:42:07.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:42:07.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:42:07.32
  STEP: creating service nodeport-test with type=NodePort in namespace services-5033 @ 04/15/24 08:42:07.328
  STEP: creating replication controller nodeport-test in namespace services-5033 @ 04/15/24 08:42:07.358
  I0415 08:42:07.371877      14 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-5033, replica count: 2
  E0415 08:42:07.417396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:08.418062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:09.418187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:10.419378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 08:42:10.424375      14 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 08:42:10.424: INFO: Creating new exec pod
  E0415 08:42:11.420183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:12.420763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:13.421139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:42:13.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-5033 exec execpodlp7b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Apr 15 08:42:13.957: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Apr 15 08:42:13.957: INFO: stdout: ""
  E0415 08:42:14.421910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:42:14.509: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-5033 exec execpodlp7b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Apr 15 08:42:14.843: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Apr 15 08:42:14.843: INFO: stdout: "nodeport-test-m89zq"
  Apr 15 08:42:14.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-5033 exec execpodlp7b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.28.152 80'
  Apr 15 08:42:15.136: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.28.152 80\nConnection to 10.233.28.152 80 port [tcp/http] succeeded!\n"
  Apr 15 08:42:15.136: INFO: stdout: "nodeport-test-j56hq"
  Apr 15 08:42:15.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-5033 exec execpodlp7b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.146 31676'
  E0415 08:42:15.422554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:42:15.449: INFO: stderr: "+ nc+  -v -t -w 2 192.168.121.146 31676\necho hostName\nConnection to 192.168.121.146 31676 port [tcp/*] succeeded!\n"
  Apr 15 08:42:15.450: INFO: stdout: ""
  Apr 15 08:42:16.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-5033 exec execpodlp7b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.146 31676'
  E0415 08:42:16.423337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:42:16.450: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.146 31676\nConnection to 192.168.121.146 31676 port [tcp/*] succeeded!\n"
  Apr 15 08:42:16.450: INFO: stdout: ""
  Apr 15 08:42:17.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-5033 exec execpodlp7b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.146 31676'
  E0415 08:42:17.423813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:42:17.434: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.146 31676\nConnection to 192.168.121.146 31676 port [tcp/*] succeeded!\n"
  Apr 15 08:42:17.434: INFO: stdout: "nodeport-test-j56hq"
  Apr 15 08:42:17.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-5033 exec execpodlp7b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.90 31676'
  Apr 15 08:42:17.711: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.90 31676\nConnection to 192.168.121.90 31676 port [tcp/*] succeeded!\n"
  Apr 15 08:42:17.711: INFO: stdout: ""
  E0415 08:42:18.423933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:42:18.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-5033 exec execpodlp7b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.90 31676'
  Apr 15 08:42:18.721: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.90 31676\nConnection to 192.168.121.90 31676 port [tcp/*] succeeded!\n"
  Apr 15 08:42:18.721: INFO: stdout: "nodeport-test-j56hq"
  Apr 15 08:42:18.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5033" for this suite. @ 04/15/24 08:42:18.731
• [11.464 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 04/15/24 08:42:18.745
  Apr 15 08:42:18.745: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename gc @ 04/15/24 08:42:18.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:42:18.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:42:18.801
  STEP: create the rc @ 04/15/24 08:42:18.816
  W0415 08:42:18.827842      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0415 08:42:19.424250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:20.425304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:21.426086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:22.426850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:23.428586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:24.428511      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/15/24 08:42:24.926
  STEP: wait for the rc to be deleted @ 04/15/24 08:42:25.031
  E0415 08:42:25.428453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:26.428583      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:27.430153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:28.435179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:29.435320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/15/24 08:42:30.044
  E0415 08:42:30.436088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:31.436343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:32.437049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:33.438077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:34.438518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:35.439021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:36.440041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:37.440676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:38.441411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:39.442019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:40.442484      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:41.442951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:42.443343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:43.443694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:44.443909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:45.450191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:46.451098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:47.451911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:48.452271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:49.453587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:50.454475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:51.454653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:52.455328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:53.456462      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:54.456455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:55.457078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:56.457525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:57.458952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:58.459257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:42:59.459684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/15/24 08:43:00.095
  Apr 15 08:43:00.377: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 08:43:00.394: INFO: Deleting pod "simpletest.rc-47wdc" in namespace "gc-6970"
  Apr 15 08:43:00.454: INFO: Deleting pod "simpletest.rc-4mhcf" in namespace "gc-6970"
  E0415 08:43:00.460425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:00.516: INFO: Deleting pod "simpletest.rc-4nfdq" in namespace "gc-6970"
  Apr 15 08:43:00.537: INFO: Deleting pod "simpletest.rc-528m8" in namespace "gc-6970"
  Apr 15 08:43:00.656: INFO: Deleting pod "simpletest.rc-56trc" in namespace "gc-6970"
  Apr 15 08:43:00.699: INFO: Deleting pod "simpletest.rc-5jk8l" in namespace "gc-6970"
  Apr 15 08:43:00.761: INFO: Deleting pod "simpletest.rc-6bb56" in namespace "gc-6970"
  Apr 15 08:43:00.798: INFO: Deleting pod "simpletest.rc-6bvz7" in namespace "gc-6970"
  Apr 15 08:43:00.887: INFO: Deleting pod "simpletest.rc-6p6fk" in namespace "gc-6970"
  Apr 15 08:43:00.913: INFO: Deleting pod "simpletest.rc-7q224" in namespace "gc-6970"
  Apr 15 08:43:00.958: INFO: Deleting pod "simpletest.rc-88r2v" in namespace "gc-6970"
  Apr 15 08:43:01.048: INFO: Deleting pod "simpletest.rc-89p4v" in namespace "gc-6970"
  Apr 15 08:43:01.129: INFO: Deleting pod "simpletest.rc-8dkwj" in namespace "gc-6970"
  Apr 15 08:43:01.262: INFO: Deleting pod "simpletest.rc-8g5q5" in namespace "gc-6970"
  Apr 15 08:43:01.391: INFO: Deleting pod "simpletest.rc-8m4tl" in namespace "gc-6970"
  E0415 08:43:01.460325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:01.464: INFO: Deleting pod "simpletest.rc-8nvw6" in namespace "gc-6970"
  Apr 15 08:43:01.534: INFO: Deleting pod "simpletest.rc-8qzfx" in namespace "gc-6970"
  Apr 15 08:43:01.635: INFO: Deleting pod "simpletest.rc-8rhtc" in namespace "gc-6970"
  Apr 15 08:43:01.830: INFO: Deleting pod "simpletest.rc-92mdh" in namespace "gc-6970"
  Apr 15 08:43:01.868: INFO: Deleting pod "simpletest.rc-99rmp" in namespace "gc-6970"
  Apr 15 08:43:01.951: INFO: Deleting pod "simpletest.rc-9gr8z" in namespace "gc-6970"
  Apr 15 08:43:01.984: INFO: Deleting pod "simpletest.rc-9rmn6" in namespace "gc-6970"
  Apr 15 08:43:02.012: INFO: Deleting pod "simpletest.rc-9zk46" in namespace "gc-6970"
  Apr 15 08:43:02.258: INFO: Deleting pod "simpletest.rc-bbqpj" in namespace "gc-6970"
  Apr 15 08:43:02.297: INFO: Deleting pod "simpletest.rc-bhckb" in namespace "gc-6970"
  E0415 08:43:02.461088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:02.712: INFO: Deleting pod "simpletest.rc-c2gzk" in namespace "gc-6970"
  Apr 15 08:43:02.836: INFO: Deleting pod "simpletest.rc-c4psb" in namespace "gc-6970"
  Apr 15 08:43:03.033: INFO: Deleting pod "simpletest.rc-c6kpj" in namespace "gc-6970"
  Apr 15 08:43:03.220: INFO: Deleting pod "simpletest.rc-clr8w" in namespace "gc-6970"
  Apr 15 08:43:03.287: INFO: Deleting pod "simpletest.rc-csvpl" in namespace "gc-6970"
  Apr 15 08:43:03.364: INFO: Deleting pod "simpletest.rc-cw8q9" in namespace "gc-6970"
  Apr 15 08:43:03.439: INFO: Deleting pod "simpletest.rc-d4wlf" in namespace "gc-6970"
  E0415 08:43:03.461686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:03.511: INFO: Deleting pod "simpletest.rc-d5x6l" in namespace "gc-6970"
  Apr 15 08:43:03.650: INFO: Deleting pod "simpletest.rc-d7f5f" in namespace "gc-6970"
  Apr 15 08:43:03.859: INFO: Deleting pod "simpletest.rc-dgtrh" in namespace "gc-6970"
  Apr 15 08:43:03.991: INFO: Deleting pod "simpletest.rc-dnhst" in namespace "gc-6970"
  Apr 15 08:43:04.075: INFO: Deleting pod "simpletest.rc-dt9ht" in namespace "gc-6970"
  Apr 15 08:43:04.145: INFO: Deleting pod "simpletest.rc-f2zv5" in namespace "gc-6970"
  Apr 15 08:43:04.213: INFO: Deleting pod "simpletest.rc-fdph8" in namespace "gc-6970"
  Apr 15 08:43:04.261: INFO: Deleting pod "simpletest.rc-fjfgl" in namespace "gc-6970"
  Apr 15 08:43:04.287: INFO: Deleting pod "simpletest.rc-fzwd7" in namespace "gc-6970"
  Apr 15 08:43:04.460: INFO: Deleting pod "simpletest.rc-g4xgb" in namespace "gc-6970"
  E0415 08:43:04.461889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:04.586: INFO: Deleting pod "simpletest.rc-gs6gr" in namespace "gc-6970"
  Apr 15 08:43:04.651: INFO: Deleting pod "simpletest.rc-gw5bt" in namespace "gc-6970"
  Apr 15 08:43:04.717: INFO: Deleting pod "simpletest.rc-h5njm" in namespace "gc-6970"
  Apr 15 08:43:04.787: INFO: Deleting pod "simpletest.rc-h65bg" in namespace "gc-6970"
  Apr 15 08:43:04.848: INFO: Deleting pod "simpletest.rc-hksqg" in namespace "gc-6970"
  Apr 15 08:43:04.942: INFO: Deleting pod "simpletest.rc-hwxs8" in namespace "gc-6970"
  Apr 15 08:43:05.095: INFO: Deleting pod "simpletest.rc-hxdjx" in namespace "gc-6970"
  Apr 15 08:43:05.205: INFO: Deleting pod "simpletest.rc-j468p" in namespace "gc-6970"
  Apr 15 08:43:05.286: INFO: Deleting pod "simpletest.rc-j72rt" in namespace "gc-6970"
  E0415 08:43:05.463013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:05.512: INFO: Deleting pod "simpletest.rc-j9rng" in namespace "gc-6970"
  Apr 15 08:43:05.713: INFO: Deleting pod "simpletest.rc-khzqf" in namespace "gc-6970"
  Apr 15 08:43:05.767: INFO: Deleting pod "simpletest.rc-kjhdl" in namespace "gc-6970"
  Apr 15 08:43:05.841: INFO: Deleting pod "simpletest.rc-kln4r" in namespace "gc-6970"
  Apr 15 08:43:05.914: INFO: Deleting pod "simpletest.rc-krrkw" in namespace "gc-6970"
  Apr 15 08:43:06.012: INFO: Deleting pod "simpletest.rc-ljnrr" in namespace "gc-6970"
  Apr 15 08:43:06.101: INFO: Deleting pod "simpletest.rc-llzcs" in namespace "gc-6970"
  Apr 15 08:43:06.151: INFO: Deleting pod "simpletest.rc-ltpc4" in namespace "gc-6970"
  Apr 15 08:43:06.182: INFO: Deleting pod "simpletest.rc-m7btb" in namespace "gc-6970"
  Apr 15 08:43:06.285: INFO: Deleting pod "simpletest.rc-mg2mf" in namespace "gc-6970"
  Apr 15 08:43:06.353: INFO: Deleting pod "simpletest.rc-msjqz" in namespace "gc-6970"
  Apr 15 08:43:06.409: INFO: Deleting pod "simpletest.rc-mwdx2" in namespace "gc-6970"
  E0415 08:43:06.463667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:06.514: INFO: Deleting pod "simpletest.rc-n5tj2" in namespace "gc-6970"
  Apr 15 08:43:06.573: INFO: Deleting pod "simpletest.rc-n7gj7" in namespace "gc-6970"
  Apr 15 08:43:06.761: INFO: Deleting pod "simpletest.rc-n99fk" in namespace "gc-6970"
  Apr 15 08:43:06.907: INFO: Deleting pod "simpletest.rc-nbmxz" in namespace "gc-6970"
  Apr 15 08:43:06.978: INFO: Deleting pod "simpletest.rc-np7wr" in namespace "gc-6970"
  Apr 15 08:43:07.050: INFO: Deleting pod "simpletest.rc-nqzcx" in namespace "gc-6970"
  Apr 15 08:43:07.170: INFO: Deleting pod "simpletest.rc-nxjcq" in namespace "gc-6970"
  Apr 15 08:43:07.376: INFO: Deleting pod "simpletest.rc-p452g" in namespace "gc-6970"
  Apr 15 08:43:07.454: INFO: Deleting pod "simpletest.rc-p5gq9" in namespace "gc-6970"
  E0415 08:43:07.464758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:07.524: INFO: Deleting pod "simpletest.rc-p8wdr" in namespace "gc-6970"
  Apr 15 08:43:07.628: INFO: Deleting pod "simpletest.rc-pv6gf" in namespace "gc-6970"
  Apr 15 08:43:07.721: INFO: Deleting pod "simpletest.rc-q5r5q" in namespace "gc-6970"
  Apr 15 08:43:07.769: INFO: Deleting pod "simpletest.rc-q7gng" in namespace "gc-6970"
  Apr 15 08:43:07.803: INFO: Deleting pod "simpletest.rc-qsgzl" in namespace "gc-6970"
  Apr 15 08:43:07.849: INFO: Deleting pod "simpletest.rc-qz2wh" in namespace "gc-6970"
  Apr 15 08:43:07.934: INFO: Deleting pod "simpletest.rc-r548b" in namespace "gc-6970"
  Apr 15 08:43:07.991: INFO: Deleting pod "simpletest.rc-rc9xn" in namespace "gc-6970"
  Apr 15 08:43:08.105: INFO: Deleting pod "simpletest.rc-s54dp" in namespace "gc-6970"
  Apr 15 08:43:08.161: INFO: Deleting pod "simpletest.rc-s59sl" in namespace "gc-6970"
  Apr 15 08:43:08.225: INFO: Deleting pod "simpletest.rc-sdpwq" in namespace "gc-6970"
  Apr 15 08:43:08.287: INFO: Deleting pod "simpletest.rc-t5tdv" in namespace "gc-6970"
  Apr 15 08:43:08.353: INFO: Deleting pod "simpletest.rc-tbtmp" in namespace "gc-6970"
  E0415 08:43:08.464916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:08.559: INFO: Deleting pod "simpletest.rc-tgmt9" in namespace "gc-6970"
  Apr 15 08:43:08.635: INFO: Deleting pod "simpletest.rc-tgt68" in namespace "gc-6970"
  Apr 15 08:43:08.688: INFO: Deleting pod "simpletest.rc-thj5n" in namespace "gc-6970"
  Apr 15 08:43:08.769: INFO: Deleting pod "simpletest.rc-tmwnl" in namespace "gc-6970"
  Apr 15 08:43:08.841: INFO: Deleting pod "simpletest.rc-v2kmb" in namespace "gc-6970"
  Apr 15 08:43:09.027: INFO: Deleting pod "simpletest.rc-vm67f" in namespace "gc-6970"
  Apr 15 08:43:09.160: INFO: Deleting pod "simpletest.rc-vvh4s" in namespace "gc-6970"
  Apr 15 08:43:09.276: INFO: Deleting pod "simpletest.rc-vxrhl" in namespace "gc-6970"
  E0415 08:43:09.465561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:09.651: INFO: Deleting pod "simpletest.rc-w8rm7" in namespace "gc-6970"
  Apr 15 08:43:09.723: INFO: Deleting pod "simpletest.rc-wlhjk" in namespace "gc-6970"
  Apr 15 08:43:09.775: INFO: Deleting pod "simpletest.rc-wr6pg" in namespace "gc-6970"
  Apr 15 08:43:09.866: INFO: Deleting pod "simpletest.rc-xvbkn" in namespace "gc-6970"
  Apr 15 08:43:10.031: INFO: Deleting pod "simpletest.rc-xwq4c" in namespace "gc-6970"
  Apr 15 08:43:10.103: INFO: Deleting pod "simpletest.rc-zkgpb" in namespace "gc-6970"
  Apr 15 08:43:10.221: INFO: Deleting pod "simpletest.rc-ztkq8" in namespace "gc-6970"
  Apr 15 08:43:10.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6970" for this suite. @ 04/15/24 08:43:10.276
• [51.605 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/15/24 08:43:10.352
  Apr 15 08:43:10.352: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename secrets @ 04/15/24 08:43:10.362
  E0415 08:43:10.465760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:43:10.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:43:10.745
  STEP: Creating secret with name secret-test-b3eacf0e-d18d-45aa-a67c-d4802d3a0c7c @ 04/15/24 08:43:10.753
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:43:10.794
  E0415 08:43:11.466821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:12.466916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:13.468060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:14.468748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:43:15.002
  Apr 15 08:43:15.017: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-secrets-517f278a-de77-49f9-b02d-089acfdb0a75 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:43:15.071
  Apr 15 08:43:15.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1316" for this suite. @ 04/15/24 08:43:15.123
• [4.787 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 04/15/24 08:43:15.153
  Apr 15 08:43:15.154: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 08:43:15.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:43:15.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:43:15.217
  E0415 08:43:15.469032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:16.469405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:17.271: INFO: Deleting pod "var-expansion-acf2923a-caf3-404c-a160-5aaa0f44e0eb" in namespace "var-expansion-8839"
  Apr 15 08:43:17.302: INFO: Wait up to 5m0s for pod "var-expansion-acf2923a-caf3-404c-a160-5aaa0f44e0eb" to be fully deleted
  E0415 08:43:17.469754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:18.469671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:19.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8839" for this suite. @ 04/15/24 08:43:19.336
• [4.206 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 04/15/24 08:43:19.359
  Apr 15 08:43:19.359: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 08:43:19.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:43:19.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:43:19.411
  STEP: Given a ReplicationController is created @ 04/15/24 08:43:19.42
  STEP: When the matched label of one of its pods change @ 04/15/24 08:43:19.435
  Apr 15 08:43:19.447: INFO: Pod name pod-release: Found 0 pods out of 1
  E0415 08:43:19.470295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:20.470626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:21.471714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:22.471649      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:23.472179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:24.456: INFO: Pod name pod-release: Found 1 pods out of 1
  E0415 08:43:24.472831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Then the pod is released @ 04/15/24 08:43:24.48
  E0415 08:43:25.473921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:43:25.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9239" for this suite. @ 04/15/24 08:43:25.506
• [6.162 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 04/15/24 08:43:25.521
  Apr 15 08:43:25.521: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:43:25.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:43:25.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:43:25.557
  STEP: Creating configMap with name projected-configmap-test-volume-map-cf78b012-7402-4561-bd0e-1d1dd3353928 @ 04/15/24 08:43:25.564
  STEP: Creating a pod to test consume configMaps @ 04/15/24 08:43:25.578
  E0415 08:43:26.473897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:27.474083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:28.474331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:29.475023      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:43:29.618
  Apr 15 08:43:29.629: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-projected-configmaps-27f24de3-b3e4-4856-a34b-ea9c1f2b8b5d container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 08:43:29.645
  Apr 15 08:43:29.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6944" for this suite. @ 04/15/24 08:43:29.682
• [4.174 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 04/15/24 08:43:29.698
  Apr 15 08:43:29.699: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:43:29.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:43:29.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:43:29.745
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:43:29.751
  E0415 08:43:30.476032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:31.476406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:32.477194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:33.477372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:43:33.798
  Apr 15 08:43:33.804: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-1e8714da-13a8-4483-bd13-825bb840d80d container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:43:33.819
  Apr 15 08:43:33.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4022" for this suite. @ 04/15/24 08:43:33.863
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 04/15/24 08:43:33.889
  Apr 15 08:43:33.889: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 08:43:33.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:43:33.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:43:33.955
  Apr 15 08:43:33.991: INFO: created pod
  E0415 08:43:34.477705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:35.477897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:36.478068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:37.478531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:43:38.027
  E0415 08:43:38.479184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:39.480315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:40.480945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:41.481865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:42.482903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:43.482069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:44.482446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:45.482904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:46.483325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:47.484277      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:48.485362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:49.486226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:50.485978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:51.486825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:52.486697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:53.486894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:54.487012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:55.487325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:56.487572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:57.488099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:58.488843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:43:59.489790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:00.490510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:01.491461      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:02.492074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:03.492142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:04.492558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:05.493343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:06.493477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:07.493599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:08.028: INFO: polling logs
  Apr 15 08:44:08.047: INFO: Pod logs: 
  I0415 08:43:34.761243       1 log.go:245] OK: Got token
  I0415 08:43:34.762853       1 log.go:245] validating with in-cluster discovery
  I0415 08:43:34.764907       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0415 08:43:34.764966       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-490:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000b9540), NotBefore:(*jwt.NumericDate)(0xc0000b9628), IssuedAt:(*jwt.NumericDate)(0xc0000b9550), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-490", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"e67cbfe7-2dfb-4565-964a-4ae13e22a20e"}}}
  I0415 08:43:34.810457       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0415 08:43:34.824930       1 log.go:245] OK: Validated signature on JWT
  I0415 08:43:34.825275       1 log.go:245] OK: Got valid claims from token!
  I0415 08:43:34.825391       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-490:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012ad8), NotBefore:(*jwt.NumericDate)(0xc000012b00), IssuedAt:(*jwt.NumericDate)(0xc000012ae0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-490", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"e67cbfe7-2dfb-4565-964a-4ae13e22a20e"}}}

  Apr 15 08:44:08.047: INFO: completed pod
  Apr 15 08:44:08.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-490" for this suite. @ 04/15/24 08:44:08.074
• [34.199 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 04/15/24 08:44:08.093
  Apr 15 08:44:08.093: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:44:08.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:44:08.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:44:08.144
  STEP: Setting up server cert @ 04/15/24 08:44:08.192
  E0415 08:44:08.494009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:09.495471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:44:09.8
  STEP: Deploying the webhook pod @ 04/15/24 08:44:09.819
  STEP: Wait for the deployment to be ready @ 04/15/24 08:44:09.846
  Apr 15 08:44:09.863: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0415 08:44:10.496204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:11.496883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:11.894: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 44, 9, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 44, 9, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 44, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 44, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:44:12.497862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:13.497808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 08:44:13.903
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:44:13.937
  E0415 08:44:14.497932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:14.938: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/15/24 08:44:14.952
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/15/24 08:44:14.956
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/15/24 08:44:14.956
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/15/24 08:44:14.956
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/15/24 08:44:14.959
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/15/24 08:44:14.959
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/15/24 08:44:14.963
  Apr 15 08:44:15.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1033" for this suite. @ 04/15/24 08:44:15.09
  STEP: Destroying namespace "webhook-markers-2091" for this suite. @ 04/15/24 08:44:15.12
• [7.041 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 04/15/24 08:44:15.137
  Apr 15 08:44:15.137: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 08:44:15.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:44:15.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:44:15.222
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5526 @ 04/15/24 08:44:15.23
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/15/24 08:44:15.254
  STEP: creating service externalsvc in namespace services-5526 @ 04/15/24 08:44:15.254
  STEP: creating replication controller externalsvc in namespace services-5526 @ 04/15/24 08:44:15.286
  I0415 08:44:15.307077      14 runners.go:197] Created replication controller with name: externalsvc, namespace: services-5526, replica count: 2
  E0415 08:44:15.498227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:16.499901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:17.499818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 08:44:18.358519      14 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/15/24 08:44:18.366
  Apr 15 08:44:18.394: INFO: Creating new exec pod
  E0415 08:44:18.500826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:19.501093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:20.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-5526 exec execpodv5lz8 -- /bin/sh -x -c nslookup clusterip-service.services-5526.svc.cluster.local'
  E0415 08:44:20.501148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:21.054: INFO: stderr: "+ nslookup clusterip-service.services-5526.svc.cluster.local\n"
  Apr 15 08:44:21.054: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-5526.svc.cluster.local\tcanonical name = externalsvc.services-5526.svc.cluster.local.\nName:\texternalsvc.services-5526.svc.cluster.local\nAddress: 10.233.24.204\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-5526, will wait for the garbage collector to delete the pods @ 04/15/24 08:44:21.055
  Apr 15 08:44:21.130: INFO: Deleting ReplicationController externalsvc took: 15.999513ms
  Apr 15 08:44:21.232: INFO: Terminating ReplicationController externalsvc pods took: 102.020916ms
  E0415 08:44:21.501934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:22.502919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:23.503961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:23.981: INFO: Cleaning up the ClusterIP to ExternalName test service
  Apr 15 08:44:24.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5526" for this suite. @ 04/15/24 08:44:24.025
• [8.902 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 04/15/24 08:44:24.04
  Apr 15 08:44:24.040: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 08:44:24.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:44:24.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:44:24.089
  STEP: Read namespace status @ 04/15/24 08:44:24.097
  Apr 15 08:44:24.112: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/15/24 08:44:24.112
  Apr 15 08:44:24.128: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/15/24 08:44:24.128
  Apr 15 08:44:24.146: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Apr 15 08:44:24.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3280" for this suite. @ 04/15/24 08:44:24.158
• [0.134 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 04/15/24 08:44:24.175
  Apr 15 08:44:24.175: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename disruption @ 04/15/24 08:44:24.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:44:24.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:44:24.237
  STEP: Waiting for the pdb to be processed @ 04/15/24 08:44:24.259
  E0415 08:44:24.504636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:25.505019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 04/15/24 08:44:26.319
  Apr 15 08:44:26.328: INFO: running pods: 0 < 3
  E0415 08:44:26.505872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:27.505996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:28.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9013" for this suite. @ 04/15/24 08:44:28.343
• [4.182 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 04/15/24 08:44:28.358
  Apr 15 08:44:28.358: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename dns @ 04/15/24 08:44:28.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:44:28.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:44:28.405
  STEP: Creating a test headless service @ 04/15/24 08:44:28.412
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9783 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9783;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9783 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9783;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9783.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9783.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9783.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9783.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9783.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9783.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9783.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9783.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9783.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9783.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9783.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9783.svc;check="$$(dig +notcp +noall +answer +search 248.56.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.56.248_udp@PTR;check="$$(dig +tcp +noall +answer +search 248.56.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.56.248_tcp@PTR;sleep 1; done
   @ 04/15/24 08:44:28.447
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9783 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9783;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9783 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9783;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9783.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9783.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9783.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9783.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9783.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9783.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9783.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9783.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9783.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9783.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9783.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9783.svc;check="$$(dig +notcp +noall +answer +search 248.56.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.56.248_udp@PTR;check="$$(dig +tcp +noall +answer +search 248.56.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.56.248_tcp@PTR;sleep 1; done
   @ 04/15/24 08:44:28.447
  STEP: creating a pod to probe DNS @ 04/15/24 08:44:28.448
  STEP: submitting the pod to kubernetes @ 04/15/24 08:44:28.448
  E0415 08:44:28.507257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:29.507929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:30.507633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:31.507968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 08:44:32.497
  STEP: looking for the results for each expected name from probers @ 04/15/24 08:44:32.505
  E0415 08:44:32.508612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:32.516: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.524: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.533: INFO: Unable to read wheezy_udp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.540: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.548: INFO: Unable to read wheezy_udp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.556: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.561: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.569: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.613: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.621: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.641: INFO: Unable to read jessie_udp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.652: INFO: Unable to read jessie_tcp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.662: INFO: Unable to read jessie_udp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.671: INFO: Unable to read jessie_tcp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.679: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.689: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:32.726: INFO: Lookups using dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9783 wheezy_tcp@dns-test-service.dns-9783 wheezy_udp@dns-test-service.dns-9783.svc wheezy_tcp@dns-test-service.dns-9783.svc wheezy_udp@_http._tcp.dns-test-service.dns-9783.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9783.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9783 jessie_tcp@dns-test-service.dns-9783 jessie_udp@dns-test-service.dns-9783.svc jessie_tcp@dns-test-service.dns-9783.svc jessie_udp@_http._tcp.dns-test-service.dns-9783.svc jessie_tcp@_http._tcp.dns-test-service.dns-9783.svc]

  Apr 15 08:44:32.740: INFO: Pod client logs for webserver: 
  Apr 15 08:44:32.754: INFO: Pod client logs for querier: 
  Apr 15 08:44:32.769: INFO: Pod client logs for jessie-querier: 
  E0415 08:44:33.510143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:34.510019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:35.510396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:36.510416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:37.510808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:37.515: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.526: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.535: INFO: Unable to read wheezy_udp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.545: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.554: INFO: Unable to read wheezy_udp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.566: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.574: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.584: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.621: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.629: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.641: INFO: Unable to read jessie_udp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.649: INFO: Unable to read jessie_tcp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.657: INFO: Unable to read jessie_udp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.668: INFO: Unable to read jessie_tcp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.679: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.687: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:37.723: INFO: Lookups using dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9783 wheezy_tcp@dns-test-service.dns-9783 wheezy_udp@dns-test-service.dns-9783.svc wheezy_tcp@dns-test-service.dns-9783.svc wheezy_udp@_http._tcp.dns-test-service.dns-9783.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9783.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9783 jessie_tcp@dns-test-service.dns-9783 jessie_udp@dns-test-service.dns-9783.svc jessie_tcp@dns-test-service.dns-9783.svc jessie_udp@_http._tcp.dns-test-service.dns-9783.svc jessie_tcp@_http._tcp.dns-test-service.dns-9783.svc]

  Apr 15 08:44:37.737: INFO: Pod client logs for webserver: 
  Apr 15 08:44:37.752: INFO: Pod client logs for querier: 
  Apr 15 08:44:37.776: INFO: Pod client logs for jessie-querier: 
  E0415 08:44:38.511427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:39.512020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:40.512688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:41.512392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:42.512529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:42.517: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.526: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.538: INFO: Unable to read wheezy_udp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.548: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.556: INFO: Unable to read wheezy_udp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.564: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.572: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.581: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.639: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.652: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.659: INFO: Unable to read jessie_udp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.666: INFO: Unable to read jessie_tcp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.676: INFO: Unable to read jessie_udp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.686: INFO: Unable to read jessie_tcp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.699: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.707: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:42.755: INFO: Lookups using dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9783 wheezy_tcp@dns-test-service.dns-9783 wheezy_udp@dns-test-service.dns-9783.svc wheezy_tcp@dns-test-service.dns-9783.svc wheezy_udp@_http._tcp.dns-test-service.dns-9783.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9783.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9783 jessie_tcp@dns-test-service.dns-9783 jessie_udp@dns-test-service.dns-9783.svc jessie_tcp@dns-test-service.dns-9783.svc jessie_udp@_http._tcp.dns-test-service.dns-9783.svc jessie_tcp@_http._tcp.dns-test-service.dns-9783.svc]

  Apr 15 08:44:42.786: INFO: Pod client logs for webserver: 
  Apr 15 08:44:42.805: INFO: Pod client logs for querier: 
  Apr 15 08:44:42.823: INFO: Pod client logs for jessie-querier: 
  E0415 08:44:43.513672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:44.514321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:45.514015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:46.514885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:47.515: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  E0415 08:44:47.516095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:47.525: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.533: INFO: Unable to read wheezy_udp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.539: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.558: INFO: Unable to read wheezy_udp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.564: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.571: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.579: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.627: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.635: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.642: INFO: Unable to read jessie_udp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.650: INFO: Unable to read jessie_tcp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.658: INFO: Unable to read jessie_udp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.665: INFO: Unable to read jessie_tcp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.672: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.685: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:47.715: INFO: Lookups using dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9783 wheezy_tcp@dns-test-service.dns-9783 wheezy_udp@dns-test-service.dns-9783.svc wheezy_tcp@dns-test-service.dns-9783.svc wheezy_udp@_http._tcp.dns-test-service.dns-9783.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9783.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9783 jessie_tcp@dns-test-service.dns-9783 jessie_udp@dns-test-service.dns-9783.svc jessie_tcp@dns-test-service.dns-9783.svc jessie_udp@_http._tcp.dns-test-service.dns-9783.svc jessie_tcp@_http._tcp.dns-test-service.dns-9783.svc]

  Apr 15 08:44:47.731: INFO: Pod client logs for webserver: 
  Apr 15 08:44:47.747: INFO: Pod client logs for querier: 
  Apr 15 08:44:47.762: INFO: Pod client logs for jessie-querier: 
  E0415 08:44:48.516263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:49.516888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:50.517386      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:51.518286      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:52.515: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  E0415 08:44:52.518044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:52.524: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.541: INFO: Unable to read wheezy_udp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.550: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.557: INFO: Unable to read wheezy_udp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.567: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.578: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.585: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.645: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.654: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.668: INFO: Unable to read jessie_udp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.679: INFO: Unable to read jessie_tcp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.686: INFO: Unable to read jessie_udp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.694: INFO: Unable to read jessie_tcp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.701: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.710: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:52.738: INFO: Lookups using dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9783 wheezy_tcp@dns-test-service.dns-9783 wheezy_udp@dns-test-service.dns-9783.svc wheezy_tcp@dns-test-service.dns-9783.svc wheezy_udp@_http._tcp.dns-test-service.dns-9783.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9783.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9783 jessie_tcp@dns-test-service.dns-9783 jessie_udp@dns-test-service.dns-9783.svc jessie_tcp@dns-test-service.dns-9783.svc jessie_udp@_http._tcp.dns-test-service.dns-9783.svc jessie_tcp@_http._tcp.dns-test-service.dns-9783.svc]

  Apr 15 08:44:52.752: INFO: Pod client logs for webserver: 
  Apr 15 08:44:52.771: INFO: Pod client logs for querier: 
  Apr 15 08:44:52.786: INFO: Pod client logs for jessie-querier: 
  E0415 08:44:53.518452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:54.518749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:55.519266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:56.520190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:57.517: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  E0415 08:44:57.521402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:44:57.530: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.543: INFO: Unable to read wheezy_udp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.555: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.578: INFO: Unable to read wheezy_udp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.593: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.603: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.614: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.671: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.682: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.693: INFO: Unable to read jessie_udp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.703: INFO: Unable to read jessie_tcp@dns-test-service.dns-9783 from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.713: INFO: Unable to read jessie_udp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.729: INFO: Unable to read jessie_tcp@dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.738: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.748: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9783.svc from pod dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b: the server could not find the requested resource (get pods dns-test-859bb852-e8d6-456a-935c-952cf97fd01b)
  Apr 15 08:44:57.786: INFO: Lookups using dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9783 wheezy_tcp@dns-test-service.dns-9783 wheezy_udp@dns-test-service.dns-9783.svc wheezy_tcp@dns-test-service.dns-9783.svc wheezy_udp@_http._tcp.dns-test-service.dns-9783.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9783.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9783 jessie_tcp@dns-test-service.dns-9783 jessie_udp@dns-test-service.dns-9783.svc jessie_tcp@dns-test-service.dns-9783.svc jessie_udp@_http._tcp.dns-test-service.dns-9783.svc jessie_tcp@_http._tcp.dns-test-service.dns-9783.svc]

  Apr 15 08:44:57.802: INFO: Pod client logs for webserver: 
  Apr 15 08:44:57.819: INFO: Pod client logs for querier: 
  Apr 15 08:44:57.836: INFO: Pod client logs for jessie-querier: 
  E0415 08:44:58.522472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:44:59.522886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:00.523179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:01.524147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:02.525005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:45:02.746: INFO: DNS probes using dns-9783/dns-test-859bb852-e8d6-456a-935c-952cf97fd01b succeeded

  STEP: deleting the pod @ 04/15/24 08:45:02.747
  STEP: deleting the test service @ 04/15/24 08:45:02.785
  STEP: deleting the test headless service @ 04/15/24 08:45:02.918
  Apr 15 08:45:02.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9783" for this suite. @ 04/15/24 08:45:02.987
• [34.652 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 04/15/24 08:45:03.018
  Apr 15 08:45:03.018: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 08:45:03.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:03.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:03.079
  Apr 15 08:45:03.086: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 08:45:03.525831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:04.526969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:05.527698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:45:06.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5962" for this suite. @ 04/15/24 08:45:06.493
• [3.488 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 04/15/24 08:45:06.51
  Apr 15 08:45:06.511: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:45:06.515
  E0415 08:45:06.528841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:06.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:06.551
  STEP: Setting up server cert @ 04/15/24 08:45:06.612
  E0415 08:45:07.529632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:45:07.591
  STEP: Deploying the webhook pod @ 04/15/24 08:45:07.608
  STEP: Wait for the deployment to be ready @ 04/15/24 08:45:07.644
  Apr 15 08:45:07.663: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 08:45:08.530788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:09.530468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 08:45:09.686
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:45:09.713
  E0415 08:45:10.530923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:45:10.714: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 15 08:45:10.732: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9977-crds.webhook.example.com via the AdmissionRegistration API @ 04/15/24 08:45:11.266
  Apr 15 08:45:11.304: INFO: Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource while v1 is storage version @ 04/15/24 08:45:11.431
  E0415 08:45:11.531090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:12.531879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:13.532934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/15/24 08:45:13.968
  STEP: Patching the custom resource while v2 is storage version @ 04/15/24 08:45:13.982
  E0415 08:45:14.533301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:45:14.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1919" for this suite. @ 04/15/24 08:45:14.888
  STEP: Destroying namespace "webhook-markers-7241" for this suite. @ 04/15/24 08:45:14.906
• [8.410 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/15/24 08:45:14.924
  Apr 15 08:45:14.925: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename subpath @ 04/15/24 08:45:14.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:14.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:14.967
  STEP: Setting up data @ 04/15/24 08:45:14.974
  STEP: Creating pod pod-subpath-test-configmap-vtck @ 04/15/24 08:45:14.995
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 08:45:14.995
  E0415 08:45:15.533774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:16.534949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:17.535134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:18.535598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:19.535775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:20.536013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:21.536847      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:22.537508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:23.537665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:24.537805      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:25.538064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:26.538486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:27.539175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:28.540325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:29.541187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:30.541400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:31.541694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:32.541965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:33.542138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:34.542487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:35.543172      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:36.543381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:37.544437      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:38.545208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:45:39.125
  Apr 15 08:45:39.136: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-subpath-test-configmap-vtck container test-container-subpath-configmap-vtck: <nil>
  STEP: delete the pod @ 04/15/24 08:45:39.159
  STEP: Deleting pod pod-subpath-test-configmap-vtck @ 04/15/24 08:45:39.204
  Apr 15 08:45:39.204: INFO: Deleting pod "pod-subpath-test-configmap-vtck" in namespace "subpath-8435"
  Apr 15 08:45:39.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8435" for this suite. @ 04/15/24 08:45:39.22
• [24.310 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 04/15/24 08:45:39.237
  Apr 15 08:45:39.237: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 08:45:39.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:39.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:39.313
  STEP: creating a ConfigMap @ 04/15/24 08:45:39.319
  STEP: fetching the ConfigMap @ 04/15/24 08:45:39.33
  STEP: patching the ConfigMap @ 04/15/24 08:45:39.338
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/15/24 08:45:39.349
  STEP: deleting the ConfigMap by collection with a label selector @ 04/15/24 08:45:39.358
  STEP: listing all ConfigMaps in test namespace @ 04/15/24 08:45:39.376
  Apr 15 08:45:39.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9850" for this suite. @ 04/15/24 08:45:39.402
• [0.182 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 04/15/24 08:45:39.426
  Apr 15 08:45:39.426: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:45:39.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:39.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:39.469
  STEP: Setting up server cert @ 04/15/24 08:45:39.523
  E0415 08:45:39.546026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:45:40.321
  STEP: Deploying the webhook pod @ 04/15/24 08:45:40.338
  STEP: Wait for the deployment to be ready @ 04/15/24 08:45:40.359
  Apr 15 08:45:40.375: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0415 08:45:40.547163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:41.547281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 08:45:42.395
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:45:42.422
  E0415 08:45:42.547519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:45:43.423: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/15/24 08:45:43.442
  STEP: create a namespace for the webhook @ 04/15/24 08:45:43.483
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/15/24 08:45:43.52
  E0415 08:45:43.547542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:45:43.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8897" for this suite. @ 04/15/24 08:45:43.683
  STEP: Destroying namespace "webhook-markers-8797" for this suite. @ 04/15/24 08:45:43.696
  STEP: Destroying namespace "fail-closed-namespace-2511" for this suite. @ 04/15/24 08:45:43.712
• [4.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 04/15/24 08:45:43.73
  Apr 15 08:45:43.731: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/15/24 08:45:43.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:43.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:43.771
  STEP: create the container to handle the HTTPGet hook request. @ 04/15/24 08:45:43.785
  E0415 08:45:44.548425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:45.548899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/15/24 08:45:45.836
  E0415 08:45:46.549568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:47.549735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/15/24 08:45:47.883
  STEP: delete the pod with lifecycle hook @ 04/15/24 08:45:47.926
  E0415 08:45:48.550783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:49.550961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:50.551353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:51.551787      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:45:51.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6940" for this suite. @ 04/15/24 08:45:51.979
• [8.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 04/15/24 08:45:52.007
  Apr 15 08:45:52.007: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:45:52.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:52.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:52.054
  STEP: Creating configMap with name projected-configmap-test-volume-9e11e28c-79a5-4257-a6e2-de24fa17da08 @ 04/15/24 08:45:52.061
  STEP: Creating a pod to test consume configMaps @ 04/15/24 08:45:52.07
  E0415 08:45:52.552878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:53.553518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:45:54.116
  Apr 15 08:45:54.121: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-projected-configmaps-434aa350-9a35-4da8-96c7-71848c009c4c container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 08:45:54.146
  Apr 15 08:45:54.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6223" for this suite. @ 04/15/24 08:45:54.185
• [2.195 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 04/15/24 08:45:54.207
  Apr 15 08:45:54.207: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 08:45:54.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:54.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:54.25
  STEP: Creating configMap with name configmap-test-volume-74152ddd-ddd7-4b7a-8f16-95ca7026c478 @ 04/15/24 08:45:54.258
  STEP: Creating a pod to test consume configMaps @ 04/15/24 08:45:54.27
  E0415 08:45:54.554415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:55.554684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:56.554984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:45:57.555035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:45:58.338
  Apr 15 08:45:58.345: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-configmaps-b1c95503-baab-4817-af0e-90a62ecab1e1 container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:45:58.363
  Apr 15 08:45:58.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5413" for this suite. @ 04/15/24 08:45:58.401
• [4.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/15/24 08:45:58.42
  Apr 15 08:45:58.420: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 08:45:58.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:58.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:58.502
  E0415 08:45:58.555124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/15/24 08:45:58.594
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 08:45:58.623
  Apr 15 08:45:58.652: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:45:58.652: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:45:59.557467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:45:59.663: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:45:59.663: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:46:00.556909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:00.676: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 08:46:00.677: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/15/24 08:46:00.684
  Apr 15 08:46:00.763: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 08:46:00.763: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 08:46:01.558143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:01.756: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 08:46:01.756: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/15/24 08:46:01.756
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 08:46:01.771
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1770, will wait for the garbage collector to delete the pods @ 04/15/24 08:46:01.772
  Apr 15 08:46:01.845: INFO: Deleting DaemonSet.extensions daemon-set took: 14.748024ms
  Apr 15 08:46:01.946: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.686068ms
  E0415 08:46:02.558459      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:03.558534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:03.756: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:46:03.756: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 08:46:03.789: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"222482"},"items":null}

  Apr 15 08:46:03.824: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"222483"},"items":null}

  Apr 15 08:46:03.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1770" for this suite. @ 04/15/24 08:46:03.915
• [5.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 04/15/24 08:46:03.949
  Apr 15 08:46:03.949: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:46:03.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:46:04.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:46:04.03
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/15/24 08:46:04.046
  Apr 15 08:46:04.049: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-9555 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Apr 15 08:46:04.338: INFO: stderr: ""
  Apr 15 08:46:04.338: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/15/24 08:46:04.338
  Apr 15 08:46:04.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-9555 delete pods e2e-test-httpd-pod'
  E0415 08:46:04.559588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:05.559808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:06.122: INFO: stderr: ""
  Apr 15 08:46:06.122: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 15 08:46:06.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9555" for this suite. @ 04/15/24 08:46:06.133
• [2.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/15/24 08:46:06.146
  Apr 15 08:46:06.146: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/15/24 08:46:06.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:46:06.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:46:06.187
  STEP: creating a target pod @ 04/15/24 08:46:06.196
  E0415 08:46:06.560225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:07.560553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/15/24 08:46:08.235
  E0415 08:46:08.560502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:09.560936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/15/24 08:46:10.276
  Apr 15 08:46:10.276: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2595 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:46:10.276: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:46:10.279: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:46:10.279: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-2595/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 15 08:46:10.418: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/15/24 08:46:10.433
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/15/24 08:46:10.485
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/15/24 08:46:10.519
  Apr 15 08:46:10.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 08:46:10.560993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "ephemeral-containers-test-2595" for this suite. @ 04/15/24 08:46:10.563
• [4.433 seconds]
------------------------------
SSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/15/24 08:46:10.58
  Apr 15 08:46:10.580: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename hostport @ 04/15/24 08:46:10.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:46:10.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:46:10.634
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/15/24 08:46:10.651
  E0415 08:46:11.561682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:12.561480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.146 on the node which pod1 resides and expect scheduled @ 04/15/24 08:46:12.704
  E0415 08:46:13.561818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:14.561923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.146 but use UDP protocol on the node which pod2 resides @ 04/15/24 08:46:14.746
  E0415 08:46:15.562341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:16.562292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:17.563039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:18.563980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/15/24 08:46:18.824
  Apr 15 08:46:18.824: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.146 http://127.0.0.1:54323/hostname] Namespace:hostport-9703 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:46:18.824: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:46:18.827: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:46:18.827: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-9703/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.146+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.146, port: 54323 @ 04/15/24 08:46:19.042
  Apr 15 08:46:19.042: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.146:54323/hostname] Namespace:hostport-9703 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:46:19.043: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:46:19.044: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:46:19.045: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-9703/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.146%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.146, port: 54323 UDP @ 04/15/24 08:46:19.237
  Apr 15 08:46:19.238: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.146 54323] Namespace:hostport-9703 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:46:19.239: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:46:19.243: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:46:19.244: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-9703/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.146+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0415 08:46:19.565335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:20.566154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:21.566811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:22.567966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:23.568267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:24.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9703" for this suite. @ 04/15/24 08:46:24.434
• [13.873 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/15/24 08:46:24.457
  Apr 15 08:46:24.458: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 08:46:24.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:46:24.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:46:24.514
  STEP: create the container @ 04/15/24 08:46:24.52
  W0415 08:46:24.543685      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/15/24 08:46:24.547
  E0415 08:46:24.569428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:25.570667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:26.570733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:27.571866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/15/24 08:46:27.604
  STEP: the container should be terminated @ 04/15/24 08:46:27.614
  STEP: the termination message should be set @ 04/15/24 08:46:27.614
  Apr 15 08:46:27.614: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/15/24 08:46:27.615
  Apr 15 08:46:27.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8959" for this suite. @ 04/15/24 08:46:27.667
• [3.230 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 04/15/24 08:46:27.69
  Apr 15 08:46:27.691: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 08:46:27.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:46:27.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:46:27.738
  STEP: creating service multiprotocol-test in namespace services-7382 @ 04/15/24 08:46:27.745
  STEP: creating pod pod1 in namespace services-7382 @ 04/15/24 08:46:27.776
  STEP: Creating pod pod1 in namespace services-7382 @ 04/15/24 08:46:27.776
  E0415 08:46:28.571728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:29.571834      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-7382 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 04/15/24 08:46:29.884
  Apr 15 08:46:29.911: INFO: successfully validated that service multiprotocol-test in namespace services-7382 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 04/15/24 08:46:29.912
  Apr 15 08:46:29.913: INFO: Creating new exec pod
  E0415 08:46:30.571862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:31.572294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:31.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80'
  E0415 08:46:32.573178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:33.573308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:34.367: INFO: rc: 1
  Apr 15 08:46:34.368: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.27.105 80
  nc: connect to 10.233.27.105 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:46:34.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80'
  E0415 08:46:34.574167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:35.574376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:36.574871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:36.769: INFO: rc: 1
  Apr 15 08:46:36.769: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.27.105 80
  nc: connect to 10.233.27.105 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:46:36.769: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80'
  E0415 08:46:37.574889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:38.575585      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:39.068: INFO: rc: 1
  Apr 15 08:46:39.068: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.233.27.105 80
  + echo hostName
  nc: connect to 10.233.27.105 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:46:39.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80'
  E0415 08:46:39.576499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:40.457: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.27.105 80\nConnection to 10.233.27.105 80 port [tcp/http] succeeded!\n"
  Apr 15 08:46:40.458: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:46:40.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.27.105 80'
  E0415 08:46:40.577654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:41.577934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:42.578800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:43.580449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:44.580426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:44.753: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.27.105 80\nConnection to 10.233.27.105 80 port [udp/*] succeeded!\n"
  Apr 15 08:46:44.754: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 04/15/24 08:46:44.754
  Apr 15 08:46:44.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80'
  Apr 15 08:46:45.183: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.27.105 80\nConnection to 10.233.27.105 80 port [tcp/http] succeeded!\n"
  Apr 15 08:46:45.183: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:46:45.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.27.105 80'
  E0415 08:46:45.580308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:46.580508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:47.581238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:48.581487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:49.551: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.27.105 80\nConnection to 10.233.27.105 80 port [udp/*] succeeded!\n"
  Apr 15 08:46:49.552: INFO: stdout: ""
  Apr 15 08:46:49.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.27.105 80'
  E0415 08:46:49.581688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:50.582463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:51.582723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:52.582754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:53.583840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:53.894: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.27.105 80\nConnection to 10.233.27.105 80 port [udp/*] succeeded!\n"
  Apr 15 08:46:53.894: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 04/15/24 08:46:53.895
  Apr 15 08:46:53.914: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.27.105 80'
  E0415 08:46:54.584789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:55.584964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:56.585987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:57.586778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:46:58.272: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.27.105 80\nConnection to 10.233.27.105 80 port [udp/*] succeeded!\n"
  Apr 15 08:46:58.272: INFO: stdout: "pod1"
  Apr 15 08:46:58.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80'
  E0415 08:46:58.586964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:46:59.587119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:00.587215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:47:00.650: INFO: rc: 1
  Apr 15 08:47:00.650: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.27.105 80
  nc: connect to 10.233.27.105 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:47:00.651: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80'
  E0415 08:47:01.587293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:02.588324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:47:02.975: INFO: rc: 1
  Apr 15 08:47:02.975: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.27.105 80
  nc: connect to 10.233.27.105 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:47:02.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80'
  E0415 08:47:03.588393      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:04.588785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:47:05.341: INFO: rc: 1
  Apr 15 08:47:05.341: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-7382 exec execpodw8fsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.105 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.27.105 80
  nc: connect to 10.233.27.105 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:47:05.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7382" for this suite. @ 04/15/24 08:47:05.354
• [37.683 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 04/15/24 08:47:05.374
  Apr 15 08:47:05.375: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 08:47:05.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:47:05.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:47:05.435
  STEP: Creating configMap with name configmap-test-upd-de2f5895-5400-49d2-92c1-f90a301d8ae1 @ 04/15/24 08:47:05.476
  STEP: Creating the pod @ 04/15/24 08:47:05.488
  E0415 08:47:05.590071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:06.590152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-de2f5895-5400-49d2-92c1-f90a301d8ae1 @ 04/15/24 08:47:07.567
  STEP: waiting to observe update in volume @ 04/15/24 08:47:07.585
  E0415 08:47:07.591608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:08.593051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:09.592896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:10.593677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:11.593401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:12.593601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:13.593866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:14.594032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:15.594135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:16.594524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:17.595457      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:18.595658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:19.596719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:20.596826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:21.596922      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:22.597207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:23.597908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:24.598849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:25.599053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:26.599395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:27.599523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:28.599843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:29.600341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:30.600445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:31.600709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:32.600918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:33.601121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:34.601451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:35.601798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:36.602881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:37.603154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:38.603576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:39.603632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:40.603817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:41.605005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:42.605480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:43.605742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:44.606173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:45.607178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:46.608676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:47.609212      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:48.609334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:49.609607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:50.609602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:51.609913      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:52.610012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:53.610937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:54.611442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:55.611912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:56.612078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:57.612525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:58.613034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:47:59.613146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:00.614356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:01.614371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:02.614671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:03.614848      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:04.615025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:05.615647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:06.616189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:07.616487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:08.616880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:09.617142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:48:10.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2769" for this suite. @ 04/15/24 08:48:10.223
• [64.866 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 04/15/24 08:48:10.242
  Apr 15 08:48:10.242: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:48:10.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:48:10.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:48:10.303
  STEP: creating a replication controller @ 04/15/24 08:48:10.309
  Apr 15 08:48:10.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8680 create -f -'
  E0415 08:48:10.618273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:48:10.675: INFO: stderr: ""
  Apr 15 08:48:10.675: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/15/24 08:48:10.676
  Apr 15 08:48:10.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8680 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 08:48:10.933: INFO: stderr: ""
  Apr 15 08:48:10.933: INFO: stdout: "update-demo-nautilus-qfwpl update-demo-nautilus-r6cx6 "
  Apr 15 08:48:10.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8680 get pods update-demo-nautilus-qfwpl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 08:48:11.104: INFO: stderr: ""
  Apr 15 08:48:11.104: INFO: stdout: ""
  Apr 15 08:48:11.104: INFO: update-demo-nautilus-qfwpl is created but not running
  E0415 08:48:11.619250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:12.619569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:13.620224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:14.620420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:15.624387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:48:16.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8680 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 08:48:16.280: INFO: stderr: ""
  Apr 15 08:48:16.281: INFO: stdout: "update-demo-nautilus-qfwpl update-demo-nautilus-r6cx6 "
  Apr 15 08:48:16.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8680 get pods update-demo-nautilus-qfwpl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 08:48:16.425: INFO: stderr: ""
  Apr 15 08:48:16.425: INFO: stdout: "true"
  Apr 15 08:48:16.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8680 get pods update-demo-nautilus-qfwpl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 08:48:16.577: INFO: stderr: ""
  Apr 15 08:48:16.577: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 08:48:16.577: INFO: validating pod update-demo-nautilus-qfwpl
  Apr 15 08:48:16.597: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 08:48:16.597: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 08:48:16.597: INFO: update-demo-nautilus-qfwpl is verified up and running
  Apr 15 08:48:16.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8680 get pods update-demo-nautilus-r6cx6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0415 08:48:16.625284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:48:16.828: INFO: stderr: ""
  Apr 15 08:48:16.828: INFO: stdout: "true"
  Apr 15 08:48:16.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8680 get pods update-demo-nautilus-r6cx6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 08:48:16.996: INFO: stderr: ""
  Apr 15 08:48:16.996: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 08:48:16.996: INFO: validating pod update-demo-nautilus-r6cx6
  Apr 15 08:48:17.015: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 08:48:17.015: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 08:48:17.015: INFO: update-demo-nautilus-r6cx6 is verified up and running
  STEP: using delete to clean up resources @ 04/15/24 08:48:17.015
  Apr 15 08:48:17.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8680 delete --grace-period=0 --force -f -'
  Apr 15 08:48:17.179: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 08:48:17.179: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 15 08:48:17.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8680 get rc,svc -l name=update-demo --no-headers'
  Apr 15 08:48:17.423: INFO: stderr: "No resources found in kubectl-8680 namespace.\n"
  Apr 15 08:48:17.423: INFO: stdout: ""
  Apr 15 08:48:17.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8680 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 15 08:48:17.616: INFO: stderr: ""
  Apr 15 08:48:17.616: INFO: stdout: ""
  Apr 15 08:48:17.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 08:48:17.627828      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubectl-8680" for this suite. @ 04/15/24 08:48:17.639
• [7.410 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 04/15/24 08:48:17.652
  Apr 15 08:48:17.652: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 08:48:17.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:48:17.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:48:17.703
  Apr 15 08:48:17.709: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 08:48:18.628211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:19.628270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0415 08:48:20.499585      14 warnings.go:70] unknown field "alpha"
  W0415 08:48:20.499668      14 warnings.go:70] unknown field "beta"
  W0415 08:48:20.499717      14 warnings.go:70] unknown field "delta"
  W0415 08:48:20.499730      14 warnings.go:70] unknown field "epsilon"
  W0415 08:48:20.499741      14 warnings.go:70] unknown field "gamma"
  E0415 08:48:20.629394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:48:21.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5153" for this suite. @ 04/15/24 08:48:21.119
• [3.483 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 04/15/24 08:48:21.141
  Apr 15 08:48:21.141: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pod-network-test @ 04/15/24 08:48:21.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:48:21.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:48:21.204
  STEP: Performing setup for networking test in namespace pod-network-test-2018 @ 04/15/24 08:48:21.212
  STEP: creating a selector @ 04/15/24 08:48:21.212
  STEP: Creating the service pods in kubernetes @ 04/15/24 08:48:21.212
  Apr 15 08:48:21.212: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0415 08:48:21.630825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:22.631146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:23.631702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:24.632121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:25.633716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:26.633238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:27.634196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:28.634878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:29.635160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:30.635260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:31.635701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:32.636563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:33.638040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:34.638184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:35.638477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:36.638665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:37.639327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:38.639667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:39.640565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:40.640611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:41.641696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:42.641472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:43.642412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:44.642902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:45.643708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:46.644278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:47.645116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:48.645324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:49.645434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:50.646029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:51.646311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:52.646802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/15/24 08:48:53.548
  E0415 08:48:53.647260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:54.648267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:48:55.633: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 15 08:48:55.633: INFO: Going to poll 10.233.64.238 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 08:48:55.646: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.238 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2018 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:48:55.647: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:48:55.648: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:48:55.649: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2018/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.238+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0415 08:48:55.649545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:48:56.649577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:48:56.831: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 15 08:48:56.831: INFO: Going to poll 10.233.65.199 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 08:48:56.839: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.199 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2018 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:48:56.839: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:48:56.841: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:48:56.841: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2018/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.199+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0415 08:48:57.649796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:48:57.952: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 15 08:48:57.953: INFO: Going to poll 10.233.66.50 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 08:48:57.961: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.50 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2018 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:48:57.961: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 08:48:57.965: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:48:57.967: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2018/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.50+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0415 08:48:58.651049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:48:59.079: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 15 08:48:59.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2018" for this suite. @ 04/15/24 08:48:59.095
• [37.970 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 04/15/24 08:48:59.115
  Apr 15 08:48:59.116: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:48:59.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:48:59.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:48:59.194
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:48:59.202
  E0415 08:48:59.652209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:00.652998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:01.653248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:02.653242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:49:03.26
  Apr 15 08:49:03.270: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-ec04a512-e8a8-474f-9efc-eb64d375295c container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:49:03.287
  Apr 15 08:49:03.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5690" for this suite. @ 04/15/24 08:49:03.363
• [4.273 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 04/15/24 08:49:03.391
  Apr 15 08:49:03.391: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 08:49:03.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:03.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:03.454
  Apr 15 08:49:03.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1406" for this suite. @ 04/15/24 08:49:03.485
• [0.111 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 04/15/24 08:49:03.505
  Apr 15 08:49:03.505: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename podtemplate @ 04/15/24 08:49:03.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:03.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:03.563
  STEP: Create a pod template @ 04/15/24 08:49:03.576
  STEP: Replace a pod template @ 04/15/24 08:49:03.59
  Apr 15 08:49:03.612: INFO: Found updated podtemplate annotation: "true"

  Apr 15 08:49:03.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7512" for this suite. @ 04/15/24 08:49:03.625
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 04/15/24 08:49:03.639
  Apr 15 08:49:03.639: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename discovery @ 04/15/24 08:49:03.642
  E0415 08:49:03.653303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:03.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:03.681
  STEP: Setting up server cert @ 04/15/24 08:49:03.693
  E0415 08:49:04.654057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:49:05.197: INFO: Checking APIGroup: apiregistration.k8s.io
  Apr 15 08:49:05.199: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Apr 15 08:49:05.199: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Apr 15 08:49:05.199: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Apr 15 08:49:05.199: INFO: Checking APIGroup: apps
  Apr 15 08:49:05.200: INFO: PreferredVersion.GroupVersion: apps/v1
  Apr 15 08:49:05.201: INFO: Versions found [{apps/v1 v1}]
  Apr 15 08:49:05.201: INFO: apps/v1 matches apps/v1
  Apr 15 08:49:05.201: INFO: Checking APIGroup: events.k8s.io
  Apr 15 08:49:05.202: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Apr 15 08:49:05.202: INFO: Versions found [{events.k8s.io/v1 v1}]
  Apr 15 08:49:05.202: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Apr 15 08:49:05.202: INFO: Checking APIGroup: authentication.k8s.io
  Apr 15 08:49:05.203: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Apr 15 08:49:05.204: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Apr 15 08:49:05.205: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Apr 15 08:49:05.205: INFO: Checking APIGroup: authorization.k8s.io
  Apr 15 08:49:05.208: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Apr 15 08:49:05.209: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Apr 15 08:49:05.209: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Apr 15 08:49:05.210: INFO: Checking APIGroup: autoscaling
  Apr 15 08:49:05.212: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Apr 15 08:49:05.213: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Apr 15 08:49:05.214: INFO: autoscaling/v2 matches autoscaling/v2
  Apr 15 08:49:05.215: INFO: Checking APIGroup: batch
  Apr 15 08:49:05.218: INFO: PreferredVersion.GroupVersion: batch/v1
  Apr 15 08:49:05.218: INFO: Versions found [{batch/v1 v1}]
  Apr 15 08:49:05.218: INFO: batch/v1 matches batch/v1
  Apr 15 08:49:05.219: INFO: Checking APIGroup: certificates.k8s.io
  Apr 15 08:49:05.221: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Apr 15 08:49:05.221: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Apr 15 08:49:05.221: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Apr 15 08:49:05.221: INFO: Checking APIGroup: networking.k8s.io
  Apr 15 08:49:05.224: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Apr 15 08:49:05.224: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Apr 15 08:49:05.224: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Apr 15 08:49:05.224: INFO: Checking APIGroup: policy
  Apr 15 08:49:05.227: INFO: PreferredVersion.GroupVersion: policy/v1
  Apr 15 08:49:05.227: INFO: Versions found [{policy/v1 v1}]
  Apr 15 08:49:05.228: INFO: policy/v1 matches policy/v1
  Apr 15 08:49:05.228: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Apr 15 08:49:05.231: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Apr 15 08:49:05.231: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Apr 15 08:49:05.232: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Apr 15 08:49:05.232: INFO: Checking APIGroup: storage.k8s.io
  Apr 15 08:49:05.236: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Apr 15 08:49:05.237: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Apr 15 08:49:05.237: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Apr 15 08:49:05.237: INFO: Checking APIGroup: admissionregistration.k8s.io
  Apr 15 08:49:05.243: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Apr 15 08:49:05.243: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Apr 15 08:49:05.243: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Apr 15 08:49:05.243: INFO: Checking APIGroup: apiextensions.k8s.io
  Apr 15 08:49:05.246: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Apr 15 08:49:05.246: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Apr 15 08:49:05.246: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Apr 15 08:49:05.246: INFO: Checking APIGroup: scheduling.k8s.io
  Apr 15 08:49:05.247: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Apr 15 08:49:05.247: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Apr 15 08:49:05.247: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Apr 15 08:49:05.247: INFO: Checking APIGroup: coordination.k8s.io
  Apr 15 08:49:05.249: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Apr 15 08:49:05.249: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Apr 15 08:49:05.249: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Apr 15 08:49:05.250: INFO: Checking APIGroup: node.k8s.io
  Apr 15 08:49:05.253: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Apr 15 08:49:05.253: INFO: Versions found [{node.k8s.io/v1 v1}]
  Apr 15 08:49:05.253: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Apr 15 08:49:05.253: INFO: Checking APIGroup: discovery.k8s.io
  Apr 15 08:49:05.255: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Apr 15 08:49:05.255: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Apr 15 08:49:05.255: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Apr 15 08:49:05.255: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Apr 15 08:49:05.257: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Apr 15 08:49:05.257: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Apr 15 08:49:05.257: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Apr 15 08:49:05.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9305" for this suite. @ 04/15/24 08:49:05.28
• [1.657 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 04/15/24 08:49:05.303
  Apr 15 08:49:05.303: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename discovery @ 04/15/24 08:49:05.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:05.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:05.367
  STEP: Setting up server cert @ 04/15/24 08:49:05.382
  E0415 08:49:05.655568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:06.655726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 04/15/24 08:49:07.563
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/15/24 08:49:07.568
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/15/24 08:49:07.572
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/15/24 08:49:07.575
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/15/24 08:49:07.577
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/15/24 08:49:07.58
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/15/24 08:49:07.582
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/15/24 08:49:07.586
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/15/24 08:49:07.59
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/15/24 08:49:07.593
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/15/24 08:49:07.596
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/15/24 08:49:07.599
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/15/24 08:49:07.602
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/15/24 08:49:07.606
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/15/24 08:49:07.61
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/15/24 08:49:07.613
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/15/24 08:49:07.615
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/15/24 08:49:07.617
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/15/24 08:49:07.619
  Apr 15 08:49:07.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6028" for this suite. @ 04/15/24 08:49:07.637
• [2.348 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 04/15/24 08:49:07.654
  Apr 15 08:49:07.654: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 08:49:07.656072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:49:07.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:07.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:07.696
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:49:07.702
  E0415 08:49:08.656559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:09.656715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:10.657013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:11.657777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:49:11.755
  Apr 15 08:49:11.761: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-d4be4d62-b11d-4bf4-938a-9a1974e70bb5 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:49:11.773
  Apr 15 08:49:11.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3752" for this suite. @ 04/15/24 08:49:11.813
• [4.174 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 04/15/24 08:49:11.828
  Apr 15 08:49:11.829: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:49:11.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:11.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:11.872
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/15/24 08:49:11.88
  Apr 15 08:49:11.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5321 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 15 08:49:12.073: INFO: stderr: ""
  Apr 15 08:49:12.073: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/15/24 08:49:12.074
  Apr 15 08:49:12.077: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5321 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Apr 15 08:49:12.258: INFO: stderr: ""
  Apr 15 08:49:12.258: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/15/24 08:49:12.258
  Apr 15 08:49:12.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-5321 delete pods e2e-test-httpd-pod'
  E0415 08:49:12.658831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:13.658885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:49:14.093: INFO: stderr: ""
  Apr 15 08:49:14.093: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 15 08:49:14.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5321" for this suite. @ 04/15/24 08:49:14.108
• [2.296 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 04/15/24 08:49:14.125
  Apr 15 08:49:14.125: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename gc @ 04/15/24 08:49:14.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:14.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:14.164
  STEP: create the rc @ 04/15/24 08:49:14.17
  W0415 08:49:14.182429      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0415 08:49:14.660020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:15.660354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:16.661535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:17.661596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:18.662645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/15/24 08:49:19.194
  STEP: wait for all pods to be garbage collected @ 04/15/24 08:49:19.211
  E0415 08:49:19.663740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:20.663223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:21.664038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:22.664609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:23.664516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/15/24 08:49:24.232
  Apr 15 08:49:24.497: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 08:49:24.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3595" for this suite. @ 04/15/24 08:49:24.524
• [10.411 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/15/24 08:49:24.538
  Apr 15 08:49:24.538: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename watch @ 04/15/24 08:49:24.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:24.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:24.583
  STEP: creating a watch on configmaps with label A @ 04/15/24 08:49:24.588
  STEP: creating a watch on configmaps with label B @ 04/15/24 08:49:24.59
  STEP: creating a watch on configmaps with label A or B @ 04/15/24 08:49:24.592
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/15/24 08:49:24.597
  Apr 15 08:49:24.607: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3912  5a2733ad-ed34-4ece-8ebd-90fe26c07ead 223402 0 2024-04-15 08:49:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 08:49:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:49:24.608: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3912  5a2733ad-ed34-4ece-8ebd-90fe26c07ead 223402 0 2024-04-15 08:49:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 08:49:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/15/24 08:49:24.609
  Apr 15 08:49:24.626: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3912  5a2733ad-ed34-4ece-8ebd-90fe26c07ead 223403 0 2024-04-15 08:49:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 08:49:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:49:24.626: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3912  5a2733ad-ed34-4ece-8ebd-90fe26c07ead 223403 0 2024-04-15 08:49:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 08:49:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/15/24 08:49:24.626
  Apr 15 08:49:24.643: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3912  5a2733ad-ed34-4ece-8ebd-90fe26c07ead 223404 0 2024-04-15 08:49:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 08:49:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:49:24.644: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3912  5a2733ad-ed34-4ece-8ebd-90fe26c07ead 223404 0 2024-04-15 08:49:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 08:49:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/15/24 08:49:24.644
  Apr 15 08:49:24.657: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3912  5a2733ad-ed34-4ece-8ebd-90fe26c07ead 223405 0 2024-04-15 08:49:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 08:49:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:49:24.657: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3912  5a2733ad-ed34-4ece-8ebd-90fe26c07ead 223405 0 2024-04-15 08:49:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 08:49:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/15/24 08:49:24.658
  E0415 08:49:24.665621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:49:24.670: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3912  f6f43472-ee88-4dd9-b531-ded05bb7f422 223406 0 2024-04-15 08:49:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-15 08:49:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:49:24.670: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3912  f6f43472-ee88-4dd9-b531-ded05bb7f422 223406 0 2024-04-15 08:49:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-15 08:49:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0415 08:49:25.666394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:26.666944      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:27.667117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:28.667427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:29.667579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:30.667866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:31.668861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:32.669429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:33.669640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:34.670781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/15/24 08:49:34.671
  Apr 15 08:49:34.685: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3912  f6f43472-ee88-4dd9-b531-ded05bb7f422 223440 0 2024-04-15 08:49:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-15 08:49:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:49:34.686: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3912  f6f43472-ee88-4dd9-b531-ded05bb7f422 223440 0 2024-04-15 08:49:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-15 08:49:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0415 08:49:35.670934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:36.671929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:37.672116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:38.672243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:39.674329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:40.673554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:41.674802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:42.675031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:43.675222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:44.675999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:49:44.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3912" for this suite. @ 04/15/24 08:49:44.702
• [20.181 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 04/15/24 08:49:44.739
  Apr 15 08:49:44.739: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 08:49:44.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:44.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:44.784
  STEP: Discovering how many secrets are in namespace by default @ 04/15/24 08:49:44.789
  E0415 08:49:45.677174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:46.678124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:47.678530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:48.678550      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:49.679273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 04/15/24 08:49:49.796
  E0415 08:49:50.679986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:51.679991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:52.680459      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:53.680628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:54.681288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/15/24 08:49:54.805
  STEP: Ensuring resource quota status is calculated @ 04/15/24 08:49:54.817
  E0415 08:49:55.681795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:56.682692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 04/15/24 08:49:56.827
  STEP: Ensuring resource quota status captures secret creation @ 04/15/24 08:49:56.851
  E0415 08:49:57.682354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:49:58.683146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 04/15/24 08:49:58.863
  STEP: Ensuring resource quota status released usage @ 04/15/24 08:49:58.878
  E0415 08:49:59.684245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:00.684048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:00.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5658" for this suite. @ 04/15/24 08:50:00.898
• [16.173 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 04/15/24 08:50:00.913
  Apr 15 08:50:00.913: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 08:50:00.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:50:00.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:50:00.955
  STEP: Creating a test namespace @ 04/15/24 08:50:00.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:50:00.997
  STEP: Creating a pod in the namespace @ 04/15/24 08:50:01.003
  STEP: Waiting for the pod to have running status @ 04/15/24 08:50:01.02
  E0415 08:50:01.684489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:02.685564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 04/15/24 08:50:03.044
  STEP: Waiting for the namespace to be removed. @ 04/15/24 08:50:03.058
  E0415 08:50:03.685701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:04.685826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:05.686102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:06.686790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:07.686864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:08.687229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:09.687305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:10.687578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:11.689166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:12.688945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:13.689443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:14.690127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/15/24 08:50:15.067
  STEP: Verifying there are no pods in the namespace @ 04/15/24 08:50:15.116
  Apr 15 08:50:15.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3278" for this suite. @ 04/15/24 08:50:15.138
  STEP: Destroying namespace "nsdeletetest-5062" for this suite. @ 04/15/24 08:50:15.172
  Apr 15 08:50:15.181: INFO: Namespace nsdeletetest-5062 was already deleted
  STEP: Destroying namespace "nsdeletetest-343" for this suite. @ 04/15/24 08:50:15.182
• [14.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 04/15/24 08:50:15.194
  Apr 15 08:50:15.195: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 08:50:15.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:50:15.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:50:15.24
  STEP: Creating pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252 @ 04/15/24 08:50:15.248
  E0415 08:50:15.690546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:16.691120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 08:50:17.297
  Apr 15 08:50:17.306: INFO: Initial restart count of pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 is 0
  Apr 15 08:50:17.315: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:17.691742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:18.692210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:19.326: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:19.692944      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:20.693452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:21.337: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:21.693465      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:22.694378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:23.346: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:23.694660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:24.695624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:25.357: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:25.696823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:26.696825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:27.370: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:27.697317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:28.697536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:29.379: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:29.698749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:30.698863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:31.390: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:31.700027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:32.700194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:33.396: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:33.700338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:34.700535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:35.405: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:35.700705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:36.700875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:37.414: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:37.701646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:38.701862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:39.423: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:39.702666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:40.702877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:41.433: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:41.703625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:42.704167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:43.444: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:43.704687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:44.704855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:45.453: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:45.705739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:46.706821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:47.462: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:47.707747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:48.709025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:49.471: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:49.709728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:50.710532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:51.482: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:51.711496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:52.711625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:53.494: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:53.712130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:54.713023      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:55.505: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:55.713361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:56.713573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:57.514: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:57.714355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:50:58.714759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:50:59.521: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:50:59.714940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:00.715168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:01.532: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:01.715942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:02.716141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:03.542: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:03.716772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:04.717297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:05.554: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:05.718303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:06.718685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:07.565: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:07.719357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:08.720090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:09.576: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:09.721269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:10.722044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:11.583: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:11.723095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:12.724094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:13.593: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:13.724947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:14.726016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:15.603: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:15.726970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:16.727006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:17.612: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:17.727951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:18.728068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:19.621: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:19.728856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:20.729001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:21.629: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:21.729866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:22.730526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:23.640: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:23.730833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:24.731685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:25.653: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:25.732458      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:26.732554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:27.662: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:27.733155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:28.733958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:29.670: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:29.734980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:30.735224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:31.682: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:31.735659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:32.736652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:33.691: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:33.737428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:34.740017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:35.703: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:35.738920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:36.739123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:37.712: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:37.739598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:38.740136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:39.729: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:39.741974      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:40.742090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:41.738: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:41.743042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:42.743459      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:43.744007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:43.749: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:44.744961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:45.745397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:45.760: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:46.746178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:47.747095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:47.770: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:48.747246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:49.748062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:49.782: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:50.750767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:51.749404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:51.794: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:52.749239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:53.749860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:53.804: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:54.751180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:55.751589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:55.817: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:56.752089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:57.752291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:57.827: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:51:58.753203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:51:59.753355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:51:59.836: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:00.754467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:01.755403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:01.849: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:02.755866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:03.756695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:03.862: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:04.756930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:05.757548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:05.873: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:06.757963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:07.757843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:07.883: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:08.759247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:09.759560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:09.895: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:10.759937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:11.760423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:11.904: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:12.760385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:13.760766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:13.916: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:14.761372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:15.762076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:15.930: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:16.762180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:17.762094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:17.941: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:18.763242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:19.763522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:19.951: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:20.764080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:21.764854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:21.962: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:22.764813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:23.765589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:23.973: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:24.766204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:25.765887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:25.983: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:26.767097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:27.767539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:27.992: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:28.768117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:29.768198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:30.000: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:30.768509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:31.768539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:32.013: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:32.769436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:33.770070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:34.021: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:34.770155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:35.771412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:36.029: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:36.772275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:37.773185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:38.038: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:38.774002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:39.774265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:40.046: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:40.774884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:41.774698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:42.060: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:42.778776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:43.779067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:44.070: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:44.779499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:45.780316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:46.082: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:46.780741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:47.781528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:48.091: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:48.782234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:49.782312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:50.100: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:50.782556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:51.782858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:52.110: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:52.783121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:53.784441      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:54.118: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:54.784426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:55.784657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:56.131: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:56.785572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:57.786138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:52:58.142: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:52:58.786945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:52:59.787265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:00.152: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:00.788121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:01.788335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:02.163: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:02.788881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:03.788869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:04.173: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:04.789042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:05.789710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:06.183: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:06.789809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:07.789998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:08.190: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:08.790839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:09.791538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:10.201: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:10.791799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:11.791989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:12.210: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:12.792914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:13.793070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:14.220: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:14.794508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:15.794648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:16.230: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:16.795523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:17.796208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:18.240: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:18.796503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:19.796920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:20.255: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:20.796933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:21.797334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:22.265: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:22.797461      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:23.798358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:24.276: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:24.799202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:25.799578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:26.286: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:26.799887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:27.800038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:28.294: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:28.800973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:29.800979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:30.303: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:30.801888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:31.802939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:32.316: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:32.803199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:33.803381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:34.326: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:34.803494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:35.804183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:36.341: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:36.804565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:37.805371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:38.352: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:38.805577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:39.806135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:40.369: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:40.806567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:41.806459      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:42.379: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:42.807154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:43.808287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:44.394: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:44.808007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:45.808360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:46.411: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:46.808760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:47.809623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:48.423: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:48.810442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:49.810354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:50.469: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:50.811007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:51.811076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:52.480: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:52.812020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:53.812620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:54.488: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:54.813723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:55.814821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:56.497: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:56.815137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:57.815298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:53:58.504: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:53:58.816201      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:53:59.816527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:54:00.520: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:54:00.817199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:01.817486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:54:02.531: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:54:02.818278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:03.818970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:54:04.540: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:54:04.819992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:05.820237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:54:06.550: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:54:06.820415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:07.821389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:54:08.560: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:54:08.821896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:09.822116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:54:10.572: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:54:10.823173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:11.823279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:54:12.581: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:54:12.824442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:13.824895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:54:14.595: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:54:14.825170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:15.826085      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:54:16.603: INFO: Get pod liveness-552cdc04-22e5-434f-a511-d3dfbf3a3459 in namespace container-probe-252
  E0415 08:54:16.826372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:17.827138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/15/24 08:54:18.604
  Apr 15 08:54:18.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-252" for this suite. @ 04/15/24 08:54:18.656
• [243.486 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 04/15/24 08:54:18.685
  Apr 15 08:54:18.687: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 08:54:18.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:54:18.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:54:18.781
  E0415 08:54:18.827368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:54:18.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2150" for this suite. @ 04/15/24 08:54:18.952
• [0.291 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 04/15/24 08:54:18.987
  Apr 15 08:54:18.987: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename sched-pred @ 04/15/24 08:54:18.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:54:19.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:54:19.058
  Apr 15 08:54:19.068: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 15 08:54:19.096: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 08:54:19.111: INFO: 
  Logging pods the apiserver thinks is on node jec7saimeaph-1 before test
  Apr 15 08:54:19.137: INFO: coredns-76f75df574-bs2l5 from kube-system started at 2024-04-15 08:34:22 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.137: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 08:54:19.138: INFO: kube-addon-manager-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.138: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 15 08:54:19.138: INFO: kube-apiserver-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.138: INFO: 	Container kube-apiserver ready: true, restart count 5
  Apr 15 08:54:19.138: INFO: kube-controller-manager-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.139: INFO: 	Container kube-controller-manager ready: true, restart count 5
  Apr 15 08:54:19.139: INFO: kube-flannel-ds-mnln7 from kube-system started at 2024-04-15 07:36:15 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.146: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 08:54:19.146: INFO: kube-proxy-rsrrw from kube-system started at 2024-04-15 07:36:14 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.146: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 08:54:19.146: INFO: kube-scheduler-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.146: INFO: 	Container kube-scheduler ready: true, restart count 5
  Apr 15 08:54:19.146: INFO: sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-q89p9 from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 08:54:19.146: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:54:19.146: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 08:54:19.146: INFO: 
  Logging pods the apiserver thinks is on node jec7saimeaph-2 before test
  Apr 15 08:54:19.169: INFO: coredns-76f75df574-wm57r from kube-system started at 2024-04-15 07:36:13 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.169: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 08:54:19.169: INFO: kube-addon-manager-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.170: INFO: 	Container kube-addon-manager ready: true, restart count 6
  Apr 15 08:54:19.170: INFO: kube-apiserver-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.170: INFO: 	Container kube-apiserver ready: true, restart count 6
  Apr 15 08:54:19.170: INFO: kube-controller-manager-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.171: INFO: 	Container kube-controller-manager ready: true, restart count 6
  Apr 15 08:54:19.171: INFO: kube-flannel-ds-bxh6k from kube-system started at 2024-04-15 07:36:16 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.174: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 08:54:19.175: INFO: kube-proxy-kq9zs from kube-system started at 2024-04-15 07:36:14 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.176: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 08:54:19.177: INFO: kube-scheduler-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.179: INFO: 	Container kube-scheduler ready: true, restart count 6
  Apr 15 08:54:19.181: INFO: sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-kf6jd from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 08:54:19.182: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:54:19.190: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 08:54:19.192: INFO: 
  Logging pods the apiserver thinks is on node jec7saimeaph-3 before test
  Apr 15 08:54:19.213: INFO: kube-flannel-ds-tqb7t from kube-system started at 2024-04-15 08:34:48 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.213: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 08:54:19.213: INFO: kube-proxy-q2x5c from kube-system started at 2024-04-15 07:36:14 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.213: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 08:54:19.213: INFO: test-runtimeclass-runtimeclass-2150-preconfigured-handler-ccj7p from runtimeclass-2150 started at 2024-04-15 08:54:18 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.213: INFO: 	Container test ready: false, restart count 0
  Apr 15 08:54:19.213: INFO: sonobuoy from sonobuoy started at 2024-04-15 07:36:35 +0000 UTC (1 container statuses recorded)
  Apr 15 08:54:19.213: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 15 08:54:19.213: INFO: sonobuoy-e2e-job-2b6e6deeff5c4ebe from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 08:54:19.213: INFO: 	Container e2e ready: true, restart count 0
  Apr 15 08:54:19.213: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:54:19.213: INFO: sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-gngj9 from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 08:54:19.213: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:54:19.213: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/15/24 08:54:19.213
  E0415 08:54:19.827333      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:20.828147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/15/24 08:54:21.266
  STEP: Trying to apply a random label on the found node. @ 04/15/24 08:54:21.345
  STEP: verifying the node has the label kubernetes.io/e2e-6ed68e5a-9317-4525-85d9-c07dc632ad22 95 @ 04/15/24 08:54:21.377
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/15/24 08:54:21.393
  E0415 08:54:21.829127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:22.829948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.234 on the node which pod4 resides and expect not scheduled @ 04/15/24 08:54:23.455
  E0415 08:54:23.831119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:24.831270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:25.831542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:26.831711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:27.831987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:28.832828      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:29.833741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:30.833961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:31.834148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:32.834785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:33.834957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:34.835228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:35.835230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:36.835863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:37.836247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:38.837280      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:39.838072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:40.838326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:41.838806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:42.838751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:43.839677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:44.840369      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:45.841270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:46.841306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:47.842429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:48.843261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:49.843438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:50.844056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:51.844624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:52.844885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:53.845257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:54.846123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:55.846334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:56.846948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:57.847099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:58.847258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:54:59.848364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:00.848648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:01.848969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:02.849175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:03.850664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:04.850772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:05.851106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:06.851295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:07.852491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:08.853531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:09.854281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:10.854746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:11.855048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:12.855434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:13.855785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:14.856013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:15.857051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:16.858088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:17.859406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:18.860219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:19.860782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:20.861599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:21.862728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:22.862579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:23.863482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:24.864537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:25.864372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:26.864998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:27.865896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:28.865975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:29.866354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:30.866945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:31.867386      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:32.867933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:33.867945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:34.868378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:35.869010      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:36.870067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:37.870164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:38.871248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:39.872187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:40.872244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:41.872578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:42.872774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:43.872857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:44.873187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:45.873812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:46.874779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:47.875133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:48.875119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:49.875943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:50.876034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:51.879567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:52.878516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:53.878430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:54.879385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:55.880079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:56.880532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:57.881267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:58.881785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:55:59.881876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:00.882685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:01.883368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:02.884105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:03.884138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:04.884360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:05.885700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:06.884818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:07.885032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:08.886125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:09.886364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:10.887162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:11.887609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:12.887806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:13.888099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:14.888363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:15.889209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:16.889576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:17.889860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:18.890769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:19.890767      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:20.891595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:21.891960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:22.893122      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:23.893540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:24.893610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:25.894431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:26.895107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:27.895412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:28.896563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:29.896501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:30.897387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:31.898214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:32.899571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:33.899752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:34.899574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:35.900404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:36.904826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:37.904296      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:38.905905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:39.906182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:40.907434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:41.907773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:42.908173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:43.908512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:44.908725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:45.909170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:46.909921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:47.909720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:48.910968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:49.911446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:50.912344      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:51.914154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:52.914504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:53.914932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:54.914810      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:55.915928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:56.917175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:57.917991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:58.919083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:56:59.919201      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:00.920253      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:01.920719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:02.920603      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:03.920913      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:04.921036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:05.922191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:06.922366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:07.922544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:08.923657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:09.924317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:10.924733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:11.925131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:12.925278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:13.925314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:14.926212      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:15.926507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:16.926913      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:17.927189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:18.927912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:19.928861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:20.929471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:21.929563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:22.929633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:23.930095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:24.931063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:25.931519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:26.931674      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:27.932696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:28.933387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:29.933779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:30.933948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:31.934803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:32.935072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:33.935886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:34.935954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:35.936453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:36.936718      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:37.937390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:38.938296      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:39.939145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:40.940075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:41.940367      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:42.941430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:43.942015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:44.942877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:45.943549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:46.944499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:47.945310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:48.945924      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:49.946732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:50.947052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:51.947460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:52.947633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:53.948424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:54.949345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:55.949396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:56.950394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:57.950956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:58.950960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:57:59.951427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:00.952361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:01.952774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:02.953787      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:03.955740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:04.955076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:05.956427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:06.956728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:07.957582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:08.958976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:09.959321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:10.960227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:11.960962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:12.962294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:13.962163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:14.962749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:15.963161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:16.964343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:17.967254      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:18.966947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:19.966831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:20.967363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:21.968234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:22.972071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:23.969934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:24.970776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:25.971480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:26.972088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:27.972810      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:28.973682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:29.974787      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:30.974824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:31.975789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:32.976383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:33.976782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:34.977278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:35.978380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:36.978559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:37.979263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:38.980818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:39.980232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:40.980338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:41.980566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:42.981766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:43.982649      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:44.983087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:45.983391      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:46.983997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:47.984153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:48.984786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:49.984835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:50.985939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:51.986150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:52.986969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:53.987535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:54.987964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:55.988399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:56.989295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:57.990659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:58.990840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:58:59.991046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:00.991685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:01.992483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:02.992602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:03.992960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:04.993135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:05.993290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:06.994506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:07.995394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:08.995963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:09.996200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:10.996786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:11.997434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:12.997688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:13.997826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:14.998127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:15.999281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:16.999836      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:18.000194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:19.000949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:20.001122      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:21.002279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:22.003410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:23.003881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-6ed68e5a-9317-4525-85d9-c07dc632ad22 off the node jec7saimeaph-3 @ 04/15/24 08:59:23.491
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-6ed68e5a-9317-4525-85d9-c07dc632ad22 @ 04/15/24 08:59:23.56
  Apr 15 08:59:23.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4745" for this suite. @ 04/15/24 08:59:23.611
• [304.660 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 04/15/24 08:59:23.672
  Apr 15 08:59:23.672: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 08:59:23.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:59:23.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:59:23.748
  STEP: creating the pod with failed condition @ 04/15/24 08:59:23.772
  E0415 08:59:24.005122      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:25.005796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:26.007039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:27.007315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:28.007876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:29.008175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:30.008186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:31.008982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:32.009862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:33.010926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:34.012084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:35.012142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:36.012599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:37.013005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:38.013933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:39.014559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:40.015500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:41.015961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:42.016486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:43.021067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:44.017838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:45.017796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:46.018803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:47.019046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:48.019579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:49.020072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:50.020279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:51.021516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:52.022187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:53.023340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:54.024002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:55.024706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:56.024688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:57.025220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:58.026028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:59:59.027158      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:00.027665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:01.028524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:02.028998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:03.029911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:04.029623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:05.029838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:06.031249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:07.030578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:08.031386      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:09.032170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:10.032379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:11.032439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:12.033175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:13.033363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:14.034187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:15.034538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:16.035727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:17.035905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:18.036999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:19.038108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:20.038885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:21.039659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:22.039797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:23.040005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:24.040883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:25.041078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:26.041236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:27.041561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:28.042524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:29.043000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:30.044016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:31.044556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:32.045718      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:33.045896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:34.046124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:35.046471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:36.046526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:37.046513      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:38.047480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:39.048120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:40.048941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:41.049404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:42.050180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:43.050738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:44.050704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:45.051041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:46.051463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:47.051600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:48.051883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:49.052188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:50.053078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:51.053449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:52.053639      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:53.053922      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:54.054169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:55.054957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:56.056182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:57.057088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:58.057815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:00:59.057856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:00.058286      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:01.058736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:02.058657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:03.058790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:04.059137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:05.059239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:06.060221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:07.060516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:08.060621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:09.060876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:10.061067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:11.061184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:12.061683      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:13.062758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:14.062943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:15.063309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:16.065186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:17.065473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:18.066128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:19.066348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:20.066660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:21.067553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:22.068276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:23.068551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 04/15/24 09:01:23.808
  E0415 09:01:24.069710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:01:24.342: INFO: Successfully updated pod "var-expansion-dbe66fb9-7561-415f-a062-ec6d14ac6244"
  STEP: waiting for pod running @ 04/15/24 09:01:24.343
  E0415 09:01:25.070534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:26.070932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/15/24 09:01:26.365
  Apr 15 09:01:26.366: INFO: Deleting pod "var-expansion-dbe66fb9-7561-415f-a062-ec6d14ac6244" in namespace "var-expansion-5564"
  Apr 15 09:01:26.395: INFO: Wait up to 5m0s for pod "var-expansion-dbe66fb9-7561-415f-a062-ec6d14ac6244" to be fully deleted
  E0415 09:01:27.071102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:28.071336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:29.071808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:30.071739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:31.072385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:32.073151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:33.073407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:34.074040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:35.074051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:36.074659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:37.075653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:38.076537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:39.077054      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:40.077850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:41.078245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:42.079194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:43.080652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:44.080837      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:45.081156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:46.081238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:47.081602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:48.081810      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:49.082936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:50.083278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:51.083427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:52.083870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:53.083946      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:54.084422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:55.085232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:56.085556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:57.086094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:01:58.086142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:01:58.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5564" for this suite. @ 04/15/24 09:01:58.662
• [155.010 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 04/15/24 09:01:58.677
  Apr 15 09:01:58.677: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/15/24 09:01:58.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:01:58.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:01:58.727
  STEP: create the container to handle the HTTPGet hook request. @ 04/15/24 09:01:58.755
  E0415 09:01:59.087091      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:00.087885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/15/24 09:02:00.829
  E0415 09:02:01.088533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:02.089219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/15/24 09:02:02.89
  E0415 09:02:03.091195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:04.090778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/15/24 09:02:04.926
  Apr 15 09:02:04.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1993" for this suite. @ 04/15/24 09:02:04.984
• [6.326 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/15/24 09:02:05.011
  Apr 15 09:02:05.011: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename secrets @ 04/15/24 09:02:05.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:05.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:05.059
  E0415 09:02:05.091480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating secret with name secret-test-b195bf28-e67c-4f72-a86f-6ad5b13d8238 @ 04/15/24 09:02:05.119
  STEP: Creating a pod to test consume secrets @ 04/15/24 09:02:05.147
  E0415 09:02:06.091538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:07.096157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:08.096247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:09.096804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:02:09.212
  Apr 15 09:02:09.220: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-secrets-1c9e93d0-34b0-4ddc-b639-e038dbcbf3d8 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 09:02:09.235
  Apr 15 09:02:09.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6319" for this suite. @ 04/15/24 09:02:09.302
  STEP: Destroying namespace "secret-namespace-6359" for this suite. @ 04/15/24 09:02:09.319
• [4.323 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 04/15/24 09:02:09.334
  Apr 15 09:02:09.334: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 09:02:09.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:09.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:09.389
  STEP: Setting up server cert @ 04/15/24 09:02:09.446
  E0415 09:02:10.097135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 09:02:10.548
  STEP: Deploying the webhook pod @ 04/15/24 09:02:10.58
  STEP: Wait for the deployment to be ready @ 04/15/24 09:02:10.612
  Apr 15 09:02:10.648: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 09:02:11.098571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:12.098802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 09:02:12.677
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 09:02:12.703
  E0415 09:02:13.100299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:02:13.704: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/15/24 09:02:13.73
  STEP: create a pod @ 04/15/24 09:02:13.784
  E0415 09:02:14.101474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:15.101957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/15/24 09:02:15.832
  Apr 15 09:02:15.833: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=webhook-5692 attach --namespace=webhook-5692 to-be-attached-pod -i -c=container1'
  Apr 15 09:02:16.061: INFO: rc: 1
  E0415 09:02:16.102354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:02:16.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5692" for this suite. @ 04/15/24 09:02:16.221
  STEP: Destroying namespace "webhook-markers-3088" for this suite. @ 04/15/24 09:02:16.254
• [6.935 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 04/15/24 09:02:16.272
  Apr 15 09:02:16.272: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:02:16.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:16.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:16.326
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 09:02:16.333
  E0415 09:02:17.102842      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:18.103157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:02:18.375
  Apr 15 09:02:18.383: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-e8d8e67f-4173-4917-a00e-0794d9d9e797 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 09:02:18.4
  Apr 15 09:02:18.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7951" for this suite. @ 04/15/24 09:02:18.449
• [2.209 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 04/15/24 09:02:18.481
  Apr 15 09:02:18.481: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename containers @ 04/15/24 09:02:18.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:18.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:18.523
  STEP: Creating a pod to test override command @ 04/15/24 09:02:18.529
  E0415 09:02:19.103688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:20.103655      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:21.104158      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:22.104914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:02:22.585
  Apr 15 09:02:22.596: INFO: Trying to get logs from node jec7saimeaph-3 pod client-containers-a97de195-a97b-4335-8cf7-84e766ff03c0 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 09:02:22.612
  Apr 15 09:02:22.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-497" for this suite. @ 04/15/24 09:02:22.667
• [4.202 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 04/15/24 09:02:22.684
  Apr 15 09:02:22.684: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 09:02:22.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:22.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:22.736
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/15/24 09:02:22.773
  E0415 09:02:23.106145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:24.107088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:25.107775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:26.108955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:02:26.832
  Apr 15 09:02:26.840: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-f297f857-929b-4ef2-8702-d2bf49476701 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:02:26.855
  Apr 15 09:02:26.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3376" for this suite. @ 04/15/24 09:02:26.905
• [4.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 04/15/24 09:02:26.931
  Apr 15 09:02:26.931: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 09:02:26.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:26.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:26.98
  STEP: validating api versions @ 04/15/24 09:02:26.988
  Apr 15 09:02:26.989: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-7042 api-versions'
  E0415 09:02:27.108928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:02:27.155: INFO: stderr: ""
  Apr 15 09:02:27.156: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Apr 15 09:02:27.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7042" for this suite. @ 04/15/24 09:02:27.18
• [0.277 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/15/24 09:02:27.208
  Apr 15 09:02:27.208: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename init-container @ 04/15/24 09:02:27.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:27.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:27.269
  STEP: creating the pod @ 04/15/24 09:02:27.28
  Apr 15 09:02:27.280: INFO: PodSpec: initContainers in spec.initContainers
  E0415 09:02:28.109282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:29.110069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:30.110272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:31.111003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:02:31.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1530" for this suite. @ 04/15/24 09:02:31.555
• [4.367 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 04/15/24 09:02:31.586
  Apr 15 09:02:31.586: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 09:02:31.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:31.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:31.647
  STEP: Setting up server cert @ 04/15/24 09:02:31.722
  E0415 09:02:32.111306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 09:02:32.773
  STEP: Deploying the webhook pod @ 04/15/24 09:02:32.782
  STEP: Wait for the deployment to be ready @ 04/15/24 09:02:32.807
  Apr 15 09:02:32.835: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 09:02:33.112467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:34.112487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 09:02:34.862
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 09:02:34.883
  E0415 09:02:35.112761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:02:35.884: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 15 09:02:35.908: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 09:02:36.114474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/15/24 09:02:36.446
  STEP: Creating a custom resource that should be denied by the webhook @ 04/15/24 09:02:36.488
  E0415 09:02:37.114058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:38.114423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/15/24 09:02:38.622
  STEP: Updating the custom resource with disallowed data should be denied @ 04/15/24 09:02:38.641
  STEP: Deleting the custom resource should be denied @ 04/15/24 09:02:38.665
  STEP: Remove the offending key and value from the custom resource data @ 04/15/24 09:02:38.681
  STEP: Deleting the updated custom resource should be successful @ 04/15/24 09:02:38.704
  E0415 09:02:39.115281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:02:39.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7945" for this suite. @ 04/15/24 09:02:39.408
  STEP: Destroying namespace "webhook-markers-6500" for this suite. @ 04/15/24 09:02:39.421
• [7.849 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 04/15/24 09:02:39.436
  Apr 15 09:02:39.436: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pod-network-test @ 04/15/24 09:02:39.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:39.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:39.496
  STEP: Performing setup for networking test in namespace pod-network-test-6704 @ 04/15/24 09:02:39.503
  STEP: creating a selector @ 04/15/24 09:02:39.503
  STEP: Creating the service pods in kubernetes @ 04/15/24 09:02:39.503
  Apr 15 09:02:39.503: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0415 09:02:40.116332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:41.116670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:42.117842      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:43.118101      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:44.118777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:45.118374      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:46.119200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:47.120057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:48.120410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:49.120709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:50.122016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:51.132280      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:52.133416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:53.134001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:54.135145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:55.135387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:56.136059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:57.136053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:58.136439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:02:59.137717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:00.137848      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:01.138841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/15/24 09:03:01.771
  E0415 09:03:02.139077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:03.140794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:03:03.815: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 15 09:03:03.815: INFO: Breadth first check of 10.233.64.240 on host 192.168.121.146...
  Apr 15 09:03:03.822: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.72:9080/dial?request=hostname&protocol=udp&host=10.233.64.240&port=8081&tries=1'] Namespace:pod-network-test-6704 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:03:03.823: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:03:03.826: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:03:03.826: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6704/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.72%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.240%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 09:03:04.008: INFO: Waiting for responses: map[]
  Apr 15 09:03:04.008: INFO: reached 10.233.64.240 after 0/1 tries
  Apr 15 09:03:04.009: INFO: Breadth first check of 10.233.65.200 on host 192.168.121.90...
  Apr 15 09:03:04.018: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.72:9080/dial?request=hostname&protocol=udp&host=10.233.65.200&port=8081&tries=1'] Namespace:pod-network-test-6704 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:03:04.019: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:03:04.021: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:03:04.022: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6704/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.72%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.200%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0415 09:03:04.140091      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:03:04.158: INFO: Waiting for responses: map[]
  Apr 15 09:03:04.159: INFO: reached 10.233.65.200 after 0/1 tries
  Apr 15 09:03:04.159: INFO: Breadth first check of 10.233.66.71 on host 192.168.121.234...
  Apr 15 09:03:04.171: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.72:9080/dial?request=hostname&protocol=udp&host=10.233.66.71&port=8081&tries=1'] Namespace:pod-network-test-6704 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:03:04.171: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:03:04.173: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:03:04.173: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6704/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.72%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.71%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 09:03:04.307: INFO: Waiting for responses: map[]
  Apr 15 09:03:04.307: INFO: reached 10.233.66.71 after 0/1 tries
  Apr 15 09:03:04.307: INFO: Going to retry 0 out of 3 pods....
  Apr 15 09:03:04.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6704" for this suite. @ 04/15/24 09:03:04.317
• [24.894 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 04/15/24 09:03:04.332
  Apr 15 09:03:04.332: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 09:03:04.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:04.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:04.377
  Apr 15 09:03:04.383: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 09:03:05.141674      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:03:05.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1451" for this suite. @ 04/15/24 09:03:05.445
• [1.128 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 04/15/24 09:03:05.463
  Apr 15 09:03:05.463: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 09:03:05.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:05.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:05.516
  Apr 15 09:03:05.548: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0415 09:03:06.142046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:07.142409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:08.143175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:09.143323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:10.143481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:03:10.569: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 09:03:10.569
  STEP: Scaling up "test-rs" replicaset @ 04/15/24 09:03:10.569
  Apr 15 09:03:10.600: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/15/24 09:03:10.6
  Apr 15 09:03:10.707: INFO: observed ReplicaSet test-rs in namespace replicaset-7644 with ReadyReplicas 1, AvailableReplicas 1
  Apr 15 09:03:10.707: INFO: observed ReplicaSet test-rs in namespace replicaset-7644 with ReadyReplicas 1, AvailableReplicas 1
  Apr 15 09:03:10.927: INFO: observed ReplicaSet test-rs in namespace replicaset-7644 with ReadyReplicas 1, AvailableReplicas 1
  Apr 15 09:03:10.971: INFO: observed ReplicaSet test-rs in namespace replicaset-7644 with ReadyReplicas 1, AvailableReplicas 1
  E0415 09:03:11.144246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:12.145185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:03:12.352: INFO: observed ReplicaSet test-rs in namespace replicaset-7644 with ReadyReplicas 2, AvailableReplicas 2
  E0415 09:03:13.145323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:03:13.284: INFO: observed Replicaset test-rs in namespace replicaset-7644 with ReadyReplicas 3 found true
  Apr 15 09:03:13.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7644" for this suite. @ 04/15/24 09:03:13.299
• [7.857 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 04/15/24 09:03:13.326
  Apr 15 09:03:13.326: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 09:03:13.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:13.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:13.375
  STEP: Creating configMap with name configmap-test-volume-map-ed245198-fa65-4435-a7ab-6a705902c046 @ 04/15/24 09:03:13.392
  STEP: Creating a pod to test consume configMaps @ 04/15/24 09:03:13.405
  E0415 09:03:14.145690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:15.146134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:16.146678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:17.147021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:03:17.456
  Apr 15 09:03:17.464: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-configmaps-5b56c103-fa40-4724-875a-7cbe3cf331fb container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 09:03:17.486
  Apr 15 09:03:17.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2657" for this suite. @ 04/15/24 09:03:17.544
• [4.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 04/15/24 09:03:17.568
  Apr 15 09:03:17.569: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename dns @ 04/15/24 09:03:17.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:17.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:17.666
  STEP: Creating a test headless service @ 04/15/24 09:03:17.674
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4577.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4577.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4577.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4577.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4577.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4577.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4577.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4577.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4577.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 133.45.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.45.133_udp@PTR;check="$$(dig +tcp +noall +answer +search 133.45.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.45.133_tcp@PTR;sleep 1; done
   @ 04/15/24 09:03:17.72
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4577.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4577.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4577.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4577.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4577.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4577.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4577.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4577.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4577.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4577.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 133.45.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.45.133_udp@PTR;check="$$(dig +tcp +noall +answer +search 133.45.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.45.133_tcp@PTR;sleep 1; done
   @ 04/15/24 09:03:17.72
  STEP: creating a pod to probe DNS @ 04/15/24 09:03:17.721
  STEP: submitting the pod to kubernetes @ 04/15/24 09:03:17.721
  E0415 09:03:18.147229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:19.147908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 09:03:19.783
  STEP: looking for the results for each expected name from probers @ 04/15/24 09:03:19.798
  Apr 15 09:03:19.813: INFO: Unable to read wheezy_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:19.825: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:19.836: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:19.844: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:19.892: INFO: Unable to read jessie_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:19.902: INFO: Unable to read jessie_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:19.909: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:19.919: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:19.951: INFO: Lookups using dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba failed for: [wheezy_udp@dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_udp@dns-test-service.dns-4577.svc.cluster.local jessie_tcp@dns-test-service.dns-4577.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local]

  Apr 15 09:03:19.964: INFO: Pod client logs for webserver: 
  Apr 15 09:03:19.978: INFO: Pod client logs for querier: 
  Apr 15 09:03:19.992: INFO: Pod client logs for jessie-querier: 
  E0415 09:03:20.151303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:21.151537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:22.152775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:23.152240      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:24.152385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:03:24.812: INFO: Unable to read wheezy_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:24.822: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:24.832: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:24.840: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:24.892: INFO: Unable to read jessie_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:24.902: INFO: Unable to read jessie_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:24.911: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:24.919: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:24.960: INFO: Lookups using dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba failed for: [wheezy_udp@dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_udp@dns-test-service.dns-4577.svc.cluster.local jessie_tcp@dns-test-service.dns-4577.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local]

  Apr 15 09:03:24.978: INFO: Pod client logs for webserver: 
  Apr 15 09:03:24.992: INFO: Pod client logs for querier: 
  Apr 15 09:03:25.016: INFO: Pod client logs for jessie-querier: 
  E0415 09:03:25.152504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:26.154932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:27.154253      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:28.154306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:29.154855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:03:29.813: INFO: Unable to read wheezy_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:29.823: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:29.831: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:29.839: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:29.879: INFO: Unable to read jessie_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:29.888: INFO: Unable to read jessie_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:29.899: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:29.905: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:29.953: INFO: Lookups using dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba failed for: [wheezy_udp@dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_udp@dns-test-service.dns-4577.svc.cluster.local jessie_tcp@dns-test-service.dns-4577.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local]

  Apr 15 09:03:29.985: INFO: Pod client logs for webserver: 
  Apr 15 09:03:30.006: INFO: Pod client logs for querier: 
  Apr 15 09:03:30.029: INFO: Pod client logs for jessie-querier: 
  E0415 09:03:30.155438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:31.156196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:32.156302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:33.157360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:34.158223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:03:34.822: INFO: Unable to read wheezy_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:34.833: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:34.848: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:34.862: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:34.914: INFO: Unable to read jessie_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:34.922: INFO: Unable to read jessie_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:34.930: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:34.937: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:34.972: INFO: Lookups using dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba failed for: [wheezy_udp@dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_udp@dns-test-service.dns-4577.svc.cluster.local jessie_tcp@dns-test-service.dns-4577.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local]

  Apr 15 09:03:34.987: INFO: Pod client logs for webserver: 
  Apr 15 09:03:35.001: INFO: Pod client logs for querier: 
  Apr 15 09:03:35.017: INFO: Pod client logs for jessie-querier: 
  E0415 09:03:35.158661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:36.158456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:37.159749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:38.161549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:39.161192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:03:39.810: INFO: Unable to read wheezy_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:39.820: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:39.828: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:39.836: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:39.883: INFO: Unable to read jessie_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:39.893: INFO: Unable to read jessie_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:39.905: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:39.918: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:39.965: INFO: Lookups using dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba failed for: [wheezy_udp@dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_udp@dns-test-service.dns-4577.svc.cluster.local jessie_tcp@dns-test-service.dns-4577.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local]

  Apr 15 09:03:39.982: INFO: Pod client logs for webserver: 
  Apr 15 09:03:40.003: INFO: Pod client logs for querier: 
  Apr 15 09:03:40.023: INFO: Pod client logs for jessie-querier: 
  E0415 09:03:40.161686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:41.162064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:42.162497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:43.162882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:44.162713      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:03:44.829: INFO: Unable to read wheezy_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:44.847: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:44.863: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:44.879: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:44.964: INFO: Unable to read jessie_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:44.983: INFO: Unable to read jessie_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:45.001: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:45.020: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:45.064: INFO: Lookups using dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba failed for: [wheezy_udp@dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_udp@dns-test-service.dns-4577.svc.cluster.local jessie_tcp@dns-test-service.dns-4577.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local]

  Apr 15 09:03:45.083: INFO: Pod client logs for webserver: 
  Apr 15 09:03:45.100: INFO: Pod client logs for querier: 
  Apr 15 09:03:45.114: INFO: Pod client logs for jessie-querier: 
  E0415 09:03:45.163435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:46.164284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:47.164328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:48.164539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:49.164825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:03:49.810: INFO: Unable to read wheezy_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:49.819: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:49.828: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:49.837: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:49.879: INFO: Unable to read jessie_udp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:49.887: INFO: Unable to read jessie_tcp@dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:49.899: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:49.909: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local from pod dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba: the server could not find the requested resource (get pods dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba)
  Apr 15 09:03:49.960: INFO: Lookups using dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba failed for: [wheezy_udp@dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@dns-test-service.dns-4577.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_udp@dns-test-service.dns-4577.svc.cluster.local jessie_tcp@dns-test-service.dns-4577.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4577.svc.cluster.local]

  Apr 15 09:03:49.974: INFO: Pod client logs for webserver: 
  Apr 15 09:03:49.992: INFO: Pod client logs for querier: 
  Apr 15 09:03:50.009: INFO: Pod client logs for jessie-querier: 
  E0415 09:03:50.165719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:51.165805      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:52.166223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:53.166259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:54.166724      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:03:54.932: INFO: DNS probes using dns-4577/dns-test-8908ced2-7704-4985-a1e5-a06343ce55ba succeeded

  STEP: deleting the pod @ 04/15/24 09:03:54.934
  STEP: deleting the test service @ 04/15/24 09:03:54.963
  STEP: deleting the test headless service @ 04/15/24 09:03:55.034
  Apr 15 09:03:55.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4577" for this suite. @ 04/15/24 09:03:55.134
• [37.587 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS  E0415 09:03:55.167060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 04/15/24 09:03:55.174
  Apr 15 09:03:55.175: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 09:03:55.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:55.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:55.241
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 09:03:55.249
  E0415 09:03:56.167550      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:57.168293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:58.169225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:03:59.170337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:03:59.317
  Apr 15 09:03:59.324: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-1461478f-0ca5-4d6a-8384-83c95abf0b20 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 09:03:59.344
  Apr 15 09:03:59.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9137" for this suite. @ 04/15/24 09:03:59.395
• [4.239 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 04/15/24 09:03:59.415
  Apr 15 09:03:59.415: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename sysctl @ 04/15/24 09:03:59.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:59.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:59.478
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/15/24 09:03:59.489
  Apr 15 09:03:59.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8383" for this suite. @ 04/15/24 09:03:59.521
• [0.121 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 04/15/24 09:03:59.539
  Apr 15 09:03:59.539: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 09:03:59.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:59.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:59.595
  STEP: Creating a pod to test substitution in volume subpath @ 04/15/24 09:03:59.602
  E0415 09:04:00.170694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:01.171507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:02.172568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:03.172471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:04:03.676
  Apr 15 09:04:03.684: INFO: Trying to get logs from node jec7saimeaph-3 pod var-expansion-84a1a307-d803-4faa-92d2-4cc8376113d1 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 09:04:03.705
  Apr 15 09:04:03.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4658" for this suite. @ 04/15/24 09:04:03.751
• [4.229 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 04/15/24 09:04:03.769
  Apr 15 09:04:03.769: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename crd-webhook @ 04/15/24 09:04:03.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:03.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:03.824
  STEP: Setting up server cert @ 04/15/24 09:04:03.832
  E0415 09:04:04.172616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/15/24 09:04:04.9
  STEP: Deploying the custom resource conversion webhook pod @ 04/15/24 09:04:04.925
  STEP: Wait for the deployment to be ready @ 04/15/24 09:04:04.951
  Apr 15 09:04:04.965: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0415 09:04:05.173501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:06.174640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 09:04:06.996
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 09:04:07.024
  E0415 09:04:07.175278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:04:08.024: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 15 09:04:08.039: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 09:04:08.175648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:09.175797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:10.176637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/15/24 09:04:10.88
  STEP: Create a v2 custom resource @ 04/15/24 09:04:10.924
  STEP: List CRs in v1 @ 04/15/24 09:04:10.941
  E0415 09:04:11.177004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: List CRs in v2 @ 04/15/24 09:04:11.315
  Apr 15 09:04:11.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8061" for this suite. @ 04/15/24 09:04:12.018
• [8.266 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 04/15/24 09:04:12.036
  Apr 15 09:04:12.036: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 09:04:12.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:12.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:12.113
  STEP: Creating the pod @ 04/15/24 09:04:12.121
  E0415 09:04:12.179628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:13.179432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:14.179450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:04:14.713: INFO: Successfully updated pod "annotationupdatebdba6b06-5bba-4aff-9574-d0220e11ecf7"
  E0415 09:04:15.180190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:16.180588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:04:16.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4768" for this suite. @ 04/15/24 09:04:16.756
• [4.731 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 04/15/24 09:04:16.771
  Apr 15 09:04:16.771: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 09:04:16.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:16.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:16.819
  STEP: fetching the /apis discovery document @ 04/15/24 09:04:16.826
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/15/24 09:04:16.828
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/15/24 09:04:16.828
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/15/24 09:04:16.829
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/15/24 09:04:16.831
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/15/24 09:04:16.831
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/15/24 09:04:16.833
  Apr 15 09:04:16.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1561" for this suite. @ 04/15/24 09:04:16.848
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 04/15/24 09:04:16.865
  Apr 15 09:04:16.865: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename secrets @ 04/15/24 09:04:16.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:16.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:16.913
  STEP: Creating projection with secret that has name secret-emptykey-test-cf857a43-1d2e-4c68-bef0-f2ad8f9f3e78 @ 04/15/24 09:04:16.921
  Apr 15 09:04:16.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3568" for this suite. @ 04/15/24 09:04:16.935
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 04/15/24 09:04:16.954
  Apr 15 09:04:16.954: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 09:04:16.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:16.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:17.002
  STEP: Setting up server cert @ 04/15/24 09:04:17.053
  E0415 09:04:17.181571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 09:04:17.953
  STEP: Deploying the webhook pod @ 04/15/24 09:04:17.964
  STEP: Wait for the deployment to be ready @ 04/15/24 09:04:17.986
  Apr 15 09:04:18.006: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 09:04:18.182328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:19.183233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 09:04:20.025
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 09:04:20.043
  E0415 09:04:20.183982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:04:21.045: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/15/24 09:04:21.057
  STEP: create a pod that should be updated by the webhook @ 04/15/24 09:04:21.095
  E0415 09:04:21.184983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:04:21.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8440" for this suite. @ 04/15/24 09:04:21.37
  STEP: Destroying namespace "webhook-markers-9478" for this suite. @ 04/15/24 09:04:21.383
• [4.449 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 04/15/24 09:04:21.408
  Apr 15 09:04:21.409: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:04:21.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:21.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:21.468
  STEP: Creating configMap with name projected-configmap-test-volume-map-1da589f6-507c-4e5f-88dc-f4e6d4008482 @ 04/15/24 09:04:21.476
  STEP: Creating a pod to test consume configMaps @ 04/15/24 09:04:21.488
  E0415 09:04:22.185694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:23.185850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:24.186674      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:25.187030      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:04:25.574
  Apr 15 09:04:25.582: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-projected-configmaps-485c5719-ce79-49e8-83a6-995cc6df7d7f container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 09:04:25.601
  Apr 15 09:04:25.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2321" for this suite. @ 04/15/24 09:04:25.651
• [4.259 seconds]
------------------------------
SSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 04/15/24 09:04:25.67
  Apr 15 09:04:25.671: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename ingress @ 04/15/24 09:04:25.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:25.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:25.72
  STEP: getting /apis @ 04/15/24 09:04:25.727
  STEP: getting /apis/networking.k8s.io @ 04/15/24 09:04:25.739
  STEP: getting /apis/networking.k8s.iov1 @ 04/15/24 09:04:25.741
  STEP: creating @ 04/15/24 09:04:25.747
  STEP: getting @ 04/15/24 09:04:25.79
  STEP: listing @ 04/15/24 09:04:25.796
  STEP: watching @ 04/15/24 09:04:25.803
  Apr 15 09:04:25.803: INFO: starting watch
  STEP: cluster-wide listing @ 04/15/24 09:04:25.806
  STEP: cluster-wide watching @ 04/15/24 09:04:25.812
  Apr 15 09:04:25.812: INFO: starting watch
  STEP: patching @ 04/15/24 09:04:25.815
  STEP: updating @ 04/15/24 09:04:25.825
  Apr 15 09:04:25.842: INFO: waiting for watch events with expected annotations
  Apr 15 09:04:25.842: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/15/24 09:04:25.842
  STEP: updating /status @ 04/15/24 09:04:25.856
  STEP: get /status @ 04/15/24 09:04:25.878
  STEP: deleting @ 04/15/24 09:04:25.885
  STEP: deleting a collection @ 04/15/24 09:04:25.913
  Apr 15 09:04:25.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-2896" for this suite. @ 04/15/24 09:04:25.96
• [0.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 04/15/24 09:04:25.986
  Apr 15 09:04:25.986: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 09:04:25.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:26.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:26.029
  E0415 09:04:26.187532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:27.188329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:04:28.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5553" for this suite. @ 04/15/24 09:04:28.114
• [2.148 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 04/15/24 09:04:28.136
  Apr 15 09:04:28.137: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:04:28.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:28.184
  E0415 09:04:28.187770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:28.19
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 09:04:28.201
  E0415 09:04:29.188275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:30.188415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:31.188663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:32.189088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:04:32.269
  Apr 15 09:04:32.278: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-0b6c3579-1f7f-4e39-b348-db8dddfb891c container client-container: <nil>
  STEP: delete the pod @ 04/15/24 09:04:32.296
  Apr 15 09:04:32.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2064" for this suite. @ 04/15/24 09:04:32.389
• [4.283 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/15/24 09:04:32.425
  Apr 15 09:04:32.425: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename init-container @ 04/15/24 09:04:32.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:32.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:32.481
  STEP: creating the pod @ 04/15/24 09:04:32.49
  Apr 15 09:04:32.490: INFO: PodSpec: initContainers in spec.initContainers
  E0415 09:04:33.195117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:34.195117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:35.196048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:36.196467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:37.196647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:38.196809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:39.197597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:40.198164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:41.198764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:42.199070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:43.199731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:44.200209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:45.200831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:46.201920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:47.201926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:48.202039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:49.202327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:50.202788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:51.203746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:52.203989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:53.204228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:54.205237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:55.206030      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:56.206292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:57.206942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:58.207727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:04:59.207845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:00.208297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:01.209083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:02.209845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:03.210744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:04.211272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:05.212312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:06.212559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:07.213113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:08.214697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:09.213988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:10.214518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:11.214541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:12.214754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:13.215150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:14.215238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:15.215598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:16.215576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:05:16.393: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-057617ca-6727-4f63-82d2-5b6e99646d07", GenerateName:"", Namespace:"init-container-1771", SelfLink:"", UID:"f6a45855-3ea0-4c0c-a809-ecf369370ec8", ResourceVersion:"226231", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 4, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"490464295"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 4, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00352b518), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 5, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00352b578), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-hhbsc", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc003d0b760), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hhbsc", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hhbsc", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hhbsc", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0041bd560), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"jec7saimeaph-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00038c7e0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0041bd600)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0041bd620)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0041bd628), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0041bd62c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc001396eb0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 9, 4, 34, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 9, 4, 32, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 9, 4, 32, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 9, 4, 32, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 9, 4, 32, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.234", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.121.234"}}, PodIP:"10.233.66.85", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.66.85"}}, StartTime:time.Date(2024, time.April, 15, 9, 4, 32, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00038caf0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00038cb60)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"cri-o://d01139393b71498fc61aeb85272ec5f8161941a3651944d6f97f629e792d9b5e", Started:(*bool)(0xc0041bd6ca), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003d0b7c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0041bd6df), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003d0b7a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0041bd6af), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Apr 15 09:05:16.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1771" for this suite. @ 04/15/24 09:05:16.411
• [44.015 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/15/24 09:05:16.444
  Apr 15 09:05:16.444: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename certificates @ 04/15/24 09:05:16.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:05:16.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:05:16.5
  E0415 09:05:17.216294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:18.216615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 04/15/24 09:05:18.915
  STEP: getting /apis/certificates.k8s.io @ 04/15/24 09:05:18.923
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/15/24 09:05:18.924
  STEP: creating @ 04/15/24 09:05:18.927
  STEP: getting @ 04/15/24 09:05:18.976
  STEP: listing @ 04/15/24 09:05:18.987
  STEP: watching @ 04/15/24 09:05:18.997
  Apr 15 09:05:18.998: INFO: starting watch
  STEP: patching @ 04/15/24 09:05:19.001
  STEP: updating @ 04/15/24 09:05:19.018
  Apr 15 09:05:19.033: INFO: waiting for watch events with expected annotations
  Apr 15 09:05:19.033: INFO: saw patched and updated annotations
  STEP: getting /approval @ 04/15/24 09:05:19.033
  STEP: patching /approval @ 04/15/24 09:05:19.042
  STEP: updating /approval @ 04/15/24 09:05:19.057
  STEP: getting /status @ 04/15/24 09:05:19.072
  STEP: patching /status @ 04/15/24 09:05:19.081
  STEP: updating /status @ 04/15/24 09:05:19.099
  STEP: deleting @ 04/15/24 09:05:19.117
  STEP: deleting a collection @ 04/15/24 09:05:19.177
  Apr 15 09:05:19.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 09:05:19.217079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "certificates-2408" for this suite. @ 04/15/24 09:05:19.228
• [2.800 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/15/24 09:05:19.249
  Apr 15 09:05:19.249: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pods @ 04/15/24 09:05:19.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:05:19.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:05:19.296
  Apr 15 09:05:19.302: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: creating the pod @ 04/15/24 09:05:19.305
  STEP: submitting the pod to kubernetes @ 04/15/24 09:05:19.306
  E0415 09:05:20.217741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:21.218540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:05:21.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1498" for this suite. @ 04/15/24 09:05:21.423
• [2.195 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 04/15/24 09:05:21.448
  Apr 15 09:05:21.449: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename apf @ 04/15/24 09:05:21.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:05:21.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:05:21.506
  STEP: getting /apis @ 04/15/24 09:05:21.515
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/15/24 09:05:21.527
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/15/24 09:05:21.53
  STEP: creating @ 04/15/24 09:05:21.533
  STEP: getting @ 04/15/24 09:05:21.602
  STEP: listing @ 04/15/24 09:05:21.613
  STEP: watching @ 04/15/24 09:05:21.645
  Apr 15 09:05:21.646: INFO: starting watch
  STEP: patching @ 04/15/24 09:05:21.653
  STEP: updating @ 04/15/24 09:05:21.694
  Apr 15 09:05:21.722: INFO: waiting for watch events with expected annotations
  Apr 15 09:05:21.723: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 04/15/24 09:05:21.724
  STEP: patching /status @ 04/15/24 09:05:21.737
  STEP: updating /status @ 04/15/24 09:05:21.767
  STEP: deleting @ 04/15/24 09:05:21.835
  STEP: deleting a collection @ 04/15/24 09:05:21.865
  Apr 15 09:05:21.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5695" for this suite. @ 04/15/24 09:05:21.96
• [0.537 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 04/15/24 09:05:21.987
  Apr 15 09:05:21.987: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 09:05:21.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:05:22.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:05:22.057
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 09:05:22.062
  E0415 09:05:22.219486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:23.220304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:24.221070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:25.222028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:05:26.115
  Apr 15 09:05:26.125: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-b933c9c0-0dcd-411d-89d9-410016c0e75a container client-container: <nil>
  STEP: delete the pod @ 04/15/24 09:05:26.142
  Apr 15 09:05:26.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-257" for this suite. @ 04/15/24 09:05:26.198
• [4.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 04/15/24 09:05:26.218
  Apr 15 09:05:26.218: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 09:05:26.222
  E0415 09:05:26.222743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:05:26.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:05:26.259
  E0415 09:05:27.223285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:28.224112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:05:28.326: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2650" for this suite. @ 04/15/24 09:05:28.335
• [2.131 seconds]
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 04/15/24 09:05:28.351
  Apr 15 09:05:28.351: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 09:05:28.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:05:28.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:05:28.413
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 09:05:28.42
  E0415 09:05:29.224109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:30.224534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:31.225981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:32.225920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:05:32.487
  Apr 15 09:05:32.500: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-af5c4dec-e3d5-4216-80ae-d2a4531761a2 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 09:05:32.527
  Apr 15 09:05:32.570: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6278" for this suite. @ 04/15/24 09:05:32.587
• [4.253 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 04/15/24 09:05:32.611
  Apr 15 09:05:32.612: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 09:05:32.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:05:32.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:05:32.665
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/15/24 09:05:32.671
  E0415 09:05:33.229291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:34.229891      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 04/15/24 09:05:34.717
  STEP: Then the orphan pod is adopted @ 04/15/24 09:05:34.729
  E0415 09:05:35.231139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:05:35.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8310" for this suite. @ 04/15/24 09:05:35.761
• [3.164 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 04/15/24 09:05:35.778
  Apr 15 09:05:35.778: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename disruption @ 04/15/24 09:05:35.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:05:35.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:05:35.842
  STEP: creating the pdb @ 04/15/24 09:05:35.847
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:05:35.859
  E0415 09:05:36.231850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:37.232288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 04/15/24 09:05:37.872
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:05:37.892
  E0415 09:05:38.233131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:39.233539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 04/15/24 09:05:39.904
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:05:39.926
  E0415 09:05:40.234498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:41.234568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 04/15/24 09:05:41.945
  Apr 15 09:05:41.953: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5515" for this suite. @ 04/15/24 09:05:41.974
• [6.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 04/15/24 09:05:42
  Apr 15 09:05:42.000: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename disruption @ 04/15/24 09:05:42.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:05:42.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:05:42.051
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:05:42.076
  E0415 09:05:42.236006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:43.236295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 04/15/24 09:05:44.088
  STEP: Waiting for all pods to be running @ 04/15/24 09:05:44.111
  Apr 15 09:05:44.132: INFO: running pods: 0 < 1
  E0415 09:05:44.236597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:45.240228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/15/24 09:05:46.122
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:05:46.158
  STEP: Patching PodDisruptionBudget status @ 04/15/24 09:05:46.179
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:05:46.211
  Apr 15 09:05:46.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9698" for this suite. @ 04/15/24 09:05:46.236
  E0415 09:05:46.237489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 04/15/24 09:05:46.265
  Apr 15 09:05:46.265: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pod-network-test @ 04/15/24 09:05:46.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:05:46.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:05:46.328
  STEP: Performing setup for networking test in namespace pod-network-test-4711 @ 04/15/24 09:05:46.344
  STEP: creating a selector @ 04/15/24 09:05:46.345
  STEP: Creating the service pods in kubernetes @ 04/15/24 09:05:46.345
  Apr 15 09:05:46.345: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0415 09:05:47.237253      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:48.238052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:49.238921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:50.239537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:51.239671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:52.239895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:53.240220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:54.241244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:55.241493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:56.241558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:57.242288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:58.242681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:05:59.243620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:00.244557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:01.244394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:02.244487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:03.246426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:04.245477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:05.246141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:06.247137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:07.248097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:08.248527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/15/24 09:06:08.76
  E0415 09:06:09.249294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:10.248947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:10.812: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 15 09:06:10.813: INFO: Breadth first check of 10.233.64.242 on host 192.168.121.146...
  Apr 15 09:06:10.819: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.93:9080/dial?request=hostname&protocol=http&host=10.233.64.242&port=8083&tries=1'] Namespace:pod-network-test-4711 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:06:10.820: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:06:10.825: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:06:10.825: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4711/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.93%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.242%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 09:06:10.997: INFO: Waiting for responses: map[]
  Apr 15 09:06:10.997: INFO: reached 10.233.64.242 after 0/1 tries
  Apr 15 09:06:10.997: INFO: Breadth first check of 10.233.65.202 on host 192.168.121.90...
  Apr 15 09:06:11.005: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.93:9080/dial?request=hostname&protocol=http&host=10.233.65.202&port=8083&tries=1'] Namespace:pod-network-test-4711 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:06:11.005: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:06:11.010: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:06:11.010: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4711/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.93%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.202%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 09:06:11.131: INFO: Waiting for responses: map[]
  Apr 15 09:06:11.131: INFO: reached 10.233.65.202 after 0/1 tries
  Apr 15 09:06:11.131: INFO: Breadth first check of 10.233.66.92 on host 192.168.121.234...
  Apr 15 09:06:11.166: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.93:9080/dial?request=hostname&protocol=http&host=10.233.66.92&port=8083&tries=1'] Namespace:pod-network-test-4711 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:06:11.166: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:06:11.167: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:06:11.167: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4711/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.93%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.92%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0415 09:06:11.249935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:11.311: INFO: Waiting for responses: map[]
  Apr 15 09:06:11.311: INFO: reached 10.233.66.92 after 0/1 tries
  Apr 15 09:06:11.311: INFO: Going to retry 0 out of 3 pods....
  Apr 15 09:06:11.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4711" for this suite. @ 04/15/24 09:06:11.326
• [25.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 04/15/24 09:06:11.348
  Apr 15 09:06:11.348: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 09:06:11.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:06:11.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:06:11.401
  Apr 15 09:06:11.410: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-2868 version'
  Apr 15 09:06:11.633: INFO: stderr: ""
  Apr 15 09:06:11.633: INFO: stdout: "Client Version: v1.29.3\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.3\n"
  Apr 15 09:06:11.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2868" for this suite. @ 04/15/24 09:06:11.65
• [0.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 04/15/24 09:06:11.671
  Apr 15 09:06:11.671: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 09:06:11.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:06:11.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:06:11.724
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/15/24 09:06:11.732
  E0415 09:06:12.250355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:13.251212      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:14.251479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:15.251491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:06:15.78
  Apr 15 09:06:15.788: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-42c971f3-d72e-41c8-b683-8cc430892457 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:06:15.803
  Apr 15 09:06:15.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8986" for this suite. @ 04/15/24 09:06:15.854
• [4.204 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/15/24 09:06:15.876
  Apr 15 09:06:15.877: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename proxy @ 04/15/24 09:06:15.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:06:15.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:06:15.926
  Apr 15 09:06:15.932: INFO: Creating pod...
  E0415 09:06:16.252820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:17.254237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:17.981: INFO: Creating service...
  Apr 15 09:06:18.009: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/pods/agnhost/proxy?method=DELETE
  Apr 15 09:06:18.032: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 15 09:06:18.032: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/pods/agnhost/proxy?method=OPTIONS
  Apr 15 09:06:18.041: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 15 09:06:18.041: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/pods/agnhost/proxy?method=PATCH
  Apr 15 09:06:18.049: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 15 09:06:18.049: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/pods/agnhost/proxy?method=POST
  Apr 15 09:06:18.059: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 15 09:06:18.059: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/pods/agnhost/proxy?method=PUT
  Apr 15 09:06:18.067: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 15 09:06:18.068: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/services/e2e-proxy-test-service/proxy?method=DELETE
  Apr 15 09:06:18.096: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 15 09:06:18.096: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Apr 15 09:06:18.126: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 15 09:06:18.128: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/services/e2e-proxy-test-service/proxy?method=PATCH
  Apr 15 09:06:18.158: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 15 09:06:18.159: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/services/e2e-proxy-test-service/proxy?method=POST
  Apr 15 09:06:18.186: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 15 09:06:18.186: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/services/e2e-proxy-test-service/proxy?method=PUT
  Apr 15 09:06:18.234: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 15 09:06:18.234: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/pods/agnhost/proxy?method=GET
  Apr 15 09:06:18.251: INFO: http.Client request:GET StatusCode:301
  Apr 15 09:06:18.252: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/services/e2e-proxy-test-service/proxy?method=GET
  E0415 09:06:18.254145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:18.268: INFO: http.Client request:GET StatusCode:301
  Apr 15 09:06:18.269: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/pods/agnhost/proxy?method=HEAD
  Apr 15 09:06:18.279: INFO: http.Client request:HEAD StatusCode:301
  Apr 15 09:06:18.279: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3511/services/e2e-proxy-test-service/proxy?method=HEAD
  Apr 15 09:06:18.291: INFO: http.Client request:HEAD StatusCode:301
  Apr 15 09:06:18.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3511" for this suite. @ 04/15/24 09:06:18.308
• [2.446 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/15/24 09:06:18.328
  Apr 15 09:06:18.328: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pods @ 04/15/24 09:06:18.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:06:18.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:06:18.377
  STEP: creating the pod @ 04/15/24 09:06:18.383
  STEP: submitting the pod to kubernetes @ 04/15/24 09:06:18.384
  W0415 09:06:18.407684      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0415 09:06:19.255116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:20.255818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/15/24 09:06:20.447
  STEP: updating the pod @ 04/15/24 09:06:20.458
  Apr 15 09:06:20.995: INFO: Successfully updated pod "pod-update-activedeadlineseconds-2a312056-5d12-4916-9df2-0de6a30872f4"
  E0415 09:06:21.256503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:22.257312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:23.258099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:24.258154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:25.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9564" for this suite. @ 04/15/24 09:06:25.039
• [6.724 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 04/15/24 09:06:25.053
  Apr 15 09:06:25.053: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 09:06:25.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:06:25.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:06:25.1
  STEP: Creating service test in namespace statefulset-5801 @ 04/15/24 09:06:25.107
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/15/24 09:06:25.12
  STEP: Creating stateful set ss in namespace statefulset-5801 @ 04/15/24 09:06:25.139
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5801 @ 04/15/24 09:06:25.189
  Apr 15 09:06:25.220: INFO: Found 0 stateful pods, waiting for 1
  E0415 09:06:25.258735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:26.259014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:27.260022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:28.260395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:29.260901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:30.260986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:31.261532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:32.262265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:33.262428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:34.263095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:35.201: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/15/24 09:06:35.201
  Apr 15 09:06:35.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-5801 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0415 09:06:35.263151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:35.589: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 09:06:35.589: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 09:06:35.589: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 09:06:35.599: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0415 09:06:36.263695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:37.264379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:38.264631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:39.264968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:40.265660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:41.266481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:42.266816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:43.266864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:44.267097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:45.267362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:45.600: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 09:06:45.600: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 15 09:06:45.659: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999222s
  E0415 09:06:46.268116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:46.668: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.987177254s
  E0415 09:06:47.268830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:47.680: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.977673553s
  E0415 09:06:48.269125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:48.692: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.966358978s
  E0415 09:06:49.269117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:49.706: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.954597523s
  E0415 09:06:50.269562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:50.719: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.940168815s
  E0415 09:06:51.270176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:51.729: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.926669308s
  E0415 09:06:52.270332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:52.738: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.917882412s
  E0415 09:06:53.271212      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:53.751: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.907045537s
  E0415 09:06:54.272345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:06:54.764: INFO: Verifying statefulset ss doesn't scale past 1 for another 895.006278ms
  E0415 09:06:55.273561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5801 @ 04/15/24 09:06:55.765
  Apr 15 09:06:55.776: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-5801 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 09:06:56.130: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 09:06:56.130: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 09:06:56.130: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 09:06:56.139: INFO: Found 1 stateful pods, waiting for 3
  E0415 09:06:56.274072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:57.275044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:58.275880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:06:59.276885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:00.278010      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:01.279045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:02.279938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:03.281186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:04.281881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:05.282888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:06.145: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 09:07:06.146: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 09:07:06.146: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/15/24 09:07:06.147
  STEP: Scale down will halt with unhealthy stateful pod @ 04/15/24 09:07:06.147
  Apr 15 09:07:06.172: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-5801 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0415 09:07:06.283092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:06.532: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 09:07:06.532: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 09:07:06.532: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 09:07:06.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-5801 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 09:07:06.867: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 09:07:06.867: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 09:07:06.867: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 09:07:06.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-5801 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 09:07:07.221: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 09:07:07.221: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 09:07:07.221: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 09:07:07.221: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 15 09:07:07.231: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 1
  E0415 09:07:07.283495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:08.284142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:09.284357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:10.284736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:11.285809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:12.285912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:13.286366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:14.286984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:15.287110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:16.287944      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:17.242: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 09:07:17.242: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 09:07:17.242: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  E0415 09:07:17.288229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:17.294: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999998927s
  E0415 09:07:18.289254      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:18.306: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.9857908s
  E0415 09:07:19.289357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:19.319: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.974518637s
  E0415 09:07:20.290187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:20.331: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.961098105s
  E0415 09:07:21.291060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:21.349: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.948939087s
  E0415 09:07:22.291377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:22.362: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.931782696s
  E0415 09:07:23.291894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:23.375: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.918436396s
  E0415 09:07:24.291999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:24.386: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.905397894s
  E0415 09:07:25.292747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:25.400: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.89418491s
  E0415 09:07:26.293846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:26.414: INFO: Verifying statefulset ss doesn't scale past 3 for another 880.945659ms
  E0415 09:07:27.293461      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5801 @ 04/15/24 09:07:27.415
  Apr 15 09:07:27.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-5801 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 09:07:27.766: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 09:07:27.766: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 09:07:27.766: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 09:07:27.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-5801 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 09:07:28.078: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 09:07:28.078: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 09:07:28.078: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 09:07:28.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=statefulset-5801 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0415 09:07:28.295066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:28.443: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 09:07:28.444: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 09:07:28.444: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 09:07:28.444: INFO: Scaling statefulset ss to 0
  E0415 09:07:29.295912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:30.296834      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:31.297048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:32.297699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:33.298974      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:34.299443      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:35.300000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:36.300757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:37.300977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:38.301756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/15/24 09:07:38.476
  Apr 15 09:07:38.477: INFO: Deleting all statefulset in ns statefulset-5801
  Apr 15 09:07:38.484: INFO: Scaling statefulset ss to 0
  Apr 15 09:07:38.514: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 09:07:38.521: INFO: Deleting statefulset ss
  Apr 15 09:07:38.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5801" for this suite. @ 04/15/24 09:07:38.594
• [73.561 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 04/15/24 09:07:38.615
  Apr 15 09:07:38.615: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename gc @ 04/15/24 09:07:38.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:38.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:38.685
  STEP: create the rc1 @ 04/15/24 09:07:38.711
  STEP: create the rc2 @ 04/15/24 09:07:38.728
  E0415 09:07:39.302028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:40.303697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:41.305757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:42.311469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:43.311816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:44.311610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/15/24 09:07:44.904
  E0415 09:07:45.311832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:46.312378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:47.312897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:48.313605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/15/24 09:07:48.342
  STEP: wait for the rc to be deleted @ 04/15/24 09:07:48.471
  E0415 09:07:49.315191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:50.316007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:51.316211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:52.352152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:53.351010      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:53.581: INFO: 69 pods remaining
  Apr 15 09:07:53.582: INFO: 69 pods has nil DeletionTimestamp
  Apr 15 09:07:53.582: INFO: 
  E0415 09:07:54.352398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:55.355163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:56.355634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:57.361050      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:58.360949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/15/24 09:07:58.673
  Apr 15 09:07:59.034: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 09:07:59.043: INFO: Deleting pod "simpletest-rc-to-be-deleted-26nd2" in namespace "gc-7152"
  Apr 15 09:07:59.292: INFO: Deleting pod "simpletest-rc-to-be-deleted-2fch8" in namespace "gc-7152"
  Apr 15 09:07:59.339: INFO: Deleting pod "simpletest-rc-to-be-deleted-2ks4g" in namespace "gc-7152"
  E0415 09:07:59.361887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:59.407: INFO: Deleting pod "simpletest-rc-to-be-deleted-2r9z9" in namespace "gc-7152"
  Apr 15 09:07:59.476: INFO: Deleting pod "simpletest-rc-to-be-deleted-2tfvs" in namespace "gc-7152"
  Apr 15 09:07:59.604: INFO: Deleting pod "simpletest-rc-to-be-deleted-4hbnj" in namespace "gc-7152"
  Apr 15 09:07:59.756: INFO: Deleting pod "simpletest-rc-to-be-deleted-4tftl" in namespace "gc-7152"
  Apr 15 09:07:59.853: INFO: Deleting pod "simpletest-rc-to-be-deleted-55cdz" in namespace "gc-7152"
  Apr 15 09:07:59.944: INFO: Deleting pod "simpletest-rc-to-be-deleted-56rth" in namespace "gc-7152"
  Apr 15 09:08:00.030: INFO: Deleting pod "simpletest-rc-to-be-deleted-5j8fl" in namespace "gc-7152"
  Apr 15 09:08:00.129: INFO: Deleting pod "simpletest-rc-to-be-deleted-5m6mv" in namespace "gc-7152"
  Apr 15 09:08:00.195: INFO: Deleting pod "simpletest-rc-to-be-deleted-5nqm6" in namespace "gc-7152"
  Apr 15 09:08:00.324: INFO: Deleting pod "simpletest-rc-to-be-deleted-5s8fk" in namespace "gc-7152"
  E0415 09:08:00.362545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:08:00.469: INFO: Deleting pod "simpletest-rc-to-be-deleted-5wkjw" in namespace "gc-7152"
  Apr 15 09:08:00.568: INFO: Deleting pod "simpletest-rc-to-be-deleted-5zj78" in namespace "gc-7152"
  Apr 15 09:08:00.628: INFO: Deleting pod "simpletest-rc-to-be-deleted-68k8f" in namespace "gc-7152"
  Apr 15 09:08:00.667: INFO: Deleting pod "simpletest-rc-to-be-deleted-6d4q2" in namespace "gc-7152"
  Apr 15 09:08:00.711: INFO: Deleting pod "simpletest-rc-to-be-deleted-6mbvw" in namespace "gc-7152"
  Apr 15 09:08:00.831: INFO: Deleting pod "simpletest-rc-to-be-deleted-6pfbq" in namespace "gc-7152"
  Apr 15 09:08:00.963: INFO: Deleting pod "simpletest-rc-to-be-deleted-7qp5w" in namespace "gc-7152"
  Apr 15 09:08:01.059: INFO: Deleting pod "simpletest-rc-to-be-deleted-8lkmv" in namespace "gc-7152"
  Apr 15 09:08:01.309: INFO: Deleting pod "simpletest-rc-to-be-deleted-8qrcx" in namespace "gc-7152"
  E0415 09:08:01.362315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:08:01.433: INFO: Deleting pod "simpletest-rc-to-be-deleted-8tm6z" in namespace "gc-7152"
  Apr 15 09:08:01.508: INFO: Deleting pod "simpletest-rc-to-be-deleted-8wqqx" in namespace "gc-7152"
  Apr 15 09:08:01.639: INFO: Deleting pod "simpletest-rc-to-be-deleted-9fpk8" in namespace "gc-7152"
  Apr 15 09:08:01.833: INFO: Deleting pod "simpletest-rc-to-be-deleted-9hw6c" in namespace "gc-7152"
  Apr 15 09:08:01.902: INFO: Deleting pod "simpletest-rc-to-be-deleted-bf8ng" in namespace "gc-7152"
  Apr 15 09:08:01.965: INFO: Deleting pod "simpletest-rc-to-be-deleted-bj7pf" in namespace "gc-7152"
  Apr 15 09:08:02.028: INFO: Deleting pod "simpletest-rc-to-be-deleted-bl69k" in namespace "gc-7152"
  Apr 15 09:08:02.103: INFO: Deleting pod "simpletest-rc-to-be-deleted-bqc4z" in namespace "gc-7152"
  Apr 15 09:08:02.159: INFO: Deleting pod "simpletest-rc-to-be-deleted-bvdv7" in namespace "gc-7152"
  Apr 15 09:08:02.203: INFO: Deleting pod "simpletest-rc-to-be-deleted-cl6tq" in namespace "gc-7152"
  Apr 15 09:08:02.230: INFO: Deleting pod "simpletest-rc-to-be-deleted-crh8z" in namespace "gc-7152"
  Apr 15 09:08:02.297: INFO: Deleting pod "simpletest-rc-to-be-deleted-cs4lt" in namespace "gc-7152"
  Apr 15 09:08:02.343: INFO: Deleting pod "simpletest-rc-to-be-deleted-dj67n" in namespace "gc-7152"
  E0415 09:08:02.363117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:08:02.376: INFO: Deleting pod "simpletest-rc-to-be-deleted-fqs96" in namespace "gc-7152"
  Apr 15 09:08:02.514: INFO: Deleting pod "simpletest-rc-to-be-deleted-g5t24" in namespace "gc-7152"
  Apr 15 09:08:02.718: INFO: Deleting pod "simpletest-rc-to-be-deleted-gd99z" in namespace "gc-7152"
  Apr 15 09:08:02.921: INFO: Deleting pod "simpletest-rc-to-be-deleted-gkz5k" in namespace "gc-7152"
  Apr 15 09:08:03.100: INFO: Deleting pod "simpletest-rc-to-be-deleted-gxh8m" in namespace "gc-7152"
  Apr 15 09:08:03.332: INFO: Deleting pod "simpletest-rc-to-be-deleted-hdq9l" in namespace "gc-7152"
  E0415 09:08:03.367082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:08:03.573: INFO: Deleting pod "simpletest-rc-to-be-deleted-hgrxz" in namespace "gc-7152"
  Apr 15 09:08:03.707: INFO: Deleting pod "simpletest-rc-to-be-deleted-hj4g6" in namespace "gc-7152"
  Apr 15 09:08:03.797: INFO: Deleting pod "simpletest-rc-to-be-deleted-hw5hx" in namespace "gc-7152"
  Apr 15 09:08:03.896: INFO: Deleting pod "simpletest-rc-to-be-deleted-hz7rd" in namespace "gc-7152"
  Apr 15 09:08:04.104: INFO: Deleting pod "simpletest-rc-to-be-deleted-j4rf5" in namespace "gc-7152"
  Apr 15 09:08:04.150: INFO: Deleting pod "simpletest-rc-to-be-deleted-j5zjs" in namespace "gc-7152"
  Apr 15 09:08:04.235: INFO: Deleting pod "simpletest-rc-to-be-deleted-j6trg" in namespace "gc-7152"
  Apr 15 09:08:04.356: INFO: Deleting pod "simpletest-rc-to-be-deleted-jbmvj" in namespace "gc-7152"
  E0415 09:08:04.367515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:08:04.397: INFO: Deleting pod "simpletest-rc-to-be-deleted-jgh8g" in namespace "gc-7152"
  Apr 15 09:08:04.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7152" for this suite. @ 04/15/24 09:08:04.655
• [26.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/15/24 09:08:04.722
  Apr 15 09:08:04.722: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pods @ 04/15/24 09:08:04.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:08:04.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:08:04.938
  STEP: creating the pod @ 04/15/24 09:08:04.944
  STEP: submitting the pod to kubernetes @ 04/15/24 09:08:04.944
  STEP: verifying QOS class is set on the pod @ 04/15/24 09:08:05.006
  Apr 15 09:08:05.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2284" for this suite. @ 04/15/24 09:08:05.095
• [0.424 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/15/24 09:08:05.148
  Apr 15 09:08:05.148: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:08:05.185
  E0415 09:08:05.368651      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:08:05.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:08:05.404
  STEP: Creating projection with secret that has name projected-secret-test-f951de90-61a4-4bb6-8c9f-1f21b6898a89 @ 04/15/24 09:08:05.413
  STEP: Creating a pod to test consume secrets @ 04/15/24 09:08:05.439
  E0415 09:08:06.369351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:07.369774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:08.369897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:09.369938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:08:09.58
  Apr 15 09:08:09.598: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-projected-secrets-c5578d4f-8f53-4655-89dc-e933a10f1f7f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 09:08:09.653
  Apr 15 09:08:09.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2049" for this suite. @ 04/15/24 09:08:09.875
• [4.800 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 04/15/24 09:08:09.95
  Apr 15 09:08:09.951: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl-logs @ 04/15/24 09:08:09.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:08:10.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:08:10.105
  STEP: creating an pod @ 04/15/24 09:08:10.11
  Apr 15 09:08:10.111: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-logs-2370 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Apr 15 09:08:10.346: INFO: stderr: ""
  Apr 15 09:08:10.346: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/15/24 09:08:10.346
  Apr 15 09:08:10.346: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0415 09:08:10.370093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:11.371068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:08:12.368: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/15/24 09:08:12.368
  Apr 15 09:08:12.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-logs-2370 logs logs-generator logs-generator'
  E0415 09:08:12.371484      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:08:12.623: INFO: stderr: ""
  Apr 15 09:08:12.623: INFO: stdout: "I0415 09:08:11.189159       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/5jq 385\nI0415 09:08:11.388325       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/6ks 395\nI0415 09:08:11.588815       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/hpq 372\nI0415 09:08:11.788291       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/q9h 354\nI0415 09:08:11.988714       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/wjlv 434\nI0415 09:08:12.188172       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/gx7 314\nI0415 09:08:12.388637       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/fxc 270\nI0415 09:08:12.589109       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/n45 529\n"
  STEP: limiting log lines @ 04/15/24 09:08:12.623
  Apr 15 09:08:12.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-logs-2370 logs logs-generator logs-generator --tail=1'
  Apr 15 09:08:12.877: INFO: stderr: ""
  Apr 15 09:08:12.877: INFO: stdout: "I0415 09:08:12.788642       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/whdx 440\n"
  Apr 15 09:08:12.877: INFO: got output "I0415 09:08:12.788642       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/whdx 440\n"
  STEP: limiting log bytes @ 04/15/24 09:08:12.877
  Apr 15 09:08:12.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-logs-2370 logs logs-generator logs-generator --limit-bytes=1'
  Apr 15 09:08:13.141: INFO: stderr: ""
  Apr 15 09:08:13.141: INFO: stdout: "I"
  Apr 15 09:08:13.141: INFO: got output "I"
  STEP: exposing timestamps @ 04/15/24 09:08:13.142
  Apr 15 09:08:13.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-logs-2370 logs logs-generator logs-generator --tail=1 --timestamps'
  E0415 09:08:13.372638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:08:13.377: INFO: stderr: ""
  Apr 15 09:08:13.377: INFO: stdout: "2024-04-15T09:08:13.201347211Z I0415 09:08:13.201198       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/dnv 302\n"
  Apr 15 09:08:13.377: INFO: got output "2024-04-15T09:08:13.201347211Z I0415 09:08:13.201198       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/dnv 302\n"
  STEP: restricting to a time range @ 04/15/24 09:08:13.378
  E0415 09:08:14.372475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:15.372941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:08:15.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-logs-2370 logs logs-generator logs-generator --since=1s'
  Apr 15 09:08:16.052: INFO: stderr: ""
  Apr 15 09:08:16.052: INFO: stdout: "I0415 09:08:15.188688       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/hts 527\nI0415 09:08:15.389060       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/fr9b 535\nI0415 09:08:15.588522       1 logs_generator.go:76] 22 GET /api/v1/namespaces/kube-system/pods/klqq 357\nI0415 09:08:15.788890       1 logs_generator.go:76] 23 PUT /api/v1/namespaces/default/pods/69b 438\nI0415 09:08:15.988445       1 logs_generator.go:76] 24 POST /api/v1/namespaces/default/pods/s7lz 466\n"
  Apr 15 09:08:16.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-logs-2370 logs logs-generator logs-generator --since=24h'
  Apr 15 09:08:16.272: INFO: stderr: ""
  Apr 15 09:08:16.272: INFO: stdout: "I0415 09:08:11.189159       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/5jq 385\nI0415 09:08:11.388325       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/6ks 395\nI0415 09:08:11.588815       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/hpq 372\nI0415 09:08:11.788291       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/q9h 354\nI0415 09:08:11.988714       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/wjlv 434\nI0415 09:08:12.188172       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/gx7 314\nI0415 09:08:12.388637       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/fxc 270\nI0415 09:08:12.589109       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/n45 529\nI0415 09:08:12.788642       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/whdx 440\nI0415 09:08:12.988147       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/bb7n 218\nI0415 09:08:13.201198       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/dnv 302\nI0415 09:08:13.388883       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/k68d 515\nI0415 09:08:13.588999       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/bdf 415\nI0415 09:08:13.788479       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/rh4s 593\nI0415 09:08:13.988865       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/h6d4 333\nI0415 09:08:14.188223       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/hdqx 533\nI0415 09:08:14.389108       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/85f 450\nI0415 09:08:14.589080       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/md6d 349\nI0415 09:08:14.790238       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/r589 424\nI0415 09:08:14.989171       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/f9zn 560\nI0415 09:08:15.188688       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/hts 527\nI0415 09:08:15.389060       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/fr9b 535\nI0415 09:08:15.588522       1 logs_generator.go:76] 22 GET /api/v1/namespaces/kube-system/pods/klqq 357\nI0415 09:08:15.788890       1 logs_generator.go:76] 23 PUT /api/v1/namespaces/default/pods/69b 438\nI0415 09:08:15.988445       1 logs_generator.go:76] 24 POST /api/v1/namespaces/default/pods/s7lz 466\nI0415 09:08:16.188950       1 logs_generator.go:76] 25 GET /api/v1/namespaces/default/pods/dsd 367\n"
  Apr 15 09:08:16.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-logs-2370 delete pod logs-generator'
  E0415 09:08:16.373940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:17.375262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:08:17.520: INFO: stderr: ""
  Apr 15 09:08:17.520: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Apr 15 09:08:17.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2370" for this suite. @ 04/15/24 09:08:17.532
• [7.598 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 04/15/24 09:08:17.552
  Apr 15 09:08:17.552: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename apf @ 04/15/24 09:08:17.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:08:17.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:08:17.596
  STEP: getting /apis @ 04/15/24 09:08:17.601
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/15/24 09:08:17.609
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/15/24 09:08:17.611
  STEP: creating @ 04/15/24 09:08:17.613
  STEP: getting @ 04/15/24 09:08:17.644
  STEP: listing @ 04/15/24 09:08:17.648
  STEP: watching @ 04/15/24 09:08:17.657
  Apr 15 09:08:17.657: INFO: starting watch
  STEP: patching @ 04/15/24 09:08:17.66
  STEP: updating @ 04/15/24 09:08:17.67
  Apr 15 09:08:17.690: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 04/15/24 09:08:17.691
  STEP: patching /status @ 04/15/24 09:08:17.697
  STEP: updating /status @ 04/15/24 09:08:17.707
  STEP: deleting @ 04/15/24 09:08:17.731
  STEP: deleting a collection @ 04/15/24 09:08:17.765
  Apr 15 09:08:17.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-170" for this suite. @ 04/15/24 09:08:17.818
• [0.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 04/15/24 09:08:17.833
  Apr 15 09:08:17.833: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 09:08:17.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:08:17.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:08:17.893
  STEP: set up a multi version CRD @ 04/15/24 09:08:17.897
  Apr 15 09:08:17.898: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 09:08:18.376473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:19.381022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:20.378956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:21.379519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:22.380456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 04/15/24 09:08:22.728
  STEP: check the new version name is served @ 04/15/24 09:08:22.785
  E0415 09:08:23.380409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:24.382003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 04/15/24 09:08:24.553
  E0415 09:08:25.381724      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 04/15/24 09:08:25.424
  E0415 09:08:26.382786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:27.382854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:28.383997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:08:29.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4650" for this suite. @ 04/15/24 09:08:29.191
• [11.386 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 04/15/24 09:08:29.22
  Apr 15 09:08:29.220: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename endpointslice @ 04/15/24 09:08:29.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:08:29.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:08:29.258
  STEP: getting /apis @ 04/15/24 09:08:29.265
  STEP: getting /apis/discovery.k8s.io @ 04/15/24 09:08:29.275
  STEP: getting /apis/discovery.k8s.iov1 @ 04/15/24 09:08:29.279
  STEP: creating @ 04/15/24 09:08:29.283
  STEP: getting @ 04/15/24 09:08:29.33
  STEP: listing @ 04/15/24 09:08:29.337
  STEP: watching @ 04/15/24 09:08:29.345
  Apr 15 09:08:29.345: INFO: starting watch
  STEP: cluster-wide listing @ 04/15/24 09:08:29.348
  STEP: cluster-wide watching @ 04/15/24 09:08:29.361
  Apr 15 09:08:29.361: INFO: starting watch
  STEP: patching @ 04/15/24 09:08:29.364
  E0415 09:08:29.384876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating @ 04/15/24 09:08:29.396
  Apr 15 09:08:29.416: INFO: waiting for watch events with expected annotations
  Apr 15 09:08:29.416: INFO: saw patched and updated annotations
  STEP: deleting @ 04/15/24 09:08:29.416
  STEP: deleting a collection @ 04/15/24 09:08:29.448
  Apr 15 09:08:29.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3105" for this suite. @ 04/15/24 09:08:29.502
• [0.307 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 04/15/24 09:08:29.529
  Apr 15 09:08:29.529: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:08:29.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:08:29.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:08:29.587
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 09:08:29.594
  E0415 09:08:30.386112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:31.387271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:32.389069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:33.389002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:08:33.667
  Apr 15 09:08:33.676: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-0e09e214-4122-48e1-87c6-96ca25d3f254 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 09:08:33.698
  Apr 15 09:08:33.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2134" for this suite. @ 04/15/24 09:08:33.743
• [4.234 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 04/15/24 09:08:33.767
  Apr 15 09:08:33.767: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:08:33.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:08:33.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:08:33.808
  STEP: Creating configMap with name projected-configmap-test-volume-d8c1d755-c523-4e65-b804-9ae3d5714bfa @ 04/15/24 09:08:33.814
  STEP: Creating a pod to test consume configMaps @ 04/15/24 09:08:33.826
  E0415 09:08:34.388837      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:35.389757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:36.389926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:37.390564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:08:37.888
  Apr 15 09:08:37.898: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-projected-configmaps-19f8aeec-17c0-4cf6-9653-37388c8aee2b container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 09:08:37.917
  Apr 15 09:08:37.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5631" for this suite. @ 04/15/24 09:08:37.976
• [4.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/15/24 09:08:37.994
  Apr 15 09:08:37.994: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pods @ 04/15/24 09:08:37.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:08:38.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:08:38.038
  STEP: Create a pod @ 04/15/24 09:08:38.049
  E0415 09:08:38.391277      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:39.391159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/15/24 09:08:40.099
  Apr 15 09:08:40.118: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Apr 15 09:08:40.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9405" for this suite. @ 04/15/24 09:08:40.129
• [2.153 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 04/15/24 09:08:40.148
  Apr 15 09:08:40.148: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 09:08:40.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:08:40.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:08:40.191
  STEP: Creating ServiceAccount "e2e-sa-7t976"  @ 04/15/24 09:08:40.198
  Apr 15 09:08:40.209: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-7t976"  @ 04/15/24 09:08:40.21
  Apr 15 09:08:40.236: INFO: AutomountServiceAccountToken: true
  Apr 15 09:08:40.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1786" for this suite. @ 04/15/24 09:08:40.249
• [0.115 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 04/15/24 09:08:40.263
  Apr 15 09:08:40.263: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 09:08:40.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:08:40.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:08:40.3
  STEP: Creating configMap with name cm-test-opt-del-a7aea248-8659-43dd-979a-87e48b5f7026 @ 04/15/24 09:08:40.316
  STEP: Creating configMap with name cm-test-opt-upd-4a503566-b6d6-4765-abee-109e3ef35fbd @ 04/15/24 09:08:40.33
  STEP: Creating the pod @ 04/15/24 09:08:40.341
  E0415 09:08:40.391740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:41.391994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:42.393011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-a7aea248-8659-43dd-979a-87e48b5f7026 @ 04/15/24 09:08:42.437
  STEP: Updating configmap cm-test-opt-upd-4a503566-b6d6-4765-abee-109e3ef35fbd @ 04/15/24 09:08:42.479
  STEP: Creating configMap with name cm-test-opt-create-0095a338-084d-4b37-bee2-b95bcf4fb8b4 @ 04/15/24 09:08:42.495
  STEP: waiting to observe update in volume @ 04/15/24 09:08:42.515
  E0415 09:08:43.394352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:44.395047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:45.395575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:46.395806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:47.396110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:48.398782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:49.397854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:50.397858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:51.398829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:52.398965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:53.399266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:54.400004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:55.400656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:56.400507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:57.400659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:58.406698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:59.406658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:00.407271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:01.408192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:02.408485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:03.409470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:04.409454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:05.410194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:06.410384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:07.410629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:08.410965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:09.411597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:10.411874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:11.412685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:12.413709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:13.413905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:14.414133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:15.414490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:16.415068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:17.415679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:18.416390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:19.417151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:20.418059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:21.418287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:22.418067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:23.418734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:24.419817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:25.420548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:26.420905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:27.421043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:28.422149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:29.422561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:30.423243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:31.423851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:32.424295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:33.424922      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:34.425676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:35.425764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:36.426103      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:37.426533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:38.426995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:39.427184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:40.427506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:41.428530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:42.428785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:43.429636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:44.430383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:45.430687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:46.430939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:47.432143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:48.432836      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:49.432839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:50.433111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:51.434042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:52.434392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:53.435226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:54.435309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:55.436190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:56.436881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:57.439087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:58.438746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:59.439645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:00.439790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:01.440512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:02.441236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:03.442325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:04.443575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:05.443201      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:10:05.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5039" for this suite. @ 04/15/24 09:10:05.545
• [85.298 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 04/15/24 09:10:05.565
  Apr 15 09:10:05.565: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename security-context @ 04/15/24 09:10:05.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:10:05.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:10:05.65
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/15/24 09:10:05.656
  E0415 09:10:06.444010      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:07.444267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:08.444413      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:09.445578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:10:09.719
  Apr 15 09:10:09.740: INFO: Trying to get logs from node jec7saimeaph-3 pod security-context-5226d310-9c91-47f4-803c-1af343f47450 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:10:09.754
  Apr 15 09:10:09.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6471" for this suite. @ 04/15/24 09:10:09.81
• [4.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/15/24 09:10:09.827
  Apr 15 09:10:09.827: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename crd-watch @ 04/15/24 09:10:09.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:10:09.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:10:09.863
  Apr 15 09:10:09.869: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 09:10:10.445903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:11.445955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 04/15/24 09:10:12.441
  E0415 09:10:12.446981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:10:12.455: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T09:10:12Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T09:10:12Z]] name:name1 resourceVersion:229361 uid:e0a66ab2-f6a3-47ee-bc3e-94474beb0de5] num:map[num1:9223372036854775807 num2:1000000]]}
  E0415 09:10:13.447362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:14.448417      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:15.448816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:16.449724      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:17.450128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:18.450959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:19.451392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:20.452362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:21.452533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:22.452868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 04/15/24 09:10:22.456
  Apr 15 09:10:22.476: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T09:10:22Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T09:10:22Z]] name:name2 resourceVersion:229389 uid:fc4405d5-24af-4918-9f20-9ef654248604] num:map[num1:9223372036854775807 num2:1000000]]}
  E0415 09:10:23.454142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:24.454564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:25.455099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:26.455403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:27.455920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:28.456507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:29.456692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:30.457485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:31.458491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:32.458758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 04/15/24 09:10:32.478
  Apr 15 09:10:32.496: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T09:10:12Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T09:10:32Z]] name:name1 resourceVersion:229407 uid:e0a66ab2-f6a3-47ee-bc3e-94474beb0de5] num:map[num1:9223372036854775807 num2:1000000]]}
  E0415 09:10:33.459446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:34.459742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:35.461102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:36.460714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:37.460881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:38.461142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:39.461376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:40.461610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:41.462488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:42.462779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 04/15/24 09:10:42.497
  Apr 15 09:10:42.512: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T09:10:22Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T09:10:42Z]] name:name2 resourceVersion:229425 uid:fc4405d5-24af-4918-9f20-9ef654248604] num:map[num1:9223372036854775807 num2:1000000]]}
  E0415 09:10:43.463077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:44.463436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:45.463959      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:46.464485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:47.465574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:48.465765      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:49.465894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:50.466520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:51.466640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:52.466920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 04/15/24 09:10:52.513
  Apr 15 09:10:52.533: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T09:10:12Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T09:10:32Z]] name:name1 resourceVersion:229443 uid:e0a66ab2-f6a3-47ee-bc3e-94474beb0de5] num:map[num1:9223372036854775807 num2:1000000]]}
  E0415 09:10:53.467400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:54.468320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:55.468866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:56.469056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:57.469445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:58.469671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:59.469867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:00.470162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:01.471265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:02.472116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 04/15/24 09:11:02.534
  Apr 15 09:11:02.555: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T09:10:22Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T09:10:42Z]] name:name2 resourceVersion:229462 uid:fc4405d5-24af-4918-9f20-9ef654248604] num:map[num1:9223372036854775807 num2:1000000]]}
  E0415 09:11:03.472885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:04.473364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:05.474181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:06.474456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:07.474860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:08.475660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:09.476491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:10.476478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:11.477518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:12.477697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:11:13.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-952" for this suite. @ 04/15/24 09:11:13.121
• [63.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/15/24 09:11:13.162
  Apr 15 09:11:13.162: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename tables @ 04/15/24 09:11:13.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:11:13.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:11:13.225
  Apr 15 09:11:13.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-6303" for this suite. @ 04/15/24 09:11:13.257
• [0.110 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 04/15/24 09:11:13.274
  Apr 15 09:11:13.274: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 09:11:13.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:11:13.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:11:13.322
  STEP: creating a replication controller @ 04/15/24 09:11:13.331
  Apr 15 09:11:13.332: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 create -f -'
  E0415 09:11:13.477778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:11:13.835: INFO: stderr: ""
  Apr 15 09:11:13.835: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/15/24 09:11:13.835
  Apr 15 09:11:13.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 09:11:14.109: INFO: stderr: ""
  Apr 15 09:11:14.109: INFO: stdout: "update-demo-nautilus-7phsf update-demo-nautilus-qfqhd "
  Apr 15 09:11:14.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods update-demo-nautilus-7phsf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 09:11:14.308: INFO: stderr: ""
  Apr 15 09:11:14.308: INFO: stdout: ""
  Apr 15 09:11:14.308: INFO: update-demo-nautilus-7phsf is created but not running
  E0415 09:11:14.477979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:15.479032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:16.479482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:17.479635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:18.480395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:11:19.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0415 09:11:19.480691      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:11:19.502: INFO: stderr: ""
  Apr 15 09:11:19.502: INFO: stdout: "update-demo-nautilus-7phsf update-demo-nautilus-qfqhd "
  Apr 15 09:11:19.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods update-demo-nautilus-7phsf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 09:11:19.642: INFO: stderr: ""
  Apr 15 09:11:19.642: INFO: stdout: "true"
  Apr 15 09:11:19.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods update-demo-nautilus-7phsf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 09:11:19.818: INFO: stderr: ""
  Apr 15 09:11:19.818: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 09:11:19.818: INFO: validating pod update-demo-nautilus-7phsf
  E0415 09:11:20.480824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:21.480827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:22.481077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:23.481246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:24.481497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:25.481941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:26.482852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:27.483515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:28.484431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:29.484709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:30.485595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:11:31.026: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 09:11:31.026: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 09:11:31.026: INFO: update-demo-nautilus-7phsf is verified up and running
  Apr 15 09:11:31.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods update-demo-nautilus-qfqhd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 09:11:31.180: INFO: stderr: ""
  Apr 15 09:11:31.180: INFO: stdout: "true"
  Apr 15 09:11:31.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods update-demo-nautilus-qfqhd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 09:11:31.308: INFO: stderr: ""
  Apr 15 09:11:31.308: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 09:11:31.308: INFO: validating pod update-demo-nautilus-qfqhd
  Apr 15 09:11:31.325: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 09:11:31.325: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 09:11:31.325: INFO: update-demo-nautilus-qfqhd is verified up and running
  STEP: scaling down the replication controller @ 04/15/24 09:11:31.325
  Apr 15 09:11:31.341: INFO: scanned /root for discovery docs: <nil>
  Apr 15 09:11:31.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0415 09:11:31.486413      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:32.487220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:11:32.550: INFO: stderr: ""
  Apr 15 09:11:32.550: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/15/24 09:11:32.551
  Apr 15 09:11:32.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 09:11:32.696: INFO: stderr: ""
  Apr 15 09:11:32.696: INFO: stdout: "update-demo-nautilus-7phsf "
  Apr 15 09:11:32.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods update-demo-nautilus-7phsf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 09:11:32.839: INFO: stderr: ""
  Apr 15 09:11:32.839: INFO: stdout: "true"
  Apr 15 09:11:32.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods update-demo-nautilus-7phsf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 09:11:33.010: INFO: stderr: ""
  Apr 15 09:11:33.010: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 09:11:33.010: INFO: validating pod update-demo-nautilus-7phsf
  Apr 15 09:11:33.019: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 09:11:33.019: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 09:11:33.019: INFO: update-demo-nautilus-7phsf is verified up and running
  STEP: scaling up the replication controller @ 04/15/24 09:11:33.019
  Apr 15 09:11:33.031: INFO: scanned /root for discovery docs: <nil>
  Apr 15 09:11:33.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0415 09:11:33.487932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:11:34.237: INFO: stderr: ""
  Apr 15 09:11:34.237: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/15/24 09:11:34.237
  Apr 15 09:11:34.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 09:11:34.398: INFO: stderr: ""
  Apr 15 09:11:34.398: INFO: stdout: "update-demo-nautilus-2jr49 update-demo-nautilus-7phsf "
  Apr 15 09:11:34.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods update-demo-nautilus-2jr49 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0415 09:11:34.488014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:11:34.536: INFO: stderr: ""
  Apr 15 09:11:34.536: INFO: stdout: "true"
  Apr 15 09:11:34.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods update-demo-nautilus-2jr49 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 09:11:34.726: INFO: stderr: ""
  Apr 15 09:11:34.726: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 09:11:34.726: INFO: validating pod update-demo-nautilus-2jr49
  Apr 15 09:11:34.743: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 09:11:34.743: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 09:11:34.743: INFO: update-demo-nautilus-2jr49 is verified up and running
  Apr 15 09:11:34.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods update-demo-nautilus-7phsf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 09:11:34.953: INFO: stderr: ""
  Apr 15 09:11:34.953: INFO: stdout: "true"
  Apr 15 09:11:34.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods update-demo-nautilus-7phsf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 09:11:35.157: INFO: stderr: ""
  Apr 15 09:11:35.157: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 09:11:35.157: INFO: validating pod update-demo-nautilus-7phsf
  Apr 15 09:11:35.172: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 09:11:35.172: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 09:11:35.172: INFO: update-demo-nautilus-7phsf is verified up and running
  STEP: using delete to clean up resources @ 04/15/24 09:11:35.172
  Apr 15 09:11:35.172: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 delete --grace-period=0 --force -f -'
  Apr 15 09:11:35.419: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:11:35.419: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 15 09:11:35.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get rc,svc -l name=update-demo --no-headers'
  E0415 09:11:35.489021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:11:35.717: INFO: stderr: "No resources found in kubectl-8906 namespace.\n"
  Apr 15 09:11:35.717: INFO: stdout: ""
  Apr 15 09:11:35.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-8906 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 15 09:11:35.929: INFO: stderr: ""
  Apr 15 09:11:35.929: INFO: stdout: ""
  Apr 15 09:11:35.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8906" for this suite. @ 04/15/24 09:11:35.97
• [22.721 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 04/15/24 09:11:36.013
  Apr 15 09:11:36.014: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 09:11:36.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:11:36.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:11:36.074
  STEP: Creating configMap configmap-7484/configmap-test-632bca16-4d86-49b1-865b-0b665d9c1dd9 @ 04/15/24 09:11:36.086
  STEP: Creating a pod to test consume configMaps @ 04/15/24 09:11:36.102
  E0415 09:11:36.490366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:37.491032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:38.490752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:39.491617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:11:40.16
  Apr 15 09:11:40.171: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-configmaps-c8e32125-ff44-4df8-afaf-3b56cf3a653c container env-test: <nil>
  STEP: delete the pod @ 04/15/24 09:11:40.21
  Apr 15 09:11:40.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7484" for this suite. @ 04/15/24 09:11:40.252
• [4.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/15/24 09:11:40.268
  Apr 15 09:11:40.268: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:11:40.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:11:40.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:11:40.313
  STEP: Creating projection with secret that has name projected-secret-test-map-fafd9ff4-bd53-4a23-b7b1-a77d6b267967 @ 04/15/24 09:11:40.319
  STEP: Creating a pod to test consume secrets @ 04/15/24 09:11:40.328
  E0415 09:11:40.492230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:41.493310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:42.502538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:43.503355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:11:44.377
  Apr 15 09:11:44.383: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-projected-secrets-eda5e53a-fef5-4111-a033-5d4539ea0387 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 09:11:44.396
  Apr 15 09:11:44.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1786" for this suite. @ 04/15/24 09:11:44.449
• [4.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 04/15/24 09:11:44.47
  Apr 15 09:11:44.470: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 09:11:44.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:11:44.497
  E0415 09:11:44.502967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:11:44.505
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/15/24 09:11:44.512
  Apr 15 09:11:44.513: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 09:11:45.503222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:46.507874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:11:46.574: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 09:11:47.507079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:48.507990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:49.518080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:50.518914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:51.519092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:52.520136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:53.520864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:11:54.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8466" for this suite. @ 04/15/24 09:11:54.21
• [9.754 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 04/15/24 09:11:54.259
  Apr 15 09:11:54.259: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 09:11:54.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:11:54.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:11:54.301
  STEP: Creating a pod to test downward api env vars @ 04/15/24 09:11:54.309
  E0415 09:11:54.521145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:55.521890      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:56.523129      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:57.523057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:11:58.357
  Apr 15 09:11:58.364: INFO: Trying to get logs from node jec7saimeaph-3 pod downward-api-7a443c1d-1a1d-45a7-84eb-2494174c5883 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 09:11:58.381
  Apr 15 09:11:58.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8811" for this suite. @ 04/15/24 09:11:58.448
• [4.216 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/15/24 09:11:58.476
  Apr 15 09:11:58.476: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pods @ 04/15/24 09:11:58.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:11:58.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:11:58.507
  STEP: creating a Pod with a static label @ 04/15/24 09:11:58.522
  E0415 09:11:58.523045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: watching for Pod to be ready @ 04/15/24 09:11:58.539
  Apr 15 09:11:58.542: INFO: observed Pod pod-test in namespace pods-7105 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Apr 15 09:11:58.551: INFO: observed Pod pod-test in namespace pods-7105 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 09:11:58 +0000 UTC  }]
  Apr 15 09:11:58.576: INFO: observed Pod pod-test in namespace pods-7105 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 09:11:58 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 09:11:58 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 09:11:58 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 09:11:58 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 09:11:58 +0000 UTC  }]
  Apr 15 09:11:59.502: INFO: Found Pod pod-test in namespace pods-7105 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 09:11:59 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 09:11:58 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 09:11:59 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 09:11:59 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 09:11:58 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/15/24 09:11:59.509
  E0415 09:11:59.523393      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting the Pod and ensuring that it's patched @ 04/15/24 09:11:59.529
  STEP: replacing the Pod's status Ready condition to False @ 04/15/24 09:11:59.536
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/15/24 09:11:59.556
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/15/24 09:11:59.557
  STEP: watching for the Pod to be deleted @ 04/15/24 09:11:59.571
  Apr 15 09:11:59.574: INFO: observed event type MODIFIED
  E0415 09:12:00.524063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:12:01.506: INFO: observed event type MODIFIED
  E0415 09:12:01.524599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:12:01.624: INFO: observed event type MODIFIED
  Apr 15 09:12:02.510: INFO: observed event type MODIFIED
  E0415 09:12:02.524797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:12:02.538: INFO: observed event type MODIFIED
  Apr 15 09:12:02.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7105" for this suite. @ 04/15/24 09:12:02.565
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 04/15/24 09:12:02.58
  Apr 15 09:12:02.580: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 09:12:02.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:12:02.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:12:02.647
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/15/24 09:12:02.654
  Apr 15 09:12:02.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-7184 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 15 09:12:02.852: INFO: stderr: ""
  Apr 15 09:12:02.852: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/15/24 09:12:02.852
  E0415 09:12:03.527802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:04.527742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:05.527915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:06.528060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:07.528262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/15/24 09:12:07.903
  Apr 15 09:12:07.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-7184 get pod e2e-test-httpd-pod -o json'
  Apr 15 09:12:08.106: INFO: stderr: ""
  Apr 15 09:12:08.107: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-04-15T09:12:02Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7184\",\n        \"resourceVersion\": \"229792\",\n        \"uid\": \"15e2400f-0e88-4f61-8094-cf0e9d6287a3\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-2w9l6\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"jec7saimeaph-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-2w9l6\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T09:12:03Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T09:12:02Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T09:12:03Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T09:12:03Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T09:12:02Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://d3ae4a7aa9af5fc9220b142840921f9b97c1ea4f9a2ea0fcab2cd2be40be2a89\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-04-15T09:12:03Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.121.234\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.121.234\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.66.147\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.66.147\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-04-15T09:12:02Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/15/24 09:12:08.107
  Apr 15 09:12:08.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-7184 replace -f -'
  Apr 15 09:12:08.453: INFO: stderr: ""
  Apr 15 09:12:08.453: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 04/15/24 09:12:08.453
  Apr 15 09:12:08.460: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-7184 delete pods e2e-test-httpd-pod'
  E0415 09:12:08.528881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:09.530093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:10.530222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:12:10.639: INFO: stderr: ""
  Apr 15 09:12:10.639: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 15 09:12:10.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7184" for this suite. @ 04/15/24 09:12:10.649
• [8.079 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 04/15/24 09:12:10.659
  Apr 15 09:12:10.659: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 09:12:10.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:12:10.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:12:10.695
  STEP: Counting existing ResourceQuota @ 04/15/24 09:12:10.701
  E0415 09:12:11.531310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:12.532195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:13.532619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:14.532892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:15.533136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/15/24 09:12:15.71
  STEP: Ensuring resource quota status is calculated @ 04/15/24 09:12:15.722
  E0415 09:12:16.533694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:17.534061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:12:17.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4797" for this suite. @ 04/15/24 09:12:17.744
• [7.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 04/15/24 09:12:17.762
  Apr 15 09:12:17.762: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename limitrange @ 04/15/24 09:12:17.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:12:17.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:12:17.812
  STEP: Creating a LimitRange @ 04/15/24 09:12:17.818
  STEP: Setting up watch @ 04/15/24 09:12:17.818
  STEP: Submitting a LimitRange @ 04/15/24 09:12:17.925
  STEP: Verifying LimitRange creation was observed @ 04/15/24 09:12:17.936
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/15/24 09:12:17.936
  Apr 15 09:12:17.942: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 15 09:12:17.943: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/15/24 09:12:17.943
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/15/24 09:12:17.955
  Apr 15 09:12:17.962: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 15 09:12:17.963: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/15/24 09:12:17.963
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/15/24 09:12:17.98
  Apr 15 09:12:17.992: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Apr 15 09:12:17.992: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/15/24 09:12:17.992
  STEP: Failing to create a Pod with more than max resources @ 04/15/24 09:12:17.997
  STEP: Updating a LimitRange @ 04/15/24 09:12:18.001
  STEP: Verifying LimitRange updating is effective @ 04/15/24 09:12:18.013
  E0415 09:12:18.535092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:19.535304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 04/15/24 09:12:20.023
  STEP: Failing to create a Pod with more than max resources @ 04/15/24 09:12:20.041
  STEP: Deleting a LimitRange @ 04/15/24 09:12:20.045
  STEP: Verifying the LimitRange was deleted @ 04/15/24 09:12:20.079
  E0415 09:12:20.535494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:21.536445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:22.536345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:23.536692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:24.536899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:12:25.088: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/15/24 09:12:25.088
  Apr 15 09:12:25.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-897" for this suite. @ 04/15/24 09:12:25.142
• [7.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 04/15/24 09:12:25.168
  Apr 15 09:12:25.168: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename ingressclass @ 04/15/24 09:12:25.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:12:25.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:12:25.213
  STEP: getting /apis @ 04/15/24 09:12:25.22
  STEP: getting /apis/networking.k8s.io @ 04/15/24 09:12:25.235
  STEP: getting /apis/networking.k8s.iov1 @ 04/15/24 09:12:25.237
  STEP: creating @ 04/15/24 09:12:25.24
  STEP: getting @ 04/15/24 09:12:25.272
  STEP: listing @ 04/15/24 09:12:25.278
  STEP: watching @ 04/15/24 09:12:25.284
  Apr 15 09:12:25.284: INFO: starting watch
  STEP: patching @ 04/15/24 09:12:25.286
  STEP: updating @ 04/15/24 09:12:25.302
  Apr 15 09:12:25.312: INFO: waiting for watch events with expected annotations
  Apr 15 09:12:25.313: INFO: saw patched and updated annotations
  STEP: deleting @ 04/15/24 09:12:25.313
  STEP: deleting a collection @ 04/15/24 09:12:25.343
  Apr 15 09:12:25.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-6001" for this suite. @ 04/15/24 09:12:25.39
• [0.234 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 04/15/24 09:12:25.402
  Apr 15 09:12:25.402: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename secrets @ 04/15/24 09:12:25.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:12:25.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:12:25.446
  STEP: creating secret secrets-1225/secret-test-890d68b4-65b6-4625-aeea-8aaf4e7f25e9 @ 04/15/24 09:12:25.456
  STEP: Creating a pod to test consume secrets @ 04/15/24 09:12:25.468
  E0415 09:12:25.538261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:26.538974      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:27.540086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:28.540528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:12:29.513
  Apr 15 09:12:29.520: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-configmaps-a42abec8-da45-4f39-a381-7932df6f082f container env-test: <nil>
  STEP: delete the pod @ 04/15/24 09:12:29.538
  E0415 09:12:29.540418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:12:29.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1225" for this suite. @ 04/15/24 09:12:29.59
• [4.209 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 04/15/24 09:12:29.611
  Apr 15 09:12:29.611: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 09:12:29.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:12:29.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:12:29.653
  STEP: creating service in namespace services-4275 @ 04/15/24 09:12:29.658
  STEP: creating service affinity-clusterip-transition in namespace services-4275 @ 04/15/24 09:12:29.659
  STEP: creating replication controller affinity-clusterip-transition in namespace services-4275 @ 04/15/24 09:12:29.692
  I0415 09:12:29.720510      14 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-4275, replica count: 3
  E0415 09:12:30.541223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:31.541534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:32.542202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 09:12:32.772815      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0415 09:12:33.542328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:34.543376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:35.543286      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 09:12:35.773398      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 09:12:35.787: INFO: Creating new exec pod
  E0415 09:12:36.544314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:37.544958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:38.544667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:12:38.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-4275 exec execpod-affinity79pg2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Apr 15 09:12:39.273: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Apr 15 09:12:39.273: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:12:39.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-4275 exec execpod-affinity79pg2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.23.82 80'
  E0415 09:12:39.545620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:12:39.581: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.23.82 80\nConnection to 10.233.23.82 80 port [tcp/http] succeeded!\n"
  Apr 15 09:12:39.581: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:12:39.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-4275 exec execpod-affinity79pg2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.23.82:80/ ; done'
  Apr 15 09:12:40.127: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n"
  Apr 15 09:12:40.127: INFO: stdout: "\naffinity-clusterip-transition-p4qhc\naffinity-clusterip-transition-66vbk\naffinity-clusterip-transition-p4qhc\naffinity-clusterip-transition-66vbk\naffinity-clusterip-transition-p4qhc\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-66vbk\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-p4qhc\naffinity-clusterip-transition-p4qhc\naffinity-clusterip-transition-66vbk\naffinity-clusterip-transition-p4qhc\naffinity-clusterip-transition-66vbk\naffinity-clusterip-transition-p4qhc\naffinity-clusterip-transition-l6hxp"
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-p4qhc
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-66vbk
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-p4qhc
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-66vbk
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-p4qhc
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-66vbk
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-p4qhc
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-p4qhc
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-66vbk
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-p4qhc
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-66vbk
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-p4qhc
  Apr 15 09:12:40.127: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.157: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-4275 exec execpod-affinity79pg2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.23.82:80/ ; done'
  E0415 09:12:40.546149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:12:40.676: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.82:80/\n"
  Apr 15 09:12:40.676: INFO: stdout: "\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp\naffinity-clusterip-transition-l6hxp"
  Apr 15 09:12:40.676: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.676: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.676: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.676: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.676: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.677: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.677: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.677: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.677: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.677: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.677: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.677: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.677: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.677: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.677: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.677: INFO: Received response from host: affinity-clusterip-transition-l6hxp
  Apr 15 09:12:40.677: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-4275, will wait for the garbage collector to delete the pods @ 04/15/24 09:12:40.735
  Apr 15 09:12:40.848: INFO: Deleting ReplicationController affinity-clusterip-transition took: 38.862942ms
  Apr 15 09:12:40.949: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.327882ms
  E0415 09:12:41.547226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:42.548348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:43.549765      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:12:44.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4275" for this suite. @ 04/15/24 09:12:44.218
• [14.622 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 04/15/24 09:12:44.235
  Apr 15 09:12:44.235: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename endpointslice @ 04/15/24 09:12:44.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:12:44.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:12:44.277
  E0415 09:12:44.549698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:45.550038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:46.550929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:47.551091      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:48.551372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 04/15/24 09:12:49.453
  E0415 09:12:49.551993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:50.552907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:51.553083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:52.554081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:53.554937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 04/15/24 09:12:54.487
  E0415 09:12:54.555622      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:55.556442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:56.556762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:57.557347      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:58.557680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/15/24 09:12:59.509
  E0415 09:12:59.558317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:00.558985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:01.560100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:02.560384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:03.560761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 04/15/24 09:13:04.526
  E0415 09:13:04.562286      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:04.596: INFO: EndpointSlice for Service endpointslice-6738/example-named-port not found
  E0415 09:13:05.563259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:06.563529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:07.563783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:08.564069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:09.570164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:10.567528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:11.568923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:12.568600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:13.569542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:14.570146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:14.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6738" for this suite. @ 04/15/24 09:13:14.633
• [30.418 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 04/15/24 09:13:14.655
  Apr 15 09:13:14.656: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 09:13:14.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:13:14.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:13:14.71
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/15/24 09:13:14.719
  E0415 09:13:15.570426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:16.571110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:17.571942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:18.572736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:13:18.786
  Apr 15 09:13:18.796: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-b35b6491-3896-4323-baac-1161180849d1 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:13:18.821
  Apr 15 09:13:18.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4686" for this suite. @ 04/15/24 09:13:18.879
• [4.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 04/15/24 09:13:18.907
  Apr 15 09:13:18.907: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 09:13:18.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:13:18.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:13:18.958
  STEP: starting the proxy server @ 04/15/24 09:13:18.965
  Apr 15 09:13:18.966: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-990 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/15/24 09:13:19.237
  Apr 15 09:13:19.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-990" for this suite. @ 04/15/24 09:13:19.299
• [0.419 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 04/15/24 09:13:19.332
  Apr 15 09:13:19.332: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename dns @ 04/15/24 09:13:19.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:13:19.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:13:19.399
  STEP: Creating a test headless service @ 04/15/24 09:13:19.407
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8576.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-8576.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8576.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-8576.svc.cluster.local;sleep 1; done
   @ 04/15/24 09:13:19.426
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8576.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-8576.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8576.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-8576.svc.cluster.local;sleep 1; done
   @ 04/15/24 09:13:19.427
  STEP: creating a pod to probe DNS @ 04/15/24 09:13:19.427
  STEP: submitting the pod to kubernetes @ 04/15/24 09:13:19.428
  E0415 09:13:19.573886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:20.574170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:21.574895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:22.575336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 09:13:23.498
  STEP: looking for the results for each expected name from probers @ 04/15/24 09:13:23.508
  Apr 15 09:13:23.527: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:23.542: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:23.553: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:23.564: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:23.572: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  E0415 09:13:23.577835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:23.582: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:23.596: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:23.605: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:23.606: INFO: Lookups using dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8576.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8576.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local jessie_udp@dns-test-service-2.dns-8576.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8576.svc.cluster.local]

  Apr 15 09:13:23.622: INFO: Pod client logs for webserver: 
  Apr 15 09:13:23.636: INFO: Pod client logs for querier: 
  Apr 15 09:13:23.666: INFO: Pod client logs for jessie-querier: 
  E0415 09:13:24.576979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:25.577061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:26.578075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:27.578347      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:28.522: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:28.534: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:28.544: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:28.552: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:28.560: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:28.570: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  E0415 09:13:28.579137      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:28.579: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:28.588: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:28.588: INFO: Lookups using dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8576.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8576.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local jessie_udp@dns-test-service-2.dns-8576.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8576.svc.cluster.local]

  Apr 15 09:13:28.601: INFO: Pod client logs for webserver: 
  Apr 15 09:13:28.626: INFO: Pod client logs for querier: 
  Apr 15 09:13:28.642: INFO: Pod client logs for jessie-querier: 
  E0415 09:13:29.579382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:30.579589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:31.580528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:32.580954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:33.523: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:33.537: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:33.548: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:33.560: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:33.575: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  E0415 09:13:33.581457      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:33.595: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:33.608: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:33.640: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:33.640: INFO: Lookups using dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8576.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8576.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local jessie_udp@dns-test-service-2.dns-8576.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8576.svc.cluster.local]

  Apr 15 09:13:33.658: INFO: Pod client logs for webserver: 
  Apr 15 09:13:33.673: INFO: Pod client logs for querier: 
  Apr 15 09:13:33.689: INFO: Pod client logs for jessie-querier: 
  E0415 09:13:34.585002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:35.583376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:36.583462      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:37.583901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:38.518: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:38.534: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:38.543: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:38.555: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:38.567: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  E0415 09:13:38.585220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:38.589: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:38.603: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:38.613: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:38.613: INFO: Lookups using dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8576.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8576.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local jessie_udp@dns-test-service-2.dns-8576.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8576.svc.cluster.local]

  Apr 15 09:13:38.625: INFO: Pod client logs for webserver: 
  Apr 15 09:13:38.640: INFO: Pod client logs for querier: 
  Apr 15 09:13:38.652: INFO: Pod client logs for jessie-querier: 
  E0415 09:13:39.585348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:40.585773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:41.585697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:42.586152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:43.520: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:43.529: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:43.541: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:43.551: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:43.567: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:43.575: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:43.585: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  E0415 09:13:43.586358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:43.599: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:43.599: INFO: Lookups using dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8576.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8576.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local jessie_udp@dns-test-service-2.dns-8576.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8576.svc.cluster.local]

  Apr 15 09:13:43.615: INFO: Pod client logs for webserver: 
  Apr 15 09:13:43.641: INFO: Pod client logs for querier: 
  Apr 15 09:13:43.654: INFO: Pod client logs for jessie-querier: 
  E0415 09:13:44.587178      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:45.587306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:46.587928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:47.588550      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:48.520: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:48.540: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:48.559: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:48.569: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:48.580: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  E0415 09:13:48.594098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:48.596: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:48.616: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:48.632: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8576.svc.cluster.local from pod dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd: the server could not find the requested resource (get pods dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd)
  Apr 15 09:13:48.632: INFO: Lookups using dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8576.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8576.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8576.svc.cluster.local jessie_udp@dns-test-service-2.dns-8576.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8576.svc.cluster.local]

  Apr 15 09:13:48.651: INFO: Pod client logs for webserver: 
  Apr 15 09:13:48.683: INFO: Pod client logs for querier: 
  Apr 15 09:13:48.702: INFO: Pod client logs for jessie-querier: 
  E0415 09:13:49.593752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:50.594697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:51.594729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:52.594956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:53.578: INFO: DNS probes using dns-8576/dns-test-0471d17e-d18c-4599-a86a-f29ae6e348cd succeeded

  STEP: deleting the pod @ 04/15/24 09:13:53.578
  E0415 09:13:53.595612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the test headless service @ 04/15/24 09:13:53.611
  Apr 15 09:13:53.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8576" for this suite. @ 04/15/24 09:13:53.727
• [34.413 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 04/15/24 09:13:53.753
  Apr 15 09:13:53.753: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 09:13:53.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:13:53.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:13:53.809
  STEP: Setting up server cert @ 04/15/24 09:13:53.865
  E0415 09:13:54.595845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 09:13:54.912
  STEP: Deploying the webhook pod @ 04/15/24 09:13:54.93
  STEP: Wait for the deployment to be ready @ 04/15/24 09:13:54.956
  Apr 15 09:13:54.966: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0415 09:13:55.595948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:56.596882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 09:13:57.003
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 09:13:57.025
  E0415 09:13:57.597290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:13:58.027: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/15/24 09:13:58.046
  STEP: create a pod that should be denied by the webhook @ 04/15/24 09:13:58.09
  STEP: create a pod that causes the webhook to hang @ 04/15/24 09:13:58.118
  E0415 09:13:58.598246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:59.598542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:00.598989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:01.600080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:02.600352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:03.600428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:04.600727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:05.601126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:06.601890      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:07.602781      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 04/15/24 09:14:08.134
  STEP: create a configmap that should be admitted by the webhook @ 04/15/24 09:14:08.152
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/15/24 09:14:08.169
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/15/24 09:14:08.194
  STEP: create a namespace that bypass the webhook @ 04/15/24 09:14:08.21
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/15/24 09:14:08.253
  Apr 15 09:14:08.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1627" for this suite. @ 04/15/24 09:14:08.48
  STEP: Destroying namespace "webhook-markers-2941" for this suite. @ 04/15/24 09:14:08.502
  STEP: Destroying namespace "exempted-namespace-3542" for this suite. @ 04/15/24 09:14:08.515
• [14.781 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 04/15/24 09:14:08.535
  Apr 15 09:14:08.536: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename sched-pred @ 04/15/24 09:14:08.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:14:08.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:14:08.6
  E0415 09:14:08.602802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:08.611: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 15 09:14:08.632: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 09:14:08.639: INFO: 
  Logging pods the apiserver thinks is on node jec7saimeaph-1 before test
  Apr 15 09:14:08.656: INFO: coredns-76f75df574-bs2l5 from kube-system started at 2024-04-15 08:34:22 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.656: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 09:14:08.657: INFO: kube-addon-manager-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.657: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 15 09:14:08.657: INFO: kube-apiserver-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.657: INFO: 	Container kube-apiserver ready: true, restart count 5
  Apr 15 09:14:08.657: INFO: kube-controller-manager-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.657: INFO: 	Container kube-controller-manager ready: true, restart count 5
  Apr 15 09:14:08.658: INFO: kube-flannel-ds-mnln7 from kube-system started at 2024-04-15 07:36:15 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.658: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 09:14:08.658: INFO: kube-proxy-rsrrw from kube-system started at 2024-04-15 07:36:14 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.658: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 09:14:08.658: INFO: kube-scheduler-jec7saimeaph-1 from kube-system started at 2024-04-15 06:11:27 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.658: INFO: 	Container kube-scheduler ready: true, restart count 5
  Apr 15 09:14:08.659: INFO: sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-q89p9 from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 09:14:08.659: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 09:14:08.659: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 09:14:08.659: INFO: 
  Logging pods the apiserver thinks is on node jec7saimeaph-2 before test
  Apr 15 09:14:08.677: INFO: coredns-76f75df574-wm57r from kube-system started at 2024-04-15 07:36:13 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.677: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 09:14:08.677: INFO: kube-addon-manager-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.677: INFO: 	Container kube-addon-manager ready: true, restart count 6
  Apr 15 09:14:08.677: INFO: kube-apiserver-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.677: INFO: 	Container kube-apiserver ready: true, restart count 6
  Apr 15 09:14:08.677: INFO: kube-controller-manager-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.677: INFO: 	Container kube-controller-manager ready: true, restart count 6
  Apr 15 09:14:08.677: INFO: kube-flannel-ds-bxh6k from kube-system started at 2024-04-15 07:36:16 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.677: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 09:14:08.677: INFO: kube-proxy-kq9zs from kube-system started at 2024-04-15 07:36:14 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.677: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 09:14:08.677: INFO: kube-scheduler-jec7saimeaph-2 from kube-system started at 2024-04-15 06:07:01 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.677: INFO: 	Container kube-scheduler ready: true, restart count 6
  Apr 15 09:14:08.677: INFO: sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-kf6jd from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 09:14:08.677: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 09:14:08.677: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 09:14:08.677: INFO: 
  Logging pods the apiserver thinks is on node jec7saimeaph-3 before test
  Apr 15 09:14:08.697: INFO: kube-flannel-ds-tqb7t from kube-system started at 2024-04-15 08:34:48 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.697: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 09:14:08.698: INFO: kube-proxy-q2x5c from kube-system started at 2024-04-15 07:36:14 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.698: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 09:14:08.698: INFO: sonobuoy from sonobuoy started at 2024-04-15 07:36:35 +0000 UTC (1 container statuses recorded)
  Apr 15 09:14:08.699: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 15 09:14:08.699: INFO: sonobuoy-e2e-job-2b6e6deeff5c4ebe from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 09:14:08.699: INFO: 	Container e2e ready: true, restart count 0
  Apr 15 09:14:08.699: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 09:14:08.700: INFO: sonobuoy-systemd-logs-daemon-set-9ba1158c345643da-gngj9 from sonobuoy started at 2024-04-15 07:36:36 +0000 UTC (2 container statuses recorded)
  Apr 15 09:14:08.700: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 09:14:08.700: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/15/24 09:14:08.7
  E0415 09:14:09.604148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:10.604215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/15/24 09:14:10.757
  STEP: Trying to apply a random label on the found node. @ 04/15/24 09:14:10.785
  STEP: verifying the node has the label kubernetes.io/e2e-04b03b5f-b00c-436f-af2c-0f3301c7e12c 42 @ 04/15/24 09:14:10.823
  STEP: Trying to relaunch the pod, now with labels. @ 04/15/24 09:14:10.834
  E0415 09:14:11.607451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:12.606897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-04b03b5f-b00c-436f-af2c-0f3301c7e12c off the node jec7saimeaph-3 @ 04/15/24 09:14:12.889
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-04b03b5f-b00c-436f-af2c-0f3301c7e12c @ 04/15/24 09:14:12.931
  Apr 15 09:14:12.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8314" for this suite. @ 04/15/24 09:14:12.959
• [4.442 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 04/15/24 09:14:12.992
  Apr 15 09:14:12.992: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 09:14:12.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:14:13.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:14:13.047
  STEP: Counting existing ResourceQuota @ 04/15/24 09:14:13.053
  E0415 09:14:13.606996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:14.608130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:15.609705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:16.610140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:17.610379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/15/24 09:14:18.065
  STEP: Ensuring resource quota status is calculated @ 04/15/24 09:14:18.083
  E0415 09:14:18.610953      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:19.611025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 04/15/24 09:14:20.1
  STEP: Ensuring resource quota status captures replication controller creation @ 04/15/24 09:14:20.138
  E0415 09:14:20.612129      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:21.612344      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 04/15/24 09:14:22.15
  STEP: Ensuring resource quota status released usage @ 04/15/24 09:14:22.174
  E0415 09:14:22.612780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:23.613186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:24.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3636" for this suite. @ 04/15/24 09:14:24.202
• [11.228 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 04/15/24 09:14:24.223
  Apr 15 09:14:24.223: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename containers @ 04/15/24 09:14:24.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:14:24.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:14:24.296
  STEP: Creating a pod to test override all @ 04/15/24 09:14:24.303
  E0415 09:14:24.614039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:25.616607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:26.617502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:27.617906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:14:28.368
  Apr 15 09:14:28.376: INFO: Trying to get logs from node jec7saimeaph-3 pod client-containers-9be096ac-d1e7-4d82-9677-7a1d3ca55b6c container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 09:14:28.392
  Apr 15 09:14:28.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3951" for this suite. @ 04/15/24 09:14:28.434
• [4.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 04/15/24 09:14:28.457
  Apr 15 09:14:28.457: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 09:14:28.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:14:28.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:14:28.502
  STEP: creating service endpoint-test2 in namespace services-9733 @ 04/15/24 09:14:28.509
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9733 to expose endpoints map[] @ 04/15/24 09:14:28.537
  Apr 15 09:14:28.546: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0415 09:14:28.618076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:29.591: INFO: successfully validated that service endpoint-test2 in namespace services-9733 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9733 @ 04/15/24 09:14:29.592
  E0415 09:14:29.619230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:30.620096      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:31.619652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9733 to expose endpoints map[pod1:[80]] @ 04/15/24 09:14:31.672
  Apr 15 09:14:31.706: INFO: successfully validated that service endpoint-test2 in namespace services-9733 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/15/24 09:14:31.706
  Apr 15 09:14:31.706: INFO: Creating new exec pod
  E0415 09:14:32.619744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:33.621530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:34.622066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:34.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-9733 exec execpodkgwvs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 15 09:14:35.213: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 15 09:14:35.213: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:14:35.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-9733 exec execpodkgwvs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.23.28 80'
  Apr 15 09:14:35.531: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.23.28 80\nConnection to 10.233.23.28 80 port [tcp/http] succeeded!\n"
  Apr 15 09:14:35.531: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9733 @ 04/15/24 09:14:35.531
  E0415 09:14:35.622580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:36.623040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:37.624281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:38.624171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9733 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/15/24 09:14:39.597
  E0415 09:14:39.624264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:39.625: INFO: successfully validated that service endpoint-test2 in namespace services-9733 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/15/24 09:14:39.625
  E0415 09:14:40.624772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:40.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-9733 exec execpodkgwvs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 15 09:14:40.925: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 15 09:14:40.925: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:14:40.925: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-9733 exec execpodkgwvs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.23.28 80'
  Apr 15 09:14:41.244: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.23.28 80\nConnection to 10.233.23.28 80 port [tcp/http] succeeded!\n"
  Apr 15 09:14:41.244: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9733 @ 04/15/24 09:14:41.245
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9733 to expose endpoints map[pod2:[80]] @ 04/15/24 09:14:41.289
  E0415 09:14:41.624914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:42.346: INFO: successfully validated that service endpoint-test2 in namespace services-9733 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/15/24 09:14:42.346
  E0415 09:14:42.626275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:43.349: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-9733 exec execpodkgwvs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0415 09:14:43.626239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:43.660: INFO: stderr: "+ + nc -v -t -w 2 endpoint-test2 80\necho hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 15 09:14:43.660: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:14:43.661: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-9733 exec execpodkgwvs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.23.28 80'
  Apr 15 09:14:43.946: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.23.28 80\nConnection to 10.233.23.28 80 port [tcp/http] succeeded!\n"
  Apr 15 09:14:43.947: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9733 @ 04/15/24 09:14:43.947
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9733 to expose endpoints map[] @ 04/15/24 09:14:44.02
  E0415 09:14:44.626884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:45.063: INFO: successfully validated that service endpoint-test2 in namespace services-9733 exposes endpoints map[]
  Apr 15 09:14:45.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9733" for this suite. @ 04/15/24 09:14:45.126
• [16.710 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 04/15/24 09:14:45.169
  Apr 15 09:14:45.169: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 09:14:45.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:14:45.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:14:45.257
  Apr 15 09:14:45.265: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 09:14:45.628175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:46.628480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/15/24 09:14:47.289
  Apr 15 09:14:47.290: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-3706 --namespace=crd-publish-openapi-3706 create -f -'
  E0415 09:14:47.629625      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:47.786: INFO: stderr: ""
  Apr 15 09:14:47.787: INFO: stdout: "e2e-test-crd-publish-openapi-8210-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 15 09:14:47.787: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-3706 --namespace=crd-publish-openapi-3706 delete e2e-test-crd-publish-openapi-8210-crds test-cr'
  Apr 15 09:14:47.966: INFO: stderr: ""
  Apr 15 09:14:47.966: INFO: stdout: "e2e-test-crd-publish-openapi-8210-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Apr 15 09:14:47.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-3706 --namespace=crd-publish-openapi-3706 apply -f -'
  Apr 15 09:14:48.162: INFO: stderr: ""
  Apr 15 09:14:48.162: INFO: stdout: "e2e-test-crd-publish-openapi-8210-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 15 09:14:48.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-3706 --namespace=crd-publish-openapi-3706 delete e2e-test-crd-publish-openapi-8210-crds test-cr'
  Apr 15 09:14:48.492: INFO: stderr: ""
  Apr 15 09:14:48.492: INFO: stdout: "e2e-test-crd-publish-openapi-8210-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/15/24 09:14:48.493
  Apr 15 09:14:48.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-3706 explain e2e-test-crd-publish-openapi-8210-crds'
  E0415 09:14:48.629653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:48.662: INFO: stderr: ""
  Apr 15 09:14:48.662: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8210-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0415 09:14:49.630549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:50.630868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:50.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3706" for this suite. @ 04/15/24 09:14:50.769
• [5.616 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/15/24 09:14:50.793
  Apr 15 09:14:50.793: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 09:14:50.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:14:50.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:14:50.861
  STEP: create the container @ 04/15/24 09:14:50.875
  W0415 09:14:50.912869      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/15/24 09:14:50.914
  E0415 09:14:51.631272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:52.631646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:53.632089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/15/24 09:14:53.962
  STEP: the container should be terminated @ 04/15/24 09:14:53.97
  STEP: the termination message should be set @ 04/15/24 09:14:53.97
  Apr 15 09:14:53.971: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/15/24 09:14:53.972
  Apr 15 09:14:54.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9598" for this suite. @ 04/15/24 09:14:54.011
• [3.235 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 04/15/24 09:14:54.029
  Apr 15 09:14:54.029: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:14:54.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:14:54.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:14:54.076
  STEP: Creating the pod @ 04/15/24 09:14:54.084
  E0415 09:14:54.633470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:55.633881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:56.633880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:56.690: INFO: Successfully updated pod "annotationupdatec371823c-dcb8-49c1-866d-f9682650a686"
  E0415 09:14:57.634422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:58.634787      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:58.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4695" for this suite. @ 04/15/24 09:14:58.747
• [4.738 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 04/15/24 09:14:58.771
  Apr 15 09:14:58.771: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/15/24 09:14:58.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:14:58.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:14:58.836
  STEP: Setting up the test @ 04/15/24 09:14:58.842
  STEP: Creating hostNetwork=false pod @ 04/15/24 09:14:58.843
  E0415 09:14:59.635354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:00.636387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 04/15/24 09:15:00.892
  E0415 09:15:01.637092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:02.637183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 04/15/24 09:15:02.946
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/15/24 09:15:02.947
  Apr 15 09:15:02.947: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9381 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:15:02.947: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:15:02.950: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:15:02.950: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9381/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 15 09:15:03.101: INFO: Exec stderr: ""
  Apr 15 09:15:03.101: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9381 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:15:03.101: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:15:03.102: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:15:03.102: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9381/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 15 09:15:03.225: INFO: Exec stderr: ""
  Apr 15 09:15:03.225: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9381 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:15:03.225: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:15:03.228: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:15:03.228: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9381/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 15 09:15:03.385: INFO: Exec stderr: ""
  Apr 15 09:15:03.385: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9381 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:15:03.386: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:15:03.388: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:15:03.388: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9381/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 15 09:15:03.519: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/15/24 09:15:03.519
  Apr 15 09:15:03.520: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9381 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:15:03.520: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:15:03.524: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:15:03.524: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9381/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  E0415 09:15:03.637855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:03.659: INFO: Exec stderr: ""
  Apr 15 09:15:03.659: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9381 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:15:03.659: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:15:03.662: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:15:03.662: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9381/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 15 09:15:03.774: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/15/24 09:15:03.774
  Apr 15 09:15:03.774: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9381 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:15:03.774: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:15:03.779: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:15:03.779: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9381/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 15 09:15:03.923: INFO: Exec stderr: ""
  Apr 15 09:15:03.925: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9381 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:15:03.925: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:15:03.929: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:15:03.930: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9381/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 15 09:15:04.062: INFO: Exec stderr: ""
  Apr 15 09:15:04.062: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9381 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:15:04.063: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:15:04.068: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:15:04.069: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9381/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 15 09:15:04.265: INFO: Exec stderr: ""
  Apr 15 09:15:04.265: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9381 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:15:04.265: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:15:04.268: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:15:04.269: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9381/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 15 09:15:04.460: INFO: Exec stderr: ""
  Apr 15 09:15:04.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-9381" for this suite. @ 04/15/24 09:15:04.472
• [5.715 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 04/15/24 09:15:04.495
  Apr 15 09:15:04.495: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 09:15:04.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:15:04.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:15:04.533
  STEP: Creating service test in namespace statefulset-3298 @ 04/15/24 09:15:04.544
  STEP: Looking for a node to schedule stateful set and pod @ 04/15/24 09:15:04.565
  STEP: Creating pod with conflicting port in namespace statefulset-3298 @ 04/15/24 09:15:04.587
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3298 @ 04/15/24 09:15:04.62
  E0415 09:15:04.638285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:05.638464      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:06.638820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-3298 @ 04/15/24 09:15:06.672
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3298 @ 04/15/24 09:15:06.69
  Apr 15 09:15:06.731: INFO: Observed stateful pod in namespace: statefulset-3298, name: ss-0, uid: 5d27ae0c-090a-4b32-8f12-720ba867811c, status phase: Pending. Waiting for statefulset controller to delete.
  Apr 15 09:15:06.764: INFO: Observed stateful pod in namespace: statefulset-3298, name: ss-0, uid: 5d27ae0c-090a-4b32-8f12-720ba867811c, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 15 09:15:06.802: INFO: Observed stateful pod in namespace: statefulset-3298, name: ss-0, uid: 5d27ae0c-090a-4b32-8f12-720ba867811c, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 15 09:15:06.813: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-3298
  STEP: Removing pod with conflicting port in namespace statefulset-3298 @ 04/15/24 09:15:06.814
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3298 and will be in running state @ 04/15/24 09:15:06.902
  E0415 09:15:07.639024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:08.639413      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:08.956: INFO: Deleting all statefulset in ns statefulset-3298
  Apr 15 09:15:08.965: INFO: Scaling statefulset ss to 0
  E0415 09:15:09.641120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:10.641321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:11.641852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:12.642246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:13.642975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:14.643337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:15.643464      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:16.643715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:17.643835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:18.644130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:18.998: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 09:15:19.007: INFO: Deleting statefulset ss
  Apr 15 09:15:19.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3298" for this suite. @ 04/15/24 09:15:19.051
• [14.580 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 04/15/24 09:15:19.076
  Apr 15 09:15:19.076: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 09:15:19.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:15:19.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:15:19.127
  Apr 15 09:15:19.134: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 09:15:19.644499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:20.645337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:21.645676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:22.646911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:22.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2178" for this suite. @ 04/15/24 09:15:22.885
• [3.838 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 04/15/24 09:15:22.919
  Apr 15 09:15:22.919: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:15:22.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:15:22.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:15:22.97
  STEP: Creating the pod @ 04/15/24 09:15:22.979
  E0415 09:15:23.646522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:24.647750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:25.605: INFO: Successfully updated pod "labelsupdatedb70acef-25b0-411a-b915-681d528da307"
  E0415 09:15:25.648227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:26.649188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:27.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 09:15:27.650467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-7457" for this suite. @ 04/15/24 09:15:27.659
• [4.756 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 04/15/24 09:15:27.679
  Apr 15 09:15:27.679: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 09:15:27.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:15:27.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:15:27.732
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-158 @ 04/15/24 09:15:27.74
  STEP: changing the ExternalName service to type=ClusterIP @ 04/15/24 09:15:27.752
  STEP: creating replication controller externalname-service in namespace services-158 @ 04/15/24 09:15:27.809
  I0415 09:15:27.832560      14 runners.go:197] Created replication controller with name: externalname-service, namespace: services-158, replica count: 2
  E0415 09:15:28.650744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:29.651214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:30.651853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 09:15:30.883973      14 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 09:15:30.884: INFO: Creating new exec pod
  E0415 09:15:31.653421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:32.653730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:33.653798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:33.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-158 exec execpod9lfk4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 15 09:15:34.295: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 15 09:15:34.295: INFO: stdout: "externalname-service-9nhb6"
  Apr 15 09:15:34.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-158 exec execpod9lfk4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.42.152 80'
  Apr 15 09:15:34.625: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.42.152 80\nConnection to 10.233.42.152 80 port [tcp/http] succeeded!\n"
  Apr 15 09:15:34.625: INFO: stdout: "externalname-service-9nhb6"
  Apr 15 09:15:34.625: INFO: Cleaning up the ExternalName to ClusterIP test service
  E0415 09:15:34.654114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:34.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-158" for this suite. @ 04/15/24 09:15:34.701
• [7.036 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 04/15/24 09:15:34.715
  Apr 15 09:15:34.715: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 09:15:34.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:15:34.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:15:34.795
  STEP: creating all guestbook components @ 04/15/24 09:15:34.811
  Apr 15 09:15:34.811: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Apr 15 09:15:34.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-2775 create -f -'
  Apr 15 09:15:35.138: INFO: stderr: ""
  Apr 15 09:15:35.138: INFO: stdout: "service/agnhost-replica created\n"
  Apr 15 09:15:35.138: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Apr 15 09:15:35.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-2775 create -f -'
  Apr 15 09:15:35.495: INFO: stderr: ""
  Apr 15 09:15:35.495: INFO: stdout: "service/agnhost-primary created\n"
  Apr 15 09:15:35.496: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Apr 15 09:15:35.497: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-2775 create -f -'
  E0415 09:15:35.654261      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:35.817: INFO: stderr: ""
  Apr 15 09:15:35.817: INFO: stdout: "service/frontend created\n"
  Apr 15 09:15:35.817: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Apr 15 09:15:35.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-2775 create -f -'
  Apr 15 09:15:36.041: INFO: stderr: ""
  Apr 15 09:15:36.041: INFO: stdout: "deployment.apps/frontend created\n"
  Apr 15 09:15:36.041: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 15 09:15:36.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-2775 create -f -'
  Apr 15 09:15:36.357: INFO: stderr: ""
  Apr 15 09:15:36.357: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Apr 15 09:15:36.357: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 15 09:15:36.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-2775 create -f -'
  E0415 09:15:36.655151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:36.691: INFO: stderr: ""
  Apr 15 09:15:36.691: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/15/24 09:15:36.692
  Apr 15 09:15:36.692: INFO: Waiting for all frontend pods to be Running.
  E0415 09:15:37.655313      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:38.656398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:39.656856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:40.657260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:41.657956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:41.743: INFO: Waiting for frontend to serve content.
  Apr 15 09:15:41.779: INFO: Trying to add a new entry to the guestbook.
  Apr 15 09:15:41.815: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/15/24 09:15:41.838
  Apr 15 09:15:41.838: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-2775 delete --grace-period=0 --force -f -'
  Apr 15 09:15:42.080: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:15:42.080: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 09:15:42.08
  Apr 15 09:15:42.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-2775 delete --grace-period=0 --force -f -'
  Apr 15 09:15:42.300: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:15:42.300: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 09:15:42.3
  Apr 15 09:15:42.301: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-2775 delete --grace-period=0 --force -f -'
  E0415 09:15:42.658421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:42.691: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:15:42.691: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 09:15:42.692
  Apr 15 09:15:42.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-2775 delete --grace-period=0 --force -f -'
  Apr 15 09:15:42.907: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:15:42.907: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 09:15:42.907
  Apr 15 09:15:42.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-2775 delete --grace-period=0 --force -f -'
  Apr 15 09:15:43.258: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:15:43.259: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 09:15:43.259
  Apr 15 09:15:43.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-2775 delete --grace-period=0 --force -f -'
  Apr 15 09:15:43.573: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:15:43.573: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Apr 15 09:15:43.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2775" for this suite. @ 04/15/24 09:15:43.592
• [8.899 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 04/15/24 09:15:43.616
  Apr 15 09:15:43.616: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 09:15:43.627
  E0415 09:15:43.663045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:15:43.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:15:43.748
  STEP: Counting existing ResourceQuota @ 04/15/24 09:15:43.756
  E0415 09:15:44.663278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:45.663582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:46.665039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:47.667632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:48.665103      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/15/24 09:15:48.767
  STEP: Ensuring resource quota status is calculated @ 04/15/24 09:15:48.78
  E0415 09:15:49.665531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:50.665938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 04/15/24 09:15:50.788
  STEP: Ensuring resource quota status captures replicaset creation @ 04/15/24 09:15:50.813
  E0415 09:15:51.666356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:52.667118      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 04/15/24 09:15:52.825
  STEP: Ensuring resource quota status released usage @ 04/15/24 09:15:52.838
  E0415 09:15:53.667132      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:54.667434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:54.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2795" for this suite. @ 04/15/24 09:15:54.864
• [11.270 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 04/15/24 09:15:54.887
  Apr 15 09:15:54.887: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 09:15:54.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:15:54.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:15:54.946
  STEP: creating the pod @ 04/15/24 09:15:54.953
  STEP: waiting for pod running @ 04/15/24 09:15:54.983
  E0415 09:15:55.668174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:56.668544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 04/15/24 09:15:57.013
  Apr 15 09:15:57.018: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-390 PodName:var-expansion-b838f288-842d-4d8d-8149-ecc62e1c2464 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:15:57.018: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:15:57.020: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:15:57.020: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-390/pods/var-expansion-b838f288-842d-4d8d-8149-ecc62e1c2464/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/15/24 09:15:57.123
  Apr 15 09:15:57.133: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-390 PodName:var-expansion-b838f288-842d-4d8d-8149-ecc62e1c2464 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:15:57.133: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  Apr 15 09:15:57.135: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:15:57.136: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-390/pods/var-expansion-b838f288-842d-4d8d-8149-ecc62e1c2464/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/15/24 09:15:57.239
  E0415 09:15:57.668652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:57.769: INFO: Successfully updated pod "var-expansion-b838f288-842d-4d8d-8149-ecc62e1c2464"
  STEP: waiting for annotated pod running @ 04/15/24 09:15:57.769
  STEP: deleting the pod gracefully @ 04/15/24 09:15:57.78
  Apr 15 09:15:57.780: INFO: Deleting pod "var-expansion-b838f288-842d-4d8d-8149-ecc62e1c2464" in namespace "var-expansion-390"
  Apr 15 09:15:57.800: INFO: Wait up to 5m0s for pod "var-expansion-b838f288-842d-4d8d-8149-ecc62e1c2464" to be fully deleted
  E0415 09:15:58.669578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:59.669272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:00.669911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:01.670133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:02.670337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:03.670944      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:04.671374      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:05.671817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:06.672500      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:07.673006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:08.673627      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:09.674422      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:10.675174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:11.675060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:12.675134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:13.675331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:14.676664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:15.677524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:16.678362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:17.678697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:18.679029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:19.679136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:20.679341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:21.680489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:22.680914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:23.681157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:24.681446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:25.681722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:26.682216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:27.682906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:28.684379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:29.684536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:16:29.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-390" for this suite. @ 04/15/24 09:16:29.991
• [35.123 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 04/15/24 09:16:30.011
  Apr 15 09:16:30.011: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 09:16:30.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:16:30.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:16:30.064
  STEP: Creating a ReplaceConcurrent cronjob @ 04/15/24 09:16:30.07
  STEP: Ensuring a job is scheduled @ 04/15/24 09:16:30.085
  E0415 09:16:30.685211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:31.685872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:32.685744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:33.685994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:34.686752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:35.687102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:36.688729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:37.688482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:38.689490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:39.689095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:40.690710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:41.690886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:42.691894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:43.692152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:44.693021      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:45.693878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:46.694542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:47.695868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:48.695464      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:49.696180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:50.697764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:51.697768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:52.698247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:53.699149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:54.700454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:55.700630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:56.701695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:57.702043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:58.702305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:59.702728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:00.703194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:01.704351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/15/24 09:17:02.096
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/15/24 09:17:02.103
  STEP: Ensuring the job is replaced with a new one @ 04/15/24 09:17:02.112
  E0415 09:17:02.705111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:03.705343      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:04.705835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:05.706118      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:06.706865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:07.707729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:08.708168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:09.709175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:10.710075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:11.710844      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:12.712537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:13.712189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:14.712246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:15.713164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:16.713444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:17.713772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:18.713918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:19.713967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:20.714686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:21.714526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:22.715749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:23.715732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:24.716079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:25.716778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:26.716641      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:27.717020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:28.717891      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:29.717917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:30.718429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:31.718410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:32.718759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:33.719419      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:34.719423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:35.719696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:36.719937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:37.720908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:38.722132      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:39.723118      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:40.723227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:41.723537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:42.723726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:43.723936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:44.724967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:45.725942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:46.726185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:47.727281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:48.728102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:49.728851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:50.729840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:51.730056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:52.731156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:53.731883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:54.732342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:55.733378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:56.734366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:57.734875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:58.735553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:59.735383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:00.736200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:01.736373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/15/24 09:18:02.123
  Apr 15 09:18:02.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3184" for this suite. @ 04/15/24 09:18:02.163
• [92.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 04/15/24 09:18:02.194
  Apr 15 09:18:02.194: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 09:18:02.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:02.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:02.268
  STEP: Creating a pod to test substitution in container's args @ 04/15/24 09:18:02.28
  E0415 09:18:02.737039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:03.737587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:04.738826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:05.739064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:18:06.354
  Apr 15 09:18:06.364: INFO: Trying to get logs from node jec7saimeaph-3 pod var-expansion-cd8f2cef-d6a1-4c6c-95fe-6ed549d3ffee container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 09:18:06.406
  Apr 15 09:18:06.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7185" for this suite. @ 04/15/24 09:18:06.497
• [4.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 04/15/24 09:18:06.522
  Apr 15 09:18:06.522: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename gc @ 04/15/24 09:18:06.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:06.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:06.572
  STEP: create the deployment @ 04/15/24 09:18:06.58
  W0415 09:18:06.597086      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/15/24 09:18:06.597
  E0415 09:18:06.740116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 04/15/24 09:18:07.107
  STEP: wait for all rs to be garbage collected @ 04/15/24 09:18:07.132
  STEP: expected 0 pods, got 2 pods @ 04/15/24 09:18:07.158
  STEP: Gathering metrics @ 04/15/24 09:18:07.687
  E0415 09:18:07.740153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:18:08.006: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 09:18:08.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8304" for this suite. @ 04/15/24 09:18:08.029
• [1.531 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/15/24 09:18:08.054
  Apr 15 09:18:08.054: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename secrets @ 04/15/24 09:18:08.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:08.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:08.11
  STEP: Creating secret with name secret-test-b64792ab-b0b9-4418-b713-bd5c223f7fc9 @ 04/15/24 09:18:08.12
  STEP: Creating a pod to test consume secrets @ 04/15/24 09:18:08.135
  E0415 09:18:08.740379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:09.741262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:10.741400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:11.742446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:18:12.2
  Apr 15 09:18:12.212: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-secrets-914544f4-4507-4d36-a4bc-4da80b56600b container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 09:18:12.235
  Apr 15 09:18:12.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2163" for this suite. @ 04/15/24 09:18:12.289
• [4.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 04/15/24 09:18:12.309
  Apr 15 09:18:12.309: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 09:18:12.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:12.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:12.361
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/15/24 09:18:12.37
  E0415 09:18:12.742221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:13.743288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:14.742967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:15.743113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:18:16.442
  Apr 15 09:18:16.452: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-361c3944-0148-41c6-ac99-a3e0a16c680b container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:18:16.467
  Apr 15 09:18:16.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5041" for this suite. @ 04/15/24 09:18:16.525
• [4.234 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/15/24 09:18:16.545
  Apr 15 09:18:16.545: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename proxy @ 04/15/24 09:18:16.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:16.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:16.59
  STEP: starting an echo server on multiple ports @ 04/15/24 09:18:16.631
  STEP: creating replication controller proxy-service-kww52 in namespace proxy-4886 @ 04/15/24 09:18:16.633
  I0415 09:18:16.672337      14 runners.go:197] Created replication controller with name: proxy-service-kww52, namespace: proxy-4886, replica count: 1
  E0415 09:18:16.743514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 09:18:17.726713      14 runners.go:197] proxy-service-kww52 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0415 09:18:17.744981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 09:18:18.727766      14 runners.go:197] proxy-service-kww52 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0415 09:18:18.745640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 09:18:19.728212      14 runners.go:197] proxy-service-kww52 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 09:18:19.738: INFO: setup took 3.138199947s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/15/24 09:18:19.738
  E0415 09:18:19.747106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:18:19.756: INFO: (0) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 17.037763ms)
  Apr 15 09:18:19.757: INFO: (0) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 18.992057ms)
  Apr 15 09:18:19.760: INFO: (0) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 20.622092ms)
  Apr 15 09:18:19.780: INFO: (0) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 40.324322ms)
  Apr 15 09:18:19.781: INFO: (0) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 41.783389ms)
  Apr 15 09:18:19.788: INFO: (0) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 47.10778ms)
  Apr 15 09:18:19.790: INFO: (0) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 50.037809ms)
  Apr 15 09:18:19.803: INFO: (0) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 63.180577ms)
  Apr 15 09:18:19.805: INFO: (0) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 63.098756ms)
  Apr 15 09:18:19.806: INFO: (0) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 66.506851ms)
  Apr 15 09:18:19.806: INFO: (0) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 65.939256ms)
  Apr 15 09:18:19.806: INFO: (0) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 65.180179ms)
  Apr 15 09:18:19.806: INFO: (0) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 65.093269ms)
  Apr 15 09:18:19.806: INFO: (0) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 65.487245ms)
  Apr 15 09:18:19.806: INFO: (0) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 63.355168ms)
  Apr 15 09:18:19.806: INFO: (0) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 67.0785ms)
  Apr 15 09:18:19.820: INFO: (1) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 9.99188ms)
  Apr 15 09:18:19.829: INFO: (1) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 18.960738ms)
  Apr 15 09:18:19.830: INFO: (1) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 20.459801ms)
  Apr 15 09:18:19.834: INFO: (1) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 23.385615ms)
  Apr 15 09:18:19.835: INFO: (1) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 24.813508ms)
  Apr 15 09:18:19.840: INFO: (1) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 29.563098ms)
  Apr 15 09:18:19.840: INFO: (1) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 29.470947ms)
  Apr 15 09:18:19.840: INFO: (1) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 29.300601ms)
  Apr 15 09:18:19.842: INFO: (1) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 31.768446ms)
  Apr 15 09:18:19.843: INFO: (1) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 32.850465ms)
  Apr 15 09:18:19.844: INFO: (1) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 33.104348ms)
  Apr 15 09:18:19.844: INFO: (1) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 33.342964ms)
  Apr 15 09:18:19.848: INFO: (1) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 37.680234ms)
  Apr 15 09:18:19.849: INFO: (1) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 38.170982ms)
  Apr 15 09:18:19.849: INFO: (1) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 38.223276ms)
  Apr 15 09:18:19.849: INFO: (1) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 38.158335ms)
  Apr 15 09:18:19.863: INFO: (2) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 13.179606ms)
  Apr 15 09:18:19.867: INFO: (2) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 17.221656ms)
  Apr 15 09:18:19.873: INFO: (2) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 23.285404ms)
  Apr 15 09:18:19.873: INFO: (2) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 22.923228ms)
  Apr 15 09:18:19.884: INFO: (2) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 32.982795ms)
  Apr 15 09:18:19.884: INFO: (2) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 33.631861ms)
  Apr 15 09:18:19.886: INFO: (2) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 35.551335ms)
  Apr 15 09:18:19.893: INFO: (2) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 42.834713ms)
  Apr 15 09:18:19.893: INFO: (2) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 42.331985ms)
  Apr 15 09:18:19.893: INFO: (2) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 42.041106ms)
  Apr 15 09:18:19.893: INFO: (2) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 43.490949ms)
  Apr 15 09:18:19.893: INFO: (2) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 42.355927ms)
  Apr 15 09:18:19.894: INFO: (2) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 42.480939ms)
  Apr 15 09:18:19.895: INFO: (2) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 44.068128ms)
  Apr 15 09:18:19.895: INFO: (2) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 43.271385ms)
  Apr 15 09:18:19.895: INFO: (2) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 44.756861ms)
  Apr 15 09:18:19.916: INFO: (3) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 18.753183ms)
  Apr 15 09:18:19.916: INFO: (3) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 19.289659ms)
  Apr 15 09:18:19.918: INFO: (3) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 21.95995ms)
  Apr 15 09:18:19.919: INFO: (3) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 21.492181ms)
  Apr 15 09:18:19.920: INFO: (3) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 22.557652ms)
  Apr 15 09:18:19.929: INFO: (3) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 32.398544ms)
  Apr 15 09:18:19.930: INFO: (3) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 32.389412ms)
  Apr 15 09:18:19.931: INFO: (3) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 32.57159ms)
  Apr 15 09:18:19.931: INFO: (3) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 34.188607ms)
  Apr 15 09:18:19.932: INFO: (3) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 35.400121ms)
  Apr 15 09:18:19.933: INFO: (3) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 36.948389ms)
  Apr 15 09:18:19.933: INFO: (3) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 35.336597ms)
  Apr 15 09:18:19.933: INFO: (3) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 35.399223ms)
  Apr 15 09:18:19.932: INFO: (3) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 34.745987ms)
  Apr 15 09:18:19.936: INFO: (3) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 38.362057ms)
  Apr 15 09:18:19.937: INFO: (3) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 40.254782ms)
  Apr 15 09:18:19.954: INFO: (4) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 16.543608ms)
  Apr 15 09:18:19.957: INFO: (4) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 19.17729ms)
  Apr 15 09:18:19.961: INFO: (4) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 21.822049ms)
  Apr 15 09:18:19.964: INFO: (4) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 26.274214ms)
  Apr 15 09:18:19.964: INFO: (4) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 26.389261ms)
  Apr 15 09:18:19.964: INFO: (4) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 24.68131ms)
  Apr 15 09:18:19.976: INFO: (4) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 38.033059ms)
  Apr 15 09:18:19.976: INFO: (4) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 35.604067ms)
  Apr 15 09:18:19.976: INFO: (4) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 37.305088ms)
  Apr 15 09:18:19.976: INFO: (4) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 36.043932ms)
  Apr 15 09:18:19.976: INFO: (4) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 36.010008ms)
  Apr 15 09:18:19.977: INFO: (4) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 39.45468ms)
  Apr 15 09:18:19.977: INFO: (4) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 36.621644ms)
  Apr 15 09:18:19.977: INFO: (4) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 39.344292ms)
  Apr 15 09:18:19.978: INFO: (4) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 39.039978ms)
  Apr 15 09:18:19.978: INFO: (4) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 39.494512ms)
  Apr 15 09:18:19.994: INFO: (5) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 16.169259ms)
  Apr 15 09:18:19.995: INFO: (5) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 16.943625ms)
  Apr 15 09:18:20.004: INFO: (5) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 25.826007ms)
  Apr 15 09:18:20.004: INFO: (5) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 24.806659ms)
  Apr 15 09:18:20.006: INFO: (5) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 27.480468ms)
  Apr 15 09:18:20.006: INFO: (5) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 27.329059ms)
  Apr 15 09:18:20.008: INFO: (5) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 29.240214ms)
  Apr 15 09:18:20.015: INFO: (5) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 35.671984ms)
  Apr 15 09:18:20.015: INFO: (5) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 36.873481ms)
  Apr 15 09:18:20.015: INFO: (5) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 36.16815ms)
  Apr 15 09:18:20.015: INFO: (5) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 36.157375ms)
  Apr 15 09:18:20.015: INFO: (5) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 36.370779ms)
  Apr 15 09:18:20.016: INFO: (5) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 35.839707ms)
  Apr 15 09:18:20.016: INFO: (5) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 36.476967ms)
  Apr 15 09:18:20.016: INFO: (5) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 36.256176ms)
  Apr 15 09:18:20.019: INFO: (5) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 39.539129ms)
  Apr 15 09:18:20.039: INFO: (6) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 17.809661ms)
  Apr 15 09:18:20.039: INFO: (6) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 19.83538ms)
  Apr 15 09:18:20.042: INFO: (6) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 22.897208ms)
  Apr 15 09:18:20.045: INFO: (6) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 22.171497ms)
  Apr 15 09:18:20.045: INFO: (6) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 24.995057ms)
  Apr 15 09:18:20.051: INFO: (6) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 29.238852ms)
  Apr 15 09:18:20.052: INFO: (6) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 30.485026ms)
  Apr 15 09:18:20.052: INFO: (6) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 29.575563ms)
  Apr 15 09:18:20.053: INFO: (6) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 33.136292ms)
  Apr 15 09:18:20.053: INFO: (6) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 32.786108ms)
  Apr 15 09:18:20.055: INFO: (6) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 32.522984ms)
  Apr 15 09:18:20.055: INFO: (6) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 33.438752ms)
  Apr 15 09:18:20.056: INFO: (6) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 33.163345ms)
  Apr 15 09:18:20.057: INFO: (6) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 36.468056ms)
  Apr 15 09:18:20.059: INFO: (6) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 38.404724ms)
  Apr 15 09:18:20.061: INFO: (6) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 38.86611ms)
  Apr 15 09:18:20.077: INFO: (7) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 14.671107ms)
  Apr 15 09:18:20.077: INFO: (7) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 15.349929ms)
  Apr 15 09:18:20.084: INFO: (7) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 21.045995ms)
  Apr 15 09:18:20.087: INFO: (7) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 22.804838ms)
  Apr 15 09:18:20.093: INFO: (7) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 28.452668ms)
  Apr 15 09:18:20.093: INFO: (7) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 29.594714ms)
  Apr 15 09:18:20.096: INFO: (7) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 32.763838ms)
  Apr 15 09:18:20.096: INFO: (7) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 33.258582ms)
  Apr 15 09:18:20.097: INFO: (7) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 33.046611ms)
  Apr 15 09:18:20.098: INFO: (7) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 35.468281ms)
  Apr 15 09:18:20.098: INFO: (7) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 34.286653ms)
  Apr 15 09:18:20.099: INFO: (7) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 34.431028ms)
  Apr 15 09:18:20.099: INFO: (7) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 36.393107ms)
  Apr 15 09:18:20.099: INFO: (7) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 36.387865ms)
  Apr 15 09:18:20.099: INFO: (7) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 33.729965ms)
  Apr 15 09:18:20.112: INFO: (7) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 47.391503ms)
  Apr 15 09:18:20.131: INFO: (8) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 18.202338ms)
  Apr 15 09:18:20.131: INFO: (8) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 18.09968ms)
  Apr 15 09:18:20.131: INFO: (8) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 15.600188ms)
  Apr 15 09:18:20.132: INFO: (8) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 15.96793ms)
  Apr 15 09:18:20.133: INFO: (8) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 20.11955ms)
  Apr 15 09:18:20.136: INFO: (8) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 20.033084ms)
  Apr 15 09:18:20.136: INFO: (8) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 21.510783ms)
  Apr 15 09:18:20.138: INFO: (8) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 23.824402ms)
  Apr 15 09:18:20.138: INFO: (8) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 24.245197ms)
  Apr 15 09:18:20.138: INFO: (8) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 24.715618ms)
  Apr 15 09:18:20.138: INFO: (8) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 21.802983ms)
  Apr 15 09:18:20.143: INFO: (8) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 26.709246ms)
  Apr 15 09:18:20.144: INFO: (8) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 29.491616ms)
  Apr 15 09:18:20.144: INFO: (8) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 30.862375ms)
  Apr 15 09:18:20.146: INFO: (8) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 30.776602ms)
  Apr 15 09:18:20.146: INFO: (8) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 32.425757ms)
  Apr 15 09:18:20.162: INFO: (9) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 15.104107ms)
  Apr 15 09:18:20.168: INFO: (9) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 21.067796ms)
  Apr 15 09:18:20.169: INFO: (9) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 22.12529ms)
  Apr 15 09:18:20.170: INFO: (9) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 21.340301ms)
  Apr 15 09:18:20.171: INFO: (9) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 23.265697ms)
  Apr 15 09:18:20.172: INFO: (9) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 24.096259ms)
  Apr 15 09:18:20.172: INFO: (9) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 23.470251ms)
  Apr 15 09:18:20.172: INFO: (9) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 23.99968ms)
  Apr 15 09:18:20.172: INFO: (9) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 23.814218ms)
  Apr 15 09:18:20.179: INFO: (9) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 32.814121ms)
  Apr 15 09:18:20.180: INFO: (9) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 31.046214ms)
  Apr 15 09:18:20.180: INFO: (9) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 32.570361ms)
  Apr 15 09:18:20.180: INFO: (9) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 31.993547ms)
  Apr 15 09:18:20.180: INFO: (9) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 32.88478ms)
  Apr 15 09:18:20.181: INFO: (9) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 33.708237ms)
  Apr 15 09:18:20.183: INFO: (9) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 34.360082ms)
  Apr 15 09:18:20.195: INFO: (10) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 12.531226ms)
  Apr 15 09:18:20.196: INFO: (10) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 13.233645ms)
  Apr 15 09:18:20.196: INFO: (10) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 13.621044ms)
  Apr 15 09:18:20.197: INFO: (10) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 12.823345ms)
  Apr 15 09:18:20.200: INFO: (10) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 16.599666ms)
  Apr 15 09:18:20.204: INFO: (10) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 20.874151ms)
  Apr 15 09:18:20.206: INFO: (10) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 22.201226ms)
  Apr 15 09:18:20.206: INFO: (10) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 21.050933ms)
  Apr 15 09:18:20.207: INFO: (10) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 21.809113ms)
  Apr 15 09:18:20.207: INFO: (10) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 23.377859ms)
  Apr 15 09:18:20.209: INFO: (10) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 25.80989ms)
  Apr 15 09:18:20.209: INFO: (10) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 25.335806ms)
  Apr 15 09:18:20.222: INFO: (10) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 38.006589ms)
  Apr 15 09:18:20.226: INFO: (10) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 41.860415ms)
  Apr 15 09:18:20.227: INFO: (10) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 42.404257ms)
  Apr 15 09:18:20.232: INFO: (10) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 46.718332ms)
  Apr 15 09:18:20.245: INFO: (11) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 12.838292ms)
  Apr 15 09:18:20.248: INFO: (11) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 15.998279ms)
  Apr 15 09:18:20.249: INFO: (11) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 15.544421ms)
  Apr 15 09:18:20.256: INFO: (11) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 22.777469ms)
  Apr 15 09:18:20.257: INFO: (11) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 23.575328ms)
  Apr 15 09:18:20.257: INFO: (11) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 24.430572ms)
  Apr 15 09:18:20.257: INFO: (11) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 22.515383ms)
  Apr 15 09:18:20.257: INFO: (11) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 23.075972ms)
  Apr 15 09:18:20.260: INFO: (11) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 24.83364ms)
  Apr 15 09:18:20.261: INFO: (11) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 27.749326ms)
  Apr 15 09:18:20.265: INFO: (11) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 30.886079ms)
  Apr 15 09:18:20.270: INFO: (11) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 37.418164ms)
  Apr 15 09:18:20.271: INFO: (11) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 35.705145ms)
  Apr 15 09:18:20.271: INFO: (11) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 35.999919ms)
  Apr 15 09:18:20.271: INFO: (11) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 36.708331ms)
  Apr 15 09:18:20.271: INFO: (11) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 37.860689ms)
  Apr 15 09:18:20.288: INFO: (12) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 17.036842ms)
  Apr 15 09:18:20.288: INFO: (12) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 17.257966ms)
  Apr 15 09:18:20.290: INFO: (12) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 17.52952ms)
  Apr 15 09:18:20.290: INFO: (12) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 16.375945ms)
  Apr 15 09:18:20.292: INFO: (12) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 19.560915ms)
  Apr 15 09:18:20.292: INFO: (12) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 19.940963ms)
  Apr 15 09:18:20.298: INFO: (12) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 26.441119ms)
  Apr 15 09:18:20.298: INFO: (12) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 24.610688ms)
  Apr 15 09:18:20.298: INFO: (12) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 26.320572ms)
  Apr 15 09:18:20.300: INFO: (12) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 26.544627ms)
  Apr 15 09:18:20.301: INFO: (12) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 28.462927ms)
  Apr 15 09:18:20.301: INFO: (12) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 28.440913ms)
  Apr 15 09:18:20.302: INFO: (12) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 29.540606ms)
  Apr 15 09:18:20.304: INFO: (12) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 29.793262ms)
  Apr 15 09:18:20.305: INFO: (12) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 31.754553ms)
  Apr 15 09:18:20.306: INFO: (12) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 31.308261ms)
  Apr 15 09:18:20.324: INFO: (13) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 16.8792ms)
  Apr 15 09:18:20.325: INFO: (13) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 17.899697ms)
  Apr 15 09:18:20.325: INFO: (13) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 18.350992ms)
  Apr 15 09:18:20.324: INFO: (13) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 17.263465ms)
  Apr 15 09:18:20.327: INFO: (13) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 19.62354ms)
  Apr 15 09:18:20.334: INFO: (13) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 27.261928ms)
  Apr 15 09:18:20.335: INFO: (13) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 27.773843ms)
  Apr 15 09:18:20.336: INFO: (13) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 27.652271ms)
  Apr 15 09:18:20.336: INFO: (13) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 27.968992ms)
  Apr 15 09:18:20.336: INFO: (13) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 28.029679ms)
  Apr 15 09:18:20.336: INFO: (13) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 28.193059ms)
  Apr 15 09:18:20.339: INFO: (13) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 31.046948ms)
  Apr 15 09:18:20.339: INFO: (13) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 31.477433ms)
  Apr 15 09:18:20.339: INFO: (13) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 32.230173ms)
  Apr 15 09:18:20.340: INFO: (13) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 32.36178ms)
  Apr 15 09:18:20.345: INFO: (13) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 37.355019ms)
  Apr 15 09:18:20.367: INFO: (14) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 20.215745ms)
  Apr 15 09:18:20.367: INFO: (14) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 20.053508ms)
  Apr 15 09:18:20.367: INFO: (14) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 20.595028ms)
  Apr 15 09:18:20.367: INFO: (14) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 21.470552ms)
  Apr 15 09:18:20.369: INFO: (14) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 21.933523ms)
  Apr 15 09:18:20.369: INFO: (14) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 22.282597ms)
  Apr 15 09:18:20.370: INFO: (14) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 23.589382ms)
  Apr 15 09:18:20.370: INFO: (14) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 23.855181ms)
  Apr 15 09:18:20.370: INFO: (14) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 23.310863ms)
  Apr 15 09:18:20.371: INFO: (14) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 24.98528ms)
  Apr 15 09:18:20.373: INFO: (14) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 26.00548ms)
  Apr 15 09:18:20.376: INFO: (14) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 29.866429ms)
  Apr 15 09:18:20.378: INFO: (14) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 32.302074ms)
  Apr 15 09:18:20.378: INFO: (14) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 31.312249ms)
  Apr 15 09:18:20.378: INFO: (14) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 32.499854ms)
  Apr 15 09:18:20.383: INFO: (14) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 35.765291ms)
  Apr 15 09:18:20.395: INFO: (15) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 11.624877ms)
  Apr 15 09:18:20.396: INFO: (15) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 13.195504ms)
  Apr 15 09:18:20.406: INFO: (15) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 22.658346ms)
  Apr 15 09:18:20.410: INFO: (15) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 26.438901ms)
  Apr 15 09:18:20.414: INFO: (15) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 30.051594ms)
  Apr 15 09:18:20.414: INFO: (15) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 30.847949ms)
  Apr 15 09:18:20.415: INFO: (15) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 31.302529ms)
  Apr 15 09:18:20.415: INFO: (15) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 31.075355ms)
  Apr 15 09:18:20.415: INFO: (15) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 31.283777ms)
  Apr 15 09:18:20.415: INFO: (15) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 31.594414ms)
  Apr 15 09:18:20.416: INFO: (15) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 31.999828ms)
  Apr 15 09:18:20.416: INFO: (15) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 32.154636ms)
  Apr 15 09:18:20.416: INFO: (15) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 32.216694ms)
  Apr 15 09:18:20.416: INFO: (15) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 33.494238ms)
  Apr 15 09:18:20.416: INFO: (15) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 32.741535ms)
  Apr 15 09:18:20.417: INFO: (15) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 33.883288ms)
  Apr 15 09:18:20.439: INFO: (16) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 19.604186ms)
  Apr 15 09:18:20.440: INFO: (16) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 19.975527ms)
  Apr 15 09:18:20.440: INFO: (16) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 20.882472ms)
  Apr 15 09:18:20.440: INFO: (16) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 21.109073ms)
  Apr 15 09:18:20.446: INFO: (16) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 25.516403ms)
  Apr 15 09:18:20.446: INFO: (16) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 26.521801ms)
  Apr 15 09:18:20.453: INFO: (16) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 33.79746ms)
  Apr 15 09:18:20.454: INFO: (16) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 33.251016ms)
  Apr 15 09:18:20.454: INFO: (16) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 33.515916ms)
  Apr 15 09:18:20.454: INFO: (16) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 34.059991ms)
  Apr 15 09:18:20.454: INFO: (16) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 34.40281ms)
  Apr 15 09:18:20.454: INFO: (16) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 34.978338ms)
  Apr 15 09:18:20.455: INFO: (16) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 34.852637ms)
  Apr 15 09:18:20.456: INFO: (16) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 35.838032ms)
  Apr 15 09:18:20.461: INFO: (16) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 41.329969ms)
  Apr 15 09:18:20.464: INFO: (16) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 43.640541ms)
  Apr 15 09:18:20.480: INFO: (17) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 15.788022ms)
  Apr 15 09:18:20.489: INFO: (17) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 24.355488ms)
  Apr 15 09:18:20.490: INFO: (17) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 25.685551ms)
  Apr 15 09:18:20.490: INFO: (17) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 24.951004ms)
  Apr 15 09:18:20.491: INFO: (17) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 26.328749ms)
  Apr 15 09:18:20.491: INFO: (17) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 25.549285ms)
  Apr 15 09:18:20.492: INFO: (17) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 26.868016ms)
  Apr 15 09:18:20.500: INFO: (17) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 34.590922ms)
  Apr 15 09:18:20.500: INFO: (17) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 34.76666ms)
  Apr 15 09:18:20.501: INFO: (17) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 35.841979ms)
  Apr 15 09:18:20.501: INFO: (17) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 35.520561ms)
  Apr 15 09:18:20.501: INFO: (17) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 36.671812ms)
  Apr 15 09:18:20.501: INFO: (17) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 36.766532ms)
  Apr 15 09:18:20.501: INFO: (17) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 36.638075ms)
  Apr 15 09:18:20.501: INFO: (17) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 35.739259ms)
  Apr 15 09:18:20.501: INFO: (17) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 35.301799ms)
  Apr 15 09:18:20.516: INFO: (18) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 14.644724ms)
  Apr 15 09:18:20.517: INFO: (18) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 15.416255ms)
  Apr 15 09:18:20.520: INFO: (18) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 16.338ms)
  Apr 15 09:18:20.528: INFO: (18) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 24.553513ms)
  Apr 15 09:18:20.529: INFO: (18) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 26.018615ms)
  Apr 15 09:18:20.529: INFO: (18) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 27.174888ms)
  Apr 15 09:18:20.529: INFO: (18) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 25.963847ms)
  Apr 15 09:18:20.536: INFO: (18) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 33.000474ms)
  Apr 15 09:18:20.536: INFO: (18) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 33.717808ms)
  Apr 15 09:18:20.537: INFO: (18) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 36.078763ms)
  Apr 15 09:18:20.538: INFO: (18) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 34.472896ms)
  Apr 15 09:18:20.538: INFO: (18) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 34.201238ms)
  Apr 15 09:18:20.538: INFO: (18) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 34.533616ms)
  Apr 15 09:18:20.538: INFO: (18) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 36.222119ms)
  Apr 15 09:18:20.540: INFO: (18) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 38.100387ms)
  Apr 15 09:18:20.541: INFO: (18) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 37.751384ms)
  Apr 15 09:18:20.555: INFO: (19) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:1080/proxy/rewriteme">... (200; 13.581715ms)
  Apr 15 09:18:20.558: INFO: (19) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr/proxy/rewriteme">test</a> (200; 16.048306ms)
  Apr 15 09:18:20.561: INFO: (19) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:443/proxy/tlsrewritem... (200; 17.819219ms)
  Apr 15 09:18:20.562: INFO: (19) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:160/proxy/: foo (200; 19.621898ms)
  Apr 15 09:18:20.562: INFO: (19) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:462/proxy/: tls qux (200; 19.203826ms)
  Apr 15 09:18:20.564: INFO: (19) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:1080/proxy/rewriteme">test<... (200; 21.332336ms)
  Apr 15 09:18:20.565: INFO: (19) /api/v1/namespaces/proxy-4886/pods/proxy-service-kww52-hlfwr:162/proxy/: bar (200; 22.976678ms)
  Apr 15 09:18:20.566: INFO: (19) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:160/proxy/: foo (200; 23.492595ms)
  Apr 15 09:18:20.568: INFO: (19) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname2/proxy/: bar (200; 25.187624ms)
  Apr 15 09:18:20.570: INFO: (19) /api/v1/namespaces/proxy-4886/pods/https:proxy-service-kww52-hlfwr:460/proxy/: tls baz (200; 27.723494ms)
  Apr 15 09:18:20.571: INFO: (19) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname1/proxy/: tls baz (200; 28.443623ms)
  Apr 15 09:18:20.571: INFO: (19) /api/v1/namespaces/proxy-4886/pods/http:proxy-service-kww52-hlfwr:162/proxy/: bar (200; 28.175436ms)
  Apr 15 09:18:20.571: INFO: (19) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname1/proxy/: foo (200; 29.435392ms)
  Apr 15 09:18:20.574: INFO: (19) /api/v1/namespaces/proxy-4886/services/http:proxy-service-kww52:portname2/proxy/: bar (200; 30.756752ms)
  Apr 15 09:18:20.574: INFO: (19) /api/v1/namespaces/proxy-4886/services/https:proxy-service-kww52:tlsportname2/proxy/: tls qux (200; 30.474874ms)
  Apr 15 09:18:20.574: INFO: (19) /api/v1/namespaces/proxy-4886/services/proxy-service-kww52:portname1/proxy/: foo (200; 31.234044ms)
  STEP: deleting ReplicationController proxy-service-kww52 in namespace proxy-4886, will wait for the garbage collector to delete the pods @ 04/15/24 09:18:20.575
  Apr 15 09:18:20.656: INFO: Deleting ReplicationController proxy-service-kww52 took: 17.861146ms
  E0415 09:18:20.749172      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:18:20.758: INFO: Terminating ReplicationController proxy-service-kww52 pods took: 102.173626ms
  E0415 09:18:21.747845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:18:21.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4886" for this suite. @ 04/15/24 09:18:21.984
• [5.464 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/15/24 09:18:22.012
  Apr 15 09:18:22.012: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 09:18:22.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:22.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:22.06
  STEP: Creating a cronjob @ 04/15/24 09:18:22.067
  STEP: Ensuring more than one job is running at a time @ 04/15/24 09:18:22.082
  E0415 09:18:22.748155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:23.748412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:24.749511      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:25.749686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:26.750000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:27.750700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:28.751312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:29.751361      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:30.752113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:31.752494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:32.752597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:33.752919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:34.753357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:35.754411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:36.754709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:37.754967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:38.755647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:39.756599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:40.756764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:41.757123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:42.757341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:43.757579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:44.757841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:45.758731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:46.759709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:47.760373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:48.761062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:49.763349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:50.763995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:51.764145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:52.764369      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:53.765425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:54.765812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:55.766243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:56.766421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:57.767243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:58.768231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:59.769352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:00.769446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:01.771159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:02.770953      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:03.771699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:04.771548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:05.771755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:06.773153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:07.772946      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:08.772740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:09.773131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:10.773544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:11.774239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:12.775107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:13.775111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:14.775971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:15.778340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:16.778850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:17.779491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:18.780331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:19.780282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:20.780658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:21.780842      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:22.781918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:23.783266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:24.782450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:25.783452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:26.783728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:27.784779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:28.785970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:29.786826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:30.787766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:31.788962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:32.789224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:33.789278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:34.789821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:35.790230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:36.791285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:37.791491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:38.791998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:39.792313      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:40.792610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:41.793209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:42.793290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:43.794952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:44.795025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:45.795282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:46.795430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:47.795618      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:48.795998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:49.796822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:50.797530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:51.797406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:52.797670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:53.798854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:54.799034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:55.799753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:56.799828      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:57.801043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:58.800952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:59.800674      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:00.801012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:01.801270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/15/24 09:20:02.09
  STEP: Removing cronjob @ 04/15/24 09:20:02.102
  Apr 15 09:20:02.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3143" for this suite. @ 04/15/24 09:20:02.139
• [100.144 seconds]
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 04/15/24 09:20:02.165
  Apr 15 09:20:02.166: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 09:20:02.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:02.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:02.29
  STEP: creating service in namespace services-9065 @ 04/15/24 09:20:02.298
  STEP: creating service affinity-clusterip in namespace services-9065 @ 04/15/24 09:20:02.298
  STEP: creating replication controller affinity-clusterip in namespace services-9065 @ 04/15/24 09:20:02.319
  I0415 09:20:02.374215      14 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-9065, replica count: 3
  E0415 09:20:02.802819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:03.803437      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:04.803992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 09:20:05.427143      14 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 09:20:05.451: INFO: Creating new exec pod
  E0415 09:20:05.804824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:06.805037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:07.808282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:08.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-9065 exec execpod-affinityhwj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E0415 09:20:08.807777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:08.998: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Apr 15 09:20:08.998: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:20:08.998: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-9065 exec execpod-affinityhwj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.10.151 80'
  Apr 15 09:20:09.351: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.10.151 80\nConnection to 10.233.10.151 80 port [tcp/http] succeeded!\n"
  Apr 15 09:20:09.351: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:20:09.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=services-9065 exec execpod-affinityhwj8f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.10.151:80/ ; done'
  E0415 09:20:09.808192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:09.912: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.10.151:80/\n"
  Apr 15 09:20:09.912: INFO: stdout: "\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8\naffinity-clusterip-tktt8"
  Apr 15 09:20:09.912: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.913: INFO: Received response from host: affinity-clusterip-tktt8
  Apr 15 09:20:09.914: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-9065, will wait for the garbage collector to delete the pods @ 04/15/24 09:20:09.937
  Apr 15 09:20:10.012: INFO: Deleting ReplicationController affinity-clusterip took: 16.592275ms
  Apr 15 09:20:10.113: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.868586ms
  E0415 09:20:10.808899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:11.809619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:12.809840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:13.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9065" for this suite. @ 04/15/24 09:20:13.686
• [11.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 04/15/24 09:20:13.705
  Apr 15 09:20:13.705: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 09:20:13.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:13.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:13.748
  STEP: Creating simple DaemonSet "daemon-set" @ 04/15/24 09:20:13.796
  E0415 09:20:13.811082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 09:20:13.811
  Apr 15 09:20:13.830: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 09:20:13.830: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 09:20:14.811043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:14.830: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 09:20:14.830: INFO: Node jec7saimeaph-1 is running 0 daemon pod, expected 1
  E0415 09:20:15.811208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:15.842: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 09:20:15.843: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/15/24 09:20:15.851
  STEP: DeleteCollection of the DaemonSets @ 04/15/24 09:20:15.865
  STEP: Verify that ReplicaSets have been deleted @ 04/15/24 09:20:15.891
  Apr 15 09:20:15.916: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"232308"},"items":null}

  Apr 15 09:20:15.931: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"232308"},"items":[{"metadata":{"name":"daemon-set-8bj7h","generateName":"daemon-set-","namespace":"daemonsets-3601","uid":"4ee3257d-f03b-4665-9911-0c563958bcc8","resourceVersion":"232306","creationTimestamp":"2024-04-15T09:20:13Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3432778f-6fc7-470e-95e4-664a7bbe9f73","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-15T09:20:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3432778f-6fc7-470e-95e4-664a7bbe9f73\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-15T09:20:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.244\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-96nm6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-96nm6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"jec7saimeaph-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["jec7saimeaph-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:13Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:13Z"}],"hostIP":"192.168.121.90","hostIPs":[{"ip":"192.168.121.90"}],"podIP":"10.233.65.244","podIPs":[{"ip":"10.233.65.244"}],"startTime":"2024-04-15T09:20:13Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-15T09:20:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://ebcab19554e2ec8f67bd49f20bc7d749e9ac7994324ef065eaa7676fb042685c","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-cfzzn","generateName":"daemon-set-","namespace":"daemonsets-3601","uid":"cb769fa3-ca2d-469e-be2d-df33a44b9c2a","resourceVersion":"232302","creationTimestamp":"2024-04-15T09:20:13Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3432778f-6fc7-470e-95e4-664a7bbe9f73","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-15T09:20:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3432778f-6fc7-470e-95e4-664a7bbe9f73\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-15T09:20:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.28\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5csd9","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5csd9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"jec7saimeaph-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["jec7saimeaph-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:13Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:13Z"}],"hostIP":"192.168.121.146","hostIPs":[{"ip":"192.168.121.146"}],"podIP":"10.233.64.28","podIPs":[{"ip":"10.233.64.28"}],"startTime":"2024-04-15T09:20:13Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-15T09:20:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://3821fc6dec87eb8a3151e3411810cf703a976584a8e62b0604676aa0bd1c2395","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-jjl5j","generateName":"daemon-set-","namespace":"daemonsets-3601","uid":"37f720ac-2140-4aaf-99e6-e1b1da7dde46","resourceVersion":"232304","creationTimestamp":"2024-04-15T09:20:13Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3432778f-6fc7-470e-95e4-664a7bbe9f73","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-15T09:20:13Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3432778f-6fc7-470e-95e4-664a7bbe9f73\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-15T09:20:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.183\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-c4zcf","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-c4zcf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"jec7saimeaph-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["jec7saimeaph-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:13Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:20:13Z"}],"hostIP":"192.168.121.234","hostIPs":[{"ip":"192.168.121.234"}],"podIP":"10.233.66.183","podIPs":[{"ip":"10.233.66.183"}],"startTime":"2024-04-15T09:20:13Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-15T09:20:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://73cb55b994560348f792dab265b6b4279dabdfe714f11eb228e13b1a036b498b","started":true}],"qosClass":"BestEffort"}}]}

  Apr 15 09:20:15.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3601" for this suite. @ 04/15/24 09:20:16.015
• [2.322 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 04/15/24 09:20:16.028
  Apr 15 09:20:16.029: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 09:20:16.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:16.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:16.067
  STEP: Creating configMap with name configmap-test-upd-d05a45a3-1eb7-4123-9605-5a4ac12ff8c9 @ 04/15/24 09:20:16.085
  STEP: Creating the pod @ 04/15/24 09:20:16.098
  E0415 09:20:16.812187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:17.812753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 04/15/24 09:20:18.136
  STEP: Waiting for pod with binary data @ 04/15/24 09:20:18.183
  Apr 15 09:20:18.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3487" for this suite. @ 04/15/24 09:20:18.217
• [2.201 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 04/15/24 09:20:18.232
  Apr 15 09:20:18.232: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename dns @ 04/15/24 09:20:18.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:18.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:18.286
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4795.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4795.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 04/15/24 09:20:18.297
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4795.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4795.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/15/24 09:20:18.297
  STEP: creating a pod to probe /etc/hosts @ 04/15/24 09:20:18.299
  STEP: submitting the pod to kubernetes @ 04/15/24 09:20:18.299
  E0415 09:20:18.813125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:19.813968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:20.814094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:21.814902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 09:20:22.363
  STEP: looking for the results for each expected name from probers @ 04/15/24 09:20:22.37
  Apr 15 09:20:22.427: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-4795/dns-test-75d91867-3d3f-47d4-a59a-0dc35c259023: the server could not find the requested resource (get pods dns-test-75d91867-3d3f-47d4-a59a-0dc35c259023)
  Apr 15 09:20:22.427: INFO: Lookups using dns-4795/dns-test-75d91867-3d3f-47d4-a59a-0dc35c259023 failed for: [jessie_hosts@dns-querier-1]

  Apr 15 09:20:22.480: INFO: Pod client logs for webserver: 
  Apr 15 09:20:22.494: INFO: Pod client logs for querier: 
  Apr 15 09:20:22.508: INFO: Pod client logs for jessie-querier: 
  E0415 09:20:22.815546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:23.816130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:24.816958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:25.817390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:26.817533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:27.407: INFO: DNS probes using dns-4795/dns-test-75d91867-3d3f-47d4-a59a-0dc35c259023 succeeded

  STEP: deleting the pod @ 04/15/24 09:20:27.408
  Apr 15 09:20:27.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4795" for this suite. @ 04/15/24 09:20:27.458
• [9.269 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 04/15/24 09:20:27.501
  Apr 15 09:20:27.502: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename limitrange @ 04/15/24 09:20:27.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:27.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:27.548
  STEP: Creating LimitRange "e2e-limitrange-c24zc" in namespace "limitrange-8305" @ 04/15/24 09:20:27.556
  STEP: Creating another limitRange in another namespace @ 04/15/24 09:20:27.565
  Apr 15 09:20:27.600: INFO: Namespace "e2e-limitrange-c24zc-4843" created
  Apr 15 09:20:27.600: INFO: Creating LimitRange "e2e-limitrange-c24zc" in namespace "e2e-limitrange-c24zc-4843"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-c24zc" @ 04/15/24 09:20:27.612
  Apr 15 09:20:27.622: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-c24zc" in "limitrange-8305" namespace @ 04/15/24 09:20:27.622
  Apr 15 09:20:27.639: INFO: LimitRange "e2e-limitrange-c24zc" has been patched
  STEP: Delete LimitRange "e2e-limitrange-c24zc" by Collection with labelSelector: "e2e-limitrange-c24zc=patched" @ 04/15/24 09:20:27.639
  STEP: Confirm that the limitRange "e2e-limitrange-c24zc" has been deleted @ 04/15/24 09:20:27.655
  Apr 15 09:20:27.656: INFO: Requesting list of LimitRange to confirm quantity
  Apr 15 09:20:27.671: INFO: Found 0 LimitRange with label "e2e-limitrange-c24zc=patched"
  Apr 15 09:20:27.672: INFO: LimitRange "e2e-limitrange-c24zc" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-c24zc" @ 04/15/24 09:20:27.672
  Apr 15 09:20:27.683: INFO: Found 1 limitRange
  Apr 15 09:20:27.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8305" for this suite. @ 04/15/24 09:20:27.697
  STEP: Destroying namespace "e2e-limitrange-c24zc-4843" for this suite. @ 04/15/24 09:20:27.709
• [0.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 04/15/24 09:20:27.746
  Apr 15 09:20:27.746: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename dns @ 04/15/24 09:20:27.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:27.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:27.787
  STEP: Creating a test headless service @ 04/15/24 09:20:27.795
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9244.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-9244.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 04/15/24 09:20:27.806
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9244.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9244.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/15/24 09:20:27.807
  STEP: creating a pod to probe DNS @ 04/15/24 09:20:27.807
  STEP: submitting the pod to kubernetes @ 04/15/24 09:20:27.807
  E0415 09:20:27.818555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:28.818736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:29.819034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 09:20:29.847
  STEP: looking for the results for each expected name from probers @ 04/15/24 09:20:29.858
  Apr 15 09:20:29.906: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-9244/dns-test-1fe171b7-1c8b-4c0d-b9be-9aa7bb70e28f: the server could not find the requested resource (get pods dns-test-1fe171b7-1c8b-4c0d-b9be-9aa7bb70e28f)
  Apr 15 09:20:29.906: INFO: Lookups using dns-9244/dns-test-1fe171b7-1c8b-4c0d-b9be-9aa7bb70e28f failed for: [jessie_hosts@dns-querier-2]

  Apr 15 09:20:29.922: INFO: Pod client logs for webserver: 
  Apr 15 09:20:29.937: INFO: Pod client logs for querier: 
  Apr 15 09:20:29.952: INFO: Pod client logs for jessie-querier: 
  E0415 09:20:30.819633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:31.819560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:32.819761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:33.819676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:34.819962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:34.896: INFO: DNS probes using dns-9244/dns-test-1fe171b7-1c8b-4c0d-b9be-9aa7bb70e28f succeeded

  STEP: deleting the pod @ 04/15/24 09:20:34.897
  STEP: deleting the test headless service @ 04/15/24 09:20:34.985
  Apr 15 09:20:35.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9244" for this suite. @ 04/15/24 09:20:35.044
• [7.311 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 04/15/24 09:20:35.061
  Apr 15 09:20:35.062: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename events @ 04/15/24 09:20:35.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:35.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:35.127
  STEP: Create set of events @ 04/15/24 09:20:35.136
  Apr 15 09:20:35.148: INFO: created test-event-1
  Apr 15 09:20:35.175: INFO: created test-event-2
  Apr 15 09:20:35.212: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/15/24 09:20:35.213
  STEP: delete collection of events @ 04/15/24 09:20:35.221
  Apr 15 09:20:35.221: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/15/24 09:20:35.273
  Apr 15 09:20:35.273: INFO: requesting list of events to confirm quantity
  Apr 15 09:20:35.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7655" for this suite. @ 04/15/24 09:20:35.298
• [0.256 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 04/15/24 09:20:35.319
  Apr 15 09:20:35.319: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename pv @ 04/15/24 09:20:35.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:35.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:35.37
  STEP: Creating initial PV and PVC @ 04/15/24 09:20:35.382
  Apr 15 09:20:35.382: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4003" @ 04/15/24 09:20:35.431
  STEP: Listing PVCs in namespace "pv-4003" @ 04/15/24 09:20:35.443
  STEP: Patching the PV "pv-4003-xlqkh" @ 04/15/24 09:20:35.45
  STEP: Patching the PVC "pvc-g8smt" @ 04/15/24 09:20:35.465
  STEP: Getting PV "pv-4003-xlqkh" @ 04/15/24 09:20:35.483
  STEP: Getting PVC "pvc-g8smt" @ 04/15/24 09:20:35.497
  STEP: Deleting PVC "pvc-g8smt" @ 04/15/24 09:20:35.504
  STEP: Confirm deletion of PVC "pvc-g8smt" @ 04/15/24 09:20:35.523
  E0415 09:20:35.820624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:36.820941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-4003-xlqkh" @ 04/15/24 09:20:37.546
  STEP: Confirm deletion of PV "pv-4003-xlqkh" @ 04/15/24 09:20:37.564
  E0415 09:20:37.821991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:38.824191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 04/15/24 09:20:39.58
  Apr 15 09:20:39.580: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-4003-zzsrv" @ 04/15/24 09:20:39.617
  STEP: Updating the PVC "pvc-l6nsn" @ 04/15/24 09:20:39.649
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-l6nsn=updated" @ 04/15/24 09:20:39.668
  STEP: Deleting PVC "pvc-l6nsn" via DeleteCollection @ 04/15/24 09:20:39.676
  STEP: Confirm deletion of PVC "pvc-l6nsn" @ 04/15/24 09:20:39.698
  E0415 09:20:39.825292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:40.825383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-4003-zzsrv" via DeleteCollection @ 04/15/24 09:20:41.716
  STEP: Confirm deletion of PV "pv-4003-zzsrv" @ 04/15/24 09:20:41.733
  Apr 15 09:20:41.747: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Apr 15 09:20:41.748: INFO: Deleting PersistentVolumeClaim "pvc-l6nsn"
  Apr 15 09:20:41.755: INFO: Deleting PersistentVolume "pv-4003-zzsrv"
  Apr 15 09:20:41.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4003" for this suite. @ 04/15/24 09:20:41.771
• [6.465 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 04/15/24 09:20:41.79
  Apr 15 09:20:41.791: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 09:20:41.794
  E0415 09:20:41.826079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:41.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:41.836
  STEP: Creating a ResourceQuota @ 04/15/24 09:20:41.844
  STEP: Getting a ResourceQuota @ 04/15/24 09:20:41.856
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/15/24 09:20:41.863
  STEP: Patching the ResourceQuota @ 04/15/24 09:20:41.873
  STEP: Deleting a Collection of ResourceQuotas @ 04/15/24 09:20:41.89
  STEP: Verifying the deleted ResourceQuota @ 04/15/24 09:20:41.92
  Apr 15 09:20:41.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8628" for this suite. @ 04/15/24 09:20:41.946
• [0.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 04/15/24 09:20:41.967
  Apr 15 09:20:41.967: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 09:20:41.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:42.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:42.011
  STEP: validating cluster-info @ 04/15/24 09:20:42.019
  Apr 15 09:20:42.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=kubectl-6236 cluster-info'
  Apr 15 09:20:42.208: INFO: stderr: ""
  Apr 15 09:20:42.208: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Apr 15 09:20:42.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6236" for this suite. @ 04/15/24 09:20:42.22
• [0.268 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 04/15/24 09:20:42.235
  Apr 15 09:20:42.235: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename security-context @ 04/15/24 09:20:42.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:42.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:42.275
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/15/24 09:20:42.283
  E0415 09:20:42.827194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:43.827675      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:44.827617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:45.827775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:20:46.346
  Apr 15 09:20:46.359: INFO: Trying to get logs from node jec7saimeaph-3 pod security-context-5f5319bd-5c8d-4672-9c06-2d86052ab89d container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:20:46.371
  Apr 15 09:20:46.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4740" for this suite. @ 04/15/24 09:20:46.417
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 04/15/24 09:20:46.439
  Apr 15 09:20:46.439: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename dns @ 04/15/24 09:20:46.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:46.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:46.5
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/15/24 09:20:46.506
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/15/24 09:20:46.506
  STEP: creating a pod to probe DNS @ 04/15/24 09:20:46.506
  STEP: submitting the pod to kubernetes @ 04/15/24 09:20:46.507
  E0415 09:20:46.828555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:47.829023      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:48.828885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:49.829211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 09:20:50.554
  STEP: looking for the results for each expected name from probers @ 04/15/24 09:20:50.561
  Apr 15 09:20:50.603: INFO: DNS probes using dns-6885/dns-test-b98b759a-1b5c-4011-8aa6-0d4a8d830f96 succeeded

  STEP: deleting the pod @ 04/15/24 09:20:50.604
  Apr 15 09:20:50.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6885" for this suite. @ 04/15/24 09:20:50.651
• [4.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 04/15/24 09:20:50.669
  Apr 15 09:20:50.670: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename job @ 04/15/24 09:20:50.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:50.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:50.723
  STEP: Creating a job @ 04/15/24 09:20:50.732
  STEP: Ensuring job reaches completions @ 04/15/24 09:20:50.752
  E0415 09:20:50.829726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:51.831177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:52.831293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:53.832105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:54.832398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:55.833160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:56.833304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:57.833401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:58.834169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:59.834523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:00.835525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:01.836803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:21:02.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9240" for this suite. @ 04/15/24 09:21:02.773
• [12.125 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 04/15/24 09:21:02.797
  Apr 15 09:21:02.797: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename taint-single-pod @ 04/15/24 09:21:02.802
  E0415 09:21:02.836928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:21:02.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:21:02.855
  Apr 15 09:21:02.864: INFO: Waiting up to 1m0s for all nodes to be ready
  E0415 09:21:03.837911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:04.838221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:05.838320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:06.838650      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:07.839120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:08.839948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:09.840472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:10.840652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:11.841320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:12.841602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:13.841864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:14.842066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:15.842223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:16.842551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:17.843484      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:18.844122      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:19.844523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:20.844605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:21.845452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:22.845604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:23.845896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:24.846224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:25.846698      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:26.846739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:27.846860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:28.848014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:29.848287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:30.848552      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:31.848764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:32.849882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:33.850702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:34.850800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:35.850909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:36.851170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:37.852249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:38.852420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:39.852600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:40.853375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:41.854138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:42.854987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:43.855227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:44.855497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:45.857613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:46.857516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:47.857481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:48.857968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:49.858962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:50.859680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:51.859761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:52.860438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:53.860629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:54.860972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:55.861400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:56.861690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:57.862787      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:58.863733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:59.864420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:00.864743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:01.865399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:02.865849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:22:02.867: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 09:22:02.879: INFO: Starting informer...
  STEP: Starting pod... @ 04/15/24 09:22:02.879
  Apr 15 09:22:03.155: INFO: Pod is running on jec7saimeaph-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/15/24 09:22:03.155
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/15/24 09:22:03.195
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/15/24 09:22:03.219
  Apr 15 09:22:03.221: INFO: Pod wasn't evicted. Proceeding
  Apr 15 09:22:03.221: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/15/24 09:22:03.311
  STEP: Waiting some time to make sure that toleration time passed. @ 04/15/24 09:22:03.35
  E0415 09:22:03.866755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:04.867325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:05.869482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:06.868462      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:07.868871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:08.869478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:09.869951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:10.870024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:11.870313      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:12.870503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:13.870829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:14.871542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:15.871787      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:16.871949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:17.872400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:18.872974      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:19.873159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:20.873572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:21.873906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:22.873939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:23.874246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:24.874560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:25.874860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:26.875866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:27.876364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:28.877090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:29.877528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:30.878074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:31.878926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:32.879036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:33.879578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:34.879928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:35.880235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:36.880420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:37.881012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:38.881231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:39.881304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:40.881285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:41.881666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:42.881790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:43.881937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:44.882533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:45.882774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:46.883224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:47.884245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:48.884087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:49.884318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:50.885513      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:51.885681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:52.885912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:53.886115      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:54.886354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:55.887504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:56.887672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:57.887956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:58.888948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:59.889255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:00.889837      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:01.891623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:02.892049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:03.893092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:04.893965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:05.894800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:06.895351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:07.896304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:08.896794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:09.897404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:10.898388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:11.898863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:12.899740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:13.900527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:14.901522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:15.901428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:16.902020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:17.902352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:23:18.351: INFO: Pod wasn't evicted. Test successful
  Apr 15 09:23:18.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2085" for this suite. @ 04/15/24 09:23:18.379
• [135.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 04/15/24 09:23:18.421
  Apr 15 09:23:18.421: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 09:23:18.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:23:18.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:23:18.517
  Apr 15 09:23:18.524: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 09:23:18.903467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:23:19.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9544" for this suite. @ 04/15/24 09:23:19.207
• [0.810 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 04/15/24 09:23:19.234
  Apr 15 09:23:19.234: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 09:23:19.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:23:19.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:23:19.273
  STEP: Deleting RuntimeClass runtimeclass-7091-delete-me @ 04/15/24 09:23:19.296
  STEP: Waiting for the RuntimeClass to disappear @ 04/15/24 09:23:19.319
  Apr 15 09:23:19.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7091" for this suite. @ 04/15/24 09:23:19.365
• [0.149 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/15/24 09:23:19.387
  Apr 15 09:23:19.387: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename proxy @ 04/15/24 09:23:19.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:23:19.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:23:19.429
  Apr 15 09:23:19.436: INFO: Creating pod...
  E0415 09:23:19.904185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:20.905262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:23:21.479: INFO: Creating service...
  Apr 15 09:23:21.510: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/pods/agnhost/proxy/some/path/with/DELETE
  Apr 15 09:23:21.535: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 15 09:23:21.535: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/pods/agnhost/proxy/some/path/with/GET
  Apr 15 09:23:21.551: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 15 09:23:21.551: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/pods/agnhost/proxy/some/path/with/HEAD
  Apr 15 09:23:21.560: INFO: http.Client request:HEAD | StatusCode:200
  Apr 15 09:23:21.560: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/pods/agnhost/proxy/some/path/with/OPTIONS
  Apr 15 09:23:21.568: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 15 09:23:21.568: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/pods/agnhost/proxy/some/path/with/PATCH
  Apr 15 09:23:21.576: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 15 09:23:21.577: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/pods/agnhost/proxy/some/path/with/POST
  Apr 15 09:23:21.585: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 15 09:23:21.585: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/pods/agnhost/proxy/some/path/with/PUT
  Apr 15 09:23:21.593: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 15 09:23:21.594: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/services/test-service/proxy/some/path/with/DELETE
  Apr 15 09:23:21.609: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 15 09:23:21.609: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/services/test-service/proxy/some/path/with/GET
  Apr 15 09:23:21.626: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 15 09:23:21.627: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/services/test-service/proxy/some/path/with/HEAD
  Apr 15 09:23:21.638: INFO: http.Client request:HEAD | StatusCode:200
  Apr 15 09:23:21.638: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/services/test-service/proxy/some/path/with/OPTIONS
  Apr 15 09:23:21.647: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 15 09:23:21.648: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/services/test-service/proxy/some/path/with/PATCH
  Apr 15 09:23:21.658: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 15 09:23:21.658: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/services/test-service/proxy/some/path/with/POST
  Apr 15 09:23:21.665: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 15 09:23:21.666: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7648/services/test-service/proxy/some/path/with/PUT
  Apr 15 09:23:21.678: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 15 09:23:21.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7648" for this suite. @ 04/15/24 09:23:21.692
• [2.320 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 04/15/24 09:23:21.709
  Apr 15 09:23:21.709: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 09:23:21.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:23:21.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:23:21.753
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/15/24 09:23:21.759
  E0415 09:23:21.905953      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:22.906199      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:23.906871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:24.906957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:23:25.809
  Apr 15 09:23:25.814: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-005fa924-1235-47c4-9911-841093e7a784 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:23:25.846
  Apr 15 09:23:25.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9186" for this suite. @ 04/15/24 09:23:25.898
  E0415 09:23:25.908214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.210 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 04/15/24 09:23:25.922
  Apr 15 09:23:25.922: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 09:23:25.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:23:25.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:23:25.964
  STEP: Creating service test in namespace statefulset-281 @ 04/15/24 09:23:25.972
  Apr 15 09:23:26.019: INFO: Found 0 stateful pods, waiting for 1
  E0415 09:23:26.908845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:27.909924      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:28.910826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:29.911975      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:30.912444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:31.912982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:32.913496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:33.914014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:34.914973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:35.914863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:23:36.024: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/15/24 09:23:36.044
  W0415 09:23:36.075349      14 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Apr 15 09:23:36.106: INFO: Found 1 stateful pods, waiting for 2
  E0415 09:23:36.915171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:37.915222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:38.916507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:39.917177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:40.917466      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:41.918152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:42.918699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:43.919155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:44.919288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:45.920364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:23:46.100: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 09:23:46.100: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/15/24 09:23:46.118
  STEP: Delete all of the StatefulSets @ 04/15/24 09:23:46.126
  STEP: Verify that StatefulSets have been deleted @ 04/15/24 09:23:46.148
  Apr 15 09:23:46.157: INFO: Deleting all statefulset in ns statefulset-281
  Apr 15 09:23:46.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-281" for this suite. @ 04/15/24 09:23:46.214
• [20.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 04/15/24 09:23:46.27
  Apr 15 09:23:46.270: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:23:46.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:23:46.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:23:46.389
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 09:23:46.395
  E0415 09:23:46.921399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:47.923273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:48.923042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:49.924338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:23:50.495
  Apr 15 09:23:50.502: INFO: Trying to get logs from node jec7saimeaph-3 pod downwardapi-volume-4b3d9a44-8619-4fdf-ad1c-bb7e5b89eaee container client-container: <nil>
  STEP: delete the pod @ 04/15/24 09:23:50.516
  Apr 15 09:23:50.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9257" for this suite. @ 04/15/24 09:23:50.563
• [4.316 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 04/15/24 09:23:50.588
  Apr 15 09:23:50.588: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename containers @ 04/15/24 09:23:50.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:23:50.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:23:50.635
  STEP: Creating a pod to test override arguments @ 04/15/24 09:23:50.643
  E0415 09:23:50.924710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:51.925098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:52.925733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:53.926113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:23:54.697
  Apr 15 09:23:54.703: INFO: Trying to get logs from node jec7saimeaph-3 pod client-containers-78760ce2-ac45-4f7d-8154-1bc2397a89cd container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 09:23:54.718
  Apr 15 09:23:54.749: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9807" for this suite. @ 04/15/24 09:23:54.76
• [4.185 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 04/15/24 09:23:54.775
  Apr 15 09:23:54.775: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 09:23:54.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:23:54.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:23:54.819
  STEP: creating a Namespace @ 04/15/24 09:23:54.827
  STEP: patching the Namespace @ 04/15/24 09:23:54.864
  STEP: get the Namespace and ensuring it has the label @ 04/15/24 09:23:54.875
  Apr 15 09:23:54.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4463" for this suite. @ 04/15/24 09:23:54.915
  E0415 09:23:54.928555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "nspatchtest-35d597ed-47a7-4d09-aa72-afe4905eca79-444" for this suite. @ 04/15/24 09:23:54.935
• [0.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 04/15/24 09:23:54.951
  Apr 15 09:23:54.951: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename services @ 04/15/24 09:23:54.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:23:54.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:23:54.995
  STEP: fetching services @ 04/15/24 09:23:55.001
  Apr 15 09:23:55.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-515" for this suite. @ 04/15/24 09:23:55.023
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/15/24 09:23:55.05
  Apr 15 09:23:55.050: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename deployment @ 04/15/24 09:23:55.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:23:55.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:23:55.085
  Apr 15 09:23:55.090: INFO: Creating deployment "webserver-deployment"
  Apr 15 09:23:55.107: INFO: Waiting for observed generation 1
  E0415 09:23:55.927349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:56.929536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:23:57.163: INFO: Waiting for all required pods to come up
  Apr 15 09:23:57.219: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/15/24 09:23:57.219
  E0415 09:23:57.930174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:58.930398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:23:59.290: INFO: Waiting for deployment "webserver-deployment" to complete
  Apr 15 09:23:59.310: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Apr 15 09:23:59.338: INFO: Updating deployment webserver-deployment
  Apr 15 09:23:59.339: INFO: Waiting for observed generation 2
  E0415 09:23:59.930968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:00.931604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:24:01.377: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Apr 15 09:24:01.389: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Apr 15 09:24:01.400: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 15 09:24:01.433: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Apr 15 09:24:01.435: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Apr 15 09:24:01.456: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 15 09:24:01.476: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Apr 15 09:24:01.476: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Apr 15 09:24:01.517: INFO: Updating deployment webserver-deployment
  Apr 15 09:24:01.517: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Apr 15 09:24:01.584: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  E0415 09:24:01.932381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:02.932152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:24:03.614: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Apr 15 09:24:03.678: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f73a71b2-5250-48da-b712-8224b36d31fd",
      ResourceVersion: (string) (len=6) "233772",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 09:24:03.722: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
      ResourceVersion: (string) (len=6) "233768",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f73a71b2-5250-48da-b712-8224b36d31fd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 37 33 61 37 31  62 32 2d 35 32 35 30 2d  |\"f73a71b2-5250-|
              00000120  34 38 64 61 2d 62 37 31  32 2d 38 32 32 34 62 33  |48da-b712-8224b3|
              00000130  36 64 33 31 66 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6d31fd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 09:24:03.724: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Apr 15 09:24:03.724: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
      ResourceVersion: (string) (len=6) "233753",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f73a71b2-5250-48da-b712-8224b36d31fd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 37 33 61 37 31  62 32 2d 35 32 35 30 2d  |\"f73a71b2-5250-|
              00000120  34 38 64 61 2d 62 37 31  32 2d 38 32 32 34 62 33  |48da-b712-8224b3|
              00000130  36 64 33 31 66 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6d31fd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 09:24:03.820: INFO: Pod "webserver-deployment-557759b7c7-48lmn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-48lmn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0281edd-cd08-4289-98c8-ebbd53a51415",
      ResourceVersion: (string) (len=6) "233738",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-78qx9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-78qx9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:03.900: INFO: Pod "webserver-deployment-557759b7c7-4zpqg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4zpqg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5ce6bd4-bcf7-480b-a037-dbceba082d0f",
      ResourceVersion: (string) (len=6) "233751",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nm2ch",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nm2ch",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  E0415 09:24:03.933159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:24:03.952: INFO: Pod "webserver-deployment-557759b7c7-5qsjq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5qsjq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "938c6e8c-8bf2-4eab-80eb-b719c1ed3534",
      ResourceVersion: (string) (len=6) "233766",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kp29l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kp29l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.90"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:03.989: INFO: Pod "webserver-deployment-557759b7c7-64j4h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-64j4h",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1de44f5-1c1e-407b-bcc1-f7ab9aba675a",
      ResourceVersion: (string) (len=6) "233573",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  33 32 5c 22 7d 22 3a 7b  |.233.64.32\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hzc7w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hzc7w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.146"
        }
      },
      PodIP: (string) (len=12) "10.233.64.32",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.32"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848769836,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://28616b305fb10ab39f455821eef0f4c6b5d6b64a87632192c673e19c13b9a1ac",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:03.993: INFO: Pod "webserver-deployment-557759b7c7-69zvm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-69zvm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d960b62-d076-46f1-a790-c3c5bb5f1527",
      ResourceVersion: (string) (len=6) "233788",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4z5zq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4z5zq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.015: INFO: Pod "webserver-deployment-557759b7c7-76wz7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-76wz7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea8dbbb1-bb35-4ee1-b7c2-baa036cb1994",
      ResourceVersion: (string) (len=6) "233596",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 30 33 5c 22 7d 22 3a  |.233.66.203\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vz5bn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vz5bn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) (len=13) "10.233.66.203",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.203"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848769837,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://0a0653bfdbdfe7f279b012901aa8c8e30e99d4f00218c97d5cd77bcfb1b98402",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.040: INFO: Pod "webserver-deployment-557759b7c7-86gl5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-86gl5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83ffe547-4c38-4540-95c4-208f46d89f26",
      ResourceVersion: (string) (len=6) "233702",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5f9n8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5f9n8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.068: INFO: Pod "webserver-deployment-557759b7c7-ddhgt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ddhgt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3146521d-77a8-4d60-9b0c-965931810010",
      ResourceVersion: (string) (len=6) "233590",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 30 32 5c 22 7d 22 3a  |.233.66.202\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p69hp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p69hp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) (len=13) "10.233.66.202",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.202"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848769836,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://628268a966ef0e30310ac3f433360994414955e67c5085d678eef72524762777",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.097: INFO: Pod "webserver-deployment-557759b7c7-fd954" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fd954",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7810aea1-fa40-4601-b005-49e300bf5201",
      ResourceVersion: (string) (len=6) "233773",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8qlcq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8qlcq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.132: INFO: Pod "webserver-deployment-557759b7c7-gx6ql" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gx6ql",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1bf1ec5-4ae8-41b3-a709-b54960b65845",
      ResourceVersion: (string) (len=6) "233770",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n59vf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n59vf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.90"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.157: INFO: Pod "webserver-deployment-557759b7c7-hcdmp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hcdmp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff355b29-247e-4b67-bf18-d31139482f1d",
      ResourceVersion: (string) (len=6) "233564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  33 30 5c 22 7d 22 3a 7b  |.233.64.30\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l7wsm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l7wsm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.146"
        }
      },
      PodIP: (string) (len=12) "10.233.64.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848769836,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://e9951b8ac224ef2e59f2f6845cdcd56f55ddc11a4fb95c6b93cbc8e007f062d8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.174: INFO: Pod "webserver-deployment-557759b7c7-lx7mv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lx7mv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebd5f5ca-f2a8-47a8-99fb-96aee53d4dc6",
      ResourceVersion: (string) (len=6) "233584",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 34 37 5c 22 7d 22 3a  |.233.65.247\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kv4pc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kv4pc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.90"
        }
      },
      PodIP: (string) (len=13) "10.233.65.247",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.247"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848769837,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://b128343c74e14b836b094d399e8fea46d3977dac13843617ab999736a782de70",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.181: INFO: Pod "webserver-deployment-557759b7c7-n8qxc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-n8qxc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b134779-4d4b-4f26-90f0-d0de3ebe2181",
      ResourceVersion: (string) (len=6) "233567",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  33 31 5c 22 7d 22 3a 7b  |.233.64.31\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6pgvc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6pgvc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.146"
        }
      },
      PodIP: (string) (len=12) "10.233.64.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848769836,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://19f0571417183adcd05a3346c8f6d1c5c4d4a29f4a13115e9cdf05c3f8403afa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.212: INFO: Pod "webserver-deployment-557759b7c7-rbww6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rbww6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24b111ab-60c3-40da-bdd5-3b4a7b9e028a",
      ResourceVersion: (string) (len=6) "233781",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n5thh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n5thh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.263: INFO: Pod "webserver-deployment-557759b7c7-sppls" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sppls",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52223029-4e12-4b92-8ba9-f9a9198b305e",
      ResourceVersion: (string) (len=6) "233731",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ftdlp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ftdlp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.319: INFO: Pod "webserver-deployment-557759b7c7-v42vw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-v42vw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c61b61d-e8cc-4d88-b149-1a4110dd4c22",
      ResourceVersion: (string) (len=6) "233587",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 34 36 5c 22 7d 22 3a  |.233.65.246\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7rwnd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7rwnd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.90"
        }
      },
      PodIP: (string) (len=13) "10.233.65.246",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.246"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848769837,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://6f8bc4e539bdaaf6df66678e56b9a3d221fc5a016fcbce213d135026a527a750",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.379: INFO: Pod "webserver-deployment-557759b7c7-vd8hc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vd8hc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0656b0a-a544-4660-b36b-beba423d9cde",
      ResourceVersion: (string) (len=6) "233718",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dhjbr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dhjbr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.405: INFO: Pod "webserver-deployment-557759b7c7-vkbmh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vkbmh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f146e71-5afc-4922-bb6e-6b99121ff0db",
      ResourceVersion: (string) (len=6) "233581",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 34 35 5c 22 7d 22 3a  |.233.65.245\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-75p5k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-75p5k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.90"
        }
      },
      PodIP: (string) (len=13) "10.233.65.245",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.245"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848769837,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://401ce2310863bd213f3855644cca485073bdd8c5bdaa4013fd094bfd7003116f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.410: INFO: Pod "webserver-deployment-557759b7c7-wgcb4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wgcb4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da9477d3-f8a3-46ff-b83f-91be47cf92e0",
      ResourceVersion: (string) (len=6) "233719",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lqznr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lqznr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.90"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.449: INFO: Pod "webserver-deployment-557759b7c7-xxdmj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xxdmj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1278b7d0-4139-4501-9910-1cd73156f98d",
      ResourceVersion: (string) (len=6) "233764",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8fe9324b-4dc8-4da2-90fd-da796be9edd2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  65 39 33 32 34 62 2d 34  |d\":\"8fe9324b-4|
              00000090  64 63 38 2d 34 64 61 32  2d 39 30 66 64 2d 64 61  |dc8-4da2-90fd-da|
              000000a0  37 39 36 62 65 39 65 64  64 32 5c 22 7d 22 3a 7b  |796be9edd2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lwtdv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lwtdv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.503: INFO: Pod "webserver-deployment-9b4f5bf69-2s8bg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2s8bg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e92fdbe2-e352-4d88-8347-47ee6629b593",
      ResourceVersion: (string) (len=6) "233777",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  34 32 61 63 34 33 2d 33  |d\":\"ba42ac43-3|
              00000090  65 66 66 2d 34 33 63 66  2d 38 32 35 36 2d 34 64  |eff-43cf-8256-4d|
              000000a0  62 35 36 33 63 33 30 65  31 37 5c 22 7d 22 3a 7b  |b563c30e17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-969ng",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-969ng",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.527: INFO: Pod "webserver-deployment-9b4f5bf69-6q9n6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-6q9n6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64abfdf6-7db4-41f3-9235-a4863b8cfb40",
      ResourceVersion: (string) (len=6) "233735",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  34 32 61 63 34 33 2d 33  |d\":\"ba42ac43-3|
              00000090  65 66 66 2d 34 33 63 66  2d 38 32 35 36 2d 34 64  |eff-43cf-8256-4d|
              000000a0  62 35 36 33 63 33 30 65  31 37 5c 22 7d 22 3a 7b  |b563c30e17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qzpx8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qzpx8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.544: INFO: Pod "webserver-deployment-9b4f5bf69-7992k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7992k",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47c6c0fe-5bf4-4a81-bf3d-45242f729bdd",
      ResourceVersion: (string) (len=6) "233649",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  34 32 61 63 34 33 2d 33  |d\":\"ba42ac43-3|
              00000090  65 66 66 2d 34 33 63 66  2d 38 32 35 36 2d 34 64  |eff-43cf-8256-4d|
              000000a0  62 35 36 33 63 33 30 65  31 37 5c 22 7d 22 3a 7b  |b563c30e17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cgcst",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cgcst",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.564: INFO: Pod "webserver-deployment-9b4f5bf69-88l5n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-88l5n",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "062de2cc-aed4-43a6-9a43-3660fa3184b9",
      ResourceVersion: (string) (len=6) "233645",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  34 32 61 63 34 33 2d 33  |d\":\"ba42ac43-3|
              00000090  65 66 66 2d 34 33 63 66  2d 38 32 35 36 2d 34 64  |eff-43cf-8256-4d|
              000000a0  62 35 36 33 63 33 30 65  31 37 5c 22 7d 22 3a 7b  |b563c30e17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n8b2j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n8b2j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.597: INFO: Pod "webserver-deployment-9b4f5bf69-98mnv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-98mnv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73d3d42e-9804-4c71-aec8-c008f2bff982",
      ResourceVersion: (string) (len=6) "233621",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  34 32 61 63 34 33 2d 33  |d\":\"ba42ac43-3|
              00000090  65 66 66 2d 34 33 63 66  2d 38 32 35 36 2d 34 64  |eff-43cf-8256-4d|
              000000a0  62 35 36 33 63 33 30 65  31 37 5c 22 7d 22 3a 7b  |b563c30e17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5dq98",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5dq98",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.625: INFO: Pod "webserver-deployment-9b4f5bf69-9kq8m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9kq8m",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32066ab9-1413-449a-968e-53c9dd6e66e5",
      ResourceVersion: (string) (len=6) "233746",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  34 32 61 63 34 33 2d 33  |d\":\"ba42ac43-3|
              00000090  65 66 66 2d 34 33 63 66  2d 38 32 35 36 2d 34 64  |eff-43cf-8256-4d|
              000000a0  62 35 36 33 63 33 30 65  31 37 5c 22 7d 22 3a 7b  |b563c30e17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5flmn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5flmn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.90"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.650: INFO: Pod "webserver-deployment-9b4f5bf69-fkfs9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fkfs9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f51125a-67e9-4fcb-90fd-6ecdf7d07eba",
      ResourceVersion: (string) (len=6) "233633",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  34 32 61 63 34 33 2d 33  |d\":\"ba42ac43-3|
              00000090  65 66 66 2d 34 33 63 66  2d 38 32 35 36 2d 34 64  |eff-43cf-8256-4d|
              000000a0  62 35 36 33 63 33 30 65  31 37 5c 22 7d 22 3a 7b  |b563c30e17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l5sln",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l5sln",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.90"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.665: INFO: Pod "webserver-deployment-9b4f5bf69-hvdk9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hvdk9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25591d08-4c9a-4133-8e99-9cfc9dcf8f58",
      ResourceVersion: (string) (len=6) "233757",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  34 32 61 63 34 33 2d 33  |d\":\"ba42ac43-3|
              00000090  65 66 66 2d 34 33 63 66  2d 38 32 35 36 2d 34 64  |eff-43cf-8256-4d|
              000000a0  62 35 36 33 63 33 30 65  31 37 5c 22 7d 22 3a 7b  |b563c30e17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4ljnd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4ljnd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.146",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.146"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.697: INFO: Pod "webserver-deployment-9b4f5bf69-hzd6z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hzd6z",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c53f024-703e-4984-903e-315df40e1a91",
      ResourceVersion: (string) (len=6) "233618",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  34 32 61 63 34 33 2d 33  |d\":\"ba42ac43-3|
              00000090  65 66 66 2d 34 33 63 66  2d 38 32 35 36 2d 34 64  |eff-43cf-8256-4d|
              000000a0  62 35 36 33 63 33 30 65  31 37 5c 22 7d 22 3a 7b  |b563c30e17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sj59l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sj59l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769839,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.708: INFO: Pod "webserver-deployment-9b4f5bf69-ttjbn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ttjbn",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "159370f7-c99c-4c75-ba55-aaad86147b6a",
      ResourceVersion: (string) (len=6) "233774",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  34 32 61 63 34 33 2d 33  |d\":\"ba42ac43-3|
              00000090  65 66 66 2d 34 33 63 66  2d 38 32 35 36 2d 34 64  |eff-43cf-8256-4d|
              000000a0  62 35 36 33 63 33 30 65  31 37 5c 22 7d 22 3a 7b  |b563c30e17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p4mt4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p4mt4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.90"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.725: INFO: Pod "webserver-deployment-9b4f5bf69-w5cbc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-w5cbc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9afeda68-f38f-4c34-9dc1-2df73e9e0a76",
      ResourceVersion: (string) (len=6) "233784",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  34 32 61 63 34 33 2d 33  |d\":\"ba42ac43-3|
              00000090  65 66 66 2d 34 33 63 66  2d 38 32 35 36 2d 34 64  |eff-43cf-8256-4d|
              000000a0  62 35 36 33 63 33 30 65  31 37 5c 22 7d 22 3a 7b  |b563c30e17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d599s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d599s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.748: INFO: Pod "webserver-deployment-9b4f5bf69-z7rls" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-z7rls",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a92a5d75-e077-4022-b341-9f517b09caa4",
      ResourceVersion: (string) (len=6) "233778",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769841,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769841,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  34 32 61 63 34 33 2d 33  |d\":\"ba42ac43-3|
              00000090  65 66 66 2d 34 33 63 66  2d 38 32 35 36 2d 34 64  |eff-43cf-8256-4d|
              000000a0  62 35 36 33 63 33 30 65  31 37 5c 22 7d 22 3a 7b  |b563c30e17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vrzn8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vrzn8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.90",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.90"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.768: INFO: Pod "webserver-deployment-9b4f5bf69-zmslw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zmslw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=14) "deployment-208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4130923-8583-4199-af20-9f90587c79cf",
      ResourceVersion: (string) (len=6) "233794",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "ba42ac43-3eff-43cf-8256-4db563c30e17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 61  34 32 61 63 34 33 2d 33  |d\":\"ba42ac43-3|
              00000090  65 66 66 2d 34 33 63 66  2d 38 32 35 36 2d 34 64  |eff-43cf-8256-4d|
              000000a0  62 35 36 33 63 33 30 65  31 37 5c 22 7d 22 3a 7b  |b563c30e17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769843,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wbm94",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wbm94",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:24:04.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-208" for this suite. @ 04/15/24 09:24:04.828
• [9.802 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 04/15/24 09:24:04.861
  Apr 15 09:24:04.861: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename sched-preemption @ 04/15/24 09:24:04.885
  E0415 09:24:04.934273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:24:04.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:24:04.96
  Apr 15 09:24:05.046: INFO: Waiting up to 1m0s for all nodes to be ready
  E0415 09:24:05.935320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:06.935958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:07.936339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:08.937181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:09.937713      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:10.938279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:11.938908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:12.939078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:13.939318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:14.939673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:15.940357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:16.940467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:17.941217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:18.942140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:19.942508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:20.943479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:21.943665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:22.943942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:23.944557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:24.944923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:25.945875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:26.946071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:27.951514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:28.952323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:29.953400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:30.953561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:31.954411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:32.954351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:33.954916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:34.956008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:35.957242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:36.957652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:37.957936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:38.958413      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:39.960005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:40.960580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:41.960986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:42.961378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:43.962052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:44.962272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:45.963372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:46.964228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:47.964003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:48.965091      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:49.965867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:50.966353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:51.966791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:52.967331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:53.968490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:54.968320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:55.969291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:56.969969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:57.970041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:58.971152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:59.971317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:00.972338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:01.972736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:02.973633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:03.974192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:04.974880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:05.062: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/15/24 09:25:05.071
  Apr 15 09:25:05.071: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/15/24 09:25:05.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:05.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:05.124
  Apr 15 09:25:05.185: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Apr 15 09:25:05.200: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Apr 15 09:25:05.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-427" for this suite. @ 04/15/24 09:25:05.442
  Apr 15 09:25:05.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8766" for this suite. @ 04/15/24 09:25:05.474
• [60.627 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 04/15/24 09:25:05.491
  Apr 15 09:25:05.491: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/15/24 09:25:05.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:05.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:05.55
  STEP: getting /apis @ 04/15/24 09:25:05.56
  STEP: getting /apis/storage.k8s.io @ 04/15/24 09:25:05.581
  STEP: getting /apis/storage.k8s.io/v1 @ 04/15/24 09:25:05.584
  STEP: creating @ 04/15/24 09:25:05.588
  STEP: watching @ 04/15/24 09:25:05.637
  Apr 15 09:25:05.637: INFO: starting watch
  STEP: getting @ 04/15/24 09:25:05.655
  STEP: listing in namespace @ 04/15/24 09:25:05.661
  STEP: listing across namespaces @ 04/15/24 09:25:05.672
  STEP: patching @ 04/15/24 09:25:05.68
  STEP: updating @ 04/15/24 09:25:05.694
  Apr 15 09:25:05.706: INFO: waiting for watch events with expected annotations in namespace
  Apr 15 09:25:05.706: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/15/24 09:25:05.706
  STEP: deleting a collection @ 04/15/24 09:25:05.73
  Apr 15 09:25:05.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8235" for this suite. @ 04/15/24 09:25:05.787
• [0.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 04/15/24 09:25:05.821
  Apr 15 09:25:05.821: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 09:25:05.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:05.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:05.892
  Apr 15 09:25:05.901: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 09:25:05.976254      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:06.976884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:07.977908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/15/24 09:25:08.08
  Apr 15 09:25:08.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-4299 --namespace=crd-publish-openapi-4299 create -f -'
  Apr 15 09:25:08.512: INFO: stderr: ""
  Apr 15 09:25:08.512: INFO: stdout: "e2e-test-crd-publish-openapi-3463-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 15 09:25:08.512: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-4299 --namespace=crd-publish-openapi-4299 delete e2e-test-crd-publish-openapi-3463-crds test-cr'
  Apr 15 09:25:08.727: INFO: stderr: ""
  Apr 15 09:25:08.727: INFO: stdout: "e2e-test-crd-publish-openapi-3463-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Apr 15 09:25:08.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-4299 --namespace=crd-publish-openapi-4299 apply -f -'
  Apr 15 09:25:08.949: INFO: stderr: ""
  Apr 15 09:25:08.949: INFO: stdout: "e2e-test-crd-publish-openapi-3463-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 15 09:25:08.950: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-4299 --namespace=crd-publish-openapi-4299 delete e2e-test-crd-publish-openapi-3463-crds test-cr'
  E0415 09:25:08.978707      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:09.281: INFO: stderr: ""
  Apr 15 09:25:09.281: INFO: stdout: "e2e-test-crd-publish-openapi-3463-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/15/24 09:25:09.281
  Apr 15 09:25:09.282: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-174287875 --namespace=crd-publish-openapi-4299 explain e2e-test-crd-publish-openapi-3463-crds'
  Apr 15 09:25:09.469: INFO: stderr: ""
  Apr 15 09:25:09.469: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-3463-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0415 09:25:09.979014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:10.980073      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:11.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4299" for this suite. @ 04/15/24 09:25:11.678
• [5.870 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 04/15/24 09:25:11.692
  Apr 15 09:25:11.693: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 09:25:11.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:11.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:11.739
  STEP: Creating a test namespace @ 04/15/24 09:25:11.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:11.779
  STEP: Creating a service in the namespace @ 04/15/24 09:25:11.786
  STEP: Deleting the namespace @ 04/15/24 09:25:11.811
  STEP: Waiting for the namespace to be removed. @ 04/15/24 09:25:11.828
  E0415 09:25:11.980757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:12.981412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:13.982504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:14.982683      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:15.984094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:16.984279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/15/24 09:25:17.839
  STEP: Verifying there is no service in the namespace @ 04/15/24 09:25:17.879
  Apr 15 09:25:17.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3726" for this suite. @ 04/15/24 09:25:17.904
  STEP: Destroying namespace "nsdeletetest-3526" for this suite. @ 04/15/24 09:25:17.922
  Apr 15 09:25:17.930: INFO: Namespace nsdeletetest-3526 was already deleted
  STEP: Destroying namespace "nsdeletetest-5639" for this suite. @ 04/15/24 09:25:17.931
• [6.253 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/15/24 09:25:17.949
  Apr 15 09:25:17.949: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename subpath @ 04/15/24 09:25:17.955
  E0415 09:25:17.985227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:17.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:18.007
  STEP: Setting up data @ 04/15/24 09:25:18.016
  STEP: Creating pod pod-subpath-test-downwardapi-2wdr @ 04/15/24 09:25:18.038
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 09:25:18.038
  E0415 09:25:18.986337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:19.986556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:20.986448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:21.986753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:22.987250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:23.988278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:24.988394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:25.989288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:26.990347      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:27.990283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:28.990850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:29.991252      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:30.991758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:31.992532      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:32.993384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:33.994126      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:34.994682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:35.995058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:36.996308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:37.996904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:38.997169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:39.998224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:40.998891      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:41.999399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:25:42.238
  Apr 15 09:25:42.245: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-subpath-test-downwardapi-2wdr container test-container-subpath-downwardapi-2wdr: <nil>
  STEP: delete the pod @ 04/15/24 09:25:42.288
  STEP: Deleting pod pod-subpath-test-downwardapi-2wdr @ 04/15/24 09:25:42.346
  Apr 15 09:25:42.346: INFO: Deleting pod "pod-subpath-test-downwardapi-2wdr" in namespace "subpath-2806"
  Apr 15 09:25:42.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2806" for this suite. @ 04/15/24 09:25:42.368
• [24.433 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/15/24 09:25:42.383
  Apr 15 09:25:42.383: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename deployment @ 04/15/24 09:25:42.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:42.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:42.449
  Apr 15 09:25:42.502: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0415 09:25:42.999583      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:44.000248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:45.000111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:46.000468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:47.000652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:47.514: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 09:25:47.515
  Apr 15 09:25:47.515: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/15/24 09:25:47.544
  Apr 15 09:25:47.599: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3204",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee183237-a7ac-49f2-a580-01231fcdc364",
      ResourceVersion: (string) (len=6) "234383",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769947,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769947,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 09:25:47.638: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3204",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90b17ec8-3b89-499a-ba58-6e363e2d7d15",
      ResourceVersion: (string) (len=6) "234386",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769947,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "ee183237-a7ac-49f2-a580-01231fcdc364",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769947,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 65 31 38 33 32  33 37 2d 61 37 61 63 2d  |\"ee183237-a7ac-|
              00000120  34 39 66 32 2d 61 35 38  30 2d 30 31 32 33 31 66  |49f2-a580-01231f|
              00000130  63 64 63 33 36 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cdc364\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 09:25:47.640: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Apr 15 09:25:47.641: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3204",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90525afe-d371-4d2f-9eec-a88328d3ae68",
      ResourceVersion: (string) (len=6) "234385",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769942,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "ee183237-a7ac-49f2-a580-01231fcdc364",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769942,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769947,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 65 65 31 38 33 32 33  |"uid\":\"ee18323|
              00000040  37 2d 61 37 61 63 2d 34  39 66 32 2d 61 35 38 30  |7-a7ac-49f2-a580|
              00000050  2d 30 31 32 33 31 66 63  64 63 33 36 34 5c 22 7d  |-01231fcdc364\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 09:25:47.695: INFO: Pod "test-cleanup-controller-sbcqh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-sbcqh",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-3204",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9fab0df9-bcbc-411c-b43c-f476ae5f0180",
      ResourceVersion: (string) (len=6) "234372",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769942,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "90525afe-d371-4d2f-9eec-a88328d3ae68",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769942,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  39 30 35 32 35 61 66 65  |uid\":\"90525afe|
              00000080  2d 64 33 37 31 2d 34 64  32 66 2d 39 65 65 63 2d  |-d371-4d2f-9eec-|
              00000090  61 38 38 33 32 38 64 33  61 65 36 38 5c 22 7d 22  |a88328d3ae68\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 31 36 5c 22 7d 22 3a  |.233.66.216\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dgzns",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dgzns",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769942,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769942,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) (len=13) "10.233.66.216",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.216"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769942,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848769943,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://d9a2339a52070bc17d3eae774a8fb4c9e669aa14e08aa43f8b5a728fa2030f6b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:25:47.705: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-f7c8g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-f7c8g",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-3204",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5fe9aeb9-cb7b-4cac-a740-e5210c01df63",
      ResourceVersion: (string) (len=6) "234389",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769947,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "90b17ec8-3b89-499a-ba58-6e363e2d7d15",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769947,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 30  62 31 37 65 63 38 2d 33  |d\":\"90b17ec8-3|
              00000090  62 38 39 2d 34 39 39 61  2d 62 61 35 38 2d 36 65  |b89-499a-ba58-6e|
              000000a0  33 36 33 65 32 64 37 64  31 35 5c 22 7d 22 3a 7b  |363e2d7d15\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v7t87",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v7t87",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:25:47.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3204" for this suite. @ 04/15/24 09:25:47.763
• [5.398 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/15/24 09:25:47.787
  Apr 15 09:25:47.787: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename init-container @ 04/15/24 09:25:47.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:47.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:47.844
  STEP: creating the pod @ 04/15/24 09:25:47.856
  Apr 15 09:25:47.857: INFO: PodSpec: initContainers in spec.initContainers
  E0415 09:25:48.001795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:49.003055      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:50.003260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:51.004359      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:51.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4080" for this suite. @ 04/15/24 09:25:51.255
• [3.493 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 04/15/24 09:25:51.294
  Apr 15 09:25:51.295: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 09:25:51.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:51.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:51.341
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/15/24 09:25:51.348
  E0415 09:25:52.005438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:53.007314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:54.007099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:55.007744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:25:55.411
  Apr 15 09:25:55.419: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-59ec44da-ebff-4be2-b48d-a10774e73a6b container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:25:55.439
  Apr 15 09:25:55.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5063" for this suite. @ 04/15/24 09:25:55.496
• [4.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 04/15/24 09:25:55.605
  Apr 15 09:25:55.605: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 09:25:55.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:55.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:55.702
  STEP: Creating pod liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 in namespace container-probe-3346 @ 04/15/24 09:25:55.708
  E0415 09:25:56.007619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:57.008833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 09:25:57.763
  Apr 15 09:25:57.772: INFO: Initial restart count of pod liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 is 0
  Apr 15 09:25:57.780: INFO: Get pod liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 in namespace container-probe-3346
  E0415 09:25:58.009063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:59.009428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:59.791: INFO: Get pod liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 in namespace container-probe-3346
  E0415 09:26:00.009707      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:01.010723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:01.800: INFO: Get pod liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 in namespace container-probe-3346
  E0415 09:26:02.011310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:03.011442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:03.809: INFO: Get pod liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 in namespace container-probe-3346
  E0415 09:26:04.012687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:05.012994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:05.821: INFO: Get pod liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 in namespace container-probe-3346
  E0415 09:26:06.013725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:07.014266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:07.833: INFO: Get pod liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 in namespace container-probe-3346
  E0415 09:26:08.014854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:09.015479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:09.844: INFO: Get pod liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 in namespace container-probe-3346
  E0415 09:26:10.015251      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:11.015960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:11.856: INFO: Get pod liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 in namespace container-probe-3346
  E0415 09:26:12.016597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:13.017556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:13.868: INFO: Get pod liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 in namespace container-probe-3346
  E0415 09:26:14.018435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:15.018669      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:15.880: INFO: Get pod liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 in namespace container-probe-3346
  E0415 09:26:16.018985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:17.019239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:17.890: INFO: Get pod liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 in namespace container-probe-3346
  Apr 15 09:26:17.890: INFO: Restart count of pod container-probe-3346/liveness-dff00a14-0a0f-473a-8a8f-d6ab2c7d2980 is now 1 (20.117283505s elapsed)
  STEP: deleting the pod @ 04/15/24 09:26:17.89
  Apr 15 09:26:17.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3346" for this suite. @ 04/15/24 09:26:17.933
• [22.348 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 04/15/24 09:26:17.957
  Apr 15 09:26:17.957: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 09:26:17.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:26:17.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:26:18.004
  Apr 15 09:26:18.010: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  E0415 09:26:18.019440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:19.019929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:20.019995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0415 09:26:20.808556      14 warnings.go:70] unknown field "alpha"
  W0415 09:26:20.808990      14 warnings.go:70] unknown field "beta"
  W0415 09:26:20.809234      14 warnings.go:70] unknown field "delta"
  W0415 09:26:20.809590      14 warnings.go:70] unknown field "epsilon"
  W0415 09:26:20.809877      14 warnings.go:70] unknown field "gamma"
  E0415 09:26:21.020263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:21.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5352" for this suite. @ 04/15/24 09:26:21.451
• [3.516 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 04/15/24 09:26:21.473
  Apr 15 09:26:21.473: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 09:26:21.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:26:21.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:26:21.537
  STEP: Creating pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806 @ 04/15/24 09:26:21.543
  E0415 09:26:22.020995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:23.021581      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 09:26:23.602
  Apr 15 09:26:23.613: INFO: Initial restart count of pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c is 0
  Apr 15 09:26:23.623: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:24.021708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:25.022029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:25.635: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:26.022430      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:27.023162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:27.644: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:28.023247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:29.024283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:29.653: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:30.024332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:31.025588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:31.664: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:32.025803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:33.026053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:33.675: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:34.026251      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:35.026497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:35.686: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:36.026754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:37.026918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:37.695: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:38.027403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:39.028472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:39.717: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:40.029225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:41.030367      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:41.727: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:42.030373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:43.030763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:43.739: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  Apr 15 09:26:43.740: INFO: Restart count of pod container-probe-8806/liveness-0ed39d3f-6958-420c-b2f1-666460acc62c is now 1 (20.126871268s elapsed)
  E0415 09:26:44.031040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:45.032198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:45.751: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:46.033236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:47.033408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:47.764: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:48.034273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:49.035271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:49.777: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:50.036090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:51.037165      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:51.786: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:52.037543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:53.037734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:53.793: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:54.038482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:55.038454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:55.802: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:56.038920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:57.039028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:57.812: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:26:58.039797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:59.040085      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:59.820: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:00.040840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:01.041130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:01.831: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:02.041329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:03.042038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:03.844: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  Apr 15 09:27:03.845: INFO: Restart count of pod container-probe-8806/liveness-0ed39d3f-6958-420c-b2f1-666460acc62c is now 2 (40.231918672s elapsed)
  E0415 09:27:04.043099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:05.043324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:05.854: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:06.044310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:07.044562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:07.862: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:08.044696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:09.045464      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:09.873: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:10.046038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:11.046307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:11.890: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:12.047284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:13.047762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:13.902: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:14.047954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:15.048357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:15.913: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:16.049994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:17.050230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:17.923: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:18.051222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:19.051503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:19.932: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:20.052521      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:21.052408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:21.951: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:22.053497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:23.053797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:23.965: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  Apr 15 09:27:23.966: INFO: Restart count of pod container-probe-8806/liveness-0ed39d3f-6958-420c-b2f1-666460acc62c is now 3 (1m0.352411232s elapsed)
  E0415 09:27:24.054497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:25.055479      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:25.981: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:26.055929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:27.056168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:27.994: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:28.057036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:29.057588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:30.004: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:30.057810      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:31.060118      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:32.017: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:32.060011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:33.060104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:34.026: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:34.060831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:35.062079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:36.043: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:36.063051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:37.062390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:38.053: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:38.063127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:39.063538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:40.063939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:40.067: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:41.064581      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:42.065070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:42.079: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:43.068241      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:44.066942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:44.091: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  Apr 15 09:27:44.091: INFO: Restart count of pod container-probe-8806/liveness-0ed39d3f-6958-420c-b2f1-666460acc62c is now 4 (1m20.478332351s elapsed)
  E0415 09:27:45.067187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:46.067870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:46.103: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:47.068563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:48.069188      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:48.115: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:49.069323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:50.069641      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:50.126: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:51.070433      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:52.070785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:52.144: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:53.071447      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:54.072134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:54.157: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:55.072163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:56.073015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:56.171: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:57.073180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:58.073152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:58.182: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:27:59.074078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:00.074424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:00.193: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:01.075056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:02.075236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:02.208: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:03.076266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:04.076768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:04.219: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:05.077184      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:06.077683      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:06.230: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:07.077973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:08.079078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:08.241: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:09.078808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:10.079185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:10.254: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:11.079769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:12.080442      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:12.268: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:13.080334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:14.080697      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:14.278: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:15.081013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:16.081486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:16.293: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:17.081937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:18.082826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:18.304: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:19.083454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:20.083200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:20.317: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:21.083564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:22.085716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:22.327: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:23.084832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:24.085410      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:24.338: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:25.085763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:26.086957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:26.352: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:27.087280      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:28.087744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:28.364: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:29.087851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:30.088573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:30.380: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:31.089215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:32.090081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:32.389: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:33.091756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:34.091865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:34.402: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:35.091983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:36.092797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:36.418: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:37.093574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:38.093560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:38.437: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:39.094016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:40.094706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:40.447: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:41.094518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:42.095386      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:42.490: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  E0415 09:28:43.094909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:44.095148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:44.501: INFO: Get pod liveness-0ed39d3f-6958-420c-b2f1-666460acc62c in namespace container-probe-8806
  Apr 15 09:28:44.501: INFO: Restart count of pod container-probe-8806/liveness-0ed39d3f-6958-420c-b2f1-666460acc62c is now 5 (2m20.88829731s elapsed)
  STEP: deleting the pod @ 04/15/24 09:28:44.504
  Apr 15 09:28:44.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8806" for this suite. @ 04/15/24 09:28:44.545
• [143.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 04/15/24 09:28:44.568
  Apr 15 09:28:44.569: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 09:28:44.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:28:44.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:28:44.631
  STEP: Creating resourceQuota "e2e-rq-status-gt9bh" @ 04/15/24 09:28:44.648
  Apr 15 09:28:44.673: INFO: Resource quota "e2e-rq-status-gt9bh" reports spec: hard cpu limit of 500m
  Apr 15 09:28:44.675: INFO: Resource quota "e2e-rq-status-gt9bh" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-gt9bh" /status @ 04/15/24 09:28:44.675
  STEP: Confirm /status for "e2e-rq-status-gt9bh" resourceQuota via watch @ 04/15/24 09:28:44.699
  Apr 15 09:28:44.703: INFO: observed resourceQuota "e2e-rq-status-gt9bh" in namespace "resourcequota-8673" with hard status: v1.ResourceList(nil)
  Apr 15 09:28:44.704: INFO: Found resourceQuota "e2e-rq-status-gt9bh" in namespace "resourcequota-8673" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 15 09:28:44.704: INFO: ResourceQuota "e2e-rq-status-gt9bh" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/15/24 09:28:44.713
  Apr 15 09:28:44.729: INFO: Resource quota "e2e-rq-status-gt9bh" reports spec: hard cpu limit of 1
  Apr 15 09:28:44.729: INFO: Resource quota "e2e-rq-status-gt9bh" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-gt9bh" /status @ 04/15/24 09:28:44.73
  STEP: Confirm /status for "e2e-rq-status-gt9bh" resourceQuota via watch @ 04/15/24 09:28:44.745
  Apr 15 09:28:44.749: INFO: observed resourceQuota "e2e-rq-status-gt9bh" in namespace "resourcequota-8673" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 15 09:28:44.749: INFO: Found resourceQuota "e2e-rq-status-gt9bh" in namespace "resourcequota-8673" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Apr 15 09:28:44.750: INFO: ResourceQuota "e2e-rq-status-gt9bh" /status was patched
  STEP: Get "e2e-rq-status-gt9bh" /status @ 04/15/24 09:28:44.75
  Apr 15 09:28:44.766: INFO: Resourcequota "e2e-rq-status-gt9bh" reports status: hard cpu of 1
  Apr 15 09:28:44.766: INFO: Resourcequota "e2e-rq-status-gt9bh" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-gt9bh" /status before checking Spec is unchanged @ 04/15/24 09:28:44.774
  Apr 15 09:28:44.788: INFO: Resourcequota "e2e-rq-status-gt9bh" reports status: hard cpu of 2
  Apr 15 09:28:44.788: INFO: Resourcequota "e2e-rq-status-gt9bh" reports status: hard memory of 2Gi
  Apr 15 09:28:44.793: INFO: Found resourceQuota "e2e-rq-status-gt9bh" in namespace "resourcequota-8673" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Apr 15 09:28:44.803: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8e600), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8e630), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8e660), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:28:45.095452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:46.095788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:47.096316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:48.096992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:49.097249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:49.802: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8e8a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8e900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8e930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:28:50.098518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:51.099432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:52.099770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:53.100233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:54.100798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:54.802: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8ecc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8ed08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8ed50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:28:55.101507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:56.101555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:57.101938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:58.102068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:59.102300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:59.807: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b8d38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b8d68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b8dc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:29:00.103248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:01.103734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:02.104259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:03.104450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:04.104456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:04.809: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8f218), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8f248), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8f278), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:29:05.104618      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:06.105791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:07.106456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:08.107964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:09.107607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:09.808: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8f500), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8f548), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8f5c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:29:10.108013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:11.108682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:12.109046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:13.110095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:14.111163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:14.808: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b94e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b9530), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b9560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:29:15.111727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:16.111414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:17.111755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:18.111648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:19.112796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:19.803: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8f9b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8f9e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8fa10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:29:20.113083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:21.113367      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:22.113663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:23.113860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:24.114157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:24.819: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8fc08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8fc38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d8fc68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:29:25.114807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:26.114943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:27.114960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:28.116462      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:29.116370      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:29.806: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b9b60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b9ba8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042b9bf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:29:30.116434      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:31.117329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:32.117616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:33.117960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:34.118839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:34.805: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce8060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce80a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce80f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:29:35.118517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:36.118835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:37.118996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:38.119494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:39.120483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:39.803: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce8468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce84b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce84e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:29:40.120921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:41.121976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:42.122108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:43.123450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:44.123748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:44.806: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce8a98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce8af8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce8b40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:29:45.125002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:46.124509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:47.125001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:48.124988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:49.126100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:49.804: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098588), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:29:50.126524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:51.127100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:52.127328      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:53.128450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:54.128475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:54.804: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098ae0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098b58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098b88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:29:55.128784      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:56.128996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:57.132758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:58.132839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:59.138909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:59.803: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010982d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:30:00.139129      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:01.139352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:02.139570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:03.139900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:04.140366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:04.801: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010987c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:30:05.140817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:06.141720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:07.141889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:08.142247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:09.143182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:09.803: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098c48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098c78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098cc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:30:10.144327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:11.144559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:12.144912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:13.145050      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:14.145305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:14.803: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001098ff0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001099038), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001099098), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:30:15.155041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:16.155593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:17.155835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:18.156650      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:19.157543      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:19.801: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce8a38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce8a98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce8af8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:30:20.158098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:21.158711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:22.159297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:23.159666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:24.159749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:24.807: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce8eb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce8f48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce8ff0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:30:25.161056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:26.161942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:27.162120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:28.162134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:29.163047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:29.813: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce94b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce9518), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce9590), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:30:30.164283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:31.163954      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:32.164397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:33.164868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:34.165350      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:34.802: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce9bd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce9c08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce9c38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:30:35.165600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:36.166875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:37.166956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:38.167349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:39.167611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:39.805: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ce9fe0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3e138), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3e288), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:30:40.168604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:41.169071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:42.168925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:43.169446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:44.169444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:44.805: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3eac8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3eaf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3eb88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:30:45.171239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:46.170925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:47.171024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:48.171501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:49.172648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:49.803: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001099e00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001099e30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001099e90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:30:50.173754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:51.174727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:52.175845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:53.176385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:54.176375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:54.804: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-gt9bh", GenerateName:"", Namespace:"resourcequota-8673", SelfLink:"", UID:"27528e43-7724-4559-9acc-2042ae017c02", ResourceVersion:"234892", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-gt9bh"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fec300), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fec348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 28, 44, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003fec378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:30:55.177921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:56.178523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:57.179800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:58.179902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:59.180594      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:59.803: INFO: ResourceQuota "e2e-rq-status-gt9bh" Spec was unchanged and /status reset
  Apr 15 09:30:59.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8673" for this suite. @ 04/15/24 09:30:59.822
• [135.281 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/15/24 09:30:59.852
  Apr 15 09:30:59.853: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename deployment @ 04/15/24 09:30:59.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:30:59.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:30:59.91
  Apr 15 09:30:59.918: INFO: Creating deployment "test-recreate-deployment"
  Apr 15 09:30:59.937: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Apr 15 09:30:59.955: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  E0415 09:31:00.182392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:01.183207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:31:01.993: INFO: Waiting deployment "test-recreate-deployment" to complete
  Apr 15 09:31:02.004: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Apr 15 09:31:02.031: INFO: Updating deployment test-recreate-deployment
  Apr 15 09:31:02.031: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  E0415 09:31:02.183755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:31:02.265: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7963",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21d60a4f-d103-47d8-a1fd-26520e5d52db",
      ResourceVersion: (string) (len=6) "235178",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770259,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770260,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 09:31:02.281: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7963",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b015d457-b6a8-4613-94c7-d8ead89473fa",
      ResourceVersion: (string) (len=6) "235175",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "21d60a4f-d103-47d8-a1fd-26520e5d52db",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 31 64 36 30 61  34 66 2d 64 31 30 33 2d  |\"21d60a4f-d103-|
              00000120  34 37 64 38 2d 61 31 66  64 2d 32 36 35 32 30 65  |47d8-a1fd-26520e|
              00000130  35 64 35 32 64 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5d52db\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 09:31:02.284: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Apr 15 09:31:02.285: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7963",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a5776da-9655-490c-9f81-4e32cd894966",
      ResourceVersion: (string) (len=6) "235166",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770259,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "21d60a4f-d103-47d8-a1fd-26520e5d52db",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 31 64 36 30 61  34 66 2d 64 31 30 33 2d  |\"21d60a4f-d103-|
              00000120  34 37 64 38 2d 61 31 66  64 2d 32 36 35 32 30 65  |47d8-a1fd-26520e|
              00000130  35 64 35 32 64 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5d52db\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 09:31:02.298: INFO: Pod "test-recreate-deployment-76fb77d45-mg5hh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-mg5hh",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-7963",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eee649fb-d989-43dc-b586-1643295121c3",
      ResourceVersion: (string) (len=6) "235177",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "b015d457-b6a8-4613-94c7-d8ead89473fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  31 35 64 34 35 37 2d 62  |d\":\"b015d457-b|
              00000090  36 61 38 2d 34 36 31 33  2d 39 34 63 37 2d 64 38  |6a8-4613-94c7-d8|
              000000a0  65 61 64 38 39 34 37 33  66 61 5c 22 7d 22 3a 7b  |ead89473fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7nhtg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7nhtg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "jec7saimeaph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770262,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.234",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.234"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770262,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:31:02.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7963" for this suite. @ 04/15/24 09:31:02.318
• [2.485 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 04/15/24 09:31:02.34
  Apr 15 09:31:02.340: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 09:31:02.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:31:02.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:31:02.403
  STEP: Creating a pod to test downward api env vars @ 04/15/24 09:31:02.409
  E0415 09:31:03.183756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:04.184120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:05.184395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:06.184704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:31:06.493
  Apr 15 09:31:06.502: INFO: Trying to get logs from node jec7saimeaph-3 pod downward-api-0290d149-9536-4da3-acc8-95600057fa40 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 09:31:06.557
  Apr 15 09:31:06.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9861" for this suite. @ 04/15/24 09:31:06.615
• [4.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 04/15/24 09:31:06.629
  Apr 15 09:31:06.629: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename configmap @ 04/15/24 09:31:06.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:31:06.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:31:06.668
  STEP: Creating configMap configmap-7897/configmap-test-c27d906b-84b3-4aee-9a08-c3461114678b @ 04/15/24 09:31:06.674
  STEP: Creating a pod to test consume configMaps @ 04/15/24 09:31:06.687
  E0415 09:31:07.185356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:08.185895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:09.186578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:10.187682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:31:10.736
  Apr 15 09:31:10.747: INFO: Trying to get logs from node jec7saimeaph-3 pod pod-configmaps-4742ac2f-cbee-425c-86b6-d0418add2079 container env-test: <nil>
  STEP: delete the pod @ 04/15/24 09:31:10.767
  Apr 15 09:31:10.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7897" for this suite. @ 04/15/24 09:31:10.812
• [4.201 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 04/15/24 09:31:10.835
  Apr 15 09:31:10.835: INFO: >>> kubeConfig: /tmp/kubeconfig-174287875
  STEP: Building a namespace api object, basename webhook @ 04/15/24 09:31:10.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:31:10.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:31:10.884
  STEP: Setting up server cert @ 04/15/24 09:31:10.949
  E0415 09:31:11.188542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:12.189036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 09:31:12.789
  STEP: Deploying the webhook pod @ 04/15/24 09:31:12.808
  STEP: Wait for the deployment to be ready @ 04/15/24 09:31:12.837
  Apr 15 09:31:12.853: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0415 09:31:13.189850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:14.190130      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 09:31:14.883
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 09:31:14.911
  E0415 09:31:15.190420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:31:15.913: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/15/24 09:31:15.93
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/15/24 09:31:15.931
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/15/24 09:31:15.996
  E0415 09:31:16.190923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/15/24 09:31:17.021
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/15/24 09:31:17.021
  E0415 09:31:17.191901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 04/15/24 09:31:18.082
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/15/24 09:31:18.082
  E0415 09:31:18.192743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:19.193045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:20.194214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:21.195049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:22.195807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/15/24 09:31:23.187
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/15/24 09:31:23.188
  E0415 09:31:23.196794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:24.197311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:25.197251      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:26.197454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:27.197578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:28.197805      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:31:28.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4097" for this suite. @ 04/15/24 09:31:28.515
  STEP: Destroying namespace "webhook-markers-1584" for this suite. @ 04/15/24 09:31:28.536
• [17.722 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Apr 15 09:31:28.592: INFO: Running AfterSuite actions on node 1
  Apr 15 09:31:28.592: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.001 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.242 seconds]
------------------------------

Ran 388 of 7407 Specs in 6887.232 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h54m51.184998409s
Test Suite Passed
