  I0415 07:36:48.820051      13 e2e.go:117] Starting e2e run "a2febfff-5a34-433a-8828-9d38138f3554" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1713166605 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Apr 15 07:36:49.292: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 07:36:49.319: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Apr 15 07:36:49.452: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Apr 15 07:36:49.466: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds' (0 seconds elapsed)
  Apr 15 07:36:49.467: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Apr 15 07:36:49.467: INFO: e2e test version: v1.29.3
  Apr 15 07:36:49.473: INFO: kube-apiserver version: v1.29.3
  Apr 15 07:36:49.474: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 07:36:49.487: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.196 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 04/15/24 07:36:49.945
  Apr 15 07:36:49.945: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/15/24 07:36:49.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:36:49.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:36:49.996
  STEP: create the container to handle the HTTPGet hook request. @ 04/15/24 07:36:50.015
  STEP: create the pod with lifecycle hook @ 04/15/24 07:36:52.066
  STEP: check poststart hook @ 04/15/24 07:36:54.115
  STEP: delete the pod with lifecycle hook @ 04/15/24 07:36:54.169
  Apr 15 07:36:56.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5730" for this suite. @ 04/15/24 07:36:56.229
• [6.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 04/15/24 07:36:56.271
  Apr 15 07:36:56.271: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 07:36:56.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:36:56.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:36:56.326
  STEP: Creating configMap with name configmap-test-volume-map-bf27404a-4186-4ec4-82d3-eccac1d9645d @ 04/15/24 07:36:56.338
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:36:56.35
  STEP: Saw pod success @ 04/15/24 07:37:00.4
  Apr 15 07:37:00.409: INFO: Trying to get logs from node eehaephong4y-3 pod pod-configmaps-0ca2a429-62a8-4244-9b6e-4e76e0e71d60 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:37:00.45
  Apr 15 07:37:00.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5289" for this suite. @ 04/15/24 07:37:00.496
• [4.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 04/15/24 07:37:00.51
  Apr 15 07:37:00.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/15/24 07:37:00.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:00.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:00.551
  STEP: create the container to handle the HTTPGet hook request. @ 04/15/24 07:37:00.567
  STEP: create the pod with lifecycle hook @ 04/15/24 07:37:04.632
  STEP: delete the pod with lifecycle hook @ 04/15/24 07:37:06.674
  STEP: check prestop hook @ 04/15/24 07:37:08.707
  Apr 15 07:37:08.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8076" for this suite. @ 04/15/24 07:37:08.765
• [8.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 04/15/24 07:37:08.779
  Apr 15 07:37:08.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:37:08.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:08.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:08.829
  Apr 15 07:37:08.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-6540 create -f -'
  Apr 15 07:37:09.629: INFO: stderr: ""
  Apr 15 07:37:09.629: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Apr 15 07:37:09.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-6540 create -f -'
  Apr 15 07:37:10.120: INFO: stderr: ""
  Apr 15 07:37:10.120: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/15/24 07:37:10.12
  Apr 15 07:37:11.132: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:37:11.133: INFO: Found 1 / 1
  Apr 15 07:37:11.133: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 15 07:37:11.141: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:37:11.141: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 15 07:37:11.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-6540 describe pod agnhost-primary-6rdpr'
  Apr 15 07:37:11.413: INFO: stderr: ""
  Apr 15 07:37:11.413: INFO: stdout: "Name:             agnhost-primary-6rdpr\nNamespace:        kubectl-6540\nPriority:         0\nService Account:  default\nNode:             eehaephong4y-3/192.168.121.84\nStart Time:       Mon, 15 Apr 2024 07:37:09 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.66.211\nIPs:\n  IP:           10.233.66.211\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://9bf4449a19b5b6e074ac7b680e6de5fde36543ec6d007ecb718cfaf78d034232\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 15 Apr 2024 07:37:10 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-q8sjv (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-q8sjv:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-6540/agnhost-primary-6rdpr to eehaephong4y-3\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Apr 15 07:37:11.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-6540 describe rc agnhost-primary'
  Apr 15 07:37:11.625: INFO: stderr: ""
  Apr 15 07:37:11.625: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-6540\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-6rdpr\n"
  Apr 15 07:37:11.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-6540 describe service agnhost-primary'
  Apr 15 07:37:11.842: INFO: stderr: ""
  Apr 15 07:37:11.843: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-6540\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.10.170\nIPs:               10.233.10.170\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.66.211:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Apr 15 07:37:11.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-6540 describe node eehaephong4y-1'
  Apr 15 07:37:12.149: INFO: stderr: ""
  Apr 15 07:37:12.149: INFO: stdout: "Name:               eehaephong4y-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=eehaephong4y-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"e2:c3:83:c8:83:4b\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.121.26\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 14 Apr 2024 14:55:25 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  eehaephong4y-1\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 15 Apr 2024 07:37:08 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 15 Apr 2024 07:36:25 +0000   Mon, 15 Apr 2024 07:36:25 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Mon, 15 Apr 2024 07:34:10 +0000   Mon, 15 Apr 2024 06:09:06 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 15 Apr 2024 07:34:10 +0000   Mon, 15 Apr 2024 06:09:06 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 15 Apr 2024 07:34:10 +0000   Mon, 15 Apr 2024 06:09:06 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 15 Apr 2024 07:34:10 +0000   Mon, 15 Apr 2024 06:17:37 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.121.26\n  Hostname:    eehaephong4y-1\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      115008636Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 8123552Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    1600m\n  ephemeral-storage:      111880401014\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3273888Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                    62894cccb82a422aadf7ca55ef65f9f7\n  System UUID:                   62894ccc-b82a-422a-adf7-ca55ef65f9f7\n  Boot ID:                       514802a0-ffd5-42c6-9a9f-74c37f09ac32\n  Kernel Version:                6.5.0-27-generic\n  OS Image:                      Ubuntu 22.04.4 LTS\n  Operating System:              linux\n  Architecture:                  amd64\n  Container Runtime Version:     cri-o://1.29.2\n  Kubelet Version:               v1.29.3\n  Kube-Proxy Version:            v1.29.3\nPodCIDR:                         10.233.64.0/24\nPodCIDRs:                        10.233.64.0/24\nNon-terminated Pods:             (9 in total)\n  Namespace                      Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                      ----                                                       ------------  ----------  ---------------  -------------  ---\n  container-lifecycle-hook-8076  pod-handle-http-request                                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         12s\n  kube-system                    coredns-76f75df574-nft85                                   100m (6%)     0 (0%)      70Mi (2%)        170Mi (5%)     56s\n  kube-system                    kube-addon-manager-eehaephong4y-1                          5m (0%)       0 (0%)      50Mi (1%)        0 (0%)         55s\n  kube-system                    kube-apiserver-eehaephong4y-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         55s\n  kube-system                    kube-controller-manager-eehaephong4y-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         55s\n  kube-system                    kube-flannel-ds-567cz                                      100m (6%)     0 (0%)      50Mi (1%)        0 (0%)         52s\n  kube-system                    kube-proxy-w6l7t                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         54s\n  kube-system                    kube-scheduler-eehaephong4y-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         54s\n  sonobuoy                       sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-8vjkh    0 (0%)        0 (0%)      0 (0%)           0 (0%)         28s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    755m (47%)  0 (0%)\n  memory                 170Mi (5%)  170Mi (5%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:\n  Type    Reason    Age   From        Message\n  ----    ------    ----  ----        -------\n  Normal  Starting  49s   kube-proxy  \n"
  Apr 15 07:37:12.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-6540 describe namespace kubectl-6540'
  Apr 15 07:37:12.351: INFO: stderr: ""
  Apr 15 07:37:12.351: INFO: stdout: "Name:         kubectl-6540\nLabels:       e2e-framework=kubectl\n              e2e-run=a2febfff-5a34-433a-8828-9d38138f3554\n              kubernetes.io/metadata.name=kubectl-6540\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Apr 15 07:37:12.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6540" for this suite. @ 04/15/24 07:37:12.366
• [3.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 04/15/24 07:37:12.383
  Apr 15 07:37:12.383: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:37:12.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:12.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:12.42
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/15/24 07:37:12.427
  STEP: Saw pod success @ 04/15/24 07:37:16.485
  Apr 15 07:37:16.493: INFO: Trying to get logs from node eehaephong4y-3 pod pod-139d359a-ebe7-4645-8cf6-9782e4ddaf6e container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:37:16.509
  Apr 15 07:37:16.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6334" for this suite. @ 04/15/24 07:37:16.556
• [4.193 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 04/15/24 07:37:16.577
  Apr 15 07:37:16.577: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 07:37:16.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:16.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:16.631
  STEP: Read namespace status @ 04/15/24 07:37:16.639
  Apr 15 07:37:16.649: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/15/24 07:37:16.649
  Apr 15 07:37:16.661: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/15/24 07:37:16.661
  Apr 15 07:37:16.682: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Apr 15 07:37:16.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6579" for this suite. @ 04/15/24 07:37:16.693
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 04/15/24 07:37:16.716
  Apr 15 07:37:16.716: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 07:37:16.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:16.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:16.756
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8080 @ 04/15/24 07:37:16.766
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/15/24 07:37:16.8
  STEP: creating service externalsvc in namespace services-8080 @ 04/15/24 07:37:16.802
  STEP: creating replication controller externalsvc in namespace services-8080 @ 04/15/24 07:37:16.828
  I0415 07:37:16.857255      13 runners.go:197] Created replication controller with name: externalsvc, namespace: services-8080, replica count: 2
  I0415 07:37:19.910434      13 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/15/24 07:37:19.918
  Apr 15 07:37:19.955: INFO: Creating new exec pod
  Apr 15 07:37:22.002: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-8080 exec execpodmtb96 -- /bin/sh -x -c nslookup nodeport-service.services-8080.svc.cluster.local'
  Apr 15 07:37:22.472: INFO: stderr: "+ nslookup nodeport-service.services-8080.svc.cluster.local\n"
  Apr 15 07:37:22.472: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-8080.svc.cluster.local\tcanonical name = externalsvc.services-8080.svc.cluster.local.\nName:\texternalsvc.services-8080.svc.cluster.local\nAddress: 10.233.10.231\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8080, will wait for the garbage collector to delete the pods @ 04/15/24 07:37:22.473
  Apr 15 07:37:22.546: INFO: Deleting ReplicationController externalsvc took: 15.53541ms
  Apr 15 07:37:22.647: INFO: Terminating ReplicationController externalsvc pods took: 100.727758ms
  Apr 15 07:37:25.593: INFO: Cleaning up the NodePort to ExternalName test service
  Apr 15 07:37:25.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8080" for this suite. @ 04/15/24 07:37:25.66
• [8.961 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 04/15/24 07:37:25.677
  Apr 15 07:37:25.677: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 07:37:25.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:25.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:25.721
  STEP: creating service nodeport-test with type=NodePort in namespace services-5213 @ 04/15/24 07:37:25.73
  STEP: creating replication controller nodeport-test in namespace services-5213 @ 04/15/24 07:37:25.77
  I0415 07:37:25.788211      13 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-5213, replica count: 2
  I0415 07:37:28.868113      13 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 07:37:28.869: INFO: Creating new exec pod
  Apr 15 07:37:31.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5213 exec execpodglhkt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Apr 15 07:37:32.294: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Apr 15 07:37:32.294: INFO: stdout: "nodeport-test-fm9np"
  Apr 15 07:37:32.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5213 exec execpodglhkt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.46.184 80'
  Apr 15 07:37:32.610: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.46.184 80\nConnection to 10.233.46.184 80 port [tcp/http] succeeded!\n"
  Apr 15 07:37:32.610: INFO: stdout: "nodeport-test-62x2j"
  Apr 15 07:37:32.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5213 exec execpodglhkt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.233 30450'
  Apr 15 07:37:32.897: INFO: stderr: "+ nc -v -t -w 2 192.168.121.233 30450\n+ echo hostName\nConnection to 192.168.121.233 30450 port [tcp/*] succeeded!\n"
  Apr 15 07:37:32.897: INFO: stdout: ""
  Apr 15 07:37:33.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5213 exec execpodglhkt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.233 30450'
  Apr 15 07:37:33.917: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.233 30450\nConnection to 192.168.121.233 30450 port [tcp/*] succeeded!\n"
  Apr 15 07:37:33.917: INFO: stdout: "nodeport-test-fm9np"
  Apr 15 07:37:33.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5213 exec execpodglhkt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.84 30450'
  Apr 15 07:37:34.221: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.84 30450\nConnection to 192.168.121.84 30450 port [tcp/*] succeeded!\n"
  Apr 15 07:37:34.221: INFO: stdout: ""
  Apr 15 07:37:34.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5213 exec execpodglhkt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.84 30450'
  Apr 15 07:37:35.286: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.84 30450\nConnection to 192.168.121.84 30450 port [tcp/*] succeeded!\n"
  Apr 15 07:37:35.287: INFO: stdout: ""
  Apr 15 07:37:35.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5213 exec execpodglhkt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.84 30450'
  Apr 15 07:37:36.271: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.84 30450\nConnection to 192.168.121.84 30450 port [tcp/*] succeeded!\n"
  Apr 15 07:37:36.271: INFO: stdout: "nodeport-test-fm9np"
  Apr 15 07:37:36.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5213" for this suite. @ 04/15/24 07:37:36.286
• [10.625 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 04/15/24 07:37:36.306
  Apr 15 07:37:36.306: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 07:37:36.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:36.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:36.366
  STEP: Create a Replicaset @ 04/15/24 07:37:36.379
  STEP: Verify that the required pods have come up. @ 04/15/24 07:37:36.392
  Apr 15 07:37:36.403: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 15 07:37:41.419: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 07:37:41.42
  STEP: Getting /status @ 04/15/24 07:37:41.421
  Apr 15 07:37:41.459: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/15/24 07:37:41.459
  Apr 15 07:37:41.503: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/15/24 07:37:41.504
  Apr 15 07:37:41.511: INFO: Observed &ReplicaSet event: ADDED
  Apr 15 07:37:41.512: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:37:41.512: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:37:41.513: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:37:41.513: INFO: Found replicaset test-rs in namespace replicaset-727 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 15 07:37:41.514: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/15/24 07:37:41.514
  Apr 15 07:37:41.514: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 15 07:37:41.531: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/15/24 07:37:41.532
  Apr 15 07:37:41.537: INFO: Observed &ReplicaSet event: ADDED
  Apr 15 07:37:41.537: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:37:41.538: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:37:41.538: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:37:41.538: INFO: Observed replicaset test-rs in namespace replicaset-727 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 07:37:41.539: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:37:41.539: INFO: Found replicaset test-rs in namespace replicaset-727 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Apr 15 07:37:41.539: INFO: Replicaset test-rs has a patched status
  Apr 15 07:37:41.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-727" for this suite. @ 04/15/24 07:37:41.553
• [5.267 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/15/24 07:37:41.575
  Apr 15 07:37:41.575: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename deployment @ 04/15/24 07:37:41.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:41.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:41.625
  Apr 15 07:37:41.634: INFO: Creating simple deployment test-new-deployment
  Apr 15 07:37:41.672: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 04/15/24 07:37:43.709
  STEP: updating a scale subresource @ 04/15/24 07:37:43.717
  STEP: verifying the deployment Spec.Replicas was modified @ 04/15/24 07:37:43.731
  STEP: Patch a scale subresource @ 04/15/24 07:37:43.742
  Apr 15 07:37:43.808: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8097",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97ba9faa-3965-4cdb-ad18-11c224c1eba1",
      ResourceVersion: (string) (len=6) "200800",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 07:37:43.825: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8097",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a9346f0-1f4c-4bf6-8f57-00baa4e7c0f5",
      ResourceVersion: (string) (len=6) "200804",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "97ba9faa-3965-4cdb-ad18-11c224c1eba1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 37 62 61 39 66  61 61 2d 33 39 36 35 2d  |\"97ba9faa-3965-|
              00000120  34 63 64 62 2d 61 64 31  38 2d 31 31 63 32 32 34  |4cdb-ad18-11c224|
              00000130  63 31 65 62 61 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c1eba1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:37:43.905: INFO: Pod "test-new-deployment-557759b7c7-4trs4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-4trs4",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8097",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91e8de8b-46d9-40b6-b7fb-c13017f3de9c",
      ResourceVersion: (string) (len=6) "200795",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8a9346f0-1f4c-4bf6-8f57-00baa4e7c0f5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 61  39 33 34 36 66 30 2d 31  |d\":\"8a9346f0-1|
              00000090  66 34 63 2d 34 62 66 36  2d 38 66 35 37 2d 30 30  |f4c-4bf6-8f57-00|
              000000a0  62 61 61 34 65 37 63 30  66 35 5c 22 7d 22 3a 7b  |baa4e7c0f5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 31 38 5c 22 7d 22 3a  |.233.66.218\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2h6zb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2h6zb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.84"
        }
      },
      PodIP: (string) (len=13) "10.233.66.218",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.218"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848763462,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://84338ba7248bcd0f806287c6fbb7cccd185879b9425fbbd918662876c066693e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 07:37:43.915: INFO: Pod "test-new-deployment-557759b7c7-sqgz5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-sqgz5",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8097",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f6ce762-097a-4341-a1ac-3320e9efe735",
      ResourceVersion: (string) (len=6) "200807",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763463,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "8a9346f0-1f4c-4bf6-8f57-00baa4e7c0f5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 61  39 33 34 36 66 30 2d 31  |d\":\"8a9346f0-1|
              00000090  66 34 63 2d 34 62 66 36  2d 38 66 35 37 2d 30 30  |f4c-4bf6-8f57-00|
              000000a0  62 61 61 34 65 37 63 30  66 35 5c 22 7d 22 3a 7b  |baa4e7c0f5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7j6pn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7j6pn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763463,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.233"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763463,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 07:37:43.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8097" for this suite. @ 04/15/24 07:37:43.972
• [2.517 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 04/15/24 07:37:44.093
  Apr 15 07:37:44.093: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:37:44.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:44.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:44.178
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:37:44.191
  STEP: Saw pod success @ 04/15/24 07:37:48.267
  Apr 15 07:37:48.278: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-3f4760c5-210d-4e02-b6bc-2e06da827a76 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:37:48.307
  Apr 15 07:37:48.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6614" for this suite. @ 04/15/24 07:37:48.359
• [4.280 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/15/24 07:37:48.375
  Apr 15 07:37:48.375: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename secrets @ 04/15/24 07:37:48.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:48.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:48.421
  STEP: Creating secret with name secret-test-f4063b7c-c3bf-4ad6-b3a5-a970411799b7 @ 04/15/24 07:37:48.427
  STEP: Creating a pod to test consume secrets @ 04/15/24 07:37:48.438
  STEP: Saw pod success @ 04/15/24 07:37:52.489
  Apr 15 07:37:52.497: INFO: Trying to get logs from node eehaephong4y-3 pod pod-secrets-8d4730e0-601d-43a5-b888-758bee5fbffb container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:37:52.514
  Apr 15 07:37:52.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1209" for this suite. @ 04/15/24 07:37:52.571
• [4.214 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 04/15/24 07:37:52.591
  Apr 15 07:37:52.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 07:37:52.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:37:52.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:37:52.634
  STEP: set up a multi version CRD @ 04/15/24 07:37:52.641
  Apr 15 07:37:52.645: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: rename a version @ 04/15/24 07:37:57.58
  STEP: check the new version name is served @ 04/15/24 07:37:57.617
  STEP: check the old version name is removed @ 04/15/24 07:37:59.07
  STEP: check the other version is not changed @ 04/15/24 07:37:59.919
  Apr 15 07:38:03.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9750" for this suite. @ 04/15/24 07:38:03.573
• [10.997 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 04/15/24 07:38:03.594
  Apr 15 07:38:03.594: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:38:03.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:38:03.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:38:03.636
  Apr 15 07:38:03.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-8220 version'
  Apr 15 07:38:03.822: INFO: stderr: ""
  Apr 15 07:38:03.822: INFO: stdout: "Client Version: v1.29.3\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.3\n"
  Apr 15 07:38:03.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8220" for this suite. @ 04/15/24 07:38:03.833
• [0.260 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 04/15/24 07:38:03.854
  Apr 15 07:38:03.854: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 07:38:03.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:38:03.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:38:03.908
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/15/24 07:38:03.916
  Apr 15 07:38:03.951: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 15 07:38:08.968: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 07:38:08.969
  STEP: getting scale subresource @ 04/15/24 07:38:08.969
  STEP: updating a scale subresource @ 04/15/24 07:38:08.98
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/15/24 07:38:08.992
  STEP: Patch a scale subresource @ 04/15/24 07:38:09.002
  Apr 15 07:38:09.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-160" for this suite. @ 04/15/24 07:38:09.108
• [5.279 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 04/15/24 07:38:09.134
  Apr 15 07:38:09.134: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 07:38:09.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:38:09.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:38:09.256
  STEP: Creating a ResourceQuota with best effort scope @ 04/15/24 07:38:09.276
  STEP: Ensuring ResourceQuota status is calculated @ 04/15/24 07:38:09.308
  STEP: Creating a ResourceQuota with not best effort scope @ 04/15/24 07:38:11.319
  STEP: Ensuring ResourceQuota status is calculated @ 04/15/24 07:38:11.367
  STEP: Creating a best-effort pod @ 04/15/24 07:38:13.375
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/15/24 07:38:13.419
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/15/24 07:38:15.436
  STEP: Deleting the pod @ 04/15/24 07:38:17.445
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 07:38:17.48
  STEP: Creating a not best-effort pod @ 04/15/24 07:38:19.492
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/15/24 07:38:19.53
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/15/24 07:38:21.541
  STEP: Deleting the pod @ 04/15/24 07:38:23.55
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 07:38:23.594
  Apr 15 07:38:25.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-227" for this suite. @ 04/15/24 07:38:25.619
• [16.503 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 04/15/24 07:38:25.644
  Apr 15 07:38:25.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename containers @ 04/15/24 07:38:25.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:38:25.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:38:25.7
  Apr 15 07:38:27.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8683" for this suite. @ 04/15/24 07:38:27.792
• [2.166 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 04/15/24 07:38:27.811
  Apr 15 07:38:27.811: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename disruption @ 04/15/24 07:38:27.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:38:27.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:38:27.864
  STEP: Waiting for the pdb to be processed @ 04/15/24 07:38:27.885
  STEP: Updating PodDisruptionBudget status @ 04/15/24 07:38:29.894
  STEP: Waiting for all pods to be running @ 04/15/24 07:38:29.911
  Apr 15 07:38:29.920: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 04/15/24 07:38:31.92
  STEP: Waiting for the pdb to be processed @ 04/15/24 07:38:31.956
  STEP: Patching PodDisruptionBudget status @ 04/15/24 07:38:31.98
  STEP: Waiting for the pdb to be processed @ 04/15/24 07:38:32.004
  Apr 15 07:38:32.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2626" for this suite. @ 04/15/24 07:38:32.034
• [4.242 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/15/24 07:38:32.052
  Apr 15 07:38:32.052: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename secrets @ 04/15/24 07:38:32.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:38:32.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:38:32.109
  STEP: Creating secret with name secret-test-fa442a6d-7831-4708-a409-147aba880590 @ 04/15/24 07:38:32.116
  STEP: Creating a pod to test consume secrets @ 04/15/24 07:38:32.126
  STEP: Saw pod success @ 04/15/24 07:38:36.193
  Apr 15 07:38:36.198: INFO: Trying to get logs from node eehaephong4y-3 pod pod-secrets-ea807247-e450-4435-a4bc-64c409a554ac container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:38:36.214
  Apr 15 07:38:36.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6317" for this suite. @ 04/15/24 07:38:36.305
• [4.276 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/15/24 07:38:36.329
  Apr 15 07:38:36.329: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename deployment @ 04/15/24 07:38:36.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:38:36.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:38:36.388
  Apr 15 07:38:36.429: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Apr 15 07:38:41.438: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 07:38:41.438
  Apr 15 07:38:41.438: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/15/24 07:38:41.485
  Apr 15 07:38:41.532: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5377",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b48dd43-8d4a-4cf5-89f0-1576f68a07a9",
      ResourceVersion: (string) (len=6) "201243",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763521,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763521,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 07:38:41.555: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5377",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db55b657-fc16-41dc-9d3b-21da9ef88415",
      ResourceVersion: (string) (len=6) "201245",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763521,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "1b48dd43-8d4a-4cf5-89f0-1576f68a07a9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763521,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 62 34 38 64 64  34 33 2d 38 64 34 61 2d  |\"1b48dd43-8d4a-|
              00000120  34 63 66 35 2d 38 39 66  30 2d 31 35 37 36 66 36  |4cf5-89f0-1576f6|
              00000130  38 61 30 37 61 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8a07a9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:38:41.557: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Apr 15 07:38:41.558: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5377",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d700810d-cb0f-47f0-8eac-8bf09c5ac85a",
      ResourceVersion: (string) (len=6) "201244",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "1b48dd43-8d4a-4cf5-89f0-1576f68a07a9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763521,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 31 62 34 38 64 64 34  |"uid\":\"1b48dd4|
              00000040  33 2d 38 64 34 61 2d 34  63 66 35 2d 38 39 66 30  |3-8d4a-4cf5-89f0|
              00000050  2d 31 35 37 36 66 36 38  61 30 37 61 39 5c 22 7d  |-1576f68a07a9\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:38:41.584: INFO: Pod "test-cleanup-controller-gzq67" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-gzq67",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-5377",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0625b9ef-c57f-47c2-8023-4f0527c4df69",
      ResourceVersion: (string) (len=6) "201228",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "d700810d-cb0f-47f0-8eac-8bf09c5ac85a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  64 37 30 30 38 31 30 64  |uid\":\"d700810d|
              00000080  2d 63 62 30 66 2d 34 37  66 30 2d 38 65 61 63 2d  |-cb0f-47f0-8eac-|
              00000090  38 62 66 30 39 63 35 61  63 38 35 61 5c 22 7d 22  |8bf09c5ac85a\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 32 35 5c 22 7d 22 3a  |.233.66.225\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qrc6v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qrc6v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.84"
        }
      },
      PodIP: (string) (len=13) "10.233.66.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848763517,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://e9bb4f5c3e35d4d235e7ecdedc4eec021956cd1a3e47e22764660a52a20cf127",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 07:38:41.595: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-4kxq6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-4kxq6",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-5377",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "39d2a2a4-6f0a-48fe-885f-614d59a7a565",
      ResourceVersion: (string) (len=6) "201247",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763521,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "db55b657-fc16-41dc-9d3b-21da9ef88415",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763521,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 62  35 35 62 36 35 37 2d 66  |d\":\"db55b657-f|
              00000090  63 31 36 2d 34 31 64 63  2d 39 64 33 62 2d 32 31  |c16-41dc-9d3b-21|
              000000a0  64 61 39 65 66 38 38 34  31 35 5c 22 7d 22 3a 7b  |da9ef88415\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4wvts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4wvts",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 07:38:41.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5377" for this suite. @ 04/15/24 07:38:41.615
• [5.320 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/15/24 07:38:41.652
  Apr 15 07:38:41.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 07:38:41.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:38:41.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:38:41.709
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/15/24 07:38:41.737
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/15/24 07:38:57.948
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/15/24 07:38:57.954
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/15/24 07:38:57.966
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 04/15/24 07:38:57.966
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/15/24 07:38:58.014
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/15/24 07:39:01.106
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/15/24 07:39:02.127
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/15/24 07:39:02.155
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 04/15/24 07:39:02.155
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/15/24 07:39:02.208
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/15/24 07:39:03.229
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/15/24 07:39:05.267
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/15/24 07:39:05.282
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 04/15/24 07:39:05.283
  Apr 15 07:39:05.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4731" for this suite. @ 04/15/24 07:39:05.391
• [23.756 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 04/15/24 07:39:05.411
  Apr 15 07:39:05.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pod-network-test @ 04/15/24 07:39:05.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:05.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:05.461
  STEP: Performing setup for networking test in namespace pod-network-test-5963 @ 04/15/24 07:39:05.472
  STEP: creating a selector @ 04/15/24 07:39:05.472
  STEP: Creating the service pods in kubernetes @ 04/15/24 07:39:05.473
  Apr 15 07:39:05.473: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/15/24 07:39:27.8
  Apr 15 07:39:29.855: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 15 07:39:29.855: INFO: Breadth first check of 10.233.64.121 on host 192.168.121.26...
  Apr 15 07:39:29.868: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.230:9080/dial?request=hostname&protocol=udp&host=10.233.64.121&port=8081&tries=1'] Namespace:pod-network-test-5963 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:39:29.869: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 07:39:29.872: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:39:29.873: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5963/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.230%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.121%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 07:39:30.161: INFO: Waiting for responses: map[]
  Apr 15 07:39:30.163: INFO: reached 10.233.64.121 after 0/1 tries
  Apr 15 07:39:30.163: INFO: Breadth first check of 10.233.65.59 on host 192.168.121.233...
  Apr 15 07:39:30.177: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.230:9080/dial?request=hostname&protocol=udp&host=10.233.65.59&port=8081&tries=1'] Namespace:pod-network-test-5963 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:39:30.177: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 07:39:30.180: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:39:30.181: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5963/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.230%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.59%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 07:39:30.336: INFO: Waiting for responses: map[]
  Apr 15 07:39:30.337: INFO: reached 10.233.65.59 after 0/1 tries
  Apr 15 07:39:30.337: INFO: Breadth first check of 10.233.66.229 on host 192.168.121.84...
  Apr 15 07:39:30.353: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.230:9080/dial?request=hostname&protocol=udp&host=10.233.66.229&port=8081&tries=1'] Namespace:pod-network-test-5963 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:39:30.353: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 07:39:30.358: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:39:30.359: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5963/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.230%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.229%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 07:39:30.493: INFO: Waiting for responses: map[]
  Apr 15 07:39:30.493: INFO: reached 10.233.66.229 after 0/1 tries
  Apr 15 07:39:30.493: INFO: Going to retry 0 out of 3 pods....
  Apr 15 07:39:30.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5963" for this suite. @ 04/15/24 07:39:30.514
• [25.123 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 04/15/24 07:39:30.536
  Apr 15 07:39:30.537: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 07:39:30.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:30.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:30.637
  STEP: Discovering how many secrets are in namespace by default @ 04/15/24 07:39:30.646
  STEP: Counting existing ResourceQuota @ 04/15/24 07:39:35.658
  STEP: Creating a ResourceQuota @ 04/15/24 07:39:40.666
  STEP: Ensuring resource quota status is calculated @ 04/15/24 07:39:40.688
  STEP: Creating a Secret @ 04/15/24 07:39:42.703
  STEP: Ensuring resource quota status captures secret creation @ 04/15/24 07:39:42.732
  STEP: Deleting a secret @ 04/15/24 07:39:44.745
  STEP: Ensuring resource quota status released usage @ 04/15/24 07:39:44.76
  Apr 15 07:39:46.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-938" for this suite. @ 04/15/24 07:39:46.792
• [16.278 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 04/15/24 07:39:46.817
  Apr 15 07:39:46.817: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 07:39:46.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:46.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:46.875
  STEP: Creating a test namespace @ 04/15/24 07:39:46.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:46.947
  STEP: Creating a pod in the namespace @ 04/15/24 07:39:46.953
  STEP: Waiting for the pod to have running status @ 04/15/24 07:39:46.97
  STEP: Deleting the namespace @ 04/15/24 07:39:49.001
  STEP: Waiting for the namespace to be removed. @ 04/15/24 07:39:49.028
  STEP: Recreating the namespace @ 04/15/24 07:40:01.037
  STEP: Verifying there are no pods in the namespace @ 04/15/24 07:40:01.074
  Apr 15 07:40:01.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2972" for this suite. @ 04/15/24 07:40:01.094
  STEP: Destroying namespace "nsdeletetest-580" for this suite. @ 04/15/24 07:40:01.108
  Apr 15 07:40:01.114: INFO: Namespace nsdeletetest-580 was already deleted
  STEP: Destroying namespace "nsdeletetest-9140" for this suite. @ 04/15/24 07:40:01.114
• [14.310 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 04/15/24 07:40:01.127
  Apr 15 07:40:01.127: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 07:40:01.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:40:01.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:40:01.204
  Apr 15 07:40:01.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4475" for this suite. @ 04/15/24 07:40:01.25
• [0.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 04/15/24 07:40:01.279
  Apr 15 07:40:01.279: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename aggregator @ 04/15/24 07:40:01.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:40:01.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:40:01.337
  Apr 15 07:40:01.367: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Registering the sample API server. @ 04/15/24 07:40:01.371
  Apr 15 07:40:02.510: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Apr 15 07:40:02.569: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  Apr 15 07:40:04.738: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 07:40:06.750: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 07:40:08.750: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 07:40:10.756: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 07:40:12.750: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 07:40:14.749: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 07:40:16.747: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 07:40:18.747: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 07:40:20.750: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 07:40:22.748: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 07:40:24.893: INFO: Waited 131.714567ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/15/24 07:40:25.004
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/15/24 07:40:25.013
  STEP: List APIServices @ 04/15/24 07:40:25.035
  Apr 15 07:40:25.066: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/15/24 07:40:25.066
  Apr 15 07:40:25.099: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/15/24 07:40:25.1
  Apr 15 07:40:25.131: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.April, 15, 7, 40, 24, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/15/24 07:40:25.132
  Apr 15 07:40:25.141: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-04-15 07:40:24 +0000 UTC Passed all checks passed}
  Apr 15 07:40:25.141: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 07:40:25.141: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/15/24 07:40:25.141
  Apr 15 07:40:25.175: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-20816944" @ 04/15/24 07:40:25.176
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/15/24 07:40:25.206
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/15/24 07:40:25.223
  STEP: Patch APIService Status @ 04/15/24 07:40:25.236
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/15/24 07:40:25.255
  Apr 15 07:40:25.267: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-04-15 07:40:24 +0000 UTC Passed all checks passed}
  Apr 15 07:40:25.268: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 07:40:25.268: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Apr 15 07:40:25.268: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 04/15/24 07:40:25.269
  STEP: Confirm that the generated APIService has been deleted @ 04/15/24 07:40:25.309
  Apr 15 07:40:25.310: INFO: Requesting list of APIServices to confirm quantity
  Apr 15 07:40:25.326: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Apr 15 07:40:25.326: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Apr 15 07:40:25.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2300" for this suite. @ 04/15/24 07:40:25.655
• [24.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/15/24 07:40:25.676
  Apr 15 07:40:25.676: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pods @ 04/15/24 07:40:25.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:40:25.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:40:25.739
  STEP: Create set of pods @ 04/15/24 07:40:25.75
  Apr 15 07:40:25.772: INFO: created test-pod-1
  Apr 15 07:40:25.792: INFO: created test-pod-2
  Apr 15 07:40:25.830: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/15/24 07:40:25.83
  STEP: waiting for all pods to be deleted @ 04/15/24 07:40:27.964
  Apr 15 07:40:27.974: INFO: Pod quantity 3 is different from expected quantity 0
  Apr 15 07:40:28.975: INFO: Pod quantity 3 is different from expected quantity 0
  Apr 15 07:40:29.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3067" for this suite. @ 04/15/24 07:40:29.989
• [4.334 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 04/15/24 07:40:30.011
  Apr 15 07:40:30.011: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:40:30.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:40:30.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:40:30.057
  STEP: Creating configMap with name projected-configmap-test-volume-2353f00b-629f-446d-9b2e-ea336c858334 @ 04/15/24 07:40:30.064
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:40:30.079
  STEP: Saw pod success @ 04/15/24 07:40:34.143
  Apr 15 07:40:34.152: INFO: Trying to get logs from node eehaephong4y-3 pod pod-projected-configmaps-1a30fbb7-9e83-4297-9038-ec9afad6fb3c container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:40:34.19
  Apr 15 07:40:34.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4391" for this suite. @ 04/15/24 07:40:34.244
• [4.253 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 04/15/24 07:40:34.265
  Apr 15 07:40:34.265: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:40:34.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:40:34.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:40:34.334
  STEP: Setting up server cert @ 04/15/24 07:40:34.383
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:40:34.976
  STEP: Deploying the webhook pod @ 04/15/24 07:40:34.993
  STEP: Wait for the deployment to be ready @ 04/15/24 07:40:35.032
  Apr 15 07:40:35.055: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/15/24 07:40:37.073
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:40:37.114
  Apr 15 07:40:38.114: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/15/24 07:40:38.141
  STEP: create a pod that should be denied by the webhook @ 04/15/24 07:40:38.195
  STEP: create a pod that causes the webhook to hang @ 04/15/24 07:40:38.22
  STEP: create a configmap that should be denied by the webhook @ 04/15/24 07:40:48.24
  STEP: create a configmap that should be admitted by the webhook @ 04/15/24 07:40:48.279
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/15/24 07:40:48.306
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/15/24 07:40:48.334
  STEP: create a namespace that bypass the webhook @ 04/15/24 07:40:48.359
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/15/24 07:40:48.405
  Apr 15 07:40:48.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1947" for this suite. @ 04/15/24 07:40:48.698
  STEP: Destroying namespace "webhook-markers-8496" for this suite. @ 04/15/24 07:40:48.722
  STEP: Destroying namespace "exempted-namespace-6183" for this suite. @ 04/15/24 07:40:48.751
• [14.517 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/15/24 07:40:48.787
  Apr 15 07:40:48.787: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename crd-watch @ 04/15/24 07:40:48.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:40:48.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:40:48.85
  Apr 15 07:40:48.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Creating first CR  @ 04/15/24 07:40:51.602
  Apr 15 07:40:51.625: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T07:40:51Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T07:40:51Z]] name:name1 resourceVersion:201956 uid:3e5373d3-f6aa-49d0-b989-e6bd444c947b] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 04/15/24 07:41:01.629
  Apr 15 07:41:01.646: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T07:41:01Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T07:41:01Z]] name:name2 resourceVersion:201995 uid:bbd0ea3e-d948-4960-9383-94b311a38a74] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 04/15/24 07:41:11.649
  Apr 15 07:41:11.667: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T07:40:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T07:41:11Z]] name:name1 resourceVersion:202013 uid:3e5373d3-f6aa-49d0-b989-e6bd444c947b] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 04/15/24 07:41:21.668
  Apr 15 07:41:21.688: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T07:41:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T07:41:21Z]] name:name2 resourceVersion:202031 uid:bbd0ea3e-d948-4960-9383-94b311a38a74] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 04/15/24 07:41:31.689
  Apr 15 07:41:31.710: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T07:40:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T07:41:11Z]] name:name1 resourceVersion:202049 uid:3e5373d3-f6aa-49d0-b989-e6bd444c947b] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 04/15/24 07:41:41.711
  Apr 15 07:41:41.749: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T07:41:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T07:41:21Z]] name:name2 resourceVersion:202067 uid:bbd0ea3e-d948-4960-9383-94b311a38a74] num:map[num1:9223372036854775807 num2:1000000]]}
  Apr 15 07:41:52.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-8848" for this suite. @ 04/15/24 07:41:52.303
• [63.531 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 04/15/24 07:41:52.32
  Apr 15 07:41:52.320: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:41:52.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:41:52.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:41:52.367
  STEP: creating Agnhost RC @ 04/15/24 07:41:52.377
  Apr 15 07:41:52.377: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9739 create -f -'
  Apr 15 07:41:52.767: INFO: stderr: ""
  Apr 15 07:41:52.767: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/15/24 07:41:52.767
  Apr 15 07:41:53.775: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:41:53.775: INFO: Found 1 / 1
  Apr 15 07:41:53.775: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/15/24 07:41:53.775
  Apr 15 07:41:53.783: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:41:53.783: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 15 07:41:53.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9739 patch pod agnhost-primary-j9nb5 -p {"metadata":{"annotations":{"x":"y"}}}'
  Apr 15 07:41:53.970: INFO: stderr: ""
  Apr 15 07:41:53.970: INFO: stdout: "pod/agnhost-primary-j9nb5 patched\n"
  STEP: checking annotations @ 04/15/24 07:41:53.97
  Apr 15 07:41:53.977: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:41:53.977: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 15 07:41:53.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9739" for this suite. @ 04/15/24 07:41:53.996
• [1.691 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 04/15/24 07:41:54.019
  Apr 15 07:41:54.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:41:54.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:41:54.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:41:54.067
  STEP: Setting up server cert @ 04/15/24 07:41:54.127
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:41:54.616
  STEP: Deploying the webhook pod @ 04/15/24 07:41:54.633
  STEP: Wait for the deployment to be ready @ 04/15/24 07:41:54.658
  Apr 15 07:41:54.674: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/15/24 07:41:56.699
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:41:56.725
  Apr 15 07:41:57.726: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 15 07:41:57.746: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6419-crds.webhook.example.com via the AdmissionRegistration API @ 04/15/24 07:41:58.312
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/15/24 07:41:58.37
  Apr 15 07:42:01.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9404" for this suite. @ 04/15/24 07:42:01.388
  STEP: Destroying namespace "webhook-markers-9175" for this suite. @ 04/15/24 07:42:01.403
• [7.398 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 04/15/24 07:42:01.418
  Apr 15 07:42:01.418: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:42:01.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:42:01.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:42:01.455
  STEP: creating a replication controller @ 04/15/24 07:42:01.461
  Apr 15 07:42:01.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3716 create -f -'
  Apr 15 07:42:01.761: INFO: stderr: ""
  Apr 15 07:42:01.761: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/15/24 07:42:01.763
  Apr 15 07:42:01.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3716 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 07:42:01.991: INFO: stderr: ""
  Apr 15 07:42:01.991: INFO: stdout: "update-demo-nautilus-4nskg update-demo-nautilus-pswtk "
  Apr 15 07:42:01.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3716 get pods update-demo-nautilus-4nskg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 07:42:02.148: INFO: stderr: ""
  Apr 15 07:42:02.148: INFO: stdout: ""
  Apr 15 07:42:02.148: INFO: update-demo-nautilus-4nskg is created but not running
  Apr 15 07:42:07.149: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3716 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 07:42:07.328: INFO: stderr: ""
  Apr 15 07:42:07.328: INFO: stdout: "update-demo-nautilus-4nskg update-demo-nautilus-pswtk "
  Apr 15 07:42:07.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3716 get pods update-demo-nautilus-4nskg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 07:42:07.503: INFO: stderr: ""
  Apr 15 07:42:07.503: INFO: stdout: "true"
  Apr 15 07:42:07.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3716 get pods update-demo-nautilus-4nskg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 07:42:07.664: INFO: stderr: ""
  Apr 15 07:42:07.664: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 07:42:07.664: INFO: validating pod update-demo-nautilus-4nskg
  Apr 15 07:42:07.684: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 07:42:07.684: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 07:42:07.684: INFO: update-demo-nautilus-4nskg is verified up and running
  Apr 15 07:42:07.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3716 get pods update-demo-nautilus-pswtk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 07:42:07.824: INFO: stderr: ""
  Apr 15 07:42:07.824: INFO: stdout: "true"
  Apr 15 07:42:07.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3716 get pods update-demo-nautilus-pswtk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 07:42:07.971: INFO: stderr: ""
  Apr 15 07:42:07.971: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 07:42:07.971: INFO: validating pod update-demo-nautilus-pswtk
  Apr 15 07:42:07.987: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 07:42:07.987: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 07:42:07.987: INFO: update-demo-nautilus-pswtk is verified up and running
  STEP: using delete to clean up resources @ 04/15/24 07:42:07.987
  Apr 15 07:42:07.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3716 delete --grace-period=0 --force -f -'
  Apr 15 07:42:08.137: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 07:42:08.137: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 15 07:42:08.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3716 get rc,svc -l name=update-demo --no-headers'
  Apr 15 07:42:08.385: INFO: stderr: "No resources found in kubectl-3716 namespace.\n"
  Apr 15 07:42:08.385: INFO: stdout: ""
  Apr 15 07:42:08.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3716 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 15 07:42:08.550: INFO: stderr: ""
  Apr 15 07:42:08.550: INFO: stdout: ""
  Apr 15 07:42:08.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3716" for this suite. @ 04/15/24 07:42:08.561
• [7.157 seconds]
------------------------------
S
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 04/15/24 07:42:08.576
  Apr 15 07:42:08.576: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename lease-test @ 04/15/24 07:42:08.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:42:08.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:42:08.628
  Apr 15 07:42:08.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7205" for this suite. @ 04/15/24 07:42:08.766
• [0.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 04/15/24 07:42:08.782
  Apr 15 07:42:08.782: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:42:08.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:42:08.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:42:08.815
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/15/24 07:42:08.822
  STEP: Saw pod success @ 04/15/24 07:42:12.937
  Apr 15 07:42:12.946: INFO: Trying to get logs from node eehaephong4y-3 pod pod-8f0ca0d4-ff89-47ba-a11b-bf813ac55aac container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:42:12.986
  Apr 15 07:42:13.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7715" for this suite. @ 04/15/24 07:42:13.036
• [4.275 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/15/24 07:42:13.062
  Apr 15 07:42:13.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename secrets @ 04/15/24 07:42:13.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:42:13.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:42:13.11
  Apr 15 07:42:13.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9107" for this suite. @ 04/15/24 07:42:13.213
• [0.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 04/15/24 07:42:13.235
  Apr 15 07:42:13.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:42:13.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:42:13.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:42:13.276
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:42:13.283
  STEP: Saw pod success @ 04/15/24 07:42:17.352
  Apr 15 07:42:17.358: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-f3a2fd32-dc8a-4502-82ee-af80517557e6 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:42:17.37
  Apr 15 07:42:17.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-785" for this suite. @ 04/15/24 07:42:17.422
• [4.203 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 04/15/24 07:42:17.439
  Apr 15 07:42:17.439: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename containers @ 04/15/24 07:42:17.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:42:17.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:42:17.48
  STEP: Creating a pod to test override all @ 04/15/24 07:42:17.486
  STEP: Saw pod success @ 04/15/24 07:42:21.54
  Apr 15 07:42:21.548: INFO: Trying to get logs from node eehaephong4y-3 pod client-containers-04ca6068-377a-48ae-9286-da56224d42ff container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:42:21.568
  Apr 15 07:42:21.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5499" for this suite. @ 04/15/24 07:42:21.624
• [4.200 seconds]
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/15/24 07:42:21.639
  Apr 15 07:42:21.639: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename deployment @ 04/15/24 07:42:21.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:42:21.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:42:21.687
  Apr 15 07:42:21.692: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Apr 15 07:42:21.708: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 15 07:42:26.724: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 07:42:26.724
  Apr 15 07:42:26.724: INFO: Creating deployment "test-rolling-update-deployment"
  Apr 15 07:42:26.741: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Apr 15 07:42:26.770: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Apr 15 07:42:28.785: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Apr 15 07:42:28.792: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Apr 15 07:42:28.813: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca6397a5-1d06-4264-84cf-9cb2c129312e",
      ResourceVersion: (string) (len=6) "202459",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763746,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 07:42:28.824: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6bbe1f2-7292-45fb-b1a0-2e4cd89d728a",
      ResourceVersion: (string) (len=6) "202449",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763746,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "ca6397a5-1d06-4264-84cf-9cb2c129312e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 61 36 33 39 37  61 35 2d 31 64 30 36 2d  |\"ca6397a5-1d06-|
              00000120  34 32 36 34 2d 38 34 63  66 2d 39 63 62 32 63 31  |4264-84cf-9cb2c1|
              00000130  32 39 33 31 32 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |29312e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:42:28.827: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Apr 15 07:42:28.828: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "50c487b1-cb7d-44fa-ba26-ae9ecdb004ac",
      ResourceVersion: (string) (len=6) "202458",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763741,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "ca6397a5-1d06-4264-84cf-9cb2c129312e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763741,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 63 61 36 33 39 37 61  |"uid\":\"ca6397a|
              000000b0  35 2d 31 64 30 36 2d 34  32 36 34 2d 38 34 63 66  |5-1d06-4264-84cf|
              000000c0  2d 39 63 62 32 63 31 32  39 33 31 32 65 5c 22 7d  |-9cb2c129312e\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:42:28.839: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-s724k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-s724k",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-1072",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc083d9d-fe7d-4fa1-9760-88bd785fd15f",
      ResourceVersion: (string) (len=6) "202448",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763746,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "a6bbe1f2-7292-45fb-b1a0-2e4cd89d728a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  62 62 65 31 66 32 2d 37  |d\":\"a6bbe1f2-7|
              00000090  32 39 32 2d 34 35 66 62  2d 62 31 61 30 2d 32 65  |292-45fb-b1a0-2e|
              000000a0  34 63 64 38 39 64 37 32  38 61 5c 22 7d 22 3a 7b  |4cd89d728a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763748,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 34 35 5c 22 7d 22 3a  |.233.66.245\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tbtg5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tbtg5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.84"
        }
      },
      PodIP: (string) (len=13) "10.233.66.245",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.245"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763746,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848763747,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://70fdfc5c049f7bb91e5bf02714d2a75642b6448cb75536621dd24e6a549eaf0b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 07:42:28.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1072" for this suite. @ 04/15/24 07:42:28.852
• [7.223 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/15/24 07:42:28.863
  Apr 15 07:42:28.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 07:42:28.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:42:28.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:42:28.906
  STEP: Creating a suspended cronjob @ 04/15/24 07:42:28.911
  STEP: Ensuring no jobs are scheduled @ 04/15/24 07:42:28.921
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/15/24 07:47:28.938
  STEP: Removing cronjob @ 04/15/24 07:47:28.946
  Apr 15 07:47:28.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6177" for this suite. @ 04/15/24 07:47:28.971
• [300.125 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/15/24 07:47:28.992
  Apr 15 07:47:28.992: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename subpath @ 04/15/24 07:47:28.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:47:29.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:47:29.041
  STEP: Setting up data @ 04/15/24 07:47:29.046
  STEP: Creating pod pod-subpath-test-configmap-w5qm @ 04/15/24 07:47:29.067
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 07:47:29.067
  STEP: Saw pod success @ 04/15/24 07:47:53.225
  Apr 15 07:47:53.232: INFO: Trying to get logs from node eehaephong4y-3 pod pod-subpath-test-configmap-w5qm container test-container-subpath-configmap-w5qm: <nil>
  STEP: delete the pod @ 04/15/24 07:47:53.278
  STEP: Deleting pod pod-subpath-test-configmap-w5qm @ 04/15/24 07:47:53.333
  Apr 15 07:47:53.333: INFO: Deleting pod "pod-subpath-test-configmap-w5qm" in namespace "subpath-1997"
  Apr 15 07:47:53.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1997" for this suite. @ 04/15/24 07:47:53.356
• [24.381 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 04/15/24 07:47:53.374
  Apr 15 07:47:53.374: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 07:47:53.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:47:53.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:47:53.419
  STEP: Creating a pod to test service account token:  @ 04/15/24 07:47:53.426
  STEP: Saw pod success @ 04/15/24 07:47:55.462
  Apr 15 07:47:55.468: INFO: Trying to get logs from node eehaephong4y-3 pod test-pod-24b475d4-1b94-4314-8087-899bd3b0ca55 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:47:55.484
  Apr 15 07:47:55.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7025" for this suite. @ 04/15/24 07:47:55.539
• [2.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 04/15/24 07:47:55.569
  Apr 15 07:47:55.569: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 07:47:55.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:47:55.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:47:55.615
  STEP: Creating pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42 @ 04/15/24 07:47:55.623
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 07:47:57.672
  Apr 15 07:47:57.680: INFO: Initial restart count of pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 is 0
  Apr 15 07:47:57.689: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:47:59.697: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:01.707: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:03.718: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:05.728: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:07.740: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:09.751: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:11.763: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:13.774: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:15.784: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:17.797: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:19.807: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:21.820: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:23.829: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:25.836: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:27.847: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:29.857: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:31.866: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:33.874: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:35.889: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:37.902: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:39.912: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:41.920: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:43.931: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:45.944: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:47.953: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:49.962: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:51.976: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:53.984: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:55.994: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:48:58.007: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:00.019: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:02.029: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:04.040: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:06.051: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:08.062: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:10.070: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:12.079: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:14.087: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:16.101: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:18.110: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:20.119: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:22.128: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:24.136: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:26.148: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:28.160: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:30.170: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:32.181: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:34.190: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:36.204: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:38.216: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:40.224: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:42.235: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:44.244: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:46.251: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:48.261: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:50.271: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:52.279: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:54.290: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:56.298: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:49:58.309: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:00.319: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:02.328: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:04.340: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:06.355: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:08.370: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:10.386: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:12.399: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:14.410: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:16.420: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:18.433: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:20.448: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:22.458: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:24.469: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:26.482: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:28.492: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:30.506: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:32.514: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:34.522: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:36.531: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:38.548: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:40.559: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:42.567: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:44.577: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:46.587: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:48.598: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:50.608: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:52.634: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:54.642: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:56.651: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:50:58.661: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:00.670: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:02.678: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:04.685: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:06.693: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:08.704: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:10.711: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:12.725: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:14.732: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:16.742: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:18.752: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:20.760: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:22.771: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:24.780: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:26.790: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:28.801: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:30.811: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:32.824: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:34.834: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:36.845: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:38.890: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:40.900: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:42.911: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:44.919: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:46.928: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:48.939: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:50.949: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:52.959: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:54.970: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  Apr 15 07:51:56.979: INFO: Get pod liveness-bc4efd47-9455-468d-8126-6e7ebd914c48 in namespace container-probe-42
  STEP: deleting the pod @ 04/15/24 07:51:58.98
  Apr 15 07:51:59.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-42" for this suite. @ 04/15/24 07:51:59.041
• [243.489 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 04/15/24 07:51:59.059
  Apr 15 07:51:59.059: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 07:51:59.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:51:59.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:51:59.132
  STEP: Creating configMap with name configmap-test-volume-0419a8b9-8a54-4377-a292-db80b6d80eb2 @ 04/15/24 07:51:59.137
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:51:59.156
  STEP: Saw pod success @ 04/15/24 07:52:03.223
  Apr 15 07:52:03.237: INFO: Trying to get logs from node eehaephong4y-3 pod pod-configmaps-fcfb83fe-1107-47b7-a682-f34345be8f82 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:52:03.281
  Apr 15 07:52:03.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6972" for this suite. @ 04/15/24 07:52:03.343
• [4.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 04/15/24 07:52:03.365
  Apr 15 07:52:03.365: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename apf @ 04/15/24 07:52:03.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:52:03.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:52:03.424
  STEP: getting /apis @ 04/15/24 07:52:03.43
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/15/24 07:52:03.439
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/15/24 07:52:03.442
  STEP: creating @ 04/15/24 07:52:03.446
  STEP: getting @ 04/15/24 07:52:03.496
  STEP: listing @ 04/15/24 07:52:03.502
  STEP: watching @ 04/15/24 07:52:03.513
  Apr 15 07:52:03.513: INFO: starting watch
  STEP: patching @ 04/15/24 07:52:03.519
  STEP: updating @ 04/15/24 07:52:03.537
  Apr 15 07:52:03.565: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 04/15/24 07:52:03.567
  STEP: patching /status @ 04/15/24 07:52:03.577
  STEP: updating /status @ 04/15/24 07:52:03.591
  STEP: deleting @ 04/15/24 07:52:03.613
  STEP: deleting a collection @ 04/15/24 07:52:03.643
  Apr 15 07:52:03.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-867" for this suite. @ 04/15/24 07:52:03.714
• [0.364 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 04/15/24 07:52:03.729
  Apr 15 07:52:03.729: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 07:52:03.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:52:03.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:52:03.774
  STEP: Creating ServiceAccount "e2e-sa-hjkcg"  @ 04/15/24 07:52:03.78
  Apr 15 07:52:03.789: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-hjkcg"  @ 04/15/24 07:52:03.79
  Apr 15 07:52:03.805: INFO: AutomountServiceAccountToken: true
  Apr 15 07:52:03.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1726" for this suite. @ 04/15/24 07:52:03.816
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 04/15/24 07:52:03.837
  Apr 15 07:52:03.837: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename secrets @ 04/15/24 07:52:03.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:52:03.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:52:03.88
  STEP: Creating secret with name secret-test-241bea73-85f5-48b0-8195-f8520921ebb1 @ 04/15/24 07:52:03.886
  STEP: Creating a pod to test consume secrets @ 04/15/24 07:52:03.897
  STEP: Saw pod success @ 04/15/24 07:52:07.944
  Apr 15 07:52:07.955: INFO: Trying to get logs from node eehaephong4y-3 pod pod-secrets-aa181e62-0ba4-4a95-88f7-8e7591f88236 container secret-env-test: <nil>
  STEP: delete the pod @ 04/15/24 07:52:07.97
  Apr 15 07:52:08.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4379" for this suite. @ 04/15/24 07:52:08.023
• [4.201 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 04/15/24 07:52:08.039
  Apr 15 07:52:08.039: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 07:52:08.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:52:08.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:52:08.079
  STEP: Counting existing ResourceQuota @ 04/15/24 07:52:08.085
  STEP: Creating a ResourceQuota @ 04/15/24 07:52:13.094
  STEP: Ensuring resource quota status is calculated @ 04/15/24 07:52:13.112
  STEP: Creating a ReplicaSet @ 04/15/24 07:52:15.133
  STEP: Ensuring resource quota status captures replicaset creation @ 04/15/24 07:52:15.17
  STEP: Deleting a ReplicaSet @ 04/15/24 07:52:17.179
  STEP: Ensuring resource quota status released usage @ 04/15/24 07:52:17.199
  Apr 15 07:52:19.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3591" for this suite. @ 04/15/24 07:52:19.226
• [11.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/15/24 07:52:19.255
  Apr 15 07:52:19.255: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 07:52:19.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:52:19.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:52:19.297
  Apr 15 07:52:19.373: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 07:52:19.389
  Apr 15 07:52:19.412: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 07:52:19.412: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  Apr 15 07:52:20.443: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 07:52:20.444: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  Apr 15 07:52:21.410: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 07:52:21.411: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/15/24 07:52:21.448
  STEP: Check that daemon pods images are updated. @ 04/15/24 07:52:21.477
  Apr 15 07:52:21.494: INFO: Wrong image for pod: daemon-set-fzrlw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:52:21.494: INFO: Wrong image for pod: daemon-set-j4krl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:52:21.494: INFO: Wrong image for pod: daemon-set-lbv7t. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:52:22.506: INFO: Wrong image for pod: daemon-set-fzrlw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:52:22.507: INFO: Wrong image for pod: daemon-set-j4krl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:52:22.507: INFO: Pod daemon-set-xxb7b is not available
  Apr 15 07:52:23.502: INFO: Wrong image for pod: daemon-set-fzrlw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:52:24.494: INFO: Wrong image for pod: daemon-set-fzrlw. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:52:24.494: INFO: Pod daemon-set-s6zdq is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/15/24 07:52:26.502
  Apr 15 07:52:26.520: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 07:52:26.520: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 07:52:26.558
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9138, will wait for the garbage collector to delete the pods @ 04/15/24 07:52:26.558
  Apr 15 07:52:26.629: INFO: Deleting DaemonSet.extensions daemon-set took: 13.419776ms
  Apr 15 07:52:26.730: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.16779ms
  Apr 15 07:52:28.537: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 07:52:28.537: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 07:52:28.545: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"203803"},"items":null}

  Apr 15 07:52:28.578: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"203803"},"items":null}

  Apr 15 07:52:28.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9138" for this suite. @ 04/15/24 07:52:28.638
• [9.397 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 04/15/24 07:52:28.654
  Apr 15 07:52:28.654: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:52:28.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:52:28.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:52:28.696
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/15/24 07:52:28.702
  STEP: Saw pod success @ 04/15/24 07:52:32.755
  Apr 15 07:52:32.762: INFO: Trying to get logs from node eehaephong4y-3 pod pod-2d5cbbc9-cad8-474e-a150-4aa41f1b0fe0 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:52:32.779
  Apr 15 07:52:32.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6774" for this suite. @ 04/15/24 07:52:32.827
• [4.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 04/15/24 07:52:32.852
  Apr 15 07:52:32.852: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 07:52:32.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:52:32.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:52:32.9
  STEP: fetching services @ 04/15/24 07:52:32.907
  Apr 15 07:52:32.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3365" for this suite. @ 04/15/24 07:52:32.925
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 04/15/24 07:52:32.967
  Apr 15 07:52:32.968: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:52:32.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:52:33.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:52:33.011
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:52:33.018
  STEP: Saw pod success @ 04/15/24 07:52:37.082
  Apr 15 07:52:37.092: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-8cd2035f-8ac3-45b3-989d-4265b987dbee container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:52:37.109
  Apr 15 07:52:37.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7709" for this suite. @ 04/15/24 07:52:37.174
• [4.223 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 04/15/24 07:52:37.191
  Apr 15 07:52:37.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 07:52:37.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:52:37.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:52:37.238
  STEP: fetching the /apis discovery document @ 04/15/24 07:52:37.244
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/15/24 07:52:37.247
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/15/24 07:52:37.247
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/15/24 07:52:37.247
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/15/24 07:52:37.249
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/15/24 07:52:37.249
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/15/24 07:52:37.252
  Apr 15 07:52:37.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1539" for this suite. @ 04/15/24 07:52:37.263
• [0.089 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/15/24 07:52:37.28
  Apr 15 07:52:37.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename subpath @ 04/15/24 07:52:37.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:52:37.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:52:37.329
  STEP: Setting up data @ 04/15/24 07:52:37.337
  STEP: Creating pod pod-subpath-test-configmap-ghgk @ 04/15/24 07:52:37.36
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 07:52:37.36
  STEP: Saw pod success @ 04/15/24 07:53:01.523
  Apr 15 07:53:01.531: INFO: Trying to get logs from node eehaephong4y-3 pod pod-subpath-test-configmap-ghgk container test-container-subpath-configmap-ghgk: <nil>
  STEP: delete the pod @ 04/15/24 07:53:01.56
  STEP: Deleting pod pod-subpath-test-configmap-ghgk @ 04/15/24 07:53:01.597
  Apr 15 07:53:01.597: INFO: Deleting pod "pod-subpath-test-configmap-ghgk" in namespace "subpath-8111"
  Apr 15 07:53:01.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8111" for this suite. @ 04/15/24 07:53:01.618
• [24.352 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 04/15/24 07:53:01.636
  Apr 15 07:53:01.636: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 07:53:01.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:53:01.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:53:01.7
  Apr 15 07:53:01.707: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/15/24 07:53:03.967
  Apr 15 07:53:03.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-3141 --namespace=crd-publish-openapi-3141 create -f -'
  Apr 15 07:53:04.387: INFO: stderr: ""
  Apr 15 07:53:04.387: INFO: stdout: "e2e-test-crd-publish-openapi-3326-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 15 07:53:04.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-3141 --namespace=crd-publish-openapi-3141 delete e2e-test-crd-publish-openapi-3326-crds test-cr'
  Apr 15 07:53:04.603: INFO: stderr: ""
  Apr 15 07:53:04.603: INFO: stdout: "e2e-test-crd-publish-openapi-3326-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Apr 15 07:53:04.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-3141 --namespace=crd-publish-openapi-3141 apply -f -'
  Apr 15 07:53:04.794: INFO: stderr: ""
  Apr 15 07:53:04.794: INFO: stdout: "e2e-test-crd-publish-openapi-3326-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 15 07:53:04.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-3141 --namespace=crd-publish-openapi-3141 delete e2e-test-crd-publish-openapi-3326-crds test-cr'
  Apr 15 07:53:05.122: INFO: stderr: ""
  Apr 15 07:53:05.122: INFO: stdout: "e2e-test-crd-publish-openapi-3326-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/15/24 07:53:05.122
  Apr 15 07:53:05.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-3141 explain e2e-test-crd-publish-openapi-3326-crds'
  Apr 15 07:53:05.285: INFO: stderr: ""
  Apr 15 07:53:05.285: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3326-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Apr 15 07:53:07.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3141" for this suite. @ 04/15/24 07:53:07.525
• [5.905 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/15/24 07:53:07.543
  Apr 15 07:53:07.543: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename proxy @ 04/15/24 07:53:07.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:53:07.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:53:07.598
  Apr 15 07:53:07.603: INFO: Creating pod...
  Apr 15 07:53:09.655: INFO: Creating service...
  Apr 15 07:53:09.678: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/pods/agnhost/proxy/some/path/with/DELETE
  Apr 15 07:53:09.691: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 15 07:53:09.691: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/pods/agnhost/proxy/some/path/with/GET
  Apr 15 07:53:09.707: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 15 07:53:09.708: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/pods/agnhost/proxy/some/path/with/HEAD
  Apr 15 07:53:09.724: INFO: http.Client request:HEAD | StatusCode:200
  Apr 15 07:53:09.725: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/pods/agnhost/proxy/some/path/with/OPTIONS
  Apr 15 07:53:09.734: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 15 07:53:09.734: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/pods/agnhost/proxy/some/path/with/PATCH
  Apr 15 07:53:09.744: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 15 07:53:09.744: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/pods/agnhost/proxy/some/path/with/POST
  Apr 15 07:53:09.752: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 15 07:53:09.752: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/pods/agnhost/proxy/some/path/with/PUT
  Apr 15 07:53:09.757: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 15 07:53:09.759: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/services/test-service/proxy/some/path/with/DELETE
  Apr 15 07:53:09.771: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 15 07:53:09.771: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/services/test-service/proxy/some/path/with/GET
  Apr 15 07:53:09.781: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 15 07:53:09.781: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/services/test-service/proxy/some/path/with/HEAD
  Apr 15 07:53:09.790: INFO: http.Client request:HEAD | StatusCode:200
  Apr 15 07:53:09.790: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/services/test-service/proxy/some/path/with/OPTIONS
  Apr 15 07:53:09.800: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 15 07:53:09.800: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/services/test-service/proxy/some/path/with/PATCH
  Apr 15 07:53:09.811: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 15 07:53:09.811: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/services/test-service/proxy/some/path/with/POST
  Apr 15 07:53:09.820: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 15 07:53:09.820: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6440/services/test-service/proxy/some/path/with/PUT
  Apr 15 07:53:09.828: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 15 07:53:09.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6440" for this suite. @ 04/15/24 07:53:09.836
• [2.304 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 04/15/24 07:53:09.848
  Apr 15 07:53:09.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 07:53:09.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:53:09.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:53:09.893
  STEP: Creating ReplicationController "e2e-rc-t64lz" @ 04/15/24 07:53:09.899
  Apr 15 07:53:09.911: INFO: Get Replication Controller "e2e-rc-t64lz" to confirm replicas
  Apr 15 07:53:10.911: INFO: Get Replication Controller "e2e-rc-t64lz" to confirm replicas
  Apr 15 07:53:10.919: INFO: Found 1 replicas for "e2e-rc-t64lz" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-t64lz" @ 04/15/24 07:53:10.919
  STEP: Updating a scale subresource @ 04/15/24 07:53:10.932
  STEP: Verifying replicas where modified for replication controller "e2e-rc-t64lz" @ 04/15/24 07:53:10.945
  Apr 15 07:53:10.946: INFO: Get Replication Controller "e2e-rc-t64lz" to confirm replicas
  Apr 15 07:53:11.946: INFO: Get Replication Controller "e2e-rc-t64lz" to confirm replicas
  Apr 15 07:53:11.961: INFO: Found 2 replicas for "e2e-rc-t64lz" replication controller
  Apr 15 07:53:11.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3619" for this suite. @ 04/15/24 07:53:11.976
• [2.145 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 04/15/24 07:53:11.993
  Apr 15 07:53:11.993: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 07:53:11.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:53:12.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:53:12.044
  Apr 15 07:53:12.049: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 07:53:15.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-22" for this suite. @ 04/15/24 07:53:15.453
• [3.479 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/15/24 07:53:15.473
  Apr 15 07:53:15.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename secrets @ 04/15/24 07:53:15.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:53:15.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:53:15.535
  STEP: Creating secret with name secret-test-map-c489f259-cb27-4ea2-b406-0d7691e992a0 @ 04/15/24 07:53:15.543
  STEP: Creating a pod to test consume secrets @ 04/15/24 07:53:15.568
  STEP: Saw pod success @ 04/15/24 07:53:19.636
  Apr 15 07:53:19.644: INFO: Trying to get logs from node eehaephong4y-3 pod pod-secrets-a802660f-a399-469d-ab95-0c8200725e83 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:53:19.689
  Apr 15 07:53:19.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-969" for this suite. @ 04/15/24 07:53:19.736
• [4.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/15/24 07:53:19.757
  Apr 15 07:53:19.757: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename init-container @ 04/15/24 07:53:19.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:53:19.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:53:19.803
  STEP: creating the pod @ 04/15/24 07:53:19.812
  Apr 15 07:53:19.813: INFO: PodSpec: initContainers in spec.initContainers
  Apr 15 07:53:22.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-761" for this suite. @ 04/15/24 07:53:22.935
• [3.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 04/15/24 07:53:22.959
  Apr 15 07:53:22.960: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:53:22.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:53:23.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:53:23.009
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:53:23.017
  STEP: Saw pod success @ 04/15/24 07:53:27.097
  Apr 15 07:53:27.105: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-8406c677-a963-417b-b6de-8b904f4c5508 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:53:27.122
  Apr 15 07:53:27.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9025" for this suite. @ 04/15/24 07:53:27.181
• [4.238 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 04/15/24 07:53:27.198
  Apr 15 07:53:27.198: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:53:27.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:53:27.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:53:27.274
  STEP: validating api versions @ 04/15/24 07:53:27.28
  Apr 15 07:53:27.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-5 api-versions'
  Apr 15 07:53:27.445: INFO: stderr: ""
  Apr 15 07:53:27.445: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Apr 15 07:53:27.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5" for this suite. @ 04/15/24 07:53:27.459
• [0.277 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 04/15/24 07:53:27.476
  Apr 15 07:53:27.476: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 07:53:27.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:53:27.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:53:27.523
  STEP: Deleting RuntimeClass runtimeclass-8368-delete-me @ 04/15/24 07:53:27.54
  STEP: Waiting for the RuntimeClass to disappear @ 04/15/24 07:53:27.558
  Apr 15 07:53:27.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8368" for this suite. @ 04/15/24 07:53:27.591
• [0.128 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 04/15/24 07:53:27.607
  Apr 15 07:53:27.607: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 07:53:27.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:53:27.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:53:27.658
  STEP: Creating pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680 @ 04/15/24 07:53:27.67
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 07:53:29.713
  Apr 15 07:53:29.720: INFO: Initial restart count of pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a is 0
  Apr 15 07:53:29.726: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:31.739: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:33.750: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:35.760: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:37.773: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:39.787: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:41.798: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:43.809: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:45.818: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:47.828: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:49.837: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:51.849: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:53.861: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:55.872: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:57.886: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:53:59.903: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:01.913: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:03.922: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:05.938: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:07.948: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:09.963: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:11.975: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:13.984: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:15.997: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:18.009: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:20.020: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:22.034: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:24.047: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:26.058: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:28.072: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:30.082: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:32.092: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:34.110: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:36.124: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:38.135: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:40.161: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:42.170: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:44.180: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:46.193: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:48.212: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:50.225: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:52.251: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:54.265: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:56.278: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:54:58.290: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:00.300: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:02.310: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:04.329: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:06.347: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:08.360: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:10.373: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:12.381: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:14.391: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:16.403: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:18.415: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:20.427: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:22.437: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:24.449: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:26.459: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:28.478: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:30.485: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:32.494: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:34.505: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:36.515: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:38.526: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:40.535: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:42.546: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:44.554: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:46.565: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:48.573: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:50.584: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:52.595: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:54.603: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:56.614: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:55:58.624: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:00.633: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:02.643: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:04.652: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:06.664: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:08.673: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:10.684: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:12.703: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:14.713: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:16.734: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:18.753: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:20.764: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:22.778: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:24.791: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:26.805: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:28.815: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:30.832: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:32.842: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:34.859: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:36.871: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:38.913: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:40.922: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:42.931: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:44.945: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:46.955: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:48.967: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:50.978: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:52.986: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:54.997: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:57.016: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:56:59.025: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:01.036: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:03.046: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:05.058: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:07.068: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:09.080: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:11.090: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:13.099: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:15.111: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:17.126: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:19.142: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:21.153: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:23.164: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:25.173: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:27.184: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  Apr 15 07:57:29.194: INFO: Get pod test-grpc-a1246466-de86-49d2-9a9d-31942b46e37a in namespace container-probe-5680
  STEP: deleting the pod @ 04/15/24 07:57:31.195
  Apr 15 07:57:31.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5680" for this suite. @ 04/15/24 07:57:31.296
• [243.734 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/15/24 07:57:31.343
  Apr 15 07:57:31.343: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename svc-latency @ 04/15/24 07:57:31.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:31.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:31.476
  Apr 15 07:57:31.483: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-8160 @ 04/15/24 07:57:31.487
  I0415 07:57:31.506540      13 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8160, replica count: 1
  I0415 07:57:32.557316      13 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0415 07:57:33.558745      13 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 07:57:33.691: INFO: Created: latency-svc-8s4vd
  Apr 15 07:57:33.712: INFO: Got endpoints: latency-svc-8s4vd [53.004551ms]
  Apr 15 07:57:33.762: INFO: Created: latency-svc-drgz8
  Apr 15 07:57:33.774: INFO: Got endpoints: latency-svc-drgz8 [59.068776ms]
  Apr 15 07:57:33.940: INFO: Created: latency-svc-w5p8d
  Apr 15 07:57:33.942: INFO: Created: latency-svc-crlhw
  Apr 15 07:57:33.942: INFO: Created: latency-svc-kxcz7
  Apr 15 07:57:33.943: INFO: Created: latency-svc-6pw8d
  Apr 15 07:57:33.943: INFO: Created: latency-svc-6t6n8
  Apr 15 07:57:33.943: INFO: Created: latency-svc-8dkrq
  Apr 15 07:57:33.943: INFO: Created: latency-svc-ld7nj
  Apr 15 07:57:33.946: INFO: Created: latency-svc-8pdlh
  Apr 15 07:57:33.946: INFO: Created: latency-svc-rv5t7
  Apr 15 07:57:33.950: INFO: Created: latency-svc-njwxf
  Apr 15 07:57:33.951: INFO: Created: latency-svc-9bpfm
  Apr 15 07:57:33.952: INFO: Created: latency-svc-gtbbs
  Apr 15 07:57:33.954: INFO: Created: latency-svc-2cgkn
  Apr 15 07:57:33.956: INFO: Created: latency-svc-4bqqt
  Apr 15 07:57:33.956: INFO: Created: latency-svc-7whs2
  Apr 15 07:57:33.971: INFO: Got endpoints: latency-svc-2cgkn [254.474045ms]
  Apr 15 07:57:33.984: INFO: Got endpoints: latency-svc-crlhw [265.962629ms]
  Apr 15 07:57:33.997: INFO: Created: latency-svc-h45x2
  Apr 15 07:57:34.018: INFO: Created: latency-svc-blvt4
  Apr 15 07:57:34.020: INFO: Got endpoints: latency-svc-6pw8d [302.399139ms]
  Apr 15 07:57:34.036: INFO: Got endpoints: latency-svc-8dkrq [319.990487ms]
  Apr 15 07:57:34.050: INFO: Got endpoints: latency-svc-6t6n8 [332.96567ms]
  Apr 15 07:57:34.055: INFO: Got endpoints: latency-svc-w5p8d [338.348048ms]
  Apr 15 07:57:34.055: INFO: Got endpoints: latency-svc-ld7nj [281.214209ms]
  Apr 15 07:57:34.065: INFO: Created: latency-svc-lk94x
  Apr 15 07:57:34.092: INFO: Created: latency-svc-6qqrb
  Apr 15 07:57:34.107: INFO: Got endpoints: latency-svc-rv5t7 [390.196253ms]
  Apr 15 07:57:34.121: INFO: Created: latency-svc-kb6zc
  Apr 15 07:57:34.126: INFO: Got endpoints: latency-svc-kxcz7 [408.858562ms]
  Apr 15 07:57:34.148: INFO: Created: latency-svc-xqpsl
  Apr 15 07:57:34.159: INFO: Got endpoints: latency-svc-4bqqt [443.04501ms]
  Apr 15 07:57:34.171: INFO: Created: latency-svc-pzhw2
  Apr 15 07:57:34.184: INFO: Got endpoints: latency-svc-7whs2 [466.623361ms]
  Apr 15 07:57:34.194: INFO: Got endpoints: latency-svc-njwxf [476.704715ms]
  Apr 15 07:57:34.209: INFO: Got endpoints: latency-svc-gtbbs [491.982488ms]
  Apr 15 07:57:34.223: INFO: Got endpoints: latency-svc-9bpfm [505.732355ms]
  Apr 15 07:57:34.227: INFO: Created: latency-svc-fmgsg
  Apr 15 07:57:34.262: INFO: Created: latency-svc-b6wlg
  Apr 15 07:57:34.263: INFO: Created: latency-svc-z7cj4
  Apr 15 07:57:34.272: INFO: Got endpoints: latency-svc-blvt4 [287.871601ms]
  Apr 15 07:57:34.280: INFO: Got endpoints: latency-svc-8pdlh [563.160837ms]
  Apr 15 07:57:34.281: INFO: Got endpoints: latency-svc-h45x2 [309.904396ms]
  Apr 15 07:57:34.282: INFO: Got endpoints: latency-svc-lk94x [261.716559ms]
  Apr 15 07:57:34.284: INFO: Created: latency-svc-5b998
  Apr 15 07:57:34.303: INFO: Created: latency-svc-w9nnj
  Apr 15 07:57:34.329: INFO: Created: latency-svc-vtrd7
  Apr 15 07:57:34.346: INFO: Got endpoints: latency-svc-6qqrb [309.23752ms]
  Apr 15 07:57:34.365: INFO: Created: latency-svc-wgxds
  Apr 15 07:57:34.379: INFO: Got endpoints: latency-svc-kb6zc [329.347456ms]
  Apr 15 07:57:34.394: INFO: Got endpoints: latency-svc-xqpsl [339.383685ms]
  Apr 15 07:57:34.400: INFO: Got endpoints: latency-svc-fmgsg [273.971412ms]
  Apr 15 07:57:34.413: INFO: Got endpoints: latency-svc-pzhw2 [357.655431ms]
  Apr 15 07:57:34.419: INFO: Got endpoints: latency-svc-b6wlg [260.505137ms]
  Apr 15 07:57:34.422: INFO: Got endpoints: latency-svc-z7cj4 [314.67373ms]
  Apr 15 07:57:34.443: INFO: Got endpoints: latency-svc-vtrd7 [233.181151ms]
  Apr 15 07:57:34.444: INFO: Got endpoints: latency-svc-w9nnj [249.866503ms]
  Apr 15 07:57:34.444: INFO: Got endpoints: latency-svc-5b998 [258.181245ms]
  Apr 15 07:57:34.453: INFO: Got endpoints: latency-svc-wgxds [228.412978ms]
  Apr 15 07:57:34.575: INFO: Created: latency-svc-bhf2x
  Apr 15 07:57:34.576: INFO: Created: latency-svc-cv5d2
  Apr 15 07:57:34.581: INFO: Created: latency-svc-nq49g
  Apr 15 07:57:34.582: INFO: Created: latency-svc-kxbmz
  Apr 15 07:57:34.582: INFO: Created: latency-svc-8kxqg
  Apr 15 07:57:34.583: INFO: Created: latency-svc-r47qt
  Apr 15 07:57:34.583: INFO: Created: latency-svc-4tcvq
  Apr 15 07:57:34.597: INFO: Created: latency-svc-swnlw
  Apr 15 07:57:34.599: INFO: Created: latency-svc-k287x
  Apr 15 07:57:34.599: INFO: Created: latency-svc-hmctq
  Apr 15 07:57:34.599: INFO: Created: latency-svc-l5kg7
  Apr 15 07:57:34.600: INFO: Created: latency-svc-j7krk
  Apr 15 07:57:34.607: INFO: Created: latency-svc-fbc2x
  Apr 15 07:57:34.611: INFO: Created: latency-svc-j8grv
  Apr 15 07:57:34.613: INFO: Created: latency-svc-6hnv4
  Apr 15 07:57:34.616: INFO: Got endpoints: latency-svc-r47qt [334.932048ms]
  Apr 15 07:57:34.641: INFO: Created: latency-svc-kw4sx
  Apr 15 07:57:34.657: INFO: Got endpoints: latency-svc-cv5d2 [234.699076ms]
  Apr 15 07:57:34.668: INFO: Got endpoints: latency-svc-nq49g [273.924823ms]
  Apr 15 07:57:34.679: INFO: Got endpoints: latency-svc-kxbmz [396.951339ms]
  Apr 15 07:57:34.680: INFO: Got endpoints: latency-svc-bhf2x [266.719265ms]
  Apr 15 07:57:34.704: INFO: Got endpoints: latency-svc-4tcvq [303.169494ms]
  Apr 15 07:57:34.705: INFO: Created: latency-svc-xfkss
  Apr 15 07:57:34.721: INFO: Created: latency-svc-56npl
  Apr 15 07:57:34.733: INFO: Created: latency-svc-vlm68
  Apr 15 07:57:34.745: INFO: Got endpoints: latency-svc-j8grv [300.962753ms]
  Apr 15 07:57:34.756: INFO: Created: latency-svc-zfskt
  Apr 15 07:57:34.780: INFO: Created: latency-svc-hknf4
  Apr 15 07:57:34.781: INFO: Got endpoints: latency-svc-8kxqg [336.885509ms]
  Apr 15 07:57:34.781: INFO: Got endpoints: latency-svc-6hnv4 [435.705196ms]
  Apr 15 07:57:34.789: INFO: Created: latency-svc-f6s4s
  Apr 15 07:57:34.790: INFO: Got endpoints: latency-svc-fbc2x [344.795933ms]
  Apr 15 07:57:34.802: INFO: Got endpoints: latency-svc-swnlw [348.369324ms]
  Apr 15 07:57:34.820: INFO: Created: latency-svc-j928w
  Apr 15 07:57:34.839: INFO: Created: latency-svc-khxh4
  Apr 15 07:57:34.841: INFO: Got endpoints: latency-svc-j7krk [461.533838ms]
  Apr 15 07:57:34.845: INFO: Got endpoints: latency-svc-k287x [573.478134ms]
  Apr 15 07:57:34.866: INFO: Created: latency-svc-plpqr
  Apr 15 07:57:34.921: INFO: Got endpoints: latency-svc-hmctq [641.154141ms]
  Apr 15 07:57:34.959: INFO: Got endpoints: latency-svc-l5kg7 [538.923637ms]
  Apr 15 07:57:34.961: INFO: Got endpoints: latency-svc-56npl [292.013552ms]
  Apr 15 07:57:34.962: INFO: Got endpoints: latency-svc-xfkss [303.806649ms]
  Apr 15 07:57:34.971: INFO: Created: latency-svc-ffq7g
  Apr 15 07:57:34.971: INFO: Got endpoints: latency-svc-kw4sx [354.577745ms]
  Apr 15 07:57:35.051: INFO: Got endpoints: latency-svc-vlm68 [369.68708ms]
  Apr 15 07:57:35.065: INFO: Got endpoints: latency-svc-hknf4 [360.921164ms]
  Apr 15 07:57:35.067: INFO: Got endpoints: latency-svc-f6s4s [321.565198ms]
  Apr 15 07:57:35.068: INFO: Got endpoints: latency-svc-j928w [277.249545ms]
  Apr 15 07:57:35.068: INFO: Got endpoints: latency-svc-zfskt [387.523967ms]
  Apr 15 07:57:35.078: INFO: Created: latency-svc-lmfsw
  Apr 15 07:57:35.083: INFO: Created: latency-svc-k4tfg
  Apr 15 07:57:35.106: INFO: Created: latency-svc-8rpsr
  Apr 15 07:57:35.110: INFO: Got endpoints: latency-svc-khxh4 [327.688827ms]
  Apr 15 07:57:35.124: INFO: Created: latency-svc-8tnsz
  Apr 15 07:57:35.130: INFO: Created: latency-svc-8nm8k
  Apr 15 07:57:35.148: INFO: Created: latency-svc-w2pkl
  Apr 15 07:57:35.158: INFO: Got endpoints: latency-svc-plpqr [376.989486ms]
  Apr 15 07:57:35.169: INFO: Created: latency-svc-mtrnp
  Apr 15 07:57:35.181: INFO: Created: latency-svc-qtl89
  Apr 15 07:57:35.211: INFO: Created: latency-svc-6h7q7
  Apr 15 07:57:35.225: INFO: Got endpoints: latency-svc-ffq7g [422.628943ms]
  Apr 15 07:57:35.239: INFO: Created: latency-svc-hqbhn
  Apr 15 07:57:35.252: INFO: Created: latency-svc-g5fpc
  Apr 15 07:57:35.265: INFO: Created: latency-svc-4czkg
  Apr 15 07:57:35.299: INFO: Got endpoints: latency-svc-lmfsw [457.432798ms]
  Apr 15 07:57:35.313: INFO: Created: latency-svc-gxbz4
  Apr 15 07:57:35.324: INFO: Got endpoints: latency-svc-k4tfg [478.108943ms]
  Apr 15 07:57:35.336: INFO: Created: latency-svc-lcw6d
  Apr 15 07:57:35.353: INFO: Created: latency-svc-6p5x8
  Apr 15 07:57:35.362: INFO: Got endpoints: latency-svc-8rpsr [439.332527ms]
  Apr 15 07:57:35.385: INFO: Created: latency-svc-rt7h5
  Apr 15 07:57:35.403: INFO: Created: latency-svc-4sgnw
  Apr 15 07:57:35.412: INFO: Got endpoints: latency-svc-8tnsz [452.41435ms]
  Apr 15 07:57:35.428: INFO: Created: latency-svc-2t7rl
  Apr 15 07:57:35.451: INFO: Got endpoints: latency-svc-8nm8k [489.917028ms]
  Apr 15 07:57:35.452: INFO: Created: latency-svc-fmz7g
  Apr 15 07:57:35.476: INFO: Created: latency-svc-tncjw
  Apr 15 07:57:35.499: INFO: Got endpoints: latency-svc-w2pkl [535.252188ms]
  Apr 15 07:57:35.521: INFO: Created: latency-svc-cd5qg
  Apr 15 07:57:35.551: INFO: Got endpoints: latency-svc-mtrnp [578.989367ms]
  Apr 15 07:57:35.574: INFO: Created: latency-svc-694mp
  Apr 15 07:57:35.607: INFO: Got endpoints: latency-svc-qtl89 [556.306921ms]
  Apr 15 07:57:35.638: INFO: Created: latency-svc-qj8d6
  Apr 15 07:57:35.654: INFO: Got endpoints: latency-svc-6h7q7 [588.833121ms]
  Apr 15 07:57:35.679: INFO: Created: latency-svc-vlmqc
  Apr 15 07:57:35.706: INFO: Got endpoints: latency-svc-hqbhn [638.045425ms]
  Apr 15 07:57:35.739: INFO: Created: latency-svc-jrztb
  Apr 15 07:57:35.757: INFO: Got endpoints: latency-svc-g5fpc [688.265994ms]
  Apr 15 07:57:35.783: INFO: Created: latency-svc-jtcgk
  Apr 15 07:57:35.807: INFO: Got endpoints: latency-svc-4czkg [739.340563ms]
  Apr 15 07:57:35.830: INFO: Created: latency-svc-w8kls
  Apr 15 07:57:35.852: INFO: Got endpoints: latency-svc-gxbz4 [741.946207ms]
  Apr 15 07:57:35.881: INFO: Created: latency-svc-5fdq8
  Apr 15 07:57:35.903: INFO: Got endpoints: latency-svc-lcw6d [744.226034ms]
  Apr 15 07:57:35.928: INFO: Created: latency-svc-zqdv7
  Apr 15 07:57:35.952: INFO: Got endpoints: latency-svc-6p5x8 [725.833067ms]
  Apr 15 07:57:35.983: INFO: Created: latency-svc-5r9kv
  Apr 15 07:57:36.002: INFO: Got endpoints: latency-svc-rt7h5 [702.082635ms]
  Apr 15 07:57:36.027: INFO: Created: latency-svc-btmzj
  Apr 15 07:57:36.053: INFO: Got endpoints: latency-svc-4sgnw [728.51792ms]
  Apr 15 07:57:36.082: INFO: Created: latency-svc-9ccb7
  Apr 15 07:57:36.102: INFO: Got endpoints: latency-svc-2t7rl [740.649356ms]
  Apr 15 07:57:36.130: INFO: Created: latency-svc-bk26x
  Apr 15 07:57:36.156: INFO: Got endpoints: latency-svc-fmz7g [743.575557ms]
  Apr 15 07:57:36.177: INFO: Created: latency-svc-4h6d4
  Apr 15 07:57:36.200: INFO: Got endpoints: latency-svc-tncjw [749.052856ms]
  Apr 15 07:57:36.220: INFO: Created: latency-svc-6pdfj
  Apr 15 07:57:36.258: INFO: Got endpoints: latency-svc-cd5qg [759.635332ms]
  Apr 15 07:57:36.277: INFO: Created: latency-svc-8rcgz
  Apr 15 07:57:36.309: INFO: Got endpoints: latency-svc-694mp [758.092572ms]
  Apr 15 07:57:36.342: INFO: Created: latency-svc-9nq9r
  Apr 15 07:57:36.353: INFO: Got endpoints: latency-svc-qj8d6 [744.785607ms]
  Apr 15 07:57:36.374: INFO: Created: latency-svc-2slbv
  Apr 15 07:57:36.400: INFO: Got endpoints: latency-svc-vlmqc [745.217028ms]
  Apr 15 07:57:36.425: INFO: Created: latency-svc-gl4cg
  Apr 15 07:57:36.453: INFO: Got endpoints: latency-svc-jrztb [747.151603ms]
  Apr 15 07:57:36.477: INFO: Created: latency-svc-jkgh6
  Apr 15 07:57:36.518: INFO: Got endpoints: latency-svc-jtcgk [761.020592ms]
  Apr 15 07:57:36.558: INFO: Got endpoints: latency-svc-w8kls [750.756072ms]
  Apr 15 07:57:36.560: INFO: Created: latency-svc-kt44f
  Apr 15 07:57:36.587: INFO: Created: latency-svc-d44vm
  Apr 15 07:57:36.611: INFO: Got endpoints: latency-svc-5fdq8 [758.52748ms]
  Apr 15 07:57:36.638: INFO: Created: latency-svc-hk4d6
  Apr 15 07:57:36.659: INFO: Got endpoints: latency-svc-zqdv7 [756.279191ms]
  Apr 15 07:57:36.691: INFO: Created: latency-svc-qwc4v
  Apr 15 07:57:36.718: INFO: Got endpoints: latency-svc-5r9kv [765.970313ms]
  Apr 15 07:57:36.763: INFO: Created: latency-svc-q57p4
  Apr 15 07:57:36.765: INFO: Got endpoints: latency-svc-btmzj [762.435791ms]
  Apr 15 07:57:36.801: INFO: Created: latency-svc-f2tpx
  Apr 15 07:57:36.831: INFO: Got endpoints: latency-svc-9ccb7 [777.746959ms]
  Apr 15 07:57:36.853: INFO: Created: latency-svc-m2dlz
  Apr 15 07:57:36.866: INFO: Got endpoints: latency-svc-bk26x [762.865273ms]
  Apr 15 07:57:36.911: INFO: Created: latency-svc-4frfv
  Apr 15 07:57:36.913: INFO: Got endpoints: latency-svc-4h6d4 [756.608112ms]
  Apr 15 07:57:36.941: INFO: Created: latency-svc-v5254
  Apr 15 07:57:36.957: INFO: Got endpoints: latency-svc-6pdfj [756.657524ms]
  Apr 15 07:57:36.987: INFO: Created: latency-svc-j7txr
  Apr 15 07:57:37.000: INFO: Got endpoints: latency-svc-8rcgz [741.292833ms]
  Apr 15 07:57:37.030: INFO: Created: latency-svc-vswcz
  Apr 15 07:57:37.058: INFO: Got endpoints: latency-svc-9nq9r [748.434107ms]
  Apr 15 07:57:37.085: INFO: Created: latency-svc-4r5fk
  Apr 15 07:57:37.103: INFO: Got endpoints: latency-svc-2slbv [750.572108ms]
  Apr 15 07:57:37.124: INFO: Created: latency-svc-kkwfs
  Apr 15 07:57:37.153: INFO: Got endpoints: latency-svc-gl4cg [752.393524ms]
  Apr 15 07:57:37.177: INFO: Created: latency-svc-gz8mt
  Apr 15 07:57:37.206: INFO: Got endpoints: latency-svc-jkgh6 [753.036157ms]
  Apr 15 07:57:37.233: INFO: Created: latency-svc-82xfw
  Apr 15 07:57:37.263: INFO: Got endpoints: latency-svc-kt44f [744.453688ms]
  Apr 15 07:57:37.298: INFO: Created: latency-svc-8cczv
  Apr 15 07:57:37.328: INFO: Got endpoints: latency-svc-d44vm [769.559653ms]
  Apr 15 07:57:37.349: INFO: Created: latency-svc-4zsjp
  Apr 15 07:57:37.355: INFO: Got endpoints: latency-svc-hk4d6 [743.503267ms]
  Apr 15 07:57:37.403: INFO: Got endpoints: latency-svc-qwc4v [743.963897ms]
  Apr 15 07:57:37.419: INFO: Created: latency-svc-9pvpr
  Apr 15 07:57:37.439: INFO: Created: latency-svc-kbr5x
  Apr 15 07:57:37.467: INFO: Got endpoints: latency-svc-q57p4 [749.521605ms]
  Apr 15 07:57:37.490: INFO: Created: latency-svc-q8rh7
  Apr 15 07:57:37.504: INFO: Got endpoints: latency-svc-f2tpx [739.025343ms]
  Apr 15 07:57:37.537: INFO: Created: latency-svc-9g82l
  Apr 15 07:57:37.563: INFO: Got endpoints: latency-svc-m2dlz [732.321243ms]
  Apr 15 07:57:37.599: INFO: Created: latency-svc-88br2
  Apr 15 07:57:37.617: INFO: Got endpoints: latency-svc-4frfv [751.221075ms]
  Apr 15 07:57:37.682: INFO: Got endpoints: latency-svc-v5254 [769.141233ms]
  Apr 15 07:57:37.692: INFO: Created: latency-svc-zp76s
  Apr 15 07:57:37.732: INFO: Got endpoints: latency-svc-j7txr [774.769005ms]
  Apr 15 07:57:37.739: INFO: Created: latency-svc-q6ww5
  Apr 15 07:57:37.755: INFO: Created: latency-svc-c9khb
  Apr 15 07:57:37.783: INFO: Got endpoints: latency-svc-vswcz [783.376638ms]
  Apr 15 07:57:37.804: INFO: Created: latency-svc-dgv75
  Apr 15 07:57:37.834: INFO: Got endpoints: latency-svc-4r5fk [775.999409ms]
  Apr 15 07:57:37.857: INFO: Created: latency-svc-d55rb
  Apr 15 07:57:37.875: INFO: Got endpoints: latency-svc-kkwfs [772.017385ms]
  Apr 15 07:57:37.897: INFO: Created: latency-svc-p6gjj
  Apr 15 07:57:37.925: INFO: Got endpoints: latency-svc-gz8mt [771.955511ms]
  Apr 15 07:57:37.947: INFO: Created: latency-svc-v4n8m
  Apr 15 07:57:37.975: INFO: Got endpoints: latency-svc-82xfw [768.820323ms]
  Apr 15 07:57:37.999: INFO: Created: latency-svc-wpc58
  Apr 15 07:57:38.006: INFO: Got endpoints: latency-svc-8cczv [742.136522ms]
  Apr 15 07:57:38.028: INFO: Created: latency-svc-2kkpk
  Apr 15 07:57:38.053: INFO: Got endpoints: latency-svc-4zsjp [725.237896ms]
  Apr 15 07:57:38.074: INFO: Created: latency-svc-xgxsd
  Apr 15 07:57:38.103: INFO: Got endpoints: latency-svc-9pvpr [747.213685ms]
  Apr 15 07:57:38.128: INFO: Created: latency-svc-kg7gz
  Apr 15 07:57:38.151: INFO: Got endpoints: latency-svc-kbr5x [747.003447ms]
  Apr 15 07:57:38.175: INFO: Created: latency-svc-bv2dh
  Apr 15 07:57:38.201: INFO: Got endpoints: latency-svc-q8rh7 [733.318807ms]
  Apr 15 07:57:38.233: INFO: Created: latency-svc-vctdz
  Apr 15 07:57:38.258: INFO: Got endpoints: latency-svc-9g82l [753.540849ms]
  Apr 15 07:57:38.287: INFO: Created: latency-svc-9n59n
  Apr 15 07:57:38.309: INFO: Got endpoints: latency-svc-88br2 [744.916214ms]
  Apr 15 07:57:38.332: INFO: Created: latency-svc-kxnl9
  Apr 15 07:57:38.357: INFO: Got endpoints: latency-svc-zp76s [739.029472ms]
  Apr 15 07:57:38.386: INFO: Created: latency-svc-mrtch
  Apr 15 07:57:38.411: INFO: Got endpoints: latency-svc-q6ww5 [727.953919ms]
  Apr 15 07:57:38.457: INFO: Created: latency-svc-ghr5j
  Apr 15 07:57:38.464: INFO: Got endpoints: latency-svc-c9khb [730.95746ms]
  Apr 15 07:57:38.487: INFO: Created: latency-svc-hxn4x
  Apr 15 07:57:38.501: INFO: Got endpoints: latency-svc-dgv75 [717.814297ms]
  Apr 15 07:57:38.526: INFO: Created: latency-svc-gdlkn
  Apr 15 07:57:38.552: INFO: Got endpoints: latency-svc-d55rb [717.324369ms]
  Apr 15 07:57:38.574: INFO: Created: latency-svc-px7c4
  Apr 15 07:57:38.609: INFO: Got endpoints: latency-svc-p6gjj [732.842942ms]
  Apr 15 07:57:38.630: INFO: Created: latency-svc-585nk
  Apr 15 07:57:38.650: INFO: Got endpoints: latency-svc-v4n8m [725.157567ms]
  Apr 15 07:57:38.676: INFO: Created: latency-svc-ptstm
  Apr 15 07:57:38.702: INFO: Got endpoints: latency-svc-wpc58 [726.271775ms]
  Apr 15 07:57:38.726: INFO: Created: latency-svc-dnxj2
  Apr 15 07:57:38.755: INFO: Got endpoints: latency-svc-2kkpk [748.299293ms]
  Apr 15 07:57:38.776: INFO: Created: latency-svc-z5sml
  Apr 15 07:57:38.801: INFO: Got endpoints: latency-svc-xgxsd [747.883498ms]
  Apr 15 07:57:38.836: INFO: Created: latency-svc-8dn2s
  Apr 15 07:57:38.854: INFO: Got endpoints: latency-svc-kg7gz [751.721611ms]
  Apr 15 07:57:38.887: INFO: Created: latency-svc-t2jwh
  Apr 15 07:57:38.914: INFO: Got endpoints: latency-svc-bv2dh [762.845677ms]
  Apr 15 07:57:38.937: INFO: Created: latency-svc-pvvnr
  Apr 15 07:57:38.949: INFO: Got endpoints: latency-svc-vctdz [746.868723ms]
  Apr 15 07:57:38.971: INFO: Created: latency-svc-mf456
  Apr 15 07:57:39.011: INFO: Got endpoints: latency-svc-9n59n [752.440922ms]
  Apr 15 07:57:39.051: INFO: Created: latency-svc-srhw9
  Apr 15 07:57:39.056: INFO: Got endpoints: latency-svc-kxnl9 [746.447819ms]
  Apr 15 07:57:39.088: INFO: Created: latency-svc-vl2tq
  Apr 15 07:57:39.101: INFO: Got endpoints: latency-svc-mrtch [743.72323ms]
  Apr 15 07:57:39.129: INFO: Created: latency-svc-pkwsj
  Apr 15 07:57:39.149: INFO: Got endpoints: latency-svc-ghr5j [737.622675ms]
  Apr 15 07:57:39.181: INFO: Created: latency-svc-vr9zb
  Apr 15 07:57:39.203: INFO: Got endpoints: latency-svc-hxn4x [738.863203ms]
  Apr 15 07:57:39.225: INFO: Created: latency-svc-q42rt
  Apr 15 07:57:39.253: INFO: Got endpoints: latency-svc-gdlkn [751.587739ms]
  Apr 15 07:57:39.288: INFO: Created: latency-svc-l24kp
  Apr 15 07:57:39.335: INFO: Got endpoints: latency-svc-px7c4 [782.376904ms]
  Apr 15 07:57:39.352: INFO: Got endpoints: latency-svc-585nk [742.439577ms]
  Apr 15 07:57:39.362: INFO: Created: latency-svc-f5rxj
  Apr 15 07:57:39.378: INFO: Created: latency-svc-6md2t
  Apr 15 07:57:39.400: INFO: Got endpoints: latency-svc-ptstm [749.253519ms]
  Apr 15 07:57:39.434: INFO: Created: latency-svc-rhv4x
  Apr 15 07:57:39.452: INFO: Got endpoints: latency-svc-dnxj2 [749.212467ms]
  Apr 15 07:57:39.475: INFO: Created: latency-svc-zs26m
  Apr 15 07:57:39.504: INFO: Got endpoints: latency-svc-z5sml [748.091361ms]
  Apr 15 07:57:39.526: INFO: Created: latency-svc-txlmd
  Apr 15 07:57:39.549: INFO: Got endpoints: latency-svc-8dn2s [746.071644ms]
  Apr 15 07:57:39.571: INFO: Created: latency-svc-s46xz
  Apr 15 07:57:39.607: INFO: Got endpoints: latency-svc-t2jwh [752.87232ms]
  Apr 15 07:57:39.631: INFO: Created: latency-svc-kqlsd
  Apr 15 07:57:39.653: INFO: Got endpoints: latency-svc-pvvnr [739.231424ms]
  Apr 15 07:57:39.677: INFO: Created: latency-svc-hfkwj
  Apr 15 07:57:39.704: INFO: Got endpoints: latency-svc-mf456 [754.606136ms]
  Apr 15 07:57:39.735: INFO: Created: latency-svc-96lbv
  Apr 15 07:57:39.759: INFO: Got endpoints: latency-svc-srhw9 [748.42953ms]
  Apr 15 07:57:39.795: INFO: Created: latency-svc-gnqjc
  Apr 15 07:57:39.809: INFO: Got endpoints: latency-svc-vl2tq [752.658043ms]
  Apr 15 07:57:39.833: INFO: Created: latency-svc-g8wsr
  Apr 15 07:57:39.856: INFO: Got endpoints: latency-svc-pkwsj [753.217374ms]
  Apr 15 07:57:39.878: INFO: Created: latency-svc-9szwx
  Apr 15 07:57:39.905: INFO: Got endpoints: latency-svc-vr9zb [755.490271ms]
  Apr 15 07:57:39.929: INFO: Created: latency-svc-2tzs8
  Apr 15 07:57:39.956: INFO: Got endpoints: latency-svc-q42rt [752.794121ms]
  Apr 15 07:57:39.981: INFO: Created: latency-svc-jfqb6
  Apr 15 07:57:40.013: INFO: Got endpoints: latency-svc-l24kp [759.79836ms]
  Apr 15 07:57:40.044: INFO: Created: latency-svc-pc5gm
  Apr 15 07:57:40.063: INFO: Got endpoints: latency-svc-f5rxj [727.053513ms]
  Apr 15 07:57:40.086: INFO: Created: latency-svc-cglk6
  Apr 15 07:57:40.109: INFO: Got endpoints: latency-svc-6md2t [756.048224ms]
  Apr 15 07:57:40.128: INFO: Created: latency-svc-mwmjg
  Apr 15 07:57:40.152: INFO: Got endpoints: latency-svc-rhv4x [750.777341ms]
  Apr 15 07:57:40.174: INFO: Created: latency-svc-wzxv5
  Apr 15 07:57:40.202: INFO: Got endpoints: latency-svc-zs26m [749.902829ms]
  Apr 15 07:57:40.224: INFO: Created: latency-svc-p2dk5
  Apr 15 07:57:40.253: INFO: Got endpoints: latency-svc-txlmd [749.061659ms]
  Apr 15 07:57:40.270: INFO: Created: latency-svc-b7g5z
  Apr 15 07:57:40.298: INFO: Got endpoints: latency-svc-s46xz [749.224527ms]
  Apr 15 07:57:40.315: INFO: Created: latency-svc-ft8hs
  Apr 15 07:57:40.351: INFO: Got endpoints: latency-svc-kqlsd [743.217871ms]
  Apr 15 07:57:40.375: INFO: Created: latency-svc-f59dh
  Apr 15 07:57:40.402: INFO: Got endpoints: latency-svc-hfkwj [748.971846ms]
  Apr 15 07:57:40.425: INFO: Created: latency-svc-lxtnn
  Apr 15 07:57:40.450: INFO: Got endpoints: latency-svc-96lbv [746.248693ms]
  Apr 15 07:57:40.469: INFO: Created: latency-svc-qr4ld
  Apr 15 07:57:40.505: INFO: Got endpoints: latency-svc-gnqjc [746.017478ms]
  Apr 15 07:57:40.530: INFO: Created: latency-svc-hzrrj
  Apr 15 07:57:40.552: INFO: Got endpoints: latency-svc-g8wsr [743.241867ms]
  Apr 15 07:57:40.575: INFO: Created: latency-svc-m25xm
  Apr 15 07:57:40.602: INFO: Got endpoints: latency-svc-9szwx [745.748776ms]
  Apr 15 07:57:40.622: INFO: Created: latency-svc-97z24
  Apr 15 07:57:40.653: INFO: Got endpoints: latency-svc-2tzs8 [747.402816ms]
  Apr 15 07:57:40.673: INFO: Created: latency-svc-28mpw
  Apr 15 07:57:40.699: INFO: Got endpoints: latency-svc-jfqb6 [743.219281ms]
  Apr 15 07:57:40.728: INFO: Created: latency-svc-dvf4x
  Apr 15 07:57:40.763: INFO: Got endpoints: latency-svc-pc5gm [749.622122ms]
  Apr 15 07:57:40.798: INFO: Created: latency-svc-6f8th
  Apr 15 07:57:40.802: INFO: Got endpoints: latency-svc-cglk6 [739.014687ms]
  Apr 15 07:57:40.827: INFO: Created: latency-svc-6d2n6
  Apr 15 07:57:40.857: INFO: Got endpoints: latency-svc-mwmjg [748.326121ms]
  Apr 15 07:57:40.880: INFO: Created: latency-svc-dt72s
  Apr 15 07:57:40.900: INFO: Got endpoints: latency-svc-wzxv5 [747.753082ms]
  Apr 15 07:57:40.924: INFO: Created: latency-svc-fhl6d
  Apr 15 07:57:40.953: INFO: Got endpoints: latency-svc-p2dk5 [751.081421ms]
  Apr 15 07:57:40.977: INFO: Created: latency-svc-qjqn6
  Apr 15 07:57:41.001: INFO: Got endpoints: latency-svc-b7g5z [747.305999ms]
  Apr 15 07:57:41.023: INFO: Created: latency-svc-gff58
  Apr 15 07:57:41.050: INFO: Got endpoints: latency-svc-ft8hs [752.021995ms]
  Apr 15 07:57:41.071: INFO: Created: latency-svc-rplq6
  Apr 15 07:57:41.109: INFO: Got endpoints: latency-svc-f59dh [757.777975ms]
  Apr 15 07:57:41.140: INFO: Created: latency-svc-cq5h4
  Apr 15 07:57:41.153: INFO: Got endpoints: latency-svc-lxtnn [750.43132ms]
  Apr 15 07:57:41.180: INFO: Created: latency-svc-r2c6v
  Apr 15 07:57:41.204: INFO: Got endpoints: latency-svc-qr4ld [754.08278ms]
  Apr 15 07:57:41.232: INFO: Created: latency-svc-27dbr
  Apr 15 07:57:41.263: INFO: Got endpoints: latency-svc-hzrrj [756.241854ms]
  Apr 15 07:57:41.301: INFO: Created: latency-svc-knv2m
  Apr 15 07:57:41.322: INFO: Got endpoints: latency-svc-m25xm [769.165107ms]
  Apr 15 07:57:41.355: INFO: Got endpoints: latency-svc-97z24 [751.89017ms]
  Apr 15 07:57:41.371: INFO: Created: latency-svc-6t9gq
  Apr 15 07:57:41.398: INFO: Created: latency-svc-pffw9
  Apr 15 07:57:41.403: INFO: Got endpoints: latency-svc-28mpw [750.09449ms]
  Apr 15 07:57:41.431: INFO: Created: latency-svc-vz8nk
  Apr 15 07:57:41.453: INFO: Got endpoints: latency-svc-dvf4x [751.993516ms]
  Apr 15 07:57:41.483: INFO: Created: latency-svc-r6f87
  Apr 15 07:57:41.510: INFO: Got endpoints: latency-svc-6f8th [746.383078ms]
  Apr 15 07:57:41.532: INFO: Created: latency-svc-ts62v
  Apr 15 07:57:41.554: INFO: Got endpoints: latency-svc-6d2n6 [751.419478ms]
  Apr 15 07:57:41.583: INFO: Created: latency-svc-6lx25
  Apr 15 07:57:41.610: INFO: Got endpoints: latency-svc-dt72s [752.069111ms]
  Apr 15 07:57:41.667: INFO: Got endpoints: latency-svc-fhl6d [765.933526ms]
  Apr 15 07:57:41.667: INFO: Created: latency-svc-lnsxp
  Apr 15 07:57:41.703: INFO: Created: latency-svc-tp96t
  Apr 15 07:57:41.716: INFO: Got endpoints: latency-svc-qjqn6 [761.5433ms]
  Apr 15 07:57:41.761: INFO: Got endpoints: latency-svc-gff58 [760.050821ms]
  Apr 15 07:57:41.804: INFO: Got endpoints: latency-svc-rplq6 [753.319885ms]
  Apr 15 07:57:41.858: INFO: Got endpoints: latency-svc-cq5h4 [748.744885ms]
  Apr 15 07:57:41.902: INFO: Got endpoints: latency-svc-r2c6v [748.324891ms]
  Apr 15 07:57:41.951: INFO: Got endpoints: latency-svc-27dbr [746.025303ms]
  Apr 15 07:57:42.011: INFO: Got endpoints: latency-svc-knv2m [747.788155ms]
  Apr 15 07:57:42.051: INFO: Got endpoints: latency-svc-6t9gq [728.323915ms]
  Apr 15 07:57:42.100: INFO: Got endpoints: latency-svc-pffw9 [744.672329ms]
  Apr 15 07:57:42.152: INFO: Got endpoints: latency-svc-vz8nk [748.436196ms]
  Apr 15 07:57:42.204: INFO: Got endpoints: latency-svc-r6f87 [750.763282ms]
  Apr 15 07:57:42.248: INFO: Got endpoints: latency-svc-ts62v [738.008996ms]
  Apr 15 07:57:42.304: INFO: Got endpoints: latency-svc-6lx25 [748.689416ms]
  Apr 15 07:57:42.351: INFO: Got endpoints: latency-svc-lnsxp [740.40593ms]
  Apr 15 07:57:42.403: INFO: Got endpoints: latency-svc-tp96t [735.392224ms]
  Apr 15 07:57:42.403: INFO: Latencies: [59.068776ms 228.412978ms 233.181151ms 234.699076ms 249.866503ms 254.474045ms 258.181245ms 260.505137ms 261.716559ms 265.962629ms 266.719265ms 273.924823ms 273.971412ms 277.249545ms 281.214209ms 287.871601ms 292.013552ms 300.962753ms 302.399139ms 303.169494ms 303.806649ms 309.23752ms 309.904396ms 314.67373ms 319.990487ms 321.565198ms 327.688827ms 329.347456ms 332.96567ms 334.932048ms 336.885509ms 338.348048ms 339.383685ms 344.795933ms 348.369324ms 354.577745ms 357.655431ms 360.921164ms 369.68708ms 376.989486ms 387.523967ms 390.196253ms 396.951339ms 408.858562ms 422.628943ms 435.705196ms 439.332527ms 443.04501ms 452.41435ms 457.432798ms 461.533838ms 466.623361ms 476.704715ms 478.108943ms 489.917028ms 491.982488ms 505.732355ms 535.252188ms 538.923637ms 556.306921ms 563.160837ms 573.478134ms 578.989367ms 588.833121ms 638.045425ms 641.154141ms 688.265994ms 702.082635ms 717.324369ms 717.814297ms 725.157567ms 725.237896ms 725.833067ms 726.271775ms 727.053513ms 727.953919ms 728.323915ms 728.51792ms 730.95746ms 732.321243ms 732.842942ms 733.318807ms 735.392224ms 737.622675ms 738.008996ms 738.863203ms 739.014687ms 739.025343ms 739.029472ms 739.231424ms 739.340563ms 740.40593ms 740.649356ms 741.292833ms 741.946207ms 742.136522ms 742.439577ms 743.217871ms 743.219281ms 743.241867ms 743.503267ms 743.575557ms 743.72323ms 743.963897ms 744.226034ms 744.453688ms 744.672329ms 744.785607ms 744.916214ms 745.217028ms 745.748776ms 746.017478ms 746.025303ms 746.071644ms 746.248693ms 746.383078ms 746.447819ms 746.868723ms 747.003447ms 747.151603ms 747.213685ms 747.305999ms 747.402816ms 747.753082ms 747.788155ms 747.883498ms 748.091361ms 748.299293ms 748.324891ms 748.326121ms 748.42953ms 748.434107ms 748.436196ms 748.689416ms 748.744885ms 748.971846ms 749.052856ms 749.061659ms 749.212467ms 749.224527ms 749.253519ms 749.521605ms 749.622122ms 749.902829ms 750.09449ms 750.43132ms 750.572108ms 750.756072ms 750.763282ms 750.777341ms 751.081421ms 751.221075ms 751.419478ms 751.587739ms 751.721611ms 751.89017ms 751.993516ms 752.021995ms 752.069111ms 752.393524ms 752.440922ms 752.658043ms 752.794121ms 752.87232ms 753.036157ms 753.217374ms 753.319885ms 753.540849ms 754.08278ms 754.606136ms 755.490271ms 756.048224ms 756.241854ms 756.279191ms 756.608112ms 756.657524ms 757.777975ms 758.092572ms 758.52748ms 759.635332ms 759.79836ms 760.050821ms 761.020592ms 761.5433ms 762.435791ms 762.845677ms 762.865273ms 765.933526ms 765.970313ms 768.820323ms 769.141233ms 769.165107ms 769.559653ms 771.955511ms 772.017385ms 774.769005ms 775.999409ms 777.746959ms 782.376904ms 783.376638ms]
  Apr 15 07:57:42.404: INFO: 50 %ile: 743.503267ms
  Apr 15 07:57:42.404: INFO: 90 %ile: 759.79836ms
  Apr 15 07:57:42.404: INFO: 99 %ile: 782.376904ms
  Apr 15 07:57:42.404: INFO: Total sample count: 200
  Apr 15 07:57:42.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-8160" for this suite. @ 04/15/24 07:57:42.423
• [11.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 04/15/24 07:57:42.461
  Apr 15 07:57:42.461: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename security-context-test @ 04/15/24 07:57:42.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:42.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:42.513
  Apr 15 07:57:46.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6700" for this suite. @ 04/15/24 07:57:46.588
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 04/15/24 07:57:46.611
  Apr 15 07:57:46.611: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename endpointslice @ 04/15/24 07:57:46.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:46.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:46.653
  Apr 15 07:57:50.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5831" for this suite. @ 04/15/24 07:57:50.802
• [4.209 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 04/15/24 07:57:50.821
  Apr 15 07:57:50.822: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename crd-webhook @ 04/15/24 07:57:50.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:51.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:51.136
  STEP: Setting up server cert @ 04/15/24 07:57:51.14
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/15/24 07:57:52.657
  STEP: Deploying the custom resource conversion webhook pod @ 04/15/24 07:57:52.683
  STEP: Wait for the deployment to be ready @ 04/15/24 07:57:52.712
  Apr 15 07:57:52.733: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/15/24 07:57:54.775
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:57:54.813
  Apr 15 07:57:55.814: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 15 07:57:55.823: INFO: Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  Apr 15 07:57:56.814: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 15 07:57:56.821: INFO: Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  Apr 15 07:57:57.814: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 15 07:57:57.828: INFO: Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  Apr 15 07:57:58.814: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 15 07:57:58.846: INFO: Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  Apr 15 07:57:59.814: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 15 07:57:59.820: INFO: Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  Apr 15 07:58:00.814: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 15 07:58:00.822: INFO: Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  Apr 15 07:58:01.814: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 15 07:58:01.822: INFO: Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  Apr 15 07:58:02.814: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 15 07:58:02.825: INFO: Unexpected error trying to get Endpoints for e2e-test-crd-conversion-webhook : endpoints "e2e-test-crd-conversion-webhook" not found
  Apr 15 07:58:03.814: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 15 07:58:03.833: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Creating a v1 custom resource @ 04/15/24 07:58:06.68
  STEP: Create a v2 custom resource @ 04/15/24 07:58:06.721
  STEP: List CRs in v1 @ 04/15/24 07:58:07.001
  STEP: List CRs in v2 @ 04/15/24 07:58:07.012
  Apr 15 07:58:07.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4339" for this suite. @ 04/15/24 07:58:07.679
• [16.877 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/15/24 07:58:07.703
  Apr 15 07:58:07.704: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 07:58:07.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:07.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:07.787
  STEP: create the container @ 04/15/24 07:58:07.795
  W0415 07:58:07.825348      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/15/24 07:58:07.825
  STEP: get the container status @ 04/15/24 07:58:10.911
  STEP: the container should be terminated @ 04/15/24 07:58:10.943
  STEP: the termination message should be set @ 04/15/24 07:58:10.943
  Apr 15 07:58:10.944: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/15/24 07:58:10.944
  Apr 15 07:58:10.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1685" for this suite. @ 04/15/24 07:58:10.993
• [3.311 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 04/15/24 07:58:11.015
  Apr 15 07:58:11.015: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 07:58:11.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:11.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:11.064
  Apr 15 07:58:11.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3637" for this suite. @ 04/15/24 07:58:11.23
• [0.234 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 04/15/24 07:58:11.26
  Apr 15 07:58:11.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:58:11.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:11.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:11.328
  STEP: Setting up server cert @ 04/15/24 07:58:11.402
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:58:12.751
  STEP: Deploying the webhook pod @ 04/15/24 07:58:12.765
  STEP: Wait for the deployment to be ready @ 04/15/24 07:58:12.794
  Apr 15 07:58:12.828: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/15/24 07:58:14.866
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:58:14.938
  Apr 15 07:58:15.939: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/15/24 07:58:15.956
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/15/24 07:58:15.957
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/15/24 07:58:15.994
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/15/24 07:58:17.021
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/15/24 07:58:17.021
  STEP: Having no error when timeout is longer than webhook latency @ 04/15/24 07:58:18.088
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/15/24 07:58:18.089
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/15/24 07:58:23.181
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/15/24 07:58:23.181
  Apr 15 07:58:28.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8795" for this suite. @ 04/15/24 07:58:28.423
  STEP: Destroying namespace "webhook-markers-9883" for this suite. @ 04/15/24 07:58:28.468
• [17.229 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/15/24 07:58:28.492
  Apr 15 07:58:28.492: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/15/24 07:58:28.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:28.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:28.556
  STEP: creating @ 04/15/24 07:58:28.579
  STEP: getting @ 04/15/24 07:58:28.639
  STEP: listing in namespace @ 04/15/24 07:58:28.65
  STEP: patching @ 04/15/24 07:58:28.658
  STEP: deleting @ 04/15/24 07:58:28.678
  Apr 15 07:58:28.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3705" for this suite. @ 04/15/24 07:58:28.733
• [0.270 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 04/15/24 07:58:28.764
  Apr 15 07:58:28.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename dns @ 04/15/24 07:58:28.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:28.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:28.823
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/15/24 07:58:28.835
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/15/24 07:58:28.837
  STEP: creating a pod to probe DNS @ 04/15/24 07:58:28.838
  STEP: submitting the pod to kubernetes @ 04/15/24 07:58:28.838
  STEP: retrieving the pod @ 04/15/24 07:58:30.895
  STEP: looking for the results for each expected name from probers @ 04/15/24 07:58:30.906
  Apr 15 07:58:30.957: INFO: DNS probes using dns-7691/dns-test-3bb8838c-eedc-4a76-a48e-b4c29cc5e5fa succeeded

  STEP: deleting the pod @ 04/15/24 07:58:30.958
  Apr 15 07:58:30.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7691" for this suite. @ 04/15/24 07:58:31.011
• [2.268 seconds]
------------------------------
SS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 04/15/24 07:58:31.032
  Apr 15 07:58:31.032: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename ingressclass @ 04/15/24 07:58:31.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:31.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:31.093
  STEP: getting /apis @ 04/15/24 07:58:31.102
  STEP: getting /apis/networking.k8s.io @ 04/15/24 07:58:31.126
  STEP: getting /apis/networking.k8s.iov1 @ 04/15/24 07:58:31.133
  STEP: creating @ 04/15/24 07:58:31.139
  STEP: getting @ 04/15/24 07:58:31.181
  STEP: listing @ 04/15/24 07:58:31.201
  STEP: watching @ 04/15/24 07:58:31.212
  Apr 15 07:58:31.212: INFO: starting watch
  STEP: patching @ 04/15/24 07:58:31.227
  STEP: updating @ 04/15/24 07:58:31.247
  Apr 15 07:58:31.331: INFO: waiting for watch events with expected annotations
  Apr 15 07:58:31.331: INFO: saw patched and updated annotations
  STEP: deleting @ 04/15/24 07:58:31.331
  STEP: deleting a collection @ 04/15/24 07:58:31.373
  Apr 15 07:58:31.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5558" for this suite. @ 04/15/24 07:58:31.478
• [0.464 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 04/15/24 07:58:31.497
  Apr 15 07:58:31.497: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:58:31.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:31.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:31.585
  STEP: Setting up server cert @ 04/15/24 07:58:31.677
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:58:32.599
  STEP: Deploying the webhook pod @ 04/15/24 07:58:32.621
  STEP: Wait for the deployment to be ready @ 04/15/24 07:58:32.649
  Apr 15 07:58:32.667: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/15/24 07:58:34.694
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:58:34.727
  Apr 15 07:58:35.728: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/15/24 07:58:35.745
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/15/24 07:58:35.78
  STEP: Creating a dummy validating-webhook-configuration object @ 04/15/24 07:58:35.811
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/15/24 07:58:35.834
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/15/24 07:58:35.853
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/15/24 07:58:35.879
  Apr 15 07:58:36.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9315" for this suite. @ 04/15/24 07:58:36.079
  STEP: Destroying namespace "webhook-markers-138" for this suite. @ 04/15/24 07:58:36.096
• [4.620 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 04/15/24 07:58:36.127
  Apr 15 07:58:36.127: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 07:58:36.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:36.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:36.182
  STEP: Creating service test in namespace statefulset-5562 @ 04/15/24 07:58:36.194
  STEP: Looking for a node to schedule stateful set and pod @ 04/15/24 07:58:36.209
  STEP: Creating pod with conflicting port in namespace statefulset-5562 @ 04/15/24 07:58:36.232
  STEP: Waiting until pod test-pod will start running in namespace statefulset-5562 @ 04/15/24 07:58:36.28
  STEP: Creating statefulset with conflicting port in namespace statefulset-5562 @ 04/15/24 07:58:38.301
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-5562 @ 04/15/24 07:58:38.319
  Apr 15 07:58:38.366: INFO: Observed stateful pod in namespace: statefulset-5562, name: ss-0, uid: 42262ac5-f16c-43b5-9777-4986b7b01622, status phase: Pending. Waiting for statefulset controller to delete.
  Apr 15 07:58:38.394: INFO: Observed stateful pod in namespace: statefulset-5562, name: ss-0, uid: 42262ac5-f16c-43b5-9777-4986b7b01622, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 15 07:58:38.443: INFO: Observed stateful pod in namespace: statefulset-5562, name: ss-0, uid: 42262ac5-f16c-43b5-9777-4986b7b01622, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 15 07:58:38.458: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-5562
  STEP: Removing pod with conflicting port in namespace statefulset-5562 @ 04/15/24 07:58:38.458
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-5562 and will be in running state @ 04/15/24 07:58:38.494
  Apr 15 07:58:40.517: INFO: Deleting all statefulset in ns statefulset-5562
  Apr 15 07:58:40.529: INFO: Scaling statefulset ss to 0
  Apr 15 07:58:50.568: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 07:58:50.577: INFO: Deleting statefulset ss
  Apr 15 07:58:50.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5562" for this suite. @ 04/15/24 07:58:50.637
• [14.527 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/15/24 07:58:50.656
  Apr 15 07:58:50.656: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename watch @ 04/15/24 07:58:50.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:50.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:50.694
  STEP: creating a watch on configmaps with label A @ 04/15/24 07:58:50.703
  STEP: creating a watch on configmaps with label B @ 04/15/24 07:58:50.708
  STEP: creating a watch on configmaps with label A or B @ 04/15/24 07:58:50.716
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/15/24 07:58:50.719
  Apr 15 07:58:50.734: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5282  5e6509c4-ea8b-4b10-a540-a5db6311438d 206971 0 2024-04-15 07:58:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 07:58:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:58:50.736: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5282  5e6509c4-ea8b-4b10-a540-a5db6311438d 206971 0 2024-04-15 07:58:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 07:58:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/15/24 07:58:50.737
  Apr 15 07:58:50.758: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5282  5e6509c4-ea8b-4b10-a540-a5db6311438d 206972 0 2024-04-15 07:58:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 07:58:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:58:50.759: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5282  5e6509c4-ea8b-4b10-a540-a5db6311438d 206972 0 2024-04-15 07:58:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 07:58:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/15/24 07:58:50.76
  Apr 15 07:58:50.786: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5282  5e6509c4-ea8b-4b10-a540-a5db6311438d 206973 0 2024-04-15 07:58:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 07:58:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:58:50.786: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5282  5e6509c4-ea8b-4b10-a540-a5db6311438d 206973 0 2024-04-15 07:58:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 07:58:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/15/24 07:58:50.787
  Apr 15 07:58:50.798: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5282  5e6509c4-ea8b-4b10-a540-a5db6311438d 206974 0 2024-04-15 07:58:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 07:58:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:58:50.799: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5282  5e6509c4-ea8b-4b10-a540-a5db6311438d 206974 0 2024-04-15 07:58:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 07:58:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/15/24 07:58:50.799
  Apr 15 07:58:50.812: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5282  85a1f9bd-48d7-4f70-8fcc-64ff752dc896 206975 0 2024-04-15 07:58:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-15 07:58:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:58:50.812: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5282  85a1f9bd-48d7-4f70-8fcc-64ff752dc896 206975 0 2024-04-15 07:58:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-15 07:58:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/15/24 07:59:00.814
  Apr 15 07:59:00.837: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5282  85a1f9bd-48d7-4f70-8fcc-64ff752dc896 207014 0 2024-04-15 07:58:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-15 07:58:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:59:00.838: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5282  85a1f9bd-48d7-4f70-8fcc-64ff752dc896 207014 0 2024-04-15 07:58:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-15 07:58:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:59:10.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5282" for this suite. @ 04/15/24 07:59:10.857
• [20.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 04/15/24 07:59:10.905
  Apr 15 07:59:10.905: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:59:10.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:59:11.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:59:11.013
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/15/24 07:59:11.021
  STEP: Saw pod success @ 04/15/24 07:59:15.076
  Apr 15 07:59:15.085: INFO: Trying to get logs from node eehaephong4y-3 pod pod-6f24bfaa-cb52-4fa0-95e3-8aa5043b1287 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:59:15.13
  Apr 15 07:59:15.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2596" for this suite. @ 04/15/24 07:59:15.204
• [4.321 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 04/15/24 07:59:15.229
  Apr 15 07:59:15.229: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename gc @ 04/15/24 07:59:15.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:59:15.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:59:15.309
  STEP: create the rc @ 04/15/24 07:59:15.319
  W0415 07:59:15.354121      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/15/24 07:59:20.365
  STEP: wait for all pods to be garbage collected @ 04/15/24 07:59:20.381
  STEP: Gathering metrics @ 04/15/24 07:59:25.402
  Apr 15 07:59:25.623: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 07:59:25.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4783" for this suite. @ 04/15/24 07:59:25.64
• [10.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 04/15/24 07:59:25.659
  Apr 15 07:59:25.659: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 07:59:25.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:59:25.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:59:25.704
  STEP: Given a ReplicationController is created @ 04/15/24 07:59:25.71
  STEP: When the matched label of one of its pods change @ 04/15/24 07:59:25.721
  Apr 15 07:59:25.731: INFO: Pod name pod-release: Found 0 pods out of 1
  Apr 15 07:59:30.748: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/15/24 07:59:30.779
  Apr 15 07:59:31.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7398" for this suite. @ 04/15/24 07:59:31.824
• [6.179 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 04/15/24 07:59:31.84
  Apr 15 07:59:31.840: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename job @ 04/15/24 07:59:31.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:59:31.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:59:31.882
  STEP: Creating a job @ 04/15/24 07:59:31.888
  STEP: Ensuring job reaches completions @ 04/15/24 07:59:31.9
  Apr 15 07:59:43.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4960" for this suite. @ 04/15/24 07:59:43.931
• [12.112 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 04/15/24 07:59:43.956
  Apr 15 07:59:43.956: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 07:59:43.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:59:44.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:59:44.016
  Apr 15 07:59:46.067: INFO: Deleting pod "var-expansion-80b73c58-e1ce-423b-9bc5-27175b8b405d" in namespace "var-expansion-844"
  Apr 15 07:59:46.086: INFO: Wait up to 5m0s for pod "var-expansion-80b73c58-e1ce-423b-9bc5-27175b8b405d" to be fully deleted
  Apr 15 07:59:48.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-844" for this suite. @ 04/15/24 07:59:48.125
• [4.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/15/24 07:59:48.154
  Apr 15 07:59:48.154: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:59:48.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:59:48.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:59:48.207
  STEP: Creating secret with name s-test-opt-del-715ef7a3-fede-4d28-94bc-bb987794f2c7 @ 04/15/24 07:59:48.226
  STEP: Creating secret with name s-test-opt-upd-f93149c3-2437-44d7-ae82-79d4591869d5 @ 04/15/24 07:59:48.241
  STEP: Creating the pod @ 04/15/24 07:59:48.254
  STEP: Deleting secret s-test-opt-del-715ef7a3-fede-4d28-94bc-bb987794f2c7 @ 04/15/24 07:59:50.385
  STEP: Updating secret s-test-opt-upd-f93149c3-2437-44d7-ae82-79d4591869d5 @ 04/15/24 07:59:50.409
  STEP: Creating secret with name s-test-opt-create-13c9f93a-4ee1-47f1-9120-7d9605b32a73 @ 04/15/24 07:59:50.442
  STEP: waiting to observe update in volume @ 04/15/24 07:59:50.456
  Apr 15 07:59:52.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9650" for this suite. @ 04/15/24 07:59:52.549
• [4.412 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 04/15/24 07:59:52.567
  Apr 15 07:59:52.567: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:59:52.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:59:52.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:59:52.614
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:59:52.625
  STEP: Saw pod success @ 04/15/24 07:59:56.674
  Apr 15 07:59:56.681: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-8978ca47-f32d-4af0-983c-59caa3d12ef8 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:59:56.696
  Apr 15 07:59:56.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9911" for this suite. @ 04/15/24 07:59:56.744
• [4.192 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 04/15/24 07:59:56.763
  Apr 15 07:59:56.763: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 07:59:56.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:59:56.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:59:56.811
  STEP: creating service in namespace services-98 @ 04/15/24 07:59:56.819
  STEP: creating service affinity-clusterip-transition in namespace services-98 @ 04/15/24 07:59:56.82
  STEP: creating replication controller affinity-clusterip-transition in namespace services-98 @ 04/15/24 07:59:56.849
  I0415 07:59:56.876940      13 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-98, replica count: 3
  I0415 07:59:59.929033      13 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 07:59:59.945: INFO: Creating new exec pod
  Apr 15 08:00:02.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-98 exec execpod-affinityw4vfr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Apr 15 08:00:03.440: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Apr 15 08:00:03.440: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:00:03.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-98 exec execpod-affinityw4vfr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.32 80'
  Apr 15 08:00:03.889: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.50.32 80\nConnection to 10.233.50.32 80 port [tcp/http] succeeded!\n"
  Apr 15 08:00:03.891: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:00:03.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-98 exec execpod-affinityw4vfr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.50.32:80/ ; done'
  Apr 15 08:00:04.637: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n"
  Apr 15 08:00:04.637: INFO: stdout: "\naffinity-clusterip-transition-rzq5p\naffinity-clusterip-transition-2xcfr\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-2xcfr\naffinity-clusterip-transition-2xcfr\naffinity-clusterip-transition-rzq5p\naffinity-clusterip-transition-rzq5p\naffinity-clusterip-transition-rzq5p\naffinity-clusterip-transition-2xcfr\naffinity-clusterip-transition-2xcfr\naffinity-clusterip-transition-2xcfr\naffinity-clusterip-transition-2xcfr\naffinity-clusterip-transition-2xcfr\naffinity-clusterip-transition-2xcfr\naffinity-clusterip-transition-rzq5p"
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-rzq5p
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-2xcfr
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-2xcfr
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-2xcfr
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-rzq5p
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-rzq5p
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-rzq5p
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-2xcfr
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-2xcfr
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-2xcfr
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-2xcfr
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-2xcfr
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-2xcfr
  Apr 15 08:00:04.637: INFO: Received response from host: affinity-clusterip-transition-rzq5p
  Apr 15 08:00:04.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-98 exec execpod-affinityw4vfr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.50.32:80/ ; done'
  Apr 15 08:00:05.153: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.50.32:80/\n"
  Apr 15 08:00:05.153: INFO: stdout: "\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt\naffinity-clusterip-transition-9f6rt"
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Received response from host: affinity-clusterip-transition-9f6rt
  Apr 15 08:00:05.154: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-98, will wait for the garbage collector to delete the pods @ 04/15/24 08:00:05.184
  Apr 15 08:00:05.257: INFO: Deleting ReplicationController affinity-clusterip-transition took: 12.725862ms
  Apr 15 08:00:05.458: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 200.874296ms
  Apr 15 08:00:08.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-98" for this suite. @ 04/15/24 08:00:08.637
• [11.888 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 04/15/24 08:00:08.652
  Apr 15 08:00:08.653: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:00:08.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:08.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:08.711
  STEP: Creating configMap with name projected-configmap-test-volume-map-d41c3fc6-bf08-43f9-87b2-f34be8df5bbe @ 04/15/24 08:00:08.716
  STEP: Creating a pod to test consume configMaps @ 04/15/24 08:00:08.728
  STEP: Saw pod success @ 04/15/24 08:00:12.777
  Apr 15 08:00:12.783: INFO: Trying to get logs from node eehaephong4y-3 pod pod-projected-configmaps-aa1fa134-8a8a-4b51-9a0a-690ec4fa96f4 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 08:00:12.799
  Apr 15 08:00:12.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5840" for this suite. @ 04/15/24 08:00:12.849
• [4.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 04/15/24 08:00:12.877
  Apr 15 08:00:12.877: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 08:00:12.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:12.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:12.926
  STEP: creating a Namespace @ 04/15/24 08:00:12.934
  STEP: patching the Namespace @ 04/15/24 08:00:12.971
  STEP: get the Namespace and ensuring it has the label @ 04/15/24 08:00:12.983
  Apr 15 08:00:12.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-57" for this suite. @ 04/15/24 08:00:13.004
  STEP: Destroying namespace "nspatchtest-f0f3a14c-fd41-458c-bc8a-ae09e8a2e94d-3061" for this suite. @ 04/15/24 08:00:13.019
• [0.159 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 04/15/24 08:00:13.038
  Apr 15 08:00:13.038: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename containers @ 04/15/24 08:00:13.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:13.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:13.086
  STEP: Creating a pod to test override command @ 04/15/24 08:00:13.094
  STEP: Saw pod success @ 04/15/24 08:00:17.144
  Apr 15 08:00:17.166: INFO: Trying to get logs from node eehaephong4y-3 pod client-containers-1b8d22be-354b-4c69-b0a1-9219c2168da4 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 08:00:17.18
  Apr 15 08:00:17.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7804" for this suite. @ 04/15/24 08:00:17.24
• [4.219 seconds]
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 04/15/24 08:00:17.256
  Apr 15 08:00:17.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename podtemplate @ 04/15/24 08:00:17.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:17.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:17.324
  Apr 15 08:00:17.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9626" for this suite. @ 04/15/24 08:00:17.435
• [0.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 04/15/24 08:00:17.467
  Apr 15 08:00:17.468: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:00:17.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:17.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:17.527
  STEP: Creating a pod to test downward api env vars @ 04/15/24 08:00:17.535
  STEP: Saw pod success @ 04/15/24 08:00:21.586
  Apr 15 08:00:21.595: INFO: Trying to get logs from node eehaephong4y-3 pod downward-api-60787dc1-9ac0-46fc-974c-b43e220c8ab5 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 08:00:21.613
  Apr 15 08:00:21.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1013" for this suite. @ 04/15/24 08:00:21.657
• [4.209 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 04/15/24 08:00:21.68
  Apr 15 08:00:21.680: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename dns @ 04/15/24 08:00:21.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:21.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:21.723
  STEP: Creating a test headless service @ 04/15/24 08:00:21.735
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9462.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9462.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-9462.svc.cluster.local;sleep 1; done
   @ 04/15/24 08:00:21.753
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9462.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9462.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9462.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9462.svc.cluster.local;sleep 1; done
   @ 04/15/24 08:00:21.754
  STEP: creating a pod to probe DNS @ 04/15/24 08:00:21.754
  STEP: submitting the pod to kubernetes @ 04/15/24 08:00:21.755
  STEP: retrieving the pod @ 04/15/24 08:00:23.802
  STEP: looking for the results for each expected name from probers @ 04/15/24 08:00:23.809
  Apr 15 08:00:23.823: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:23.832: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:23.843: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:23.853: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:23.863: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:23.876: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:23.888: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:23.897: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:23.897: INFO: Lookups using dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9462.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local jessie_udp@dns-test-service-2.dns-9462.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9462.svc.cluster.local]

  Apr 15 08:00:23.914: INFO: Pod client logs for webserver: 
  Apr 15 08:00:23.931: INFO: Pod client logs for querier: 
  Apr 15 08:00:23.943: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:00:28.822: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:28.829: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:28.840: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:28.849: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:28.858: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:28.869: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:28.878: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:28.890: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:28.891: INFO: Lookups using dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9462.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local jessie_udp@dns-test-service-2.dns-9462.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9462.svc.cluster.local]

  Apr 15 08:00:28.905: INFO: Pod client logs for webserver: 
  Apr 15 08:00:28.919: INFO: Pod client logs for querier: 
  Apr 15 08:00:28.932: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:00:33.832: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:33.843: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:33.851: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:33.860: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:33.871: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:33.886: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:33.897: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:33.907: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:33.907: INFO: Lookups using dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9462.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local jessie_udp@dns-test-service-2.dns-9462.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9462.svc.cluster.local]

  Apr 15 08:00:33.922: INFO: Pod client logs for webserver: 
  Apr 15 08:00:33.937: INFO: Pod client logs for querier: 
  Apr 15 08:00:33.948: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:00:38.829: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:38.844: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:38.853: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:38.872: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:38.899: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:38.909: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:38.923: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:38.932: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:38.932: INFO: Lookups using dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9462.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local jessie_udp@dns-test-service-2.dns-9462.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9462.svc.cluster.local]

  Apr 15 08:00:38.949: INFO: Pod client logs for webserver: 
  Apr 15 08:00:38.965: INFO: Pod client logs for querier: 
  Apr 15 08:00:38.981: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:00:43.820: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:43.833: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:43.841: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:43.848: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:43.855: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:43.864: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:43.873: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:43.884: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:43.885: INFO: Lookups using dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9462.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local jessie_udp@dns-test-service-2.dns-9462.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9462.svc.cluster.local]

  Apr 15 08:00:43.906: INFO: Pod client logs for webserver: 
  Apr 15 08:00:43.922: INFO: Pod client logs for querier: 
  Apr 15 08:00:43.938: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:00:48.820: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:48.828: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:48.842: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:48.850: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:48.859: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:48.872: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:48.881: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:48.890: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:48.890: INFO: Lookups using dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9462.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9462.svc.cluster.local jessie_udp@dns-test-service-2.dns-9462.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9462.svc.cluster.local]

  Apr 15 08:00:48.902: INFO: Pod client logs for webserver: 
  Apr 15 08:00:48.916: INFO: Pod client logs for querier: 
  Apr 15 08:00:48.930: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:00:53.846: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local from pod dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f: the server could not find the requested resource (get pods dns-test-b7177bdc-edb7-4470-a841-fad432ba339f)
  Apr 15 08:00:53.901: INFO: Lookups using dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f failed for: [wheezy_udp@dns-test-service-2.dns-9462.svc.cluster.local]

  Apr 15 08:00:53.923: INFO: Pod client logs for webserver: 
  Apr 15 08:00:53.947: INFO: Pod client logs for querier: 
  Apr 15 08:00:53.965: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:00:58.920: INFO: DNS probes using dns-9462/dns-test-b7177bdc-edb7-4470-a841-fad432ba339f succeeded

  STEP: deleting the pod @ 04/15/24 08:00:58.92
  STEP: deleting the test headless service @ 04/15/24 08:00:58.954
  Apr 15 08:00:59.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9462" for this suite. @ 04/15/24 08:00:59.098
• [37.438 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 04/15/24 08:00:59.119
  Apr 15 08:00:59.119: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename limitrange @ 04/15/24 08:00:59.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:59.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:59.206
  STEP: Creating LimitRange "e2e-limitrange-fzvtm" in namespace "limitrange-35" @ 04/15/24 08:00:59.213
  STEP: Creating another limitRange in another namespace @ 04/15/24 08:00:59.231
  Apr 15 08:00:59.275: INFO: Namespace "e2e-limitrange-fzvtm-1442" created
  Apr 15 08:00:59.276: INFO: Creating LimitRange "e2e-limitrange-fzvtm" in namespace "e2e-limitrange-fzvtm-1442"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-fzvtm" @ 04/15/24 08:00:59.323
  Apr 15 08:00:59.335: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-fzvtm" in "limitrange-35" namespace @ 04/15/24 08:00:59.336
  Apr 15 08:00:59.367: INFO: LimitRange "e2e-limitrange-fzvtm" has been patched
  STEP: Delete LimitRange "e2e-limitrange-fzvtm" by Collection with labelSelector: "e2e-limitrange-fzvtm=patched" @ 04/15/24 08:00:59.368
  STEP: Confirm that the limitRange "e2e-limitrange-fzvtm" has been deleted @ 04/15/24 08:00:59.39
  Apr 15 08:00:59.390: INFO: Requesting list of LimitRange to confirm quantity
  Apr 15 08:00:59.398: INFO: Found 0 LimitRange with label "e2e-limitrange-fzvtm=patched"
  Apr 15 08:00:59.398: INFO: LimitRange "e2e-limitrange-fzvtm" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-fzvtm" @ 04/15/24 08:00:59.398
  Apr 15 08:00:59.411: INFO: Found 1 limitRange
  Apr 15 08:00:59.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-35" for this suite. @ 04/15/24 08:00:59.424
  STEP: Destroying namespace "e2e-limitrange-fzvtm-1442" for this suite. @ 04/15/24 08:00:59.444
• [0.344 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 04/15/24 08:00:59.464
  Apr 15 08:00:59.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:00:59.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:59.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:59.519
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-0974ce26-4463-41ed-a767-777ce227d278 @ 04/15/24 08:00:59.538
  STEP: Creating the pod @ 04/15/24 08:00:59.55
  STEP: Updating configmap projected-configmap-test-upd-0974ce26-4463-41ed-a767-777ce227d278 @ 04/15/24 08:01:01.628
  STEP: waiting to observe update in volume @ 04/15/24 08:01:01.651
  Apr 15 08:01:05.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5005" for this suite. @ 04/15/24 08:01:05.717
• [6.271 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 04/15/24 08:01:05.738
  Apr 15 08:01:05.739: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename gc @ 04/15/24 08:01:05.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:05.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:05.786
  STEP: create the rc1 @ 04/15/24 08:01:05.801
  STEP: create the rc2 @ 04/15/24 08:01:05.811
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/15/24 08:01:11.949
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/15/24 08:01:16
  STEP: wait for the rc to be deleted @ 04/15/24 08:01:16.273
  Apr 15 08:01:21.774: INFO: 67 pods remaining
  Apr 15 08:01:21.774: INFO: 65 pods has nil DeletionTimestamp
  Apr 15 08:01:21.774: INFO: 
  STEP: Gathering metrics @ 04/15/24 08:01:26.363
  Apr 15 08:01:26.605: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 08:01:26.605: INFO: Deleting pod "simpletest-rc-to-be-deleted-2lv2c" in namespace "gc-8117"
  Apr 15 08:01:26.697: INFO: Deleting pod "simpletest-rc-to-be-deleted-4hb2h" in namespace "gc-8117"
  Apr 15 08:01:26.744: INFO: Deleting pod "simpletest-rc-to-be-deleted-4hxzh" in namespace "gc-8117"
  Apr 15 08:01:26.808: INFO: Deleting pod "simpletest-rc-to-be-deleted-589c7" in namespace "gc-8117"
  Apr 15 08:01:26.886: INFO: Deleting pod "simpletest-rc-to-be-deleted-5mzfc" in namespace "gc-8117"
  Apr 15 08:01:27.056: INFO: Deleting pod "simpletest-rc-to-be-deleted-5t5b4" in namespace "gc-8117"
  Apr 15 08:01:27.160: INFO: Deleting pod "simpletest-rc-to-be-deleted-624ts" in namespace "gc-8117"
  Apr 15 08:01:27.201: INFO: Deleting pod "simpletest-rc-to-be-deleted-6ncwp" in namespace "gc-8117"
  Apr 15 08:01:27.258: INFO: Deleting pod "simpletest-rc-to-be-deleted-6pmhp" in namespace "gc-8117"
  Apr 15 08:01:27.323: INFO: Deleting pod "simpletest-rc-to-be-deleted-6pp27" in namespace "gc-8117"
  Apr 15 08:01:27.452: INFO: Deleting pod "simpletest-rc-to-be-deleted-6w4bl" in namespace "gc-8117"
  Apr 15 08:01:27.542: INFO: Deleting pod "simpletest-rc-to-be-deleted-6z5gt" in namespace "gc-8117"
  Apr 15 08:01:27.595: INFO: Deleting pod "simpletest-rc-to-be-deleted-7d5jb" in namespace "gc-8117"
  Apr 15 08:01:27.706: INFO: Deleting pod "simpletest-rc-to-be-deleted-7h7x9" in namespace "gc-8117"
  Apr 15 08:01:27.839: INFO: Deleting pod "simpletest-rc-to-be-deleted-7lfsd" in namespace "gc-8117"
  Apr 15 08:01:27.948: INFO: Deleting pod "simpletest-rc-to-be-deleted-7sb6j" in namespace "gc-8117"
  Apr 15 08:01:28.173: INFO: Deleting pod "simpletest-rc-to-be-deleted-7tq2x" in namespace "gc-8117"
  Apr 15 08:01:28.268: INFO: Deleting pod "simpletest-rc-to-be-deleted-7zl2v" in namespace "gc-8117"
  Apr 15 08:01:28.317: INFO: Deleting pod "simpletest-rc-to-be-deleted-86v6k" in namespace "gc-8117"
  Apr 15 08:01:28.349: INFO: Deleting pod "simpletest-rc-to-be-deleted-89cjm" in namespace "gc-8117"
  Apr 15 08:01:28.428: INFO: Deleting pod "simpletest-rc-to-be-deleted-8fck4" in namespace "gc-8117"
  Apr 15 08:01:28.456: INFO: Deleting pod "simpletest-rc-to-be-deleted-8p86t" in namespace "gc-8117"
  Apr 15 08:01:28.504: INFO: Deleting pod "simpletest-rc-to-be-deleted-94z8f" in namespace "gc-8117"
  Apr 15 08:01:28.618: INFO: Deleting pod "simpletest-rc-to-be-deleted-9cphk" in namespace "gc-8117"
  Apr 15 08:01:28.731: INFO: Deleting pod "simpletest-rc-to-be-deleted-9q658" in namespace "gc-8117"
  Apr 15 08:01:28.829: INFO: Deleting pod "simpletest-rc-to-be-deleted-9qd5t" in namespace "gc-8117"
  Apr 15 08:01:28.883: INFO: Deleting pod "simpletest-rc-to-be-deleted-9qvdl" in namespace "gc-8117"
  Apr 15 08:01:28.942: INFO: Deleting pod "simpletest-rc-to-be-deleted-bdwkb" in namespace "gc-8117"
  Apr 15 08:01:29.034: INFO: Deleting pod "simpletest-rc-to-be-deleted-c4l8r" in namespace "gc-8117"
  Apr 15 08:01:29.088: INFO: Deleting pod "simpletest-rc-to-be-deleted-c74rj" in namespace "gc-8117"
  Apr 15 08:01:29.166: INFO: Deleting pod "simpletest-rc-to-be-deleted-cr4h9" in namespace "gc-8117"
  Apr 15 08:01:29.223: INFO: Deleting pod "simpletest-rc-to-be-deleted-dnl4f" in namespace "gc-8117"
  Apr 15 08:01:29.271: INFO: Deleting pod "simpletest-rc-to-be-deleted-dr7h2" in namespace "gc-8117"
  Apr 15 08:01:29.403: INFO: Deleting pod "simpletest-rc-to-be-deleted-dsbkk" in namespace "gc-8117"
  Apr 15 08:01:29.566: INFO: Deleting pod "simpletest-rc-to-be-deleted-dsx6h" in namespace "gc-8117"
  Apr 15 08:01:29.699: INFO: Deleting pod "simpletest-rc-to-be-deleted-dw6rd" in namespace "gc-8117"
  Apr 15 08:01:29.791: INFO: Deleting pod "simpletest-rc-to-be-deleted-fcjdv" in namespace "gc-8117"
  Apr 15 08:01:29.863: INFO: Deleting pod "simpletest-rc-to-be-deleted-fdpjf" in namespace "gc-8117"
  Apr 15 08:01:29.962: INFO: Deleting pod "simpletest-rc-to-be-deleted-fw7n8" in namespace "gc-8117"
  Apr 15 08:01:30.073: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4jcm" in namespace "gc-8117"
  Apr 15 08:01:30.211: INFO: Deleting pod "simpletest-rc-to-be-deleted-g54wd" in namespace "gc-8117"
  Apr 15 08:01:30.329: INFO: Deleting pod "simpletest-rc-to-be-deleted-gpb2h" in namespace "gc-8117"
  Apr 15 08:01:30.425: INFO: Deleting pod "simpletest-rc-to-be-deleted-gq6nt" in namespace "gc-8117"
  Apr 15 08:01:30.476: INFO: Deleting pod "simpletest-rc-to-be-deleted-h6h2m" in namespace "gc-8117"
  Apr 15 08:01:30.513: INFO: Deleting pod "simpletest-rc-to-be-deleted-hmwst" in namespace "gc-8117"
  Apr 15 08:01:30.552: INFO: Deleting pod "simpletest-rc-to-be-deleted-hv79h" in namespace "gc-8117"
  Apr 15 08:01:30.603: INFO: Deleting pod "simpletest-rc-to-be-deleted-j4h4v" in namespace "gc-8117"
  Apr 15 08:01:30.671: INFO: Deleting pod "simpletest-rc-to-be-deleted-j5z94" in namespace "gc-8117"
  Apr 15 08:01:30.785: INFO: Deleting pod "simpletest-rc-to-be-deleted-j9q4h" in namespace "gc-8117"
  Apr 15 08:01:30.887: INFO: Deleting pod "simpletest-rc-to-be-deleted-jbbsw" in namespace "gc-8117"
  Apr 15 08:01:31.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8117" for this suite. @ 04/15/24 08:01:31.147
• [25.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 04/15/24 08:01:31.201
  Apr 15 08:01:31.201: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 08:01:31.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:31.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:31.405
  STEP: Creating pod liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c in namespace container-probe-7880 @ 04/15/24 08:01:31.411
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 08:01:33.754
  Apr 15 08:01:33.762: INFO: Initial restart count of pod liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c is 0
  Apr 15 08:01:33.768: INFO: Get pod liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c in namespace container-probe-7880
  Apr 15 08:01:35.785: INFO: Get pod liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c in namespace container-probe-7880
  Apr 15 08:01:37.821: INFO: Get pod liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c in namespace container-probe-7880
  Apr 15 08:01:39.841: INFO: Get pod liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c in namespace container-probe-7880
  Apr 15 08:01:41.850: INFO: Get pod liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c in namespace container-probe-7880
  Apr 15 08:01:43.873: INFO: Get pod liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c in namespace container-probe-7880
  Apr 15 08:01:45.889: INFO: Get pod liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c in namespace container-probe-7880
  Apr 15 08:01:47.907: INFO: Get pod liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c in namespace container-probe-7880
  Apr 15 08:01:49.916: INFO: Get pod liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c in namespace container-probe-7880
  Apr 15 08:01:51.925: INFO: Get pod liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c in namespace container-probe-7880
  Apr 15 08:01:53.935: INFO: Get pod liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c in namespace container-probe-7880
  Apr 15 08:01:53.936: INFO: Restart count of pod container-probe-7880/liveness-2e806071-f1d4-47d1-8724-cc06ccceb70c is now 1 (20.173498286s elapsed)
  STEP: deleting the pod @ 04/15/24 08:01:53.936
  Apr 15 08:01:53.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7880" for this suite. @ 04/15/24 08:01:53.973
• [22.786 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/15/24 08:01:53.988
  Apr 15 08:01:53.988: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:01:53.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:54.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:54.031
  STEP: Creating projection with secret that has name projected-secret-test-474f5fe9-b6dd-4650-9e20-c4dffd54c105 @ 04/15/24 08:01:54.036
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:01:54.045
  STEP: Saw pod success @ 04/15/24 08:01:58.1
  Apr 15 08:01:58.108: INFO: Trying to get logs from node eehaephong4y-3 pod pod-projected-secrets-c3f70ce5-e6b2-4881-a2ba-810dc3f851a4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:01:58.126
  Apr 15 08:01:58.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-241" for this suite. @ 04/15/24 08:01:58.173
• [4.200 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 04/15/24 08:01:58.192
  Apr 15 08:01:58.192: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:01:58.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:58.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:58.241
  STEP: Setting up server cert @ 04/15/24 08:01:58.3
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:01:59.25
  STEP: Deploying the webhook pod @ 04/15/24 08:01:59.275
  STEP: Wait for the deployment to be ready @ 04/15/24 08:01:59.32
  Apr 15 08:01:59.352: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Apr 15 08:02:01.376: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 08:02:03.391: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 08:02:05.385: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 08:02:07.395: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 08:02:09.388: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 04/15/24 08:02:11.388
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:02:11.424
  Apr 15 08:02:12.425: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 15 08:02:12.439: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4586-crds.webhook.example.com via the AdmissionRegistration API @ 04/15/24 08:02:12.969
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/15/24 08:02:13.039
  Apr 15 08:02:15.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7971" for this suite. @ 04/15/24 08:02:15.938
  STEP: Destroying namespace "webhook-markers-9507" for this suite. @ 04/15/24 08:02:15.955
• [17.776 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 04/15/24 08:02:15.97
  Apr 15 08:02:15.970: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 08:02:15.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:02:16.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:02:16.018
  Apr 15 08:02:16.057: INFO: created pod
  STEP: Saw pod success @ 04/15/24 08:02:20.087
  Apr 15 08:02:50.088: INFO: polling logs
  Apr 15 08:02:50.111: INFO: Pod logs: 
  I0415 08:02:16.809248       1 log.go:245] OK: Got token
  I0415 08:02:16.811290       1 log.go:245] validating with in-cluster discovery
  I0415 08:02:16.812817       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0415 08:02:16.812951       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6165:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000c1d60), NotBefore:(*jwt.NumericDate)(0xc0000c1e48), IssuedAt:(*jwt.NumericDate)(0xc0000c1d70), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6165", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"4bfe3df1-0e7b-48f9-8ca1-3545856ef040"}}}
  I0415 08:02:16.844265       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0415 08:02:16.858083       1 log.go:245] OK: Validated signature on JWT
  I0415 08:02:16.858320       1 log.go:245] OK: Got valid claims from token!
  I0415 08:02:16.858405       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6165:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013240), NotBefore:(*jwt.NumericDate)(0xc000013268), IssuedAt:(*jwt.NumericDate)(0xc000013248), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6165", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"4bfe3df1-0e7b-48f9-8ca1-3545856ef040"}}}

  Apr 15 08:02:50.111: INFO: completed pod
  Apr 15 08:02:50.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6165" for this suite. @ 04/15/24 08:02:50.14
• [34.189 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 04/15/24 08:02:50.161
  Apr 15 08:02:50.162: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 08:02:50.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:02:50.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:02:50.22
  STEP: Creating a ResourceQuota @ 04/15/24 08:02:50.226
  STEP: Getting a ResourceQuota @ 04/15/24 08:02:50.239
  STEP: Updating a ResourceQuota @ 04/15/24 08:02:50.247
  STEP: Verifying a ResourceQuota was modified @ 04/15/24 08:02:50.261
  STEP: Deleting a ResourceQuota @ 04/15/24 08:02:50.268
  STEP: Verifying the deleted ResourceQuota @ 04/15/24 08:02:50.281
  Apr 15 08:02:50.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5136" for this suite. @ 04/15/24 08:02:50.301
• [0.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 04/15/24 08:02:50.322
  Apr 15 08:02:50.322: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:02:50.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:02:50.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:02:50.366
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:02:50.373
  STEP: Saw pod success @ 04/15/24 08:02:54.428
  Apr 15 08:02:54.436: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-99ecee4a-1f00-46eb-ae33-368c1f56cc91 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:02:54.449
  Apr 15 08:02:54.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1430" for this suite. @ 04/15/24 08:02:54.504
• [4.203 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 04/15/24 08:02:54.525
  Apr 15 08:02:54.525: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:02:54.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:02:54.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:02:54.588
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:02:54.597
  STEP: Saw pod success @ 04/15/24 08:02:58.647
  Apr 15 08:02:58.655: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-3ab2f45b-a2de-4c7b-bcaa-987142cbc68f container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:02:58.675
  Apr 15 08:02:58.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5400" for this suite. @ 04/15/24 08:02:58.73
• [4.221 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 04/15/24 08:02:58.746
  Apr 15 08:02:58.746: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 08:02:58.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:02:58.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:02:58.803
  STEP: Creating pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931 @ 04/15/24 08:02:58.812
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 08:03:00.859
  Apr 15 08:03:00.868: INFO: Initial restart count of pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc is 0
  Apr 15 08:03:00.875: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:02.908: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:04.919: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:06.932: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:08.944: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:10.955: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:12.967: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:14.977: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:16.992: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:19.004: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:21.015: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:23.024: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:25.034: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:27.043: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:29.060: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:31.072: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:33.083: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:35.094: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:37.105: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:39.116: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:41.128: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:43.136: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:45.148: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:47.159: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:49.170: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:51.184: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:53.197: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:55.207: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:57.217: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:03:59.230: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:01.241: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:03.249: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:05.259: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:07.281: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:09.292: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:11.303: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:13.313: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:15.323: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:17.331: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:19.341: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:21.352: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:23.364: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:25.376: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:27.387: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:29.395: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:31.408: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:33.421: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:35.432: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:37.448: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:39.457: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:41.475: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:43.488: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:45.498: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:47.509: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:49.520: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:51.530: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:53.540: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:55.554: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:57.564: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:04:59.572: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:01.588: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:03.599: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:05.611: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:07.620: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:09.630: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:11.640: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:13.649: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:15.660: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:17.669: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:19.680: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:21.692: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:23.702: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:25.713: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:27.724: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:29.734: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:31.747: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:33.758: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:35.768: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:37.779: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:39.792: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:41.800: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:43.809: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:45.818: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:47.829: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:49.837: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:51.850: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:53.861: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:55.870: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:57.878: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:05:59.888: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:01.909: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:03.920: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:05.930: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:07.939: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:09.947: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:11.958: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:13.967: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:15.976: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:17.987: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:19.996: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:22.009: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:24.021: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:26.030: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:28.038: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:30.048: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:32.060: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:34.070: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:36.082: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:38.096: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:40.105: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:42.114: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:44.121: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:46.129: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:48.140: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:50.150: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:52.163: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:54.175: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:56.187: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:06:58.195: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  Apr 15 08:07:00.206: INFO: Get pod test-webserver-e7c46921-a2b7-4997-a3c3-d25e982bd3cc in namespace container-probe-2931
  STEP: deleting the pod @ 04/15/24 08:07:02.208
  Apr 15 08:07:02.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2931" for this suite. @ 04/15/24 08:07:02.292
• [243.566 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 04/15/24 08:07:02.319
  Apr 15 08:07:02.319: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 08:07:02.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:07:02.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:07:02.38
  STEP: Creating a ReplaceConcurrent cronjob @ 04/15/24 08:07:02.387
  STEP: Ensuring a job is scheduled @ 04/15/24 08:07:02.409
  STEP: Ensuring exactly one is scheduled @ 04/15/24 08:08:00.419
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/15/24 08:08:00.426
  STEP: Ensuring the job is replaced with a new one @ 04/15/24 08:08:00.436
  STEP: Removing cronjob @ 04/15/24 08:09:00.452
  Apr 15 08:09:00.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9223" for this suite. @ 04/15/24 08:09:00.505
• [118.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 04/15/24 08:09:00.539
  Apr 15 08:09:00.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename sysctl @ 04/15/24 08:09:00.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:00.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:00.596
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/15/24 08:09:00.603
  STEP: Watching for error events or started pod @ 04/15/24 08:09:00.623
  STEP: Waiting for pod completion @ 04/15/24 08:09:02.637
  STEP: Checking that the pod succeeded @ 04/15/24 08:09:04.673
  STEP: Getting logs from the pod @ 04/15/24 08:09:04.673
  STEP: Checking that the sysctl is actually updated @ 04/15/24 08:09:04.712
  Apr 15 08:09:04.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6449" for this suite. @ 04/15/24 08:09:04.727
• [4.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/15/24 08:09:04.757
  Apr 15 08:09:04.757: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 08:09:04.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:04.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:04.81
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/15/24 08:09:04.871
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 08:09:04.885
  Apr 15 08:09:04.903: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:09:04.904: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  Apr 15 08:09:05.923: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:09:05.924: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  Apr 15 08:09:06.974: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 08:09:06.974: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/15/24 08:09:06.989
  Apr 15 08:09:07.058: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 08:09:07.058: INFO: Node eehaephong4y-2 is running 0 daemon pod, expected 1
  Apr 15 08:09:08.047: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 08:09:08.047: INFO: Node eehaephong4y-2 is running 0 daemon pod, expected 1
  Apr 15 08:09:09.048: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 08:09:09.048: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/15/24 08:09:09.048
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 08:09:09.059
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9928, will wait for the garbage collector to delete the pods @ 04/15/24 08:09:09.06
  Apr 15 08:09:09.130: INFO: Deleting DaemonSet.extensions daemon-set took: 12.676195ms
  Apr 15 08:09:09.230: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.606088ms
  Apr 15 08:09:10.338: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:09:10.338: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 08:09:10.344: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"210737"},"items":null}

  Apr 15 08:09:10.350: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"210738"},"items":null}

  Apr 15 08:09:10.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9928" for this suite. @ 04/15/24 08:09:10.404
• [5.658 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 04/15/24 08:09:10.419
  Apr 15 08:09:10.420: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:09:10.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:10.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:10.478
  STEP: Setting up server cert @ 04/15/24 08:09:10.534
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:09:11.714
  STEP: Deploying the webhook pod @ 04/15/24 08:09:11.736
  STEP: Wait for the deployment to be ready @ 04/15/24 08:09:11.761
  Apr 15 08:09:11.776: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/15/24 08:09:13.811
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:09:13.835
  Apr 15 08:09:14.836: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/15/24 08:09:15.042
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 08:09:15.123
  STEP: Deleting the collection of validation webhooks @ 04/15/24 08:09:15.173
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 08:09:15.351
  Apr 15 08:09:15.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8698" for this suite. @ 04/15/24 08:09:15.483
  STEP: Destroying namespace "webhook-markers-9199" for this suite. @ 04/15/24 08:09:15.498
• [5.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 04/15/24 08:09:15.521
  Apr 15 08:09:15.521: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:09:15.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:15.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:15.57
  STEP: Creating a pod to test downward api env vars @ 04/15/24 08:09:15.578
  STEP: Saw pod success @ 04/15/24 08:09:19.63
  Apr 15 08:09:19.637: INFO: Trying to get logs from node eehaephong4y-3 pod downward-api-0eba3791-59ad-480a-93c0-ff3201ee2f53 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 08:09:19.651
  Apr 15 08:09:19.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9456" for this suite. @ 04/15/24 08:09:19.697
• [4.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 04/15/24 08:09:19.723
  Apr 15 08:09:19.723: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 08:09:19.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:19.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:19.771
  Apr 15 08:09:21.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6488" for this suite. @ 04/15/24 08:09:21.852
• [2.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/15/24 08:09:21.88
  Apr 15 08:09:21.880: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/15/24 08:09:21.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:21.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:21.928
  STEP: Creating 50 configmaps @ 04/15/24 08:09:21.935
  STEP: Creating RC which spawns configmap-volume pods @ 04/15/24 08:09:22.464
  Apr 15 08:09:22.506: INFO: Pod name wrapped-volume-race-cd4e1285-ef0b-4e78-a8ed-25e16be10e05: Found 0 pods out of 5
  Apr 15 08:09:27.523: INFO: Pod name wrapped-volume-race-cd4e1285-ef0b-4e78-a8ed-25e16be10e05: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/15/24 08:09:27.523
  STEP: Creating RC which spawns configmap-volume pods @ 04/15/24 08:09:29.607
  Apr 15 08:09:29.648: INFO: Pod name wrapped-volume-race-e49395e4-dad3-4587-a94c-8658e9402287: Found 0 pods out of 5
  Apr 15 08:09:34.673: INFO: Pod name wrapped-volume-race-e49395e4-dad3-4587-a94c-8658e9402287: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/15/24 08:09:34.673
  STEP: Creating RC which spawns configmap-volume pods @ 04/15/24 08:09:34.747
  Apr 15 08:09:34.851: INFO: Pod name wrapped-volume-race-86833f96-d949-4cc5-99ce-ece71b33326a: Found 0 pods out of 5
  Apr 15 08:09:39.879: INFO: Pod name wrapped-volume-race-86833f96-d949-4cc5-99ce-ece71b33326a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/15/24 08:09:39.879
  STEP: deleting ReplicationController wrapped-volume-race-86833f96-d949-4cc5-99ce-ece71b33326a in namespace emptydir-wrapper-4985, will wait for the garbage collector to delete the pods @ 04/15/24 08:09:39.925
  Apr 15 08:09:40.002: INFO: Deleting ReplicationController wrapped-volume-race-86833f96-d949-4cc5-99ce-ece71b33326a took: 16.555491ms
  Apr 15 08:09:40.102: INFO: Terminating ReplicationController wrapped-volume-race-86833f96-d949-4cc5-99ce-ece71b33326a pods took: 100.312505ms
  STEP: deleting ReplicationController wrapped-volume-race-e49395e4-dad3-4587-a94c-8658e9402287 in namespace emptydir-wrapper-4985, will wait for the garbage collector to delete the pods @ 04/15/24 08:09:42.103
  Apr 15 08:09:42.185: INFO: Deleting ReplicationController wrapped-volume-race-e49395e4-dad3-4587-a94c-8658e9402287 took: 19.926642ms
  Apr 15 08:09:42.386: INFO: Terminating ReplicationController wrapped-volume-race-e49395e4-dad3-4587-a94c-8658e9402287 pods took: 200.841646ms
  STEP: deleting ReplicationController wrapped-volume-race-cd4e1285-ef0b-4e78-a8ed-25e16be10e05 in namespace emptydir-wrapper-4985, will wait for the garbage collector to delete the pods @ 04/15/24 08:09:44.386
  Apr 15 08:09:44.499: INFO: Deleting ReplicationController wrapped-volume-race-cd4e1285-ef0b-4e78-a8ed-25e16be10e05 took: 53.418589ms
  Apr 15 08:09:44.700: INFO: Terminating ReplicationController wrapped-volume-race-cd4e1285-ef0b-4e78-a8ed-25e16be10e05 pods took: 201.364282ms
  STEP: Cleaning up the configMaps @ 04/15/24 08:09:47.702
  Apr 15 08:09:48.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4985" for this suite. @ 04/15/24 08:09:48.421
• [26.560 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 04/15/24 08:09:48.443
  Apr 15 08:09:48.443: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:09:48.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:48.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:48.489
  STEP: Creating a pod to test downward api env vars @ 04/15/24 08:09:48.5
  STEP: Saw pod success @ 04/15/24 08:09:50.546
  Apr 15 08:09:50.555: INFO: Trying to get logs from node eehaephong4y-3 pod downward-api-30584c73-ce4f-491f-82bf-5accfe80bc0c container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 08:09:50.576
  Apr 15 08:09:50.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5252" for this suite. @ 04/15/24 08:09:50.628
• [2.207 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 04/15/24 08:09:50.656
  Apr 15 08:09:50.656: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename dns @ 04/15/24 08:09:50.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:09:50.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:09:50.701
  STEP: Creating a test headless service @ 04/15/24 08:09:50.707
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3636 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3636;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3636 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3636;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3636.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3636.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3636.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3636.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3636.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3636.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3636.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3636.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3636.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3636.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3636.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3636.svc;check="$$(dig +notcp +noall +answer +search 50.23.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.23.50_udp@PTR;check="$$(dig +tcp +noall +answer +search 50.23.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.23.50_tcp@PTR;sleep 1; done
   @ 04/15/24 08:09:50.749
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3636 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3636;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3636 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3636;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3636.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3636.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3636.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3636.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3636.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3636.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3636.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3636.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3636.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3636.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3636.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3636.svc;check="$$(dig +notcp +noall +answer +search 50.23.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.23.50_udp@PTR;check="$$(dig +tcp +noall +answer +search 50.23.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.23.50_tcp@PTR;sleep 1; done
   @ 04/15/24 08:09:50.749
  STEP: creating a pod to probe DNS @ 04/15/24 08:09:50.749
  STEP: submitting the pod to kubernetes @ 04/15/24 08:09:50.749
  STEP: retrieving the pod @ 04/15/24 08:09:52.806
  STEP: looking for the results for each expected name from probers @ 04/15/24 08:09:52.817
  Apr 15 08:09:52.829: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.837: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.845: INFO: Unable to read wheezy_udp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.857: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.869: INFO: Unable to read wheezy_udp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.878: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.888: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.896: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.944: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.953: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.961: INFO: Unable to read jessie_udp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.969: INFO: Unable to read jessie_tcp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.978: INFO: Unable to read jessie_udp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.989: INFO: Unable to read jessie_tcp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:52.999: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:53.008: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:53.043: INFO: Lookups using dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3636 wheezy_tcp@dns-test-service.dns-3636 wheezy_udp@dns-test-service.dns-3636.svc wheezy_tcp@dns-test-service.dns-3636.svc wheezy_udp@_http._tcp.dns-test-service.dns-3636.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3636.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3636 jessie_tcp@dns-test-service.dns-3636 jessie_udp@dns-test-service.dns-3636.svc jessie_tcp@dns-test-service.dns-3636.svc jessie_udp@_http._tcp.dns-test-service.dns-3636.svc jessie_tcp@_http._tcp.dns-test-service.dns-3636.svc]

  Apr 15 08:09:53.058: INFO: Pod client logs for webserver: 
  Apr 15 08:09:53.075: INFO: Pod client logs for querier: 
  Apr 15 08:09:53.089: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:09:57.830: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:57.842: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:57.852: INFO: Unable to read wheezy_udp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:57.864: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:57.876: INFO: Unable to read wheezy_udp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:57.890: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:57.901: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:57.909: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:57.955: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:57.963: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:57.972: INFO: Unable to read jessie_udp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:57.984: INFO: Unable to read jessie_tcp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:57.993: INFO: Unable to read jessie_udp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:58.003: INFO: Unable to read jessie_tcp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:58.011: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:58.018: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:09:58.050: INFO: Lookups using dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3636 wheezy_tcp@dns-test-service.dns-3636 wheezy_udp@dns-test-service.dns-3636.svc wheezy_tcp@dns-test-service.dns-3636.svc wheezy_udp@_http._tcp.dns-test-service.dns-3636.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3636.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3636 jessie_tcp@dns-test-service.dns-3636 jessie_udp@dns-test-service.dns-3636.svc jessie_tcp@dns-test-service.dns-3636.svc jessie_udp@_http._tcp.dns-test-service.dns-3636.svc jessie_tcp@_http._tcp.dns-test-service.dns-3636.svc]

  Apr 15 08:09:58.071: INFO: Pod client logs for webserver: 
  Apr 15 08:09:58.088: INFO: Pod client logs for querier: 
  Apr 15 08:09:58.106: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:10:02.842: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:02.851: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:02.902: INFO: Unable to read wheezy_udp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:02.911: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:02.924: INFO: Unable to read wheezy_udp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:02.933: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:02.941: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:02.948: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:02.996: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:03.005: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:03.013: INFO: Unable to read jessie_udp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:03.022: INFO: Unable to read jessie_tcp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:03.031: INFO: Unable to read jessie_udp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:03.040: INFO: Unable to read jessie_tcp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:03.046: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:03.055: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:03.107: INFO: Lookups using dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3636 wheezy_tcp@dns-test-service.dns-3636 wheezy_udp@dns-test-service.dns-3636.svc wheezy_tcp@dns-test-service.dns-3636.svc wheezy_udp@_http._tcp.dns-test-service.dns-3636.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3636.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3636 jessie_tcp@dns-test-service.dns-3636 jessie_udp@dns-test-service.dns-3636.svc jessie_tcp@dns-test-service.dns-3636.svc jessie_udp@_http._tcp.dns-test-service.dns-3636.svc jessie_tcp@_http._tcp.dns-test-service.dns-3636.svc]

  Apr 15 08:10:03.124: INFO: Pod client logs for webserver: 
  Apr 15 08:10:03.142: INFO: Pod client logs for querier: 
  Apr 15 08:10:03.156: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:10:07.833: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:07.842: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:07.853: INFO: Unable to read wheezy_udp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:07.865: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:07.874: INFO: Unable to read wheezy_udp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:07.883: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:07.893: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:07.902: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:07.957: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:07.969: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:07.981: INFO: Unable to read jessie_udp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:07.996: INFO: Unable to read jessie_tcp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:08.014: INFO: Unable to read jessie_udp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:08.025: INFO: Unable to read jessie_tcp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:08.036: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:08.046: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:08.089: INFO: Lookups using dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3636 wheezy_tcp@dns-test-service.dns-3636 wheezy_udp@dns-test-service.dns-3636.svc wheezy_tcp@dns-test-service.dns-3636.svc wheezy_udp@_http._tcp.dns-test-service.dns-3636.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3636.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3636 jessie_tcp@dns-test-service.dns-3636 jessie_udp@dns-test-service.dns-3636.svc jessie_tcp@dns-test-service.dns-3636.svc jessie_udp@_http._tcp.dns-test-service.dns-3636.svc jessie_tcp@_http._tcp.dns-test-service.dns-3636.svc]

  Apr 15 08:10:08.111: INFO: Pod client logs for webserver: 
  Apr 15 08:10:08.135: INFO: Pod client logs for querier: 
  Apr 15 08:10:08.159: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:10:12.834: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:12.845: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:12.857: INFO: Unable to read wheezy_udp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:12.869: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:12.891: INFO: Unable to read wheezy_udp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:12.905: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:12.918: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:12.928: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:12.989: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:13.004: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:13.019: INFO: Unable to read jessie_udp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:13.028: INFO: Unable to read jessie_tcp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:13.038: INFO: Unable to read jessie_udp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:13.059: INFO: Unable to read jessie_tcp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:13.071: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:13.084: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:13.129: INFO: Lookups using dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3636 wheezy_tcp@dns-test-service.dns-3636 wheezy_udp@dns-test-service.dns-3636.svc wheezy_tcp@dns-test-service.dns-3636.svc wheezy_udp@_http._tcp.dns-test-service.dns-3636.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3636.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3636 jessie_tcp@dns-test-service.dns-3636 jessie_udp@dns-test-service.dns-3636.svc jessie_tcp@dns-test-service.dns-3636.svc jessie_udp@_http._tcp.dns-test-service.dns-3636.svc jessie_tcp@_http._tcp.dns-test-service.dns-3636.svc]

  Apr 15 08:10:13.155: INFO: Pod client logs for webserver: 
  Apr 15 08:10:13.170: INFO: Pod client logs for querier: 
  Apr 15 08:10:13.187: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:10:17.833: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:17.840: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:17.849: INFO: Unable to read wheezy_udp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:17.865: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:17.875: INFO: Unable to read wheezy_udp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:17.884: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:17.896: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:17.909: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:17.975: INFO: Unable to read jessie_udp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:17.986: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:17.996: INFO: Unable to read jessie_udp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:18.011: INFO: Unable to read jessie_tcp@dns-test-service.dns-3636 from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:18.025: INFO: Unable to read jessie_udp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:18.041: INFO: Unable to read jessie_tcp@dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:18.051: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:18.066: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3636.svc from pod dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261: the server could not find the requested resource (get pods dns-test-0b115385-65d6-4367-a406-9bb716477261)
  Apr 15 08:10:18.127: INFO: Lookups using dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3636 wheezy_tcp@dns-test-service.dns-3636 wheezy_udp@dns-test-service.dns-3636.svc wheezy_tcp@dns-test-service.dns-3636.svc wheezy_udp@_http._tcp.dns-test-service.dns-3636.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3636.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3636 jessie_tcp@dns-test-service.dns-3636 jessie_udp@dns-test-service.dns-3636.svc jessie_tcp@dns-test-service.dns-3636.svc jessie_udp@_http._tcp.dns-test-service.dns-3636.svc jessie_tcp@_http._tcp.dns-test-service.dns-3636.svc]

  Apr 15 08:10:18.153: INFO: Pod client logs for webserver: 
  Apr 15 08:10:18.170: INFO: Pod client logs for querier: 
  Apr 15 08:10:18.183: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:10:23.189: INFO: DNS probes using dns-3636/dns-test-0b115385-65d6-4367-a406-9bb716477261 succeeded

  STEP: deleting the pod @ 04/15/24 08:10:23.191
  STEP: deleting the test service @ 04/15/24 08:10:23.24
  STEP: deleting the test headless service @ 04/15/24 08:10:23.315
  Apr 15 08:10:23.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3636" for this suite. @ 04/15/24 08:10:23.362
• [32.743 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 04/15/24 08:10:23.405
  Apr 15 08:10:23.405: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:10:23.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:23.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:23.471
  STEP: Starting the proxy @ 04/15/24 08:10:23.478
  Apr 15 08:10:23.480: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3639 proxy --unix-socket=/tmp/kubectl-proxy-unix1609555739/test'
  STEP: retrieving proxy /api/ output @ 04/15/24 08:10:23.717
  Apr 15 08:10:23.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3639" for this suite. @ 04/15/24 08:10:23.734
• [0.344 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/15/24 08:10:23.748
  Apr 15 08:10:23.748: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:10:23.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:23.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:23.792
  STEP: Creating projection with secret that has name projected-secret-test-5f138cfe-bc7b-44f8-abd4-3ffdb54e63b1 @ 04/15/24 08:10:23.798
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:10:23.812
  STEP: Saw pod success @ 04/15/24 08:10:27.863
  Apr 15 08:10:27.873: INFO: Trying to get logs from node eehaephong4y-3 pod pod-projected-secrets-e621d659-0670-4648-8db4-25e8e80dd810 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:10:27.892
  Apr 15 08:10:27.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-627" for this suite. @ 04/15/24 08:10:27.943
• [4.209 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 04/15/24 08:10:27.959
  Apr 15 08:10:27.959: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 08:10:27.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:28.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:28.016
  Apr 15 08:10:28.025: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/15/24 08:10:28.057
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/15/24 08:10:28.073
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/15/24 08:10:29.094
  Apr 15 08:10:29.117: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/15/24 08:10:29.117
  Apr 15 08:10:30.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9810" for this suite. @ 04/15/24 08:10:30.142
• [2.194 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/15/24 08:10:30.154
  Apr 15 08:10:30.154: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:10:30.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:30.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:30.21
  STEP: creating the pod @ 04/15/24 08:10:30.217
  STEP: setting up watch @ 04/15/24 08:10:30.218
  STEP: submitting the pod to kubernetes @ 04/15/24 08:10:30.327
  STEP: verifying the pod is in kubernetes @ 04/15/24 08:10:30.346
  STEP: verifying pod creation was observed @ 04/15/24 08:10:30.355
  STEP: deleting the pod gracefully @ 04/15/24 08:10:32.385
  STEP: verifying pod deletion was observed @ 04/15/24 08:10:32.407
  Apr 15 08:10:33.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7571" for this suite. @ 04/15/24 08:10:33.758
• [3.619 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 04/15/24 08:10:33.777
  Apr 15 08:10:33.777: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:10:33.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:33.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:33.838
  STEP: creating a replication controller @ 04/15/24 08:10:33.847
  Apr 15 08:10:33.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 create -f -'
  Apr 15 08:10:34.197: INFO: stderr: ""
  Apr 15 08:10:34.197: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/15/24 08:10:34.197
  Apr 15 08:10:34.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 08:10:34.415: INFO: stderr: ""
  Apr 15 08:10:34.415: INFO: stdout: "update-demo-nautilus-pnjpr update-demo-nautilus-t7w2j "
  Apr 15 08:10:34.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods update-demo-nautilus-pnjpr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 08:10:34.593: INFO: stderr: ""
  Apr 15 08:10:34.593: INFO: stdout: ""
  Apr 15 08:10:34.593: INFO: update-demo-nautilus-pnjpr is created but not running
  Apr 15 08:10:39.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 08:10:39.808: INFO: stderr: ""
  Apr 15 08:10:39.809: INFO: stdout: "update-demo-nautilus-pnjpr update-demo-nautilus-t7w2j "
  Apr 15 08:10:39.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods update-demo-nautilus-pnjpr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 08:10:39.959: INFO: stderr: ""
  Apr 15 08:10:39.959: INFO: stdout: "true"
  Apr 15 08:10:39.959: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods update-demo-nautilus-pnjpr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 08:10:40.112: INFO: stderr: ""
  Apr 15 08:10:40.112: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 08:10:40.113: INFO: validating pod update-demo-nautilus-pnjpr
  Apr 15 08:10:40.133: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 08:10:40.133: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 08:10:40.133: INFO: update-demo-nautilus-pnjpr is verified up and running
  Apr 15 08:10:40.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods update-demo-nautilus-t7w2j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 08:10:40.300: INFO: stderr: ""
  Apr 15 08:10:40.300: INFO: stdout: "true"
  Apr 15 08:10:40.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods update-demo-nautilus-t7w2j -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 08:10:40.455: INFO: stderr: ""
  Apr 15 08:10:40.455: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 08:10:40.455: INFO: validating pod update-demo-nautilus-t7w2j
  Apr 15 08:10:40.478: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 08:10:40.478: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 08:10:40.478: INFO: update-demo-nautilus-t7w2j is verified up and running
  STEP: scaling down the replication controller @ 04/15/24 08:10:40.478
  Apr 15 08:10:40.497: INFO: scanned /root for discovery docs: <nil>
  Apr 15 08:10:40.497: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Apr 15 08:10:41.697: INFO: stderr: ""
  Apr 15 08:10:41.698: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/15/24 08:10:41.698
  Apr 15 08:10:41.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 08:10:41.865: INFO: stderr: ""
  Apr 15 08:10:41.865: INFO: stdout: "update-demo-nautilus-pnjpr "
  Apr 15 08:10:41.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods update-demo-nautilus-pnjpr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 08:10:42.026: INFO: stderr: ""
  Apr 15 08:10:42.026: INFO: stdout: "true"
  Apr 15 08:10:42.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods update-demo-nautilus-pnjpr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 08:10:42.188: INFO: stderr: ""
  Apr 15 08:10:42.188: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 08:10:42.188: INFO: validating pod update-demo-nautilus-pnjpr
  Apr 15 08:10:42.199: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 08:10:42.199: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 08:10:42.199: INFO: update-demo-nautilus-pnjpr is verified up and running
  STEP: scaling up the replication controller @ 04/15/24 08:10:42.199
  Apr 15 08:10:42.210: INFO: scanned /root for discovery docs: <nil>
  Apr 15 08:10:42.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Apr 15 08:10:43.445: INFO: stderr: ""
  Apr 15 08:10:43.445: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/15/24 08:10:43.445
  Apr 15 08:10:43.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 08:10:43.626: INFO: stderr: ""
  Apr 15 08:10:43.626: INFO: stdout: "update-demo-nautilus-pnjpr update-demo-nautilus-zkpvw "
  Apr 15 08:10:43.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods update-demo-nautilus-pnjpr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 08:10:43.798: INFO: stderr: ""
  Apr 15 08:10:43.798: INFO: stdout: "true"
  Apr 15 08:10:43.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods update-demo-nautilus-pnjpr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 08:10:43.977: INFO: stderr: ""
  Apr 15 08:10:43.977: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 08:10:43.977: INFO: validating pod update-demo-nautilus-pnjpr
  Apr 15 08:10:43.988: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 08:10:43.988: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 08:10:43.988: INFO: update-demo-nautilus-pnjpr is verified up and running
  Apr 15 08:10:43.989: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods update-demo-nautilus-zkpvw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 08:10:44.153: INFO: stderr: ""
  Apr 15 08:10:44.153: INFO: stdout: "true"
  Apr 15 08:10:44.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods update-demo-nautilus-zkpvw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 08:10:44.316: INFO: stderr: ""
  Apr 15 08:10:44.317: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 08:10:44.317: INFO: validating pod update-demo-nautilus-zkpvw
  Apr 15 08:10:44.333: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 08:10:44.333: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 08:10:44.334: INFO: update-demo-nautilus-zkpvw is verified up and running
  STEP: using delete to clean up resources @ 04/15/24 08:10:44.334
  Apr 15 08:10:44.334: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 delete --grace-period=0 --force -f -'
  Apr 15 08:10:44.500: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 08:10:44.500: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 15 08:10:44.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get rc,svc -l name=update-demo --no-headers'
  Apr 15 08:10:44.755: INFO: stderr: "No resources found in kubectl-9170 namespace.\n"
  Apr 15 08:10:44.755: INFO: stdout: ""
  Apr 15 08:10:44.763: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9170 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 15 08:10:44.984: INFO: stderr: ""
  Apr 15 08:10:44.984: INFO: stdout: ""
  Apr 15 08:10:44.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9170" for this suite. @ 04/15/24 08:10:44.997
• [11.238 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 04/15/24 08:10:45.016
  Apr 15 08:10:45.016: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 08:10:45.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:10:45.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:10:45.061
  STEP: Creating pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066 @ 04/15/24 08:10:45.067
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 08:10:47.105
  Apr 15 08:10:47.113: INFO: Initial restart count of pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 is 0
  Apr 15 08:10:47.126: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:10:49.135: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:10:51.146: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:10:53.160: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:10:55.173: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:10:57.184: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:10:59.191: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:01.199: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:03.209: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:05.222: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:07.231: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:07.232: INFO: Restart count of pod container-probe-1066/liveness-c0fa734c-8fb6-4414-8212-588257606b36 is now 1 (20.118246283s elapsed)
  Apr 15 08:11:09.243: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:11.253: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:13.260: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:15.269: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:17.280: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:19.286: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:21.294: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:23.308: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:25.325: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:27.336: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:27.336: INFO: Restart count of pod container-probe-1066/liveness-c0fa734c-8fb6-4414-8212-588257606b36 is now 2 (40.222288969s elapsed)
  Apr 15 08:11:29.344: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:31.354: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:33.362: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:35.373: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:37.383: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:39.391: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:41.402: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:43.412: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:45.422: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:47.435: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:47.435: INFO: Restart count of pod container-probe-1066/liveness-c0fa734c-8fb6-4414-8212-588257606b36 is now 3 (1m0.322048107s elapsed)
  Apr 15 08:11:49.445: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:51.455: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:53.464: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:55.475: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:57.484: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:11:59.494: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:01.502: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:03.515: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:05.527: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:07.539: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:07.539: INFO: Restart count of pod container-probe-1066/liveness-c0fa734c-8fb6-4414-8212-588257606b36 is now 4 (1m20.425563151s elapsed)
  Apr 15 08:12:09.547: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:11.556: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:13.569: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:15.580: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:17.587: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:19.596: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:21.606: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:23.619: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:25.635: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:27.647: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:29.657: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:31.668: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:33.679: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:35.689: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:37.697: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:39.706: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:41.715: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:43.726: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:45.740: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:47.749: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:49.760: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:51.772: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:53.782: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:55.794: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:57.804: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:12:59.813: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:13:01.824: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:13:03.834: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:13:05.856: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:13:07.865: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:13:09.876: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:13:11.885: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:13:13.894: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:13:15.908: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:13:17.916: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:13:19.925: INFO: Get pod liveness-c0fa734c-8fb6-4414-8212-588257606b36 in namespace container-probe-1066
  Apr 15 08:13:19.925: INFO: Restart count of pod container-probe-1066/liveness-c0fa734c-8fb6-4414-8212-588257606b36 is now 5 (2m32.811846395s elapsed)
  STEP: deleting the pod @ 04/15/24 08:13:19.926
  Apr 15 08:13:19.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1066" for this suite. @ 04/15/24 08:13:19.967
• [154.967 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 04/15/24 08:13:19.986
  Apr 15 08:13:19.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:13:19.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:13:20.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:13:20.05
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/15/24 08:13:20.058
  Apr 15 08:13:20.059: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3671 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 15 08:13:20.287: INFO: stderr: ""
  Apr 15 08:13:20.288: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/15/24 08:13:20.288
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/15/24 08:13:25.339
  Apr 15 08:13:25.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3671 get pod e2e-test-httpd-pod -o json'
  Apr 15 08:13:25.569: INFO: stderr: ""
  Apr 15 08:13:25.569: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-04-15T08:13:20Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-3671\",\n        \"resourceVersion\": \"212145\",\n        \"uid\": \"52a8e117-b3b0-4b88-893d-a8eff46bfdfb\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-dbrxf\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"eehaephong4y-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-dbrxf\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T08:13:21Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T08:13:20Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T08:13:21Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T08:13:21Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T08:13:20Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://60a92feff7af6ea702b2e06662c6e00096ab657b963225a4740ed8405ac13d02\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-04-15T08:13:20Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.121.84\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.121.84\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.66.88\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.66.88\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-04-15T08:13:20Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/15/24 08:13:25.57
  Apr 15 08:13:25.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3671 replace -f -'
  Apr 15 08:13:25.892: INFO: stderr: ""
  Apr 15 08:13:25.893: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 04/15/24 08:13:25.893
  Apr 15 08:13:25.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3671 delete pods e2e-test-httpd-pod'
  Apr 15 08:13:27.560: INFO: stderr: ""
  Apr 15 08:13:27.560: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 15 08:13:27.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3671" for this suite. @ 04/15/24 08:13:27.571
• [7.598 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 04/15/24 08:13:27.585
  Apr 15 08:13:27.585: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:13:27.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:13:27.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:13:27.627
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/15/24 08:13:27.633
  Apr 15 08:13:27.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-7044 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 15 08:13:27.812: INFO: stderr: ""
  Apr 15 08:13:27.812: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/15/24 08:13:27.812
  Apr 15 08:13:27.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-7044 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Apr 15 08:13:27.996: INFO: stderr: ""
  Apr 15 08:13:27.996: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/15/24 08:13:27.996
  Apr 15 08:13:28.004: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-7044 delete pods e2e-test-httpd-pod'
  Apr 15 08:13:59.666: INFO: stderr: ""
  Apr 15 08:13:59.666: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 15 08:13:59.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7044" for this suite. @ 04/15/24 08:13:59.682
• [32.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 04/15/24 08:13:59.705
  Apr 15 08:13:59.705: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 08:13:59.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:13:59.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:13:59.754
  STEP: creating a ConfigMap @ 04/15/24 08:13:59.762
  STEP: fetching the ConfigMap @ 04/15/24 08:13:59.775
  STEP: patching the ConfigMap @ 04/15/24 08:13:59.782
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/15/24 08:13:59.79
  STEP: deleting the ConfigMap by collection with a label selector @ 04/15/24 08:13:59.798
  STEP: listing all ConfigMaps in test namespace @ 04/15/24 08:13:59.813
  Apr 15 08:13:59.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-829" for this suite. @ 04/15/24 08:13:59.83
• [0.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 04/15/24 08:13:59.849
  Apr 15 08:13:59.849: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename job @ 04/15/24 08:13:59.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:13:59.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:13:59.893
  STEP: Creating a job @ 04/15/24 08:13:59.9
  STEP: Ensuring active pods == parallelism @ 04/15/24 08:13:59.911
  STEP: delete a job @ 04/15/24 08:14:01.925
  STEP: deleting Job.batch foo in namespace job-4459, will wait for the garbage collector to delete the pods @ 04/15/24 08:14:01.925
  Apr 15 08:14:01.998: INFO: Deleting Job.batch foo took: 15.303637ms
  Apr 15 08:14:02.099: INFO: Terminating Job.batch foo pods took: 100.29951ms
  STEP: Ensuring job was deleted @ 04/15/24 08:14:04.8
  Apr 15 08:14:04.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4459" for this suite. @ 04/15/24 08:14:04.821
• [4.994 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 04/15/24 08:14:04.847
  Apr 15 08:14:04.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 08:14:04.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:14:04.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:14:04.91
  STEP: creating the pod @ 04/15/24 08:14:04.917
  STEP: waiting for pod running @ 04/15/24 08:14:04.938
  STEP: creating a file in subpath @ 04/15/24 08:14:06.958
  Apr 15 08:14:06.966: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2117 PodName:var-expansion-acc81bcc-c52a-4440-80ac-a5d2446cf0e6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:14:06.966: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:14:06.969: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:14:06.970: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-2117/pods/var-expansion-acc81bcc-c52a-4440-80ac-a5d2446cf0e6/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/15/24 08:14:07.122
  Apr 15 08:14:07.131: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2117 PodName:var-expansion-acc81bcc-c52a-4440-80ac-a5d2446cf0e6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:14:07.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:14:07.133: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:14:07.134: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-2117/pods/var-expansion-acc81bcc-c52a-4440-80ac-a5d2446cf0e6/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/15/24 08:14:07.259
  Apr 15 08:14:07.785: INFO: Successfully updated pod "var-expansion-acc81bcc-c52a-4440-80ac-a5d2446cf0e6"
  STEP: waiting for annotated pod running @ 04/15/24 08:14:07.785
  STEP: deleting the pod gracefully @ 04/15/24 08:14:07.794
  Apr 15 08:14:07.795: INFO: Deleting pod "var-expansion-acc81bcc-c52a-4440-80ac-a5d2446cf0e6" in namespace "var-expansion-2117"
  Apr 15 08:14:07.814: INFO: Wait up to 5m0s for pod "var-expansion-acc81bcc-c52a-4440-80ac-a5d2446cf0e6" to be fully deleted
  Apr 15 08:14:39.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2117" for this suite. @ 04/15/24 08:14:39.992
• [35.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 04/15/24 08:14:40.007
  Apr 15 08:14:40.007: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename job @ 04/15/24 08:14:40.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:14:40.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:14:40.054
  STEP: Creating a suspended job @ 04/15/24 08:14:40.066
  STEP: Patching the Job @ 04/15/24 08:14:40.078
  STEP: Watching for Job to be patched @ 04/15/24 08:14:40.121
  Apr 15 08:14:40.125: INFO: Event ADDED observed for Job e2e-828j5 in namespace job-6918 with labels: map[e2e-job-label:e2e-828j5] and annotations: map[]
  Apr 15 08:14:40.126: INFO: Event MODIFIED observed for Job e2e-828j5 in namespace job-6918 with labels: map[e2e-job-label:e2e-828j5] and annotations: map[]
  Apr 15 08:14:40.127: INFO: Event MODIFIED found for Job e2e-828j5 in namespace job-6918 with labels: map[e2e-828j5:patched e2e-job-label:e2e-828j5] and annotations: map[]
  STEP: Updating the job @ 04/15/24 08:14:40.128
  STEP: Watching for Job to be updated @ 04/15/24 08:14:40.153
  Apr 15 08:14:40.157: INFO: Event MODIFIED found for Job e2e-828j5 in namespace job-6918 with labels: map[e2e-828j5:patched e2e-job-label:e2e-828j5] and annotations: map[updated:true]
  Apr 15 08:14:40.157: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/15/24 08:14:40.157
  Apr 15 08:14:40.167: INFO: Job: e2e-828j5 as labels: map[e2e-828j5:patched e2e-job-label:e2e-828j5]
  STEP: Waiting for job to complete @ 04/15/24 08:14:40.168
  STEP: Delete a job collection with a labelselector @ 04/15/24 08:14:48.176
  STEP: Watching for Job to be deleted @ 04/15/24 08:14:48.197
  Apr 15 08:14:48.203: INFO: Event MODIFIED observed for Job e2e-828j5 in namespace job-6918 with labels: map[e2e-828j5:patched e2e-job-label:e2e-828j5] and annotations: map[updated:true]
  Apr 15 08:14:48.204: INFO: Event MODIFIED observed for Job e2e-828j5 in namespace job-6918 with labels: map[e2e-828j5:patched e2e-job-label:e2e-828j5] and annotations: map[updated:true]
  Apr 15 08:14:48.204: INFO: Event MODIFIED observed for Job e2e-828j5 in namespace job-6918 with labels: map[e2e-828j5:patched e2e-job-label:e2e-828j5] and annotations: map[updated:true]
  Apr 15 08:14:48.204: INFO: Event MODIFIED observed for Job e2e-828j5 in namespace job-6918 with labels: map[e2e-828j5:patched e2e-job-label:e2e-828j5] and annotations: map[updated:true]
  Apr 15 08:14:48.205: INFO: Event MODIFIED observed for Job e2e-828j5 in namespace job-6918 with labels: map[e2e-828j5:patched e2e-job-label:e2e-828j5] and annotations: map[updated:true]
  Apr 15 08:14:48.205: INFO: Event DELETED found for Job e2e-828j5 in namespace job-6918 with labels: map[e2e-828j5:patched e2e-job-label:e2e-828j5] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/15/24 08:14:48.205
  Apr 15 08:14:48.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6918" for this suite. @ 04/15/24 08:14:48.231
• [8.239 seconds]
------------------------------
SSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 04/15/24 08:14:48.249
  Apr 15 08:14:48.250: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/15/24 08:14:48.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:14:48.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:14:48.351
  Apr 15 08:14:48.360: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 15 08:15:48.361: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 08:15:48.369: INFO: Starting informer...
  STEP: Starting pods... @ 04/15/24 08:15:48.369
  Apr 15 08:15:48.622: INFO: Pod1 is running on eehaephong4y-3. Tainting Node
  Apr 15 08:15:50.902: INFO: Pod2 is running on eehaephong4y-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/15/24 08:15:50.902
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/15/24 08:15:50.937
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/15/24 08:15:50.952
  Apr 15 08:15:57.323: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Apr 15 08:16:16.686: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/15/24 08:16:16.719
  Apr 15 08:16:16.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-1321" for this suite. @ 04/15/24 08:16:16.752
• [88.528 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 04/15/24 08:16:16.777
  Apr 15 08:16:16.777: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:16:16.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:16.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:16.833
  STEP: Creating configMap with name projected-configmap-test-volume-eb8caa6c-6b58-469a-b59b-84c9df956b01 @ 04/15/24 08:16:16.838
  STEP: Creating a pod to test consume configMaps @ 04/15/24 08:16:16.848
  STEP: Saw pod success @ 04/15/24 08:16:20.915
  Apr 15 08:16:20.922: INFO: Trying to get logs from node eehaephong4y-3 pod pod-projected-configmaps-7d39102f-8f93-44b3-b769-c1a4e21e784c container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 08:16:20.979
  Apr 15 08:16:21.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9684" for this suite. @ 04/15/24 08:16:21.032
• [4.272 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 04/15/24 08:16:21.051
  Apr 15 08:16:21.051: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 08:16:21.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:21.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:21.107
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2151 @ 04/15/24 08:16:21.113
  STEP: changing the ExternalName service to type=ClusterIP @ 04/15/24 08:16:21.126
  STEP: creating replication controller externalname-service in namespace services-2151 @ 04/15/24 08:16:21.165
  I0415 08:16:21.184139      13 runners.go:197] Created replication controller with name: externalname-service, namespace: services-2151, replica count: 2
  I0415 08:16:24.236846      13 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 08:16:24.237: INFO: Creating new exec pod
  Apr 15 08:16:27.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2151 exec execpodqhm8x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 15 08:16:27.627: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 15 08:16:27.627: INFO: stdout: "externalname-service-m7s98"
  Apr 15 08:16:27.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2151 exec execpodqhm8x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.29 80'
  Apr 15 08:16:27.913: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.52.29 80\nConnection to 10.233.52.29 80 port [tcp/http] succeeded!\n"
  Apr 15 08:16:27.913: INFO: stdout: ""
  Apr 15 08:16:28.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2151 exec execpodqhm8x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.29 80'
  Apr 15 08:16:28.907: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.52.29 80\nConnection to 10.233.52.29 80 port [tcp/http] succeeded!\n"
  Apr 15 08:16:28.907: INFO: stdout: ""
  Apr 15 08:16:29.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2151 exec execpodqhm8x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.29 80'
  Apr 15 08:16:29.905: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.52.29 80\nConnection to 10.233.52.29 80 port [tcp/http] succeeded!\n"
  Apr 15 08:16:29.905: INFO: stdout: "externalname-service-m7s98"
  Apr 15 08:16:29.905: INFO: Cleaning up the ExternalName to ClusterIP test service
  Apr 15 08:16:29.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2151" for this suite. @ 04/15/24 08:16:29.965
• [8.935 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 04/15/24 08:16:29.989
  Apr 15 08:16:29.990: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 08:16:29.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:30.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:30.047
  STEP: apply creating a deployment @ 04/15/24 08:16:30.055
  Apr 15 08:16:30.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6207" for this suite. @ 04/15/24 08:16:30.099
• [0.130 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/15/24 08:16:30.12
  Apr 15 08:16:30.120: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 08:16:30.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:30.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:30.178
  STEP: create the container @ 04/15/24 08:16:30.183
  W0415 08:16:30.202914      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/15/24 08:16:30.203
  STEP: get the container status @ 04/15/24 08:16:33.244
  STEP: the container should be terminated @ 04/15/24 08:16:33.251
  STEP: the termination message should be set @ 04/15/24 08:16:33.251
  Apr 15 08:16:33.252: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/15/24 08:16:33.252
  Apr 15 08:16:33.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4780" for this suite. @ 04/15/24 08:16:33.299
• [3.193 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 04/15/24 08:16:33.313
  Apr 15 08:16:33.313: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 08:16:33.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:33.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:33.409
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/15/24 08:16:33.414
  STEP: Saw pod success @ 04/15/24 08:16:37.466
  Apr 15 08:16:37.473: INFO: Trying to get logs from node eehaephong4y-3 pod pod-dafd9d96-30c7-4e6a-9a78-e0c5f37610bd container test-container: <nil>
  STEP: delete the pod @ 04/15/24 08:16:37.485
  Apr 15 08:16:37.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7045" for this suite. @ 04/15/24 08:16:37.572
• [4.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 04/15/24 08:16:37.592
  Apr 15 08:16:37.592: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename disruption @ 04/15/24 08:16:37.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:37.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:37.673
  STEP: Waiting for the pdb to be processed @ 04/15/24 08:16:37.7
  STEP: Waiting for all pods to be running @ 04/15/24 08:16:39.761
  Apr 15 08:16:39.807: INFO: running pods: 0 < 3
  Apr 15 08:16:41.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8600" for this suite. @ 04/15/24 08:16:41.787
• [4.211 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/15/24 08:16:41.804
  Apr 15 08:16:41.804: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename proxy @ 04/15/24 08:16:41.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:41.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:41.852
  STEP: starting an echo server on multiple ports @ 04/15/24 08:16:41.881
  STEP: creating replication controller proxy-service-txw6n in namespace proxy-1126 @ 04/15/24 08:16:41.882
  I0415 08:16:41.897906      13 runners.go:197] Created replication controller with name: proxy-service-txw6n, namespace: proxy-1126, replica count: 1
  I0415 08:16:42.954342      13 runners.go:197] proxy-service-txw6n Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0415 08:16:43.955435      13 runners.go:197] proxy-service-txw6n Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0415 08:16:44.956118      13 runners.go:197] proxy-service-txw6n Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0415 08:16:45.957033      13 runners.go:197] proxy-service-txw6n Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0415 08:16:46.957541      13 runners.go:197] proxy-service-txw6n Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0415 08:16:47.957971      13 runners.go:197] proxy-service-txw6n Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0415 08:16:48.959458      13 runners.go:197] proxy-service-txw6n Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0415 08:16:49.959930      13 runners.go:197] proxy-service-txw6n Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0415 08:16:50.960716      13 runners.go:197] proxy-service-txw6n Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0415 08:16:51.961200      13 runners.go:197] proxy-service-txw6n Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0415 08:16:52.961803      13 runners.go:197] proxy-service-txw6n Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 08:16:52.972: INFO: setup took 11.111793041s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/15/24 08:16:52.972
  Apr 15 08:16:52.991: INFO: (0) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 17.010746ms)
  Apr 15 08:16:53.003: INFO: (0) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 30.220432ms)
  Apr 15 08:16:53.010: INFO: (0) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 36.415458ms)
  Apr 15 08:16:53.010: INFO: (0) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 34.929952ms)
  Apr 15 08:16:53.015: INFO: (0) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 41.092037ms)
  Apr 15 08:16:53.016: INFO: (0) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 42.208569ms)
  Apr 15 08:16:53.027: INFO: (0) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 52.64508ms)
  Apr 15 08:16:53.028: INFO: (0) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 52.870834ms)
  Apr 15 08:16:53.029: INFO: (0) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 53.669802ms)
  Apr 15 08:16:53.031: INFO: (0) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 58.433085ms)
  Apr 15 08:16:53.033: INFO: (0) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 58.10927ms)
  Apr 15 08:16:53.033: INFO: (0) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 58.510601ms)
  Apr 15 08:16:53.033: INFO: (0) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 57.502735ms)
  Apr 15 08:16:53.038: INFO: (0) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 64.680063ms)
  Apr 15 08:16:53.043: INFO: (0) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 67.777455ms)
  Apr 15 08:16:53.046: INFO: (0) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 71.018328ms)
  Apr 15 08:16:53.079: INFO: (1) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 32.154484ms)
  Apr 15 08:16:53.079: INFO: (1) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 31.909052ms)
  Apr 15 08:16:53.080: INFO: (1) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 33.642252ms)
  Apr 15 08:16:53.080: INFO: (1) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 29.026504ms)
  Apr 15 08:16:53.080: INFO: (1) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 33.395034ms)
  Apr 15 08:16:53.080: INFO: (1) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 34.17789ms)
  Apr 15 08:16:53.084: INFO: (1) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 33.95733ms)
  Apr 15 08:16:53.084: INFO: (1) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 33.2047ms)
  Apr 15 08:16:53.084: INFO: (1) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 37.234628ms)
  Apr 15 08:16:53.085: INFO: (1) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 37.071772ms)
  Apr 15 08:16:53.092: INFO: (1) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 41.93163ms)
  Apr 15 08:16:53.092: INFO: (1) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 41.530556ms)
  Apr 15 08:16:53.093: INFO: (1) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 41.571112ms)
  Apr 15 08:16:53.093: INFO: (1) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 44.354155ms)
  Apr 15 08:16:53.096: INFO: (1) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 47.829271ms)
  Apr 15 08:16:53.098: INFO: (1) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 49.237939ms)
  Apr 15 08:16:53.125: INFO: (2) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 25.571693ms)
  Apr 15 08:16:53.125: INFO: (2) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 26.135721ms)
  Apr 15 08:16:53.126: INFO: (2) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 26.920347ms)
  Apr 15 08:16:53.126: INFO: (2) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 26.828853ms)
  Apr 15 08:16:53.126: INFO: (2) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 26.482804ms)
  Apr 15 08:16:53.126: INFO: (2) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 27.0385ms)
  Apr 15 08:16:53.127: INFO: (2) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 26.600904ms)
  Apr 15 08:16:53.131: INFO: (2) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 30.823881ms)
  Apr 15 08:16:53.131: INFO: (2) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 30.187674ms)
  Apr 15 08:16:53.131: INFO: (2) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 30.773454ms)
  Apr 15 08:16:53.131: INFO: (2) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 30.657601ms)
  Apr 15 08:16:53.133: INFO: (2) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 32.892858ms)
  Apr 15 08:16:53.137: INFO: (2) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 36.576964ms)
  Apr 15 08:16:53.138: INFO: (2) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 37.096558ms)
  Apr 15 08:16:53.138: INFO: (2) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 38.077519ms)
  Apr 15 08:16:53.148: INFO: (2) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 47.766687ms)
  Apr 15 08:16:53.163: INFO: (3) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 14.017572ms)
  Apr 15 08:16:53.165: INFO: (3) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 15.453602ms)
  Apr 15 08:16:53.168: INFO: (3) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 18.620909ms)
  Apr 15 08:16:53.179: INFO: (3) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 27.780898ms)
  Apr 15 08:16:53.179: INFO: (3) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 29.875853ms)
  Apr 15 08:16:53.179: INFO: (3) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 28.282192ms)
  Apr 15 08:16:53.179: INFO: (3) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 28.528877ms)
  Apr 15 08:16:53.180: INFO: (3) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 28.483501ms)
  Apr 15 08:16:53.180: INFO: (3) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 30.793946ms)
  Apr 15 08:16:53.180: INFO: (3) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 29.305185ms)
  Apr 15 08:16:53.180: INFO: (3) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 30.040538ms)
  Apr 15 08:16:53.180: INFO: (3) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 30.21631ms)
  Apr 15 08:16:53.180: INFO: (3) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 29.775798ms)
  Apr 15 08:16:53.181: INFO: (3) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 29.819013ms)
  Apr 15 08:16:53.195: INFO: (3) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 45.218229ms)
  Apr 15 08:16:53.196: INFO: (3) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 45.984279ms)
  Apr 15 08:16:53.206: INFO: (4) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 9.694678ms)
  Apr 15 08:16:53.218: INFO: (4) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 21.400369ms)
  Apr 15 08:16:53.218: INFO: (4) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 21.157756ms)
  Apr 15 08:16:53.218: INFO: (4) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 21.286893ms)
  Apr 15 08:16:53.234: INFO: (4) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 35.970409ms)
  Apr 15 08:16:53.234: INFO: (4) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 37.089855ms)
  Apr 15 08:16:53.237: INFO: (4) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 38.353043ms)
  Apr 15 08:16:53.241: INFO: (4) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 41.952391ms)
  Apr 15 08:16:53.242: INFO: (4) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 44.636865ms)
  Apr 15 08:16:53.243: INFO: (4) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 45.60692ms)
  Apr 15 08:16:53.247: INFO: (4) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 47.110914ms)
  Apr 15 08:16:53.247: INFO: (4) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 48.556039ms)
  Apr 15 08:16:53.247: INFO: (4) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 47.110234ms)
  Apr 15 08:16:53.247: INFO: (4) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 47.949651ms)
  Apr 15 08:16:53.247: INFO: (4) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 49.117877ms)
  Apr 15 08:16:53.249: INFO: (4) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 50.145195ms)
  Apr 15 08:16:53.262: INFO: (5) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 13.213688ms)
  Apr 15 08:16:53.276: INFO: (5) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 24.706697ms)
  Apr 15 08:16:53.276: INFO: (5) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 26.131471ms)
  Apr 15 08:16:53.276: INFO: (5) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 25.757151ms)
  Apr 15 08:16:53.277: INFO: (5) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 25.821021ms)
  Apr 15 08:16:53.277: INFO: (5) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 26.644812ms)
  Apr 15 08:16:53.279: INFO: (5) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 27.61828ms)
  Apr 15 08:16:53.279: INFO: (5) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 28.562067ms)
  Apr 15 08:16:53.280: INFO: (5) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 28.941895ms)
  Apr 15 08:16:53.280: INFO: (5) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 31.017501ms)
  Apr 15 08:16:53.280: INFO: (5) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 29.785933ms)
  Apr 15 08:16:53.284: INFO: (5) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 33.884653ms)
  Apr 15 08:16:53.285: INFO: (5) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 35.930184ms)
  Apr 15 08:16:53.291: INFO: (5) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 40.112718ms)
  Apr 15 08:16:53.291: INFO: (5) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 40.330549ms)
  Apr 15 08:16:53.295: INFO: (5) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 45.638553ms)
  Apr 15 08:16:53.311: INFO: (6) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 15.839616ms)
  Apr 15 08:16:53.321: INFO: (6) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 25.42901ms)
  Apr 15 08:16:53.322: INFO: (6) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 24.981323ms)
  Apr 15 08:16:53.325: INFO: (6) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 28.595193ms)
  Apr 15 08:16:53.327: INFO: (6) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 29.498673ms)
  Apr 15 08:16:53.328: INFO: (6) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 32.482587ms)
  Apr 15 08:16:53.331: INFO: (6) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 33.622029ms)
  Apr 15 08:16:53.331: INFO: (6) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 35.519527ms)
  Apr 15 08:16:53.334: INFO: (6) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 37.089299ms)
  Apr 15 08:16:53.336: INFO: (6) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 39.801232ms)
  Apr 15 08:16:53.339: INFO: (6) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 40.720977ms)
  Apr 15 08:16:53.356: INFO: (6) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 58.888409ms)
  Apr 15 08:16:53.356: INFO: (6) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 60.205123ms)
  Apr 15 08:16:53.356: INFO: (6) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 58.644572ms)
  Apr 15 08:16:53.356: INFO: (6) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 59.99749ms)
  Apr 15 08:16:53.360: INFO: (6) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 62.654482ms)
  Apr 15 08:16:53.386: INFO: (7) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 23.287171ms)
  Apr 15 08:16:53.387: INFO: (7) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 21.979153ms)
  Apr 15 08:16:53.389: INFO: (7) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 24.084429ms)
  Apr 15 08:16:53.391: INFO: (7) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 26.833596ms)
  Apr 15 08:16:53.391: INFO: (7) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 28.079247ms)
  Apr 15 08:16:53.392: INFO: (7) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 26.298332ms)
  Apr 15 08:16:53.393: INFO: (7) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 28.732599ms)
  Apr 15 08:16:53.401: INFO: (7) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 34.68606ms)
  Apr 15 08:16:53.401: INFO: (7) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 39.139281ms)
  Apr 15 08:16:53.401: INFO: (7) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 34.937716ms)
  Apr 15 08:16:53.402: INFO: (7) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 35.386052ms)
  Apr 15 08:16:53.402: INFO: (7) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 38.030565ms)
  Apr 15 08:16:53.402: INFO: (7) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 38.847059ms)
  Apr 15 08:16:53.402: INFO: (7) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 38.409807ms)
  Apr 15 08:16:53.404: INFO: (7) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 39.175258ms)
  Apr 15 08:16:53.406: INFO: (7) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 42.256583ms)
  Apr 15 08:16:53.423: INFO: (8) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 16.537276ms)
  Apr 15 08:16:53.432: INFO: (8) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 24.755758ms)
  Apr 15 08:16:53.432: INFO: (8) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 25.60566ms)
  Apr 15 08:16:53.434: INFO: (8) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 27.105458ms)
  Apr 15 08:16:53.435: INFO: (8) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 27.132942ms)
  Apr 15 08:16:53.437: INFO: (8) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 27.982732ms)
  Apr 15 08:16:53.439: INFO: (8) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 32.294393ms)
  Apr 15 08:16:53.439: INFO: (8) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 31.14725ms)
  Apr 15 08:16:53.439: INFO: (8) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 30.040127ms)
  Apr 15 08:16:53.440: INFO: (8) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 31.093405ms)
  Apr 15 08:16:53.440: INFO: (8) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 32.176938ms)
  Apr 15 08:16:53.440: INFO: (8) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 31.740912ms)
  Apr 15 08:16:53.440: INFO: (8) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 31.222833ms)
  Apr 15 08:16:53.441: INFO: (8) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 31.761093ms)
  Apr 15 08:16:53.442: INFO: (8) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 33.811059ms)
  Apr 15 08:16:53.447: INFO: (8) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 37.766134ms)
  Apr 15 08:16:53.469: INFO: (9) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 20.444649ms)
  Apr 15 08:16:53.469: INFO: (9) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 20.839674ms)
  Apr 15 08:16:53.470: INFO: (9) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 21.137507ms)
  Apr 15 08:16:53.472: INFO: (9) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 22.252296ms)
  Apr 15 08:16:53.472: INFO: (9) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 22.880332ms)
  Apr 15 08:16:53.473: INFO: (9) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 23.742741ms)
  Apr 15 08:16:53.475: INFO: (9) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 26.153664ms)
  Apr 15 08:16:53.475: INFO: (9) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 25.424148ms)
  Apr 15 08:16:53.479: INFO: (9) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 29.497788ms)
  Apr 15 08:16:53.480: INFO: (9) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 27.094001ms)
  Apr 15 08:16:53.480: INFO: (9) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 29.646906ms)
  Apr 15 08:16:53.484: INFO: (9) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 33.522144ms)
  Apr 15 08:16:53.487: INFO: (9) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 37.409295ms)
  Apr 15 08:16:53.488: INFO: (9) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 35.482316ms)
  Apr 15 08:16:53.489: INFO: (9) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 38.510901ms)
  Apr 15 08:16:53.491: INFO: (9) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 40.935972ms)
  Apr 15 08:16:53.507: INFO: (10) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 14.863421ms)
  Apr 15 08:16:53.515: INFO: (10) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 21.940503ms)
  Apr 15 08:16:53.515: INFO: (10) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 22.657161ms)
  Apr 15 08:16:53.516: INFO: (10) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 24.182256ms)
  Apr 15 08:16:53.517: INFO: (10) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 24.471257ms)
  Apr 15 08:16:53.519: INFO: (10) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 26.005572ms)
  Apr 15 08:16:53.521: INFO: (10) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 27.140896ms)
  Apr 15 08:16:53.521: INFO: (10) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 26.498521ms)
  Apr 15 08:16:53.521: INFO: (10) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 26.963221ms)
  Apr 15 08:16:53.521: INFO: (10) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 27.862117ms)
  Apr 15 08:16:53.522: INFO: (10) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 28.470618ms)
  Apr 15 08:16:53.523: INFO: (10) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 29.163487ms)
  Apr 15 08:16:53.523: INFO: (10) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 30.846246ms)
  Apr 15 08:16:53.524: INFO: (10) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 31.192502ms)
  Apr 15 08:16:53.524: INFO: (10) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 29.898567ms)
  Apr 15 08:16:53.528: INFO: (10) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 34.864051ms)
  Apr 15 08:16:53.539: INFO: (11) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 10.91599ms)
  Apr 15 08:16:53.545: INFO: (11) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 17.230893ms)
  Apr 15 08:16:53.557: INFO: (11) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 28.518317ms)
  Apr 15 08:16:53.558: INFO: (11) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 29.360599ms)
  Apr 15 08:16:53.562: INFO: (11) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 33.309222ms)
  Apr 15 08:16:53.564: INFO: (11) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 35.493391ms)
  Apr 15 08:16:53.566: INFO: (11) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 37.441217ms)
  Apr 15 08:16:53.567: INFO: (11) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 37.698324ms)
  Apr 15 08:16:53.574: INFO: (11) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 45.223661ms)
  Apr 15 08:16:53.575: INFO: (11) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 45.789017ms)
  Apr 15 08:16:53.575: INFO: (11) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 45.389906ms)
  Apr 15 08:16:53.575: INFO: (11) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 46.246224ms)
  Apr 15 08:16:53.576: INFO: (11) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 46.41366ms)
  Apr 15 08:16:53.576: INFO: (11) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 46.630253ms)
  Apr 15 08:16:53.577: INFO: (11) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 47.814563ms)
  Apr 15 08:16:53.584: INFO: (11) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 55.009432ms)
  Apr 15 08:16:53.615: INFO: (12) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 30.301282ms)
  Apr 15 08:16:53.620: INFO: (12) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 33.035191ms)
  Apr 15 08:16:53.621: INFO: (12) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 36.040995ms)
  Apr 15 08:16:53.621: INFO: (12) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 35.759568ms)
  Apr 15 08:16:53.626: INFO: (12) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 40.567908ms)
  Apr 15 08:16:53.627: INFO: (12) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 41.73624ms)
  Apr 15 08:16:53.627: INFO: (12) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 40.528799ms)
  Apr 15 08:16:53.627: INFO: (12) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 42.215479ms)
  Apr 15 08:16:53.630: INFO: (12) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 43.165072ms)
  Apr 15 08:16:53.630: INFO: (12) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 43.046926ms)
  Apr 15 08:16:53.631: INFO: (12) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 45.693061ms)
  Apr 15 08:16:53.631: INFO: (12) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 45.585482ms)
  Apr 15 08:16:53.632: INFO: (12) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 46.541941ms)
  Apr 15 08:16:53.632: INFO: (12) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 45.491949ms)
  Apr 15 08:16:53.634: INFO: (12) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 48.168718ms)
  Apr 15 08:16:53.634: INFO: (12) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 47.435553ms)
  Apr 15 08:16:53.654: INFO: (13) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 19.676985ms)
  Apr 15 08:16:53.655: INFO: (13) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 19.839952ms)
  Apr 15 08:16:53.655: INFO: (13) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 17.938623ms)
  Apr 15 08:16:53.655: INFO: (13) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 20.957458ms)
  Apr 15 08:16:53.666: INFO: (13) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 30.046657ms)
  Apr 15 08:16:53.667: INFO: (13) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 30.323275ms)
  Apr 15 08:16:53.667: INFO: (13) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 32.693518ms)
  Apr 15 08:16:53.667: INFO: (13) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 31.243243ms)
  Apr 15 08:16:53.667: INFO: (13) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 31.619575ms)
  Apr 15 08:16:53.668: INFO: (13) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 32.451365ms)
  Apr 15 08:16:53.670: INFO: (13) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 33.33398ms)
  Apr 15 08:16:53.670: INFO: (13) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 34.49253ms)
  Apr 15 08:16:53.676: INFO: (13) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 39.781255ms)
  Apr 15 08:16:53.677: INFO: (13) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 39.743822ms)
  Apr 15 08:16:53.680: INFO: (13) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 42.331634ms)
  Apr 15 08:16:53.683: INFO: (13) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 46.441388ms)
  Apr 15 08:16:53.703: INFO: (14) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 19.635096ms)
  Apr 15 08:16:53.703: INFO: (14) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 19.62795ms)
  Apr 15 08:16:53.714: INFO: (14) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 30.251013ms)
  Apr 15 08:16:53.715: INFO: (14) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 31.51894ms)
  Apr 15 08:16:53.716: INFO: (14) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 32.254902ms)
  Apr 15 08:16:53.717: INFO: (14) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 33.962864ms)
  Apr 15 08:16:53.720: INFO: (14) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 36.31942ms)
  Apr 15 08:16:53.723: INFO: (14) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 38.782153ms)
  Apr 15 08:16:53.723: INFO: (14) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 39.44581ms)
  Apr 15 08:16:53.724: INFO: (14) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 39.609708ms)
  Apr 15 08:16:53.724: INFO: (14) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 39.769069ms)
  Apr 15 08:16:53.725: INFO: (14) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 39.996171ms)
  Apr 15 08:16:53.725: INFO: (14) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 41.202447ms)
  Apr 15 08:16:53.725: INFO: (14) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 40.883923ms)
  Apr 15 08:16:53.732: INFO: (14) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 48.047839ms)
  Apr 15 08:16:53.733: INFO: (14) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 48.765175ms)
  Apr 15 08:16:53.767: INFO: (15) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 32.140702ms)
  Apr 15 08:16:53.767: INFO: (15) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 33.916059ms)
  Apr 15 08:16:53.767: INFO: (15) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 32.893746ms)
  Apr 15 08:16:53.768: INFO: (15) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 33.529188ms)
  Apr 15 08:16:53.769: INFO: (15) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 34.378677ms)
  Apr 15 08:16:53.769: INFO: (15) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 34.134111ms)
  Apr 15 08:16:53.775: INFO: (15) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 41.083726ms)
  Apr 15 08:16:53.775: INFO: (15) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 40.306223ms)
  Apr 15 08:16:53.776: INFO: (15) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 42.134665ms)
  Apr 15 08:16:53.776: INFO: (15) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 41.737349ms)
  Apr 15 08:16:53.776: INFO: (15) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 41.37533ms)
  Apr 15 08:16:53.779: INFO: (15) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 44.027894ms)
  Apr 15 08:16:53.781: INFO: (15) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 46.320692ms)
  Apr 15 08:16:53.781: INFO: (15) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 46.569334ms)
  Apr 15 08:16:53.782: INFO: (15) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 47.317209ms)
  Apr 15 08:16:53.783: INFO: (15) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 48.01035ms)
  Apr 15 08:16:53.799: INFO: (16) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 15.200163ms)
  Apr 15 08:16:53.802: INFO: (16) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 17.467109ms)
  Apr 15 08:16:53.803: INFO: (16) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 17.889532ms)
  Apr 15 08:16:53.815: INFO: (16) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 28.851707ms)
  Apr 15 08:16:53.816: INFO: (16) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 31.201071ms)
  Apr 15 08:16:53.819: INFO: (16) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 33.612432ms)
  Apr 15 08:16:53.820: INFO: (16) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 35.930087ms)
  Apr 15 08:16:53.820: INFO: (16) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 33.901019ms)
  Apr 15 08:16:53.820: INFO: (16) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 33.625713ms)
  Apr 15 08:16:53.821: INFO: (16) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 34.745756ms)
  Apr 15 08:16:53.821: INFO: (16) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 35.301697ms)
  Apr 15 08:16:53.821: INFO: (16) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 37.034096ms)
  Apr 15 08:16:53.822: INFO: (16) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 35.918969ms)
  Apr 15 08:16:53.824: INFO: (16) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 39.992256ms)
  Apr 15 08:16:53.827: INFO: (16) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 41.067496ms)
  Apr 15 08:16:53.828: INFO: (16) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 42.842905ms)
  Apr 15 08:16:53.850: INFO: (17) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 20.915552ms)
  Apr 15 08:16:53.851: INFO: (17) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 21.783337ms)
  Apr 15 08:16:53.851: INFO: (17) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 21.331596ms)
  Apr 15 08:16:53.855: INFO: (17) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 24.70469ms)
  Apr 15 08:16:53.857: INFO: (17) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 27.502171ms)
  Apr 15 08:16:53.858: INFO: (17) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 28.306914ms)
  Apr 15 08:16:53.863: INFO: (17) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 32.398274ms)
  Apr 15 08:16:53.866: INFO: (17) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 35.894721ms)
  Apr 15 08:16:53.868: INFO: (17) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 37.316097ms)
  Apr 15 08:16:53.868: INFO: (17) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 37.973343ms)
  Apr 15 08:16:53.868: INFO: (17) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 38.327148ms)
  Apr 15 08:16:53.866: INFO: (17) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 35.911967ms)
  Apr 15 08:16:53.870: INFO: (17) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 39.489142ms)
  Apr 15 08:16:53.870: INFO: (17) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 40.669034ms)
  Apr 15 08:16:53.870: INFO: (17) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 41.063109ms)
  Apr 15 08:16:53.882: INFO: (17) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 51.881833ms)
  Apr 15 08:16:53.907: INFO: (18) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 24.695542ms)
  Apr 15 08:16:53.908: INFO: (18) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 25.163832ms)
  Apr 15 08:16:53.909: INFO: (18) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 27.064038ms)
  Apr 15 08:16:53.909: INFO: (18) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 25.121722ms)
  Apr 15 08:16:53.923: INFO: (18) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 39.26541ms)
  Apr 15 08:16:53.924: INFO: (18) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 38.968ms)
  Apr 15 08:16:53.924: INFO: (18) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 39.196921ms)
  Apr 15 08:16:53.924: INFO: (18) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 40.26127ms)
  Apr 15 08:16:53.924: INFO: (18) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 39.084101ms)
  Apr 15 08:16:53.924: INFO: (18) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 41.755491ms)
  Apr 15 08:16:53.924: INFO: (18) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 41.362401ms)
  Apr 15 08:16:53.924: INFO: (18) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 41.049017ms)
  Apr 15 08:16:53.924: INFO: (18) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 40.111006ms)
  Apr 15 08:16:53.925: INFO: (18) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 43.53618ms)
  Apr 15 08:16:53.926: INFO: (18) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 43.041379ms)
  Apr 15 08:16:53.926: INFO: (18) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 42.708939ms)
  Apr 15 08:16:53.942: INFO: (19) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">test<... (200; 15.510917ms)
  Apr 15 08:16:53.948: INFO: (19) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 21.004007ms)
  Apr 15 08:16:53.953: INFO: (19) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5/proxy/rewriteme">test</a> (200; 24.890343ms)
  Apr 15 08:16:53.975: INFO: (19) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname2/proxy/: bar (200; 49.056152ms)
  Apr 15 08:16:53.976: INFO: (19) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 48.765436ms)
  Apr 15 08:16:53.976: INFO: (19) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:160/proxy/: foo (200; 48.626061ms)
  Apr 15 08:16:53.976: INFO: (19) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:443/proxy/tlsrewritem... (200; 48.072115ms)
  Apr 15 08:16:53.976: INFO: (19) /api/v1/namespaces/proxy-1126/pods/proxy-service-txw6n-5vcl5:162/proxy/: bar (200; 47.185065ms)
  Apr 15 08:16:53.976: INFO: (19) /api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/: <a href="/api/v1/namespaces/proxy-1126/pods/http:proxy-service-txw6n-5vcl5:1080/proxy/rewriteme">... (200; 47.043656ms)
  Apr 15 08:16:53.976: INFO: (19) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:462/proxy/: tls qux (200; 49.623395ms)
  Apr 15 08:16:53.976: INFO: (19) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname1/proxy/: foo (200; 49.614008ms)
  Apr 15 08:16:53.978: INFO: (19) /api/v1/namespaces/proxy-1126/services/http:proxy-service-txw6n:portname1/proxy/: foo (200; 50.374083ms)
  Apr 15 08:16:53.978: INFO: (19) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname1/proxy/: tls baz (200; 50.336648ms)
  Apr 15 08:16:53.979: INFO: (19) /api/v1/namespaces/proxy-1126/pods/https:proxy-service-txw6n-5vcl5:460/proxy/: tls baz (200; 49.744247ms)
  Apr 15 08:16:53.979: INFO: (19) /api/v1/namespaces/proxy-1126/services/proxy-service-txw6n:portname2/proxy/: bar (200; 50.69665ms)
  Apr 15 08:16:53.980: INFO: (19) /api/v1/namespaces/proxy-1126/services/https:proxy-service-txw6n:tlsportname2/proxy/: tls qux (200; 51.329932ms)
  STEP: deleting ReplicationController proxy-service-txw6n in namespace proxy-1126, will wait for the garbage collector to delete the pods @ 04/15/24 08:16:53.98
  Apr 15 08:16:54.053: INFO: Deleting ReplicationController proxy-service-txw6n took: 14.946674ms
  Apr 15 08:16:54.154: INFO: Terminating ReplicationController proxy-service-txw6n pods took: 100.678984ms
  Apr 15 08:16:54.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1126" for this suite. @ 04/15/24 08:16:54.767
• [12.974 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 04/15/24 08:16:54.781
  Apr 15 08:16:54.781: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 08:16:54.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:54.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:54.832
  STEP: Creating a cronjob @ 04/15/24 08:16:54.838
  STEP: creating @ 04/15/24 08:16:54.838
  STEP: getting @ 04/15/24 08:16:54.85
  STEP: listing @ 04/15/24 08:16:54.896
  STEP: watching @ 04/15/24 08:16:54.902
  Apr 15 08:16:54.902: INFO: starting watch
  STEP: cluster-wide listing @ 04/15/24 08:16:54.904
  STEP: cluster-wide watching @ 04/15/24 08:16:54.912
  Apr 15 08:16:54.912: INFO: starting watch
  STEP: patching @ 04/15/24 08:16:54.914
  STEP: updating @ 04/15/24 08:16:54.93
  Apr 15 08:16:54.949: INFO: waiting for watch events with expected annotations
  Apr 15 08:16:54.950: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/15/24 08:16:54.95
  STEP: updating /status @ 04/15/24 08:16:54.963
  STEP: get /status @ 04/15/24 08:16:54.979
  STEP: deleting @ 04/15/24 08:16:54.988
  STEP: deleting a collection @ 04/15/24 08:16:55.028
  Apr 15 08:16:55.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2781" for this suite. @ 04/15/24 08:16:55.068
• [0.300 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 04/15/24 08:16:55.087
  Apr 15 08:16:55.087: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/15/24 08:16:55.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:16:55.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:16:55.131
  STEP: create the container to handle the HTTPGet hook request. @ 04/15/24 08:16:55.154
  STEP: create the pod with lifecycle hook @ 04/15/24 08:16:57.202
  STEP: delete the pod with lifecycle hook @ 04/15/24 08:16:59.247
  STEP: check prestop hook @ 04/15/24 08:17:13.359
  Apr 15 08:17:13.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-245" for this suite. @ 04/15/24 08:17:13.384
• [18.312 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 04/15/24 08:17:13.399
  Apr 15 08:17:13.399: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 08:17:13.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:17:13.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:17:13.45
  STEP: creating service multi-endpoint-test in namespace services-5045 @ 04/15/24 08:17:13.455
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5045 to expose endpoints map[] @ 04/15/24 08:17:13.48
  Apr 15 08:17:13.490: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Apr 15 08:17:14.514: INFO: successfully validated that service multi-endpoint-test in namespace services-5045 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5045 @ 04/15/24 08:17:14.515
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5045 to expose endpoints map[pod1:[100]] @ 04/15/24 08:17:16.55
  Apr 15 08:17:16.572: INFO: successfully validated that service multi-endpoint-test in namespace services-5045 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5045 @ 04/15/24 08:17:16.572
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5045 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/15/24 08:17:18.602
  Apr 15 08:17:18.645: INFO: successfully validated that service multi-endpoint-test in namespace services-5045 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/15/24 08:17:18.645
  Apr 15 08:17:18.645: INFO: Creating new exec pod
  Apr 15 08:17:21.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5045 exec execpodxqxvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Apr 15 08:17:21.996: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Apr 15 08:17:21.996: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:17:21.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5045 exec execpodxqxvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.32.168 80'
  Apr 15 08:17:22.292: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.32.168 80\nConnection to 10.233.32.168 80 port [tcp/http] succeeded!\n"
  Apr 15 08:17:22.292: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:17:22.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5045 exec execpodxqxvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Apr 15 08:17:22.564: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Apr 15 08:17:22.564: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:17:22.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5045 exec execpodxqxvm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.32.168 81'
  Apr 15 08:17:22.850: INFO: stderr: "+ nc -v -t -w 2 10.233.32.168 81\n+ echo hostName\nConnection to 10.233.32.168 81 port [tcp/*] succeeded!\n"
  Apr 15 08:17:22.850: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5045 @ 04/15/24 08:17:22.85
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5045 to expose endpoints map[pod2:[101]] @ 04/15/24 08:17:22.961
  Apr 15 08:17:24.029: INFO: successfully validated that service multi-endpoint-test in namespace services-5045 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5045 @ 04/15/24 08:17:24.029
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5045 to expose endpoints map[] @ 04/15/24 08:17:24.065
  Apr 15 08:17:25.161: INFO: successfully validated that service multi-endpoint-test in namespace services-5045 exposes endpoints map[]
  Apr 15 08:17:25.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5045" for this suite. @ 04/15/24 08:17:25.239
• [11.862 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 04/15/24 08:17:25.268
  Apr 15 08:17:25.269: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 08:17:25.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:17:25.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:17:25.323
  STEP: Creating service test in namespace statefulset-4138 @ 04/15/24 08:17:25.329
  STEP: Creating statefulset ss in namespace statefulset-4138 @ 04/15/24 08:17:25.367
  Apr 15 08:17:25.394: INFO: Found 0 stateful pods, waiting for 1
  Apr 15 08:17:35.400: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/15/24 08:17:35.424
  STEP: Getting /status @ 04/15/24 08:17:35.47
  Apr 15 08:17:35.483: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/15/24 08:17:35.484
  Apr 15 08:17:35.510: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/15/24 08:17:35.511
  Apr 15 08:17:35.517: INFO: Observed &StatefulSet event: ADDED
  Apr 15 08:17:35.517: INFO: Found Statefulset ss in namespace statefulset-4138 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 08:17:35.517: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/15/24 08:17:35.518
  Apr 15 08:17:35.518: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 15 08:17:35.539: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/15/24 08:17:35.539
  Apr 15 08:17:35.547: INFO: Observed &StatefulSet event: ADDED
  Apr 15 08:17:35.548: INFO: Observed Statefulset ss in namespace statefulset-4138 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 08:17:35.548: INFO: Observed &StatefulSet event: MODIFIED
  Apr 15 08:17:35.549: INFO: Deleting all statefulset in ns statefulset-4138
  Apr 15 08:17:35.558: INFO: Scaling statefulset ss to 0
  Apr 15 08:17:45.601: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 08:17:45.608: INFO: Deleting statefulset ss
  Apr 15 08:17:45.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4138" for this suite. @ 04/15/24 08:17:45.663
• [20.420 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 04/15/24 08:17:45.689
  Apr 15 08:17:45.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:17:45.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:17:45.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:17:45.762
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:17:45.769
  STEP: Saw pod success @ 04/15/24 08:17:49.824
  Apr 15 08:17:49.832: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-0f386cf3-df34-43aa-92d7-d71317bab868 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:17:49.847
  Apr 15 08:17:49.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3700" for this suite. @ 04/15/24 08:17:49.883
• [4.210 seconds]
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 04/15/24 08:17:49.9
  Apr 15 08:17:49.900: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename controllerrevisions @ 04/15/24 08:17:49.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:17:49.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:17:49.94
  STEP: Creating DaemonSet "e2e-99pnk-daemon-set" @ 04/15/24 08:17:49.993
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 08:17:50.006
  Apr 15 08:17:50.021: INFO: Number of nodes with available pods controlled by daemonset e2e-99pnk-daemon-set: 0
  Apr 15 08:17:50.021: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  Apr 15 08:17:51.046: INFO: Number of nodes with available pods controlled by daemonset e2e-99pnk-daemon-set: 1
  Apr 15 08:17:51.047: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  Apr 15 08:17:52.026: INFO: Number of nodes with available pods controlled by daemonset e2e-99pnk-daemon-set: 3
  Apr 15 08:17:52.027: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-99pnk-daemon-set
  STEP: Confirm DaemonSet "e2e-99pnk-daemon-set" successfully created with "daemonset-name=e2e-99pnk-daemon-set" label @ 04/15/24 08:17:52.033
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-99pnk-daemon-set" @ 04/15/24 08:17:52.049
  Apr 15 08:17:52.057: INFO: Located ControllerRevision: "e2e-99pnk-daemon-set-868b887d54"
  STEP: Patching ControllerRevision "e2e-99pnk-daemon-set-868b887d54" @ 04/15/24 08:17:52.066
  Apr 15 08:17:52.084: INFO: e2e-99pnk-daemon-set-868b887d54 has been patched
  STEP: Create a new ControllerRevision @ 04/15/24 08:17:52.084
  Apr 15 08:17:52.097: INFO: Created ControllerRevision: e2e-99pnk-daemon-set-77c888f468
  STEP: Confirm that there are two ControllerRevisions @ 04/15/24 08:17:52.097
  Apr 15 08:17:52.098: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 08:17:52.105: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-99pnk-daemon-set-868b887d54" @ 04/15/24 08:17:52.105
  STEP: Confirm that there is only one ControllerRevision @ 04/15/24 08:17:52.116
  Apr 15 08:17:52.116: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 08:17:52.125: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-99pnk-daemon-set-77c888f468" @ 04/15/24 08:17:52.131
  Apr 15 08:17:52.148: INFO: e2e-99pnk-daemon-set-77c888f468 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/15/24 08:17:52.148
  W0415 08:17:52.161947      13 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/15/24 08:17:52.162
  Apr 15 08:17:52.162: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 08:17:53.162: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 08:17:53.174: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-99pnk-daemon-set-77c888f468=updated" @ 04/15/24 08:17:53.175
  STEP: Confirm that there is only one ControllerRevision @ 04/15/24 08:17:53.199
  Apr 15 08:17:53.200: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 08:17:53.211: INFO: Found 1 ControllerRevisions
  Apr 15 08:17:53.231: INFO: ControllerRevision "e2e-99pnk-daemon-set-864d4c4d5c" has revision 3
  STEP: Deleting DaemonSet "e2e-99pnk-daemon-set" @ 04/15/24 08:17:53.244
  STEP: deleting DaemonSet.extensions e2e-99pnk-daemon-set in namespace controllerrevisions-3728, will wait for the garbage collector to delete the pods @ 04/15/24 08:17:53.244
  Apr 15 08:17:53.349: INFO: Deleting DaemonSet.extensions e2e-99pnk-daemon-set took: 36.905998ms
  Apr 15 08:17:53.549: INFO: Terminating DaemonSet.extensions e2e-99pnk-daemon-set pods took: 200.535496ms
  Apr 15 08:17:55.457: INFO: Number of nodes with available pods controlled by daemonset e2e-99pnk-daemon-set: 0
  Apr 15 08:17:55.458: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-99pnk-daemon-set
  Apr 15 08:17:55.469: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"213569"},"items":null}

  Apr 15 08:17:55.476: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"213569"},"items":null}

  Apr 15 08:17:55.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-3728" for this suite. @ 04/15/24 08:17:55.525
• [5.642 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 04/15/24 08:17:55.549
  Apr 15 08:17:55.549: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename chunking @ 04/15/24 08:17:55.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:17:55.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:17:55.598
  STEP: creating a large number of resources @ 04/15/24 08:17:55.605
  STEP: retrieving those results in paged fashion several times @ 04/15/24 08:18:13.269
  Apr 15 08:18:13.324: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Apr 15 08:18:13.369: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Apr 15 08:18:13.414: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Apr 15 08:18:13.467: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Apr 15 08:18:13.516: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Apr 15 08:18:13.565: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Apr 15 08:18:13.617: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Apr 15 08:18:13.666: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Apr 15 08:18:13.715: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Apr 15 08:18:13.766: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Apr 15 08:18:13.817: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Apr 15 08:18:13.866: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Apr 15 08:18:13.914: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Apr 15 08:18:13.964: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Apr 15 08:18:14.015: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Apr 15 08:18:14.066: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Apr 15 08:18:14.116: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Apr 15 08:18:14.166: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Apr 15 08:18:14.217: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Apr 15 08:18:14.264: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Apr 15 08:18:14.313: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Apr 15 08:18:14.364: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Apr 15 08:18:14.415: INFO: Retrieved 17/17 results with rv 214032 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDMyLCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Apr 15 08:18:14.465: INFO: Retrieved 9/17 results with rv 214032 and continue 
  Apr 15 08:18:14.516: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Apr 15 08:18:14.566: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Apr 15 08:18:14.620: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Apr 15 08:18:14.665: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Apr 15 08:18:14.713: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Apr 15 08:18:14.763: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Apr 15 08:18:14.815: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Apr 15 08:18:14.865: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Apr 15 08:18:14.935: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Apr 15 08:18:14.967: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Apr 15 08:18:15.013: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Apr 15 08:18:15.065: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Apr 15 08:18:15.115: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Apr 15 08:18:15.168: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Apr 15 08:18:15.214: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Apr 15 08:18:15.268: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Apr 15 08:18:15.314: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Apr 15 08:18:15.366: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Apr 15 08:18:15.414: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Apr 15 08:18:15.465: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Apr 15 08:18:15.517: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Apr 15 08:18:15.566: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Apr 15 08:18:15.616: INFO: Retrieved 17/17 results with rv 214036 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM2LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Apr 15 08:18:15.664: INFO: Retrieved 9/17 results with rv 214036 and continue 
  Apr 15 08:18:15.716: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Apr 15 08:18:15.763: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Apr 15 08:18:15.829: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Apr 15 08:18:15.865: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Apr 15 08:18:15.915: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Apr 15 08:18:15.965: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Apr 15 08:18:16.017: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Apr 15 08:18:16.067: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Apr 15 08:18:16.114: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Apr 15 08:18:16.167: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Apr 15 08:18:16.217: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Apr 15 08:18:16.265: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Apr 15 08:18:16.317: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Apr 15 08:18:16.364: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Apr 15 08:18:16.418: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Apr 15 08:18:16.465: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Apr 15 08:18:16.515: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Apr 15 08:18:16.568: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Apr 15 08:18:16.615: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Apr 15 08:18:16.663: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Apr 15 08:18:16.717: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Apr 15 08:18:16.766: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Apr 15 08:18:16.816: INFO: Retrieved 17/17 results with rv 214039 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE0MDM5LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Apr 15 08:18:16.865: INFO: Retrieved 9/17 results with rv 214039 and continue 
  STEP: retrieving those results all at once @ 04/15/24 08:18:16.866
  Apr 15 08:18:16.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8543" for this suite. @ 04/15/24 08:18:16.971
• [21.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/15/24 08:18:17.045
  Apr 15 08:18:17.046: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename certificates @ 04/15/24 08:18:17.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:17.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:17.097
  STEP: getting /apis @ 04/15/24 08:18:18.172
  STEP: getting /apis/certificates.k8s.io @ 04/15/24 08:18:18.183
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/15/24 08:18:18.186
  STEP: creating @ 04/15/24 08:18:18.19
  STEP: getting @ 04/15/24 08:18:18.23
  STEP: listing @ 04/15/24 08:18:18.238
  STEP: watching @ 04/15/24 08:18:18.248
  Apr 15 08:18:18.248: INFO: starting watch
  STEP: patching @ 04/15/24 08:18:18.251
  STEP: updating @ 04/15/24 08:18:18.267
  Apr 15 08:18:18.280: INFO: waiting for watch events with expected annotations
  Apr 15 08:18:18.280: INFO: saw patched and updated annotations
  STEP: getting /approval @ 04/15/24 08:18:18.28
  STEP: patching /approval @ 04/15/24 08:18:18.291
  STEP: updating /approval @ 04/15/24 08:18:18.302
  STEP: getting /status @ 04/15/24 08:18:18.316
  STEP: patching /status @ 04/15/24 08:18:18.323
  STEP: updating /status @ 04/15/24 08:18:18.339
  STEP: deleting @ 04/15/24 08:18:18.353
  STEP: deleting a collection @ 04/15/24 08:18:18.382
  Apr 15 08:18:18.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-7905" for this suite. @ 04/15/24 08:18:18.438
• [1.413 seconds]
------------------------------
SSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/15/24 08:18:18.459
  Apr 15 08:18:18.459: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename conformance-tests @ 04/15/24 08:18:18.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:18.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:18.509
  STEP: Getting node addresses @ 04/15/24 08:18:18.519
  Apr 15 08:18:18.520: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Apr 15 08:18:18.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7534" for this suite. @ 04/15/24 08:18:18.548
• [0.103 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 04/15/24 08:18:18.563
  Apr 15 08:18:18.563: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:18:18.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:18.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:18.603
  STEP: creating Agnhost RC @ 04/15/24 08:18:18.609
  Apr 15 08:18:18.609: INFO: namespace kubectl-9388
  Apr 15 08:18:18.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9388 create -f -'
  Apr 15 08:18:18.976: INFO: stderr: ""
  Apr 15 08:18:18.976: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/15/24 08:18:18.976
  Apr 15 08:18:19.985: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 08:18:19.986: INFO: Found 0 / 1
  Apr 15 08:18:20.987: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 08:18:20.987: INFO: Found 1 / 1
  Apr 15 08:18:20.987: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 15 08:18:21.013: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 08:18:21.013: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 15 08:18:21.013: INFO: wait on agnhost-primary startup in kubectl-9388 
  Apr 15 08:18:21.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9388 logs agnhost-primary-v8kjl agnhost-primary'
  Apr 15 08:18:21.185: INFO: stderr: ""
  Apr 15 08:18:21.185: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 04/15/24 08:18:21.185
  Apr 15 08:18:21.185: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9388 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Apr 15 08:18:21.394: INFO: stderr: ""
  Apr 15 08:18:21.394: INFO: stdout: "service/rm2 exposed\n"
  Apr 15 08:18:21.402: INFO: Service rm2 in namespace kubectl-9388 found.
  STEP: exposing service @ 04/15/24 08:18:23.419
  Apr 15 08:18:23.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-9388 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Apr 15 08:18:23.684: INFO: stderr: ""
  Apr 15 08:18:23.684: INFO: stdout: "service/rm3 exposed\n"
  Apr 15 08:18:23.691: INFO: Service rm3 in namespace kubectl-9388 found.
  Apr 15 08:18:25.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9388" for this suite. @ 04/15/24 08:18:25.724
• [7.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 04/15/24 08:18:25.766
  Apr 15 08:18:25.766: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:18:25.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:25.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:25.824
  STEP: Creating configMap with name projected-configmap-test-volume-dd4c871b-f20b-4741-8264-db501ff389fb @ 04/15/24 08:18:25.831
  STEP: Creating a pod to test consume configMaps @ 04/15/24 08:18:25.839
  STEP: Saw pod success @ 04/15/24 08:18:29.885
  Apr 15 08:18:29.893: INFO: Trying to get logs from node eehaephong4y-3 pod pod-projected-configmaps-739236fd-665e-4769-bd9a-6a1ce624efc8 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:18:29.909
  Apr 15 08:18:29.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-528" for this suite. @ 04/15/24 08:18:29.958
• [4.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 04/15/24 08:18:29.979
  Apr 15 08:18:29.979: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:18:29.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:30.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:30.027
  STEP: Creating configMap with name projected-configmap-test-volume-299dfd4e-8e45-4034-b948-adafcb528c61 @ 04/15/24 08:18:30.036
  STEP: Creating a pod to test consume configMaps @ 04/15/24 08:18:30.048
  STEP: Saw pod success @ 04/15/24 08:18:34.099
  Apr 15 08:18:34.108: INFO: Trying to get logs from node eehaephong4y-3 pod pod-projected-configmaps-4ab0ef4a-1dd1-41a0-9d1d-b589ff0b8525 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 08:18:34.125
  Apr 15 08:18:34.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-617" for this suite. @ 04/15/24 08:18:34.165
• [4.203 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 04/15/24 08:18:34.182
  Apr 15 08:18:34.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename gc @ 04/15/24 08:18:34.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:34.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:34.241
  Apr 15 08:18:34.346: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"295c526c-b1b8-4c3f-b5c3-ab0b520b4688", Controller:(*bool)(0xc00392ff82), BlockOwnerDeletion:(*bool)(0xc00392ff83)}}
  Apr 15 08:18:34.373: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"38290c99-8847-4172-92cb-66325008d83e", Controller:(*bool)(0xc003163502), BlockOwnerDeletion:(*bool)(0xc003163503)}}
  Apr 15 08:18:34.402: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"602f0e48-a663-46b7-b031-c1c66504047d", Controller:(*bool)(0xc0031637ba), BlockOwnerDeletion:(*bool)(0xc0031637bb)}}
  Apr 15 08:18:39.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8753" for this suite. @ 04/15/24 08:18:39.444
• [5.276 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 04/15/24 08:18:39.461
  Apr 15 08:18:39.462: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:18:39.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:39.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:39.512
  STEP: Setting up server cert @ 04/15/24 08:18:39.592
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:18:40.118
  STEP: Deploying the webhook pod @ 04/15/24 08:18:40.134
  STEP: Wait for the deployment to be ready @ 04/15/24 08:18:40.158
  Apr 15 08:18:40.179: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/15/24 08:18:42.207
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:18:42.233
  Apr 15 08:18:43.234: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 15 08:18:43.249: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7463-crds.webhook.example.com via the AdmissionRegistration API @ 04/15/24 08:18:43.793
  STEP: Creating a custom resource while v1 is storage version @ 04/15/24 08:18:43.84
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/15/24 08:18:46.132
  STEP: Patching the custom resource while v2 is storage version @ 04/15/24 08:18:46.146
  Apr 15 08:18:47.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-510" for this suite. @ 04/15/24 08:18:47.029
  STEP: Destroying namespace "webhook-markers-1390" for this suite. @ 04/15/24 08:18:47.043
• [7.598 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/15/24 08:18:47.06
  Apr 15 08:18:47.060: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename hostport @ 04/15/24 08:18:47.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:18:47.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:18:47.103
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/15/24 08:18:47.122
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.26 on the node which pod1 resides and expect scheduled @ 04/15/24 08:18:49.179
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.26 but use UDP protocol on the node which pod2 resides @ 04/15/24 08:18:51.214
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/15/24 08:18:57.297
  Apr 15 08:18:57.298: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.26 http://127.0.0.1:54323/hostname] Namespace:hostport-8102 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:18:57.298: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:18:57.300: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:18:57.300: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-8102/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.26+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.26, port: 54323 @ 04/15/24 08:18:57.535
  Apr 15 08:18:57.535: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.26:54323/hostname] Namespace:hostport-8102 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:18:57.535: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:18:57.536: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:18:57.536: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-8102/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.26%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.26, port: 54323 UDP @ 04/15/24 08:18:57.707
  Apr 15 08:18:57.707: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.26 54323] Namespace:hostport-8102 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:18:57.707: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:18:57.709: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:18:57.710: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-8102/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.26+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Apr 15 08:19:02.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-8102" for this suite. @ 04/15/24 08:19:02.905
• [15.876 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/15/24 08:19:02.939
  Apr 15 08:19:02.939: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename secrets @ 04/15/24 08:19:02.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:02.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:02.982
  STEP: Creating secret with name secret-test-85a67742-cf3b-4a89-bde9-2aa6b1b4c114 @ 04/15/24 08:19:02.991
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:19:03.002
  STEP: Saw pod success @ 04/15/24 08:19:07.048
  Apr 15 08:19:07.056: INFO: Trying to get logs from node eehaephong4y-3 pod pod-secrets-f1559df6-5ec9-44e9-93d7-85c71dc529d3 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:19:07.073
  Apr 15 08:19:07.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-600" for this suite. @ 04/15/24 08:19:07.118
• [4.196 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/15/24 08:19:07.135
  Apr 15 08:19:07.135: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:19:07.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:07.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:07.186
  STEP: creating a Pod with a static label @ 04/15/24 08:19:07.216
  STEP: watching for Pod to be ready @ 04/15/24 08:19:07.241
  Apr 15 08:19:07.244: INFO: observed Pod pod-test in namespace pods-6524 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Apr 15 08:19:07.259: INFO: observed Pod pod-test in namespace pods-6524 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:19:07 +0000 UTC  }]
  Apr 15 08:19:07.285: INFO: observed Pod pod-test in namespace pods-6524 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:19:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:19:07 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:19:07 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:19:07 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:19:07 +0000 UTC  }]
  Apr 15 08:19:08.327: INFO: Found Pod pod-test in namespace pods-6524 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:19:08 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:19:07 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:19:08 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:19:08 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:19:07 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/15/24 08:19:08.339
  STEP: getting the Pod and ensuring that it's patched @ 04/15/24 08:19:08.363
  STEP: replacing the Pod's status Ready condition to False @ 04/15/24 08:19:08.371
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/15/24 08:19:08.403
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/15/24 08:19:08.404
  STEP: watching for the Pod to be deleted @ 04/15/24 08:19:08.428
  Apr 15 08:19:08.434: INFO: observed event type MODIFIED
  Apr 15 08:19:10.338: INFO: observed event type MODIFIED
  Apr 15 08:19:10.446: INFO: observed event type MODIFIED
  Apr 15 08:19:11.378: INFO: observed event type MODIFIED
  Apr 15 08:19:11.424: INFO: observed event type MODIFIED
  Apr 15 08:19:11.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6524" for this suite. @ 04/15/24 08:19:11.464
• [4.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/15/24 08:19:11.488
  Apr 15 08:19:11.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 08:19:11.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:11.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:11.537
  STEP: create the container @ 04/15/24 08:19:11.544
  W0415 08:19:11.563714      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/15/24 08:19:11.565
  STEP: get the container status @ 04/15/24 08:19:13.599
  STEP: the container should be terminated @ 04/15/24 08:19:13.605
  STEP: the termination message should be set @ 04/15/24 08:19:13.606
  Apr 15 08:19:13.606: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/15/24 08:19:13.607
  Apr 15 08:19:13.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7723" for this suite. @ 04/15/24 08:19:13.648
• [2.174 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/15/24 08:19:13.663
  Apr 15 08:19:13.664: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename secrets @ 04/15/24 08:19:13.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:13.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:13.716
  STEP: Creating secret with name secret-test-map-e7a594d3-73d3-44d5-ac2b-5c1ed226a711 @ 04/15/24 08:19:13.721
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:19:13.73
  STEP: Saw pod success @ 04/15/24 08:19:17.776
  Apr 15 08:19:17.785: INFO: Trying to get logs from node eehaephong4y-3 pod pod-secrets-d455e456-ccc7-48df-bc16-ddc0bc8e0c54 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:19:17.801
  Apr 15 08:19:17.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-698" for this suite. @ 04/15/24 08:19:17.855
• [4.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 04/15/24 08:19:17.879
  Apr 15 08:19:17.879: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename job @ 04/15/24 08:19:17.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:17.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:17.931
  STEP: Creating a job @ 04/15/24 08:19:17.937
  STEP: Ensuring active pods == parallelism @ 04/15/24 08:19:17.95
  STEP: Orphaning one of the Job's Pods @ 04/15/24 08:19:19.961
  Apr 15 08:19:20.498: INFO: Successfully updated pod "adopt-release-klhhr"
  STEP: Checking that the Job readopts the Pod @ 04/15/24 08:19:20.498
  STEP: Removing the labels from the Job's Pod @ 04/15/24 08:19:22.525
  Apr 15 08:19:23.051: INFO: Successfully updated pod "adopt-release-klhhr"
  STEP: Checking that the Job releases the Pod @ 04/15/24 08:19:23.051
  Apr 15 08:19:25.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1868" for this suite. @ 04/15/24 08:19:25.078
• [7.210 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 04/15/24 08:19:25.095
  Apr 15 08:19:25.095: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 08:19:25.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:25.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:25.14
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/15/24 08:19:25.148
  STEP: Saw pod success @ 04/15/24 08:19:29.206
  Apr 15 08:19:29.212: INFO: Trying to get logs from node eehaephong4y-3 pod pod-20603ba8-76a5-4b55-884c-8a473cc9393b container test-container: <nil>
  STEP: delete the pod @ 04/15/24 08:19:29.23
  Apr 15 08:19:29.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6750" for this suite. @ 04/15/24 08:19:29.278
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 04/15/24 08:19:29.297
  Apr 15 08:19:29.297: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:19:29.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:29.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:29.351
  STEP: Creating the pod @ 04/15/24 08:19:29.358
  Apr 15 08:19:31.947: INFO: Successfully updated pod "annotationupdateef6a4ba8-6770-4945-952a-b88258f1db24"
  Apr 15 08:19:33.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-83" for this suite. @ 04/15/24 08:19:34.003
• [4.724 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 04/15/24 08:19:34.028
  Apr 15 08:19:34.028: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename endpointslice @ 04/15/24 08:19:34.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:34.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:34.084
  STEP: getting /apis @ 04/15/24 08:19:34.089
  STEP: getting /apis/discovery.k8s.io @ 04/15/24 08:19:34.104
  STEP: getting /apis/discovery.k8s.iov1 @ 04/15/24 08:19:34.108
  STEP: creating @ 04/15/24 08:19:34.111
  STEP: getting @ 04/15/24 08:19:34.149
  STEP: listing @ 04/15/24 08:19:34.157
  STEP: watching @ 04/15/24 08:19:34.165
  Apr 15 08:19:34.165: INFO: starting watch
  STEP: cluster-wide listing @ 04/15/24 08:19:34.168
  STEP: cluster-wide watching @ 04/15/24 08:19:34.175
  Apr 15 08:19:34.176: INFO: starting watch
  STEP: patching @ 04/15/24 08:19:34.178
  STEP: updating @ 04/15/24 08:19:34.19
  Apr 15 08:19:34.210: INFO: waiting for watch events with expected annotations
  Apr 15 08:19:34.210: INFO: saw patched and updated annotations
  STEP: deleting @ 04/15/24 08:19:34.211
  STEP: deleting a collection @ 04/15/24 08:19:34.237
  Apr 15 08:19:34.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6236" for this suite. @ 04/15/24 08:19:34.282
• [0.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 04/15/24 08:19:34.309
  Apr 15 08:19:34.309: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 08:19:34.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:34.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:34.36
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/15/24 08:19:34.367
  STEP: Saw pod success @ 04/15/24 08:19:38.414
  Apr 15 08:19:38.424: INFO: Trying to get logs from node eehaephong4y-3 pod pod-72625a70-0d8e-4cef-b851-a46d276514a7 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 08:19:38.438
  Apr 15 08:19:38.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6368" for this suite. @ 04/15/24 08:19:38.486
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/15/24 08:19:38.505
  Apr 15 08:19:38.505: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename watch @ 04/15/24 08:19:38.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:38.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:38.547
  STEP: creating a watch on configmaps @ 04/15/24 08:19:38.553
  STEP: creating a new configmap @ 04/15/24 08:19:38.556
  STEP: modifying the configmap once @ 04/15/24 08:19:38.567
  STEP: closing the watch once it receives two notifications @ 04/15/24 08:19:38.586
  Apr 15 08:19:38.586: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-955  e4846685-ec72-46ef-ac52-fe3b170151b9 215153 0 2024-04-15 08:19:38 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-15 08:19:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:19:38.588: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-955  e4846685-ec72-46ef-ac52-fe3b170151b9 215154 0 2024-04-15 08:19:38 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-15 08:19:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/15/24 08:19:38.589
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/15/24 08:19:38.607
  STEP: deleting the configmap @ 04/15/24 08:19:38.61
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/15/24 08:19:38.622
  Apr 15 08:19:38.623: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-955  e4846685-ec72-46ef-ac52-fe3b170151b9 215155 0 2024-04-15 08:19:38 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-15 08:19:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:19:38.624: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-955  e4846685-ec72-46ef-ac52-fe3b170151b9 215156 0 2024-04-15 08:19:38 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-15 08:19:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:19:38.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-955" for this suite. @ 04/15/24 08:19:38.636
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 04/15/24 08:19:38.655
  Apr 15 08:19:38.655: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename gc @ 04/15/24 08:19:38.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:38.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:38.704
  STEP: create the rc @ 04/15/24 08:19:38.726
  W0415 08:19:38.737627      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/15/24 08:19:44.833
  STEP: wait for the rc to be deleted @ 04/15/24 08:19:44.899
  Apr 15 08:19:46.817: INFO: 83 pods remaining
  Apr 15 08:19:46.818: INFO: 80 pods has nil DeletionTimestamp
  Apr 15 08:19:46.818: INFO: 
  Apr 15 08:19:47.679: INFO: 73 pods remaining
  Apr 15 08:19:47.680: INFO: 68 pods has nil DeletionTimestamp
  Apr 15 08:19:47.680: INFO: 
  Apr 15 08:19:48.110: INFO: 59 pods remaining
  Apr 15 08:19:48.110: INFO: 56 pods has nil DeletionTimestamp
  Apr 15 08:19:48.110: INFO: 
  Apr 15 08:19:49.060: INFO: 46 pods remaining
  Apr 15 08:19:49.061: INFO: 45 pods has nil DeletionTimestamp
  Apr 15 08:19:49.061: INFO: 
  Apr 15 08:19:50.260: INFO: 31 pods remaining
  Apr 15 08:19:50.260: INFO: 27 pods has nil DeletionTimestamp
  Apr 15 08:19:50.261: INFO: 
  Apr 15 08:19:51.376: INFO: 20 pods remaining
  Apr 15 08:19:51.377: INFO: 16 pods has nil DeletionTimestamp
  Apr 15 08:19:51.379: INFO: 
  Apr 15 08:19:52.168: INFO: 5 pods remaining
  Apr 15 08:19:52.168: INFO: 0 pods has nil DeletionTimestamp
  Apr 15 08:19:52.168: INFO: 
  STEP: Gathering metrics @ 04/15/24 08:19:52.929
  Apr 15 08:19:53.586: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 08:19:53.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3247" for this suite. @ 04/15/24 08:19:53.613
• [15.017 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 04/15/24 08:19:53.676
  Apr 15 08:19:53.676: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:19:53.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:19:53.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:19:53.741
  STEP: Setting up server cert @ 04/15/24 08:19:53.848
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:19:55.883
  STEP: Deploying the webhook pod @ 04/15/24 08:19:55.909
  STEP: Wait for the deployment to be ready @ 04/15/24 08:19:55.957
  Apr 15 08:19:56.039: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Apr 15 08:19:58.076: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 19, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 19, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 19, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 19, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 04/15/24 08:20:00.13
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:20:00.243
  Apr 15 08:20:01.243: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/15/24 08:20:01.75
  STEP: Creating a configMap that should be mutated @ 04/15/24 08:20:01.781
  STEP: Deleting the collection of validation webhooks @ 04/15/24 08:20:01.86
  STEP: Creating a configMap that should not be mutated @ 04/15/24 08:20:02.031
  Apr 15 08:20:02.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-549" for this suite. @ 04/15/24 08:20:02.251
  STEP: Destroying namespace "webhook-markers-1078" for this suite. @ 04/15/24 08:20:02.307
• [8.650 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 04/15/24 08:20:02.327
  Apr 15 08:20:02.327: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:20:02.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:20:02.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:20:02.445
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:20:02.45
  STEP: Saw pod success @ 04/15/24 08:20:06.519
  Apr 15 08:20:06.543: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-76d106b6-cd54-46b2-88a4-0c5f3a6922d3 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:20:06.571
  Apr 15 08:20:06.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1540" for this suite. @ 04/15/24 08:20:06.638
• [4.360 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 04/15/24 08:20:06.703
  Apr 15 08:20:06.705: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 08:20:06.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:20:06.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:20:06.797
  Apr 15 08:20:06.800: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:20:07.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1811" for this suite. @ 04/15/24 08:20:07.734
• [1.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 04/15/24 08:20:07.819
  Apr 15 08:20:07.819: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 08:20:07.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:20:07.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:20:07.913
  STEP: Creating service test in namespace statefulset-54 @ 04/15/24 08:20:07.924
  STEP: Creating a new StatefulSet @ 04/15/24 08:20:07.935
  Apr 15 08:20:08.022: INFO: Found 0 stateful pods, waiting for 3
  Apr 15 08:20:18.013: INFO: Found 2 stateful pods, waiting for 3
  Apr 15 08:20:28.001: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 08:20:28.001: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 08:20:28.001: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/15/24 08:20:28.03
  Apr 15 08:20:28.069: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/15/24 08:20:28.07
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/15/24 08:20:38.086
  STEP: Performing a canary update @ 04/15/24 08:20:38.086
  Apr 15 08:20:38.125: INFO: Updating stateful set ss2
  Apr 15 08:20:38.138: INFO: Waiting for Pod statefulset-54/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/15/24 08:20:48.151
  Apr 15 08:20:48.346: INFO: Found 2 stateful pods, waiting for 3
  Apr 15 08:20:58.307: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 08:20:58.307: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 08:20:58.308: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/15/24 08:20:58.34
  Apr 15 08:20:58.380: INFO: Updating stateful set ss2
  Apr 15 08:20:58.404: INFO: Waiting for Pod statefulset-54/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 15 08:21:08.453: INFO: Updating stateful set ss2
  Apr 15 08:21:08.479: INFO: Waiting for StatefulSet statefulset-54/ss2 to complete update
  Apr 15 08:21:08.479: INFO: Waiting for Pod statefulset-54/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 15 08:21:18.477: INFO: Deleting all statefulset in ns statefulset-54
  Apr 15 08:21:18.487: INFO: Scaling statefulset ss2 to 0
  Apr 15 08:21:28.521: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 08:21:28.531: INFO: Deleting statefulset ss2
  Apr 15 08:21:28.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-54" for this suite. @ 04/15/24 08:21:28.609
• [80.817 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 04/15/24 08:21:28.637
  Apr 15 08:21:28.637: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:21:28.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:21:28.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:21:28.734
  STEP: Setting up server cert @ 04/15/24 08:21:28.799
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:21:29.625
  STEP: Deploying the webhook pod @ 04/15/24 08:21:29.646
  STEP: Wait for the deployment to be ready @ 04/15/24 08:21:29.677
  Apr 15 08:21:29.717: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/15/24 08:21:31.744
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:21:31.771
  Apr 15 08:21:32.772: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/15/24 08:21:32.792
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/15/24 08:21:32.795
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/15/24 08:21:32.795
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/15/24 08:21:32.795
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/15/24 08:21:32.798
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/15/24 08:21:32.798
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/15/24 08:21:32.8
  Apr 15 08:21:32.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8838" for this suite. @ 04/15/24 08:21:32.913
  STEP: Destroying namespace "webhook-markers-2340" for this suite. @ 04/15/24 08:21:32.931
• [4.311 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 04/15/24 08:21:32.949
  Apr 15 08:21:32.949: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 08:21:32.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:21:32.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:21:32.991
  STEP: Creating service test in namespace statefulset-2814 @ 04/15/24 08:21:32.997
  STEP: Creating a new StatefulSet @ 04/15/24 08:21:33.007
  Apr 15 08:21:33.028: INFO: Found 0 stateful pods, waiting for 3
  Apr 15 08:21:43.032: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 08:21:43.032: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 08:21:43.033: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 08:21:43.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-2814 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 08:21:43.434: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:21:43.434: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:21:43.434: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/15/24 08:21:53.458
  Apr 15 08:21:53.493: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/15/24 08:21:53.494
  STEP: Updating Pods in reverse ordinal order @ 04/15/24 08:22:03.531
  Apr 15 08:22:03.543: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-2814 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 08:22:03.840: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 08:22:03.840: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 08:22:03.840: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 08:22:13.877: INFO: Waiting for StatefulSet statefulset-2814/ss2 to complete update
  STEP: Rolling back to a previous revision @ 04/15/24 08:22:23.883
  Apr 15 08:22:23.883: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-2814 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 08:22:24.191: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:22:24.191: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:22:24.191: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 08:22:34.256: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 04/15/24 08:22:44.282
  Apr 15 08:22:44.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-2814 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 08:22:44.631: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 08:22:44.631: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 08:22:44.631: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 08:22:54.671: INFO: Deleting all statefulset in ns statefulset-2814
  Apr 15 08:22:54.677: INFO: Scaling statefulset ss2 to 0
  Apr 15 08:23:04.720: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 08:23:04.736: INFO: Deleting statefulset ss2
  Apr 15 08:23:04.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2814" for this suite. @ 04/15/24 08:23:04.78
• [91.855 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 04/15/24 08:23:04.807
  Apr 15 08:23:04.807: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 08:23:04.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:23:04.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:23:04.86
  Apr 15 08:23:04.867: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:23:05.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6578" for this suite. @ 04/15/24 08:23:05.934
• [1.140 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 04/15/24 08:23:05.95
  Apr 15 08:23:05.950: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 08:23:05.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:23:05.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:23:06.006
  Apr 15 08:23:06.039: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 15 08:23:11.051: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 08:23:11.051
  STEP: Scaling up "test-rs" replicaset @ 04/15/24 08:23:11.051
  Apr 15 08:23:11.075: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/15/24 08:23:11.075
  Apr 15 08:23:11.114: INFO: observed ReplicaSet test-rs in namespace replicaset-5980 with ReadyReplicas 1, AvailableReplicas 1
  Apr 15 08:23:11.212: INFO: observed ReplicaSet test-rs in namespace replicaset-5980 with ReadyReplicas 1, AvailableReplicas 1
  Apr 15 08:23:11.259: INFO: observed ReplicaSet test-rs in namespace replicaset-5980 with ReadyReplicas 1, AvailableReplicas 1
  Apr 15 08:23:11.311: INFO: observed ReplicaSet test-rs in namespace replicaset-5980 with ReadyReplicas 1, AvailableReplicas 1
  Apr 15 08:23:12.565: INFO: observed ReplicaSet test-rs in namespace replicaset-5980 with ReadyReplicas 2, AvailableReplicas 2
  Apr 15 08:23:12.594: INFO: observed Replicaset test-rs in namespace replicaset-5980 with ReadyReplicas 3 found true
  Apr 15 08:23:12.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5980" for this suite. @ 04/15/24 08:23:12.604
• [6.666 seconds]
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 04/15/24 08:23:12.617
  Apr 15 08:23:12.617: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:23:12.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:23:12.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:23:12.657
  STEP: Creating a pod to test downward api env vars @ 04/15/24 08:23:12.662
  STEP: Saw pod success @ 04/15/24 08:23:16.739
  Apr 15 08:23:16.749: INFO: Trying to get logs from node eehaephong4y-3 pod downward-api-1bbcf6bf-2e22-4cae-b824-bf4761d5bcc0 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 08:23:16.786
  Apr 15 08:23:16.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1538" for this suite. @ 04/15/24 08:23:16.839
• [4.238 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 04/15/24 08:23:16.856
  Apr 15 08:23:16.856: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 08:23:16.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:23:16.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:23:16.902
  STEP: Creating a ResourceQuota with terminating scope @ 04/15/24 08:23:16.907
  STEP: Ensuring ResourceQuota status is calculated @ 04/15/24 08:23:16.936
  STEP: Creating a ResourceQuota with not terminating scope @ 04/15/24 08:23:18.949
  STEP: Ensuring ResourceQuota status is calculated @ 04/15/24 08:23:18.961
  STEP: Creating a long running pod @ 04/15/24 08:23:20.97
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/15/24 08:23:20.997
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/15/24 08:23:23.004
  STEP: Deleting the pod @ 04/15/24 08:23:25.019
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 08:23:25.047
  STEP: Creating a terminating pod @ 04/15/24 08:23:27.059
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/15/24 08:23:27.084
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/15/24 08:23:29.095
  STEP: Deleting the pod @ 04/15/24 08:23:31.105
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 08:23:31.131
  Apr 15 08:23:33.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7372" for this suite. @ 04/15/24 08:23:33.16
• [16.325 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 04/15/24 08:23:33.185
  Apr 15 08:23:33.185: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 08:23:33.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:23:33.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:23:33.237
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/15/24 08:23:33.247
  STEP: Saw pod success @ 04/15/24 08:23:37.311
  Apr 15 08:23:37.349: INFO: Trying to get logs from node eehaephong4y-3 pod pod-70e63e25-78a5-4dc3-93bd-21bc3e91947d container test-container: <nil>
  STEP: delete the pod @ 04/15/24 08:23:37.367
  Apr 15 08:23:37.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7142" for this suite. @ 04/15/24 08:23:37.41
• [4.242 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 04/15/24 08:23:37.431
  Apr 15 08:23:37.432: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:23:37.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:23:37.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:23:37.493
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:23:37.501
  STEP: Saw pod success @ 04/15/24 08:23:41.553
  Apr 15 08:23:41.562: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-90ca65a2-4bb7-456f-a6cf-347e24dcf0b4 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:23:41.581
  Apr 15 08:23:41.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7682" for this suite. @ 04/15/24 08:23:41.628
• [4.212 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 04/15/24 08:23:41.646
  Apr 15 08:23:41.646: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename secrets @ 04/15/24 08:23:41.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:23:41.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:23:41.701
  STEP: creating a secret @ 04/15/24 08:23:41.707
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/15/24 08:23:41.721
  STEP: patching the secret @ 04/15/24 08:23:41.736
  STEP: deleting the secret using a LabelSelector @ 04/15/24 08:23:41.763
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/15/24 08:23:41.791
  Apr 15 08:23:41.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9991" for this suite. @ 04/15/24 08:23:41.815
• [0.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 04/15/24 08:23:41.848
  Apr 15 08:23:41.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 08:23:41.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:23:41.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:23:41.897
  Apr 15 08:23:41.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9698" for this suite. @ 04/15/24 08:23:41.974
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 04/15/24 08:23:41.992
  Apr 15 08:23:41.992: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 08:23:41.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:23:42.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:23:42.036
  STEP: getting /apis @ 04/15/24 08:23:42.043
  STEP: getting /apis/node.k8s.io @ 04/15/24 08:23:42.056
  STEP: getting /apis/node.k8s.io/v1 @ 04/15/24 08:23:42.058
  STEP: creating @ 04/15/24 08:23:42.06
  STEP: watching @ 04/15/24 08:23:42.094
  Apr 15 08:23:42.094: INFO: starting watch
  STEP: getting @ 04/15/24 08:23:42.111
  STEP: listing @ 04/15/24 08:23:42.119
  STEP: patching @ 04/15/24 08:23:42.128
  STEP: updating @ 04/15/24 08:23:42.141
  Apr 15 08:23:42.156: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 04/15/24 08:23:42.158
  STEP: deleting a collection @ 04/15/24 08:23:42.201
  Apr 15 08:23:42.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2635" for this suite. @ 04/15/24 08:23:42.262
• [0.285 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 04/15/24 08:23:42.277
  Apr 15 08:23:42.277: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 08:23:42.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:23:42.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:23:42.328
  STEP: Counting existing ResourceQuota @ 04/15/24 08:23:42.337
  STEP: Creating a ResourceQuota @ 04/15/24 08:23:47.344
  STEP: Ensuring resource quota status is calculated @ 04/15/24 08:23:47.358
  STEP: Creating a ReplicationController @ 04/15/24 08:23:49.367
  STEP: Ensuring resource quota status captures replication controller creation @ 04/15/24 08:23:49.387
  STEP: Deleting a ReplicationController @ 04/15/24 08:23:51.396
  STEP: Ensuring resource quota status released usage @ 04/15/24 08:23:51.41
  Apr 15 08:23:53.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6386" for this suite. @ 04/15/24 08:23:53.437
• [11.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 04/15/24 08:23:53.459
  Apr 15 08:23:53.459: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 08:23:53.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:23:53.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:23:53.505
  STEP: Create a ReplicaSet @ 04/15/24 08:23:53.514
  STEP: Verify that the required pods have come up @ 04/15/24 08:23:53.526
  Apr 15 08:23:53.536: INFO: Pod name sample-pod: Found 0 pods out of 3
  Apr 15 08:23:58.550: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/15/24 08:23:58.551
  Apr 15 08:23:58.560: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/15/24 08:23:58.56
  STEP: DeleteCollection of the ReplicaSets @ 04/15/24 08:23:58.571
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/15/24 08:23:58.593
  Apr 15 08:23:58.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1595" for this suite. @ 04/15/24 08:23:58.629
• [5.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 04/15/24 08:23:58.67
  Apr 15 08:23:58.670: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename dns @ 04/15/24 08:23:58.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:23:58.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:23:58.79
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/15/24 08:23:58.797
  Apr 15 08:23:58.833: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5305  c3c2b997-b49a-47bb-9ca1-6c72e0466248 218107 0 2024-04-15 08:23:58 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-04-15 08:23:58 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-h58k4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h58k4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/15/24 08:24:00.885
  Apr 15 08:24:00.886: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5305 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:24:00.886: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:24:00.888: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:24:00.888: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-5305/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/15/24 08:24:01.065
  Apr 15 08:24:01.065: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5305 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:24:01.065: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:24:01.068: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:24:01.069: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-5305/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 08:24:01.217: INFO: Deleting pod test-dns-nameservers...
  Apr 15 08:24:01.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5305" for this suite. @ 04/15/24 08:24:01.269
• [2.617 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 04/15/24 08:24:01.291
  Apr 15 08:24:01.291: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 08:24:01.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:24:01.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:24:01.357
  Apr 15 08:25:01.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-914" for this suite. @ 04/15/24 08:25:01.422
• [60.151 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 04/15/24 08:25:01.443
  Apr 15 08:25:01.444: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 08:25:01.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:25:01.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:25:01.494
  STEP: Creating namespace "e2e-ns-2vvhj" @ 04/15/24 08:25:01.503
  Apr 15 08:25:01.539: INFO: Namespace "e2e-ns-2vvhj-1947" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-2vvhj-1947" @ 04/15/24 08:25:01.539
  Apr 15 08:25:01.565: INFO: Namespace "e2e-ns-2vvhj-1947" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-2vvhj-1947" @ 04/15/24 08:25:01.565
  Apr 15 08:25:01.589: INFO: Namespace "e2e-ns-2vvhj-1947" has []v1.FinalizerName{"kubernetes"}
  Apr 15 08:25:01.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8742" for this suite. @ 04/15/24 08:25:01.604
  STEP: Destroying namespace "e2e-ns-2vvhj-1947" for this suite. @ 04/15/24 08:25:01.618
• [0.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/15/24 08:25:01.634
  Apr 15 08:25:01.635: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 08:25:01.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:25:01.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:25:01.68
  STEP: Creating a cronjob @ 04/15/24 08:25:01.686
  STEP: Ensuring more than one job is running at a time @ 04/15/24 08:25:01.704
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/15/24 08:27:01.714
  STEP: Removing cronjob @ 04/15/24 08:27:01.721
  Apr 15 08:27:01.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9178" for this suite. @ 04/15/24 08:27:01.755
• [120.141 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 04/15/24 08:27:01.782
  Apr 15 08:27:01.782: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename job @ 04/15/24 08:27:01.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:27:01.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:27:01.87
  STEP: Creating Indexed job @ 04/15/24 08:27:01.889
  STEP: Ensuring job reaches completions @ 04/15/24 08:27:01.91
  STEP: Ensuring pods with index for job exist @ 04/15/24 08:27:09.919
  Apr 15 08:27:09.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5471" for this suite. @ 04/15/24 08:27:09.945
• [8.177 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/15/24 08:27:09.963
  Apr 15 08:27:09.963: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename deployment @ 04/15/24 08:27:09.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:27:09.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:27:10.006
  Apr 15 08:27:10.014: INFO: Creating deployment "webserver-deployment"
  Apr 15 08:27:10.030: INFO: Waiting for observed generation 1
  Apr 15 08:27:12.046: INFO: Waiting for all required pods to come up
  Apr 15 08:27:12.059: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/15/24 08:27:12.059
  Apr 15 08:27:14.098: INFO: Waiting for deployment "webserver-deployment" to complete
  Apr 15 08:27:14.115: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Apr 15 08:27:14.144: INFO: Updating deployment webserver-deployment
  Apr 15 08:27:14.144: INFO: Waiting for observed generation 2
  Apr 15 08:27:16.165: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Apr 15 08:27:16.180: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Apr 15 08:27:16.193: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 15 08:27:16.229: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Apr 15 08:27:16.230: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Apr 15 08:27:16.239: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 15 08:27:16.258: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Apr 15 08:27:16.258: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Apr 15 08:27:16.284: INFO: Updating deployment webserver-deployment
  Apr 15 08:27:16.284: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Apr 15 08:27:16.302: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Apr 15 08:27:16.315: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Apr 15 08:27:16.336: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64f805ed-4159-4a87-ad9b-517733801519",
      ResourceVersion: (string) (len=6) "218861",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 08:27:16.358: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3795153d-0630-4bc5-b0fd-2abbf77cbfb7",
      ResourceVersion: (string) (len=6) "218865",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "64f805ed-4159-4a87-ad9b-517733801519",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 34 66 38 30 35  65 64 2d 34 31 35 39 2d  |\"64f805ed-4159-|
              00000120  34 61 38 37 2d 61 64 39  62 2d 35 31 37 37 33 33  |4a87-ad9b-517733|
              00000130  38 30 31 35 31 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |801519\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 08:27:16.398: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Apr 15 08:27:16.399: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
      ResourceVersion: (string) (len=6) "218862",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "64f805ed-4159-4a87-ad9b-517733801519",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 34 66 38 30 35  65 64 2d 34 31 35 39 2d  |\"64f805ed-4159-|
              00000120  34 61 38 37 2d 61 64 39  62 2d 35 31 37 37 33 33  |4a87-ad9b-517733|
              00000130  38 30 31 35 31 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |801519\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 08:27:16.420: INFO: Pod "webserver-deployment-557759b7c7-4xpl9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4xpl9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3977a4f-6c6d-45db-8731-5634276ffe5a",
      ResourceVersion: (string) (len=6) "218873",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766436,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  64 38 66 34 66 33 2d 63  |d\":\"a2d8f4f3-c|
              00000090  35 38 63 2d 34 33 62 39  2d 38 38 36 31 2d 61 31  |58c-43b9-8861-a1|
              000000a0  36 35 32 62 37 31 38 34  66 38 5c 22 7d 22 3a 7b  |652b7184f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lx9c4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lx9c4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.423: INFO: Pod "webserver-deployment-557759b7c7-65c57" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-65c57",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d728aabc-2e90-4349-b801-33bdf56d3294",
      ResourceVersion: (string) (len=6) "218875",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766436,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  64 38 66 34 66 33 2d 63  |d\":\"a2d8f4f3-c|
              00000090  35 38 63 2d 34 33 62 39  2d 38 38 36 31 2d 61 31  |58c-43b9-8861-a1|
              000000a0  36 35 32 62 37 31 38 34  66 38 5c 22 7d 22 3a 7b  |652b7184f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rnkz4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rnkz4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.426: INFO: Pod "webserver-deployment-557759b7c7-cmdz9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cmdz9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f419a37d-9331-4ab0-98f9-b0455a31ab0f",
      ResourceVersion: (string) (len=6) "218866",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766436,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  64 38 66 34 66 33 2d 63  |d\":\"a2d8f4f3-c|
              00000090  35 38 63 2d 34 33 62 39  2d 38 38 36 31 2d 61 31  |58c-43b9-8861-a1|
              000000a0  36 35 32 62 37 31 38 34  66 38 5c 22 7d 22 3a 7b  |652b7184f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ff726",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ff726",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.438: INFO: Pod "webserver-deployment-557759b7c7-kwbfd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kwbfd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df6de853-8586-40ca-bc15-986a119bcc40",
      ResourceVersion: (string) (len=6) "218751",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  64 38 66 34 66 33 2d 63  |d\":\"a2d8f4f3-c|
              00000090  35 38 63 2d 34 33 62 39  2d 38 38 36 31 2d 61 31  |58c-43b9-8861-a1|
              000000a0  36 35 32 62 37 31 38 34  66 38 5c 22 7d 22 3a 7b  |652b7184f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 36 31 5c 22 7d 22 3a  |.233.65.161\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wgbnb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wgbnb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.233"
        }
      },
      PodIP: (string) (len=13) "10.233.65.161",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.161"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848766432,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://9d509c6e58d7dcff4f1cb0ae07385e0e59344fed6c16a6ad8d2a21566bcb99de",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.453: INFO: Pod "webserver-deployment-557759b7c7-kwdlm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kwdlm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf9bfccd-c08f-4fa4-9fc4-a3586af6a3ea",
      ResourceVersion: (string) (len=6) "218710",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  64 38 66 34 66 33 2d 63  |d\":\"a2d8f4f3-c|
              00000090  35 38 63 2d 34 33 62 39  2d 38 38 36 31 2d 61 31  |58c-43b9-8861-a1|
              000000a0  36 35 32 62 37 31 38 34  66 38 5c 22 7d 22 3a 7b  |652b7184f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 38 37 5c 22 7d 22 3a  |.233.66.187\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-whp9t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-whp9t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.84"
        }
      },
      PodIP: (string) (len=13) "10.233.66.187",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.187"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848766430,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://7a409ced9d458fe4cfd3f1bf55c73ce310777c12867deb32bc45d2be8bbb9f99",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.482: INFO: Pod "webserver-deployment-557759b7c7-mnkbn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mnkbn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3314bfa3-e10c-4df8-b6e7-8fd8f4c0b2df",
      ResourceVersion: (string) (len=6) "218872",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766436,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  64 38 66 34 66 33 2d 63  |d\":\"a2d8f4f3-c|
              00000090  35 38 63 2d 34 33 62 39  2d 38 38 36 31 2d 61 31  |58c-43b9-8861-a1|
              000000a0  36 35 32 62 37 31 38 34  66 38 5c 22 7d 22 3a 7b  |652b7184f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6nnjt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6nnjt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.489: INFO: Pod "webserver-deployment-557759b7c7-nwjrz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nwjrz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25717669-dcb2-4841-b5c4-8d24822cf486",
      ResourceVersion: (string) (len=6) "218737",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  64 38 66 34 66 33 2d 63  |d\":\"a2d8f4f3-c|
              00000090  35 38 63 2d 34 33 62 39  2d 38 38 36 31 2d 61 31  |58c-43b9-8861-a1|
              000000a0  36 35 32 62 37 31 38 34  66 38 5c 22 7d 22 3a 7b  |652b7184f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 39 30 5c 22 7d 22 3a  |.233.66.190\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mvssr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mvssr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.84"
        }
      },
      PodIP: (string) (len=13) "10.233.66.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848766431,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://69f7899168ae57d25f5a937522b2481ee4307a549945cc8a994ab0318a5b8c59",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.517: INFO: Pod "webserver-deployment-557759b7c7-qdf78" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qdf78",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d56d13df-d5f0-4390-9318-9ffd4cbbcb2f",
      ResourceVersion: (string) (len=6) "218754",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  64 38 66 34 66 33 2d 63  |d\":\"a2d8f4f3-c|
              00000090  35 38 63 2d 34 33 62 39  2d 38 38 36 31 2d 61 31  |58c-43b9-8861-a1|
              000000a0  36 35 32 62 37 31 38 34  66 38 5c 22 7d 22 3a 7b  |652b7184f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  32 31 31 5c 22 7d 22 3a  |.233.64.211\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rtm4h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rtm4h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.26"
        }
      },
      PodIP: (string) (len=13) "10.233.64.211",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.211"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848766432,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://0d2695ed88262cc2f93b58651315ccfd1820952fc4f9371b31832562b9c6b396",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.545: INFO: Pod "webserver-deployment-557759b7c7-s9klh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-s9klh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a246717-c6cf-4ab2-b3ba-06cdf267d6b4",
      ResourceVersion: (string) (len=6) "218760",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  64 38 66 34 66 33 2d 63  |d\":\"a2d8f4f3-c|
              00000090  35 38 63 2d 34 33 62 39  2d 38 38 36 31 2d 61 31  |58c-43b9-8861-a1|
              000000a0  36 35 32 62 37 31 38 34  66 38 5c 22 7d 22 3a 7b  |652b7184f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  32 31 30 5c 22 7d 22 3a  |.233.64.210\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2gzfn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2gzfn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.26"
        }
      },
      PodIP: (string) (len=13) "10.233.64.210",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.210"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848766432,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://88fc2d829b44a411b3dc4b13c260cf54a06b716b60104711ff5be6cb12694d56",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.558: INFO: Pod "webserver-deployment-557759b7c7-t9w2r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-t9w2r",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "757cf672-8770-4986-8ddf-63e4da362f66",
      ResourceVersion: (string) (len=6) "218729",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  64 38 66 34 66 33 2d 63  |d\":\"a2d8f4f3-c|
              00000090  35 38 63 2d 34 33 62 39  2d 38 38 36 31 2d 61 31  |58c-43b9-8861-a1|
              000000a0  36 35 32 62 37 31 38 34  66 38 5c 22 7d 22 3a 7b  |652b7184f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 36 30 5c 22 7d 22 3a  |.233.65.160\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bhznk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bhznk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.233"
        }
      },
      PodIP: (string) (len=13) "10.233.65.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848766431,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://88c19beaae6e5e8699c95a55ac147d2bc7fe468fad142dd4ff422f19b48b3964",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.574: INFO: Pod "webserver-deployment-557759b7c7-tpzrq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tpzrq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9888e38f-f9c9-40d3-8579-7ed2403e32f5",
      ResourceVersion: (string) (len=6) "218867",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766436,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  64 38 66 34 66 33 2d 63  |d\":\"a2d8f4f3-c|
              00000090  35 38 63 2d 34 33 62 39  2d 38 38 36 31 2d 61 31  |58c-43b9-8861-a1|
              000000a0  36 35 32 62 37 31 38 34  66 38 5c 22 7d 22 3a 7b  |652b7184f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cbrnk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cbrnk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.589: INFO: Pod "webserver-deployment-557759b7c7-vhrr5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vhrr5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9cb146b-d99a-4b28-b097-a9922b5bbfc2",
      ResourceVersion: (string) (len=6) "218756",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  64 38 66 34 66 33 2d 63  |d\":\"a2d8f4f3-c|
              00000090  35 38 63 2d 34 33 62 39  2d 38 38 36 31 2d 61 31  |58c-43b9-8861-a1|
              000000a0  36 35 32 62 37 31 38 34  66 38 5c 22 7d 22 3a 7b  |652b7184f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  32 30 39 5c 22 7d 22 3a  |.233.64.209\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k9wmz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k9wmz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.26"
        }
      },
      PodIP: (string) (len=13) "10.233.64.209",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.209"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848766432,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://805c597d05d2558eb98b7ef24f9bd127352ab21399ce003468e460c3c101ad4d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.606: INFO: Pod "webserver-deployment-557759b7c7-vwgpc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vwgpc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69faa0c1-a6a8-45a7-a6bf-f5f44adc9b61",
      ResourceVersion: (string) (len=6) "218726",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a2d8f4f3-c58c-43b9-8861-a1652b7184f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  64 38 66 34 66 33 2d 63  |d\":\"a2d8f4f3-c|
              00000090  35 38 63 2d 34 33 62 39  2d 38 38 36 31 2d 61 31  |58c-43b9-8861-a1|
              000000a0  36 35 32 62 37 31 38 34  66 38 5c 22 7d 22 3a 7b  |652b7184f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 35 39 5c 22 7d 22 3a  |.233.65.159\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5hlrc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5hlrc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.233"
        }
      },
      PodIP: (string) (len=13) "10.233.65.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766430,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848766431,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://c5d24bfc038ec62d6011b4ca51b0450660f5dbf6cb6ba4f2a38e24e93626f017",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.619: INFO: Pod "webserver-deployment-9b4f5bf69-4t48t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4t48t",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b01ab280-3193-4761-8373-fe490f07e159",
      ResourceVersion: (string) (len=6) "218813",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "3795153d-0630-4bc5-b0fd-2abbf77cbfb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  39 35 31 35 33 64 2d 30  |d\":\"3795153d-0|
              00000090  36 33 30 2d 34 62 63 35  2d 62 30 66 64 2d 32 61  |630-4bc5-b0fd-2a|
              000000a0  62 62 66 37 37 63 62 66  62 37 5c 22 7d 22 3a 7b  |bbf77cbfb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nt695",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nt695",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.233"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.632: INFO: Pod "webserver-deployment-9b4f5bf69-h8pkh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-h8pkh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "005d03ee-a5ab-4996-9a06-4ec4e9529a0c",
      ResourceVersion: (string) (len=6) "218803",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "3795153d-0630-4bc5-b0fd-2abbf77cbfb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  39 35 31 35 33 64 2d 30  |d\":\"3795153d-0|
              00000090  36 33 30 2d 34 62 63 35  2d 62 30 66 64 2d 32 61  |630-4bc5-b0fd-2a|
              000000a0  62 62 66 37 37 63 62 66  62 37 5c 22 7d 22 3a 7b  |bbf77cbfb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gqh25",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gqh25",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.84"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.653: INFO: Pod "webserver-deployment-9b4f5bf69-hhlxz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hhlxz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d080fc0a-fc66-477e-a82c-9db59525deb1",
      ResourceVersion: (string) (len=6) "218790",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "3795153d-0630-4bc5-b0fd-2abbf77cbfb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  39 35 31 35 33 64 2d 30  |d\":\"3795153d-0|
              00000090  36 33 30 2d 34 62 63 35  2d 62 30 66 64 2d 32 61  |630-4bc5-b0fd-2a|
              000000a0  62 62 66 37 37 63 62 66  62 37 5c 22 7d 22 3a 7b  |bbf77cbfb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g4p24",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g4p24",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.233"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.671: INFO: Pod "webserver-deployment-9b4f5bf69-pzh8s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pzh8s",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9aa5bb25-4637-4369-8421-175a99902444",
      ResourceVersion: (string) (len=6) "218817",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "3795153d-0630-4bc5-b0fd-2abbf77cbfb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  39 35 31 35 33 64 2d 30  |d\":\"3795153d-0|
              00000090  36 33 30 2d 34 62 63 35  2d 62 30 66 64 2d 32 61  |630-4bc5-b0fd-2a|
              000000a0  62 62 66 37 37 63 62 66  62 37 5c 22 7d 22 3a 7b  |bbf77cbfb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lrwsl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lrwsl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.84"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.688: INFO: Pod "webserver-deployment-9b4f5bf69-qgp2n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qgp2n",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5aefa831-5711-4a37-ba7f-342433358818",
      ResourceVersion: (string) (len=6) "218876",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766436,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "3795153d-0630-4bc5-b0fd-2abbf77cbfb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  39 35 31 35 33 64 2d 30  |d\":\"3795153d-0|
              00000090  36 33 30 2d 34 62 63 35  2d 62 30 66 64 2d 32 61  |630-4bc5-b0fd-2a|
              000000a0  62 62 66 37 37 63 62 66  62 37 5c 22 7d 22 3a 7b  |bbf77cbfb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b9qtp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b9qtp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.703: INFO: Pod "webserver-deployment-9b4f5bf69-sk9f7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-sk9f7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8add78e1-c1fe-4b0c-b2fb-71c64278b5d4",
      ResourceVersion: (string) (len=6) "218798",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "3795153d-0630-4bc5-b0fd-2abbf77cbfb7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  39 35 31 35 33 64 2d 30  |d\":\"3795153d-0|
              00000090  36 33 30 2d 34 62 63 35  2d 62 30 66 64 2d 32 61  |630-4bc5-b0fd-2a|
              000000a0  62 62 66 37 37 63 62 66  62 37 5c 22 7d 22 3a 7b  |bbf77cbfb7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5jtxw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5jtxw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848766434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.26"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848766434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:27:16.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4898" for this suite. @ 04/15/24 08:27:16.744
• [6.876 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 04/15/24 08:27:16.868
  Apr 15 08:27:16.868: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:27:16.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:27:17.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:27:17.09
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:27:17.098
  STEP: Saw pod success @ 04/15/24 08:27:21.329
  Apr 15 08:27:21.339: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-ee94f64b-4ae4-4d9a-9d3c-c99c0b4008ca container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:27:21.402
  Apr 15 08:27:21.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3009" for this suite. @ 04/15/24 08:27:21.453
• [4.609 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/15/24 08:27:21.477
  Apr 15 08:27:21.477: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:27:21.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:27:21.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:27:21.521
  STEP: creating pod @ 04/15/24 08:27:21.526
  Apr 15 08:27:25.605: INFO: Pod pod-hostip-63781c8c-a29b-4ae5-b11c-3c68cc1c0e7a has hostIP: 192.168.121.84
  Apr 15 08:27:25.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1070" for this suite. @ 04/15/24 08:27:25.628
• [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 04/15/24 08:27:25.647
  Apr 15 08:27:25.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:27:25.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:27:25.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:27:25.694
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/15/24 08:27:25.702
  Apr 15 08:27:25.702: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-4644 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Apr 15 08:27:25.914: INFO: stderr: ""
  Apr 15 08:27:25.920: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/15/24 08:27:25.926
  Apr 15 08:27:25.936: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-4644 delete pods e2e-test-httpd-pod'
  Apr 15 08:27:27.664: INFO: stderr: ""
  Apr 15 08:27:27.664: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 15 08:27:27.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4644" for this suite. @ 04/15/24 08:27:27.678
• [2.046 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 04/15/24 08:27:27.694
  Apr 15 08:27:27.694: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename secrets @ 04/15/24 08:27:27.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:27:27.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:27:27.745
  STEP: Creating projection with secret that has name secret-emptykey-test-cb516331-40ed-4c7c-a800-1906ede66e2f @ 04/15/24 08:27:27.752
  Apr 15 08:27:27.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5852" for this suite. @ 04/15/24 08:27:27.767
• [0.087 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/15/24 08:27:27.783
  Apr 15 08:27:27.783: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename subpath @ 04/15/24 08:27:27.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:27:27.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:27:27.831
  STEP: Setting up data @ 04/15/24 08:27:27.839
  STEP: Creating pod pod-subpath-test-projected-zbjh @ 04/15/24 08:27:27.859
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 08:27:27.859
  STEP: Saw pod success @ 04/15/24 08:27:51.996
  Apr 15 08:27:52.005: INFO: Trying to get logs from node eehaephong4y-3 pod pod-subpath-test-projected-zbjh container test-container-subpath-projected-zbjh: <nil>
  STEP: delete the pod @ 04/15/24 08:27:52.021
  STEP: Deleting pod pod-subpath-test-projected-zbjh @ 04/15/24 08:27:52.053
  Apr 15 08:27:52.054: INFO: Deleting pod "pod-subpath-test-projected-zbjh" in namespace "subpath-3287"
  Apr 15 08:27:52.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3287" for this suite. @ 04/15/24 08:27:52.072
• [24.304 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/15/24 08:27:52.087
  Apr 15 08:27:52.087: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:27:52.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:27:52.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:27:52.131
  Apr 15 08:27:52.138: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: creating the pod @ 04/15/24 08:27:52.142
  STEP: submitting the pod to kubernetes @ 04/15/24 08:27:52.142
  Apr 15 08:27:54.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5555" for this suite. @ 04/15/24 08:27:54.305
• [2.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 04/15/24 08:27:54.332
  Apr 15 08:27:54.332: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 08:27:54.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:27:54.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:27:54.377
  STEP: Creating simple DaemonSet "daemon-set" @ 04/15/24 08:27:54.454
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 08:27:54.468
  Apr 15 08:27:54.495: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:27:54.496: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  Apr 15 08:27:55.490: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 08:27:55.490: INFO: Node eehaephong4y-2 is running 0 daemon pod, expected 1
  Apr 15 08:27:56.490: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 08:27:56.490: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 04/15/24 08:27:56.497
  Apr 15 08:27:56.507: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/15/24 08:27:56.507
  Apr 15 08:27:56.529: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/15/24 08:27:56.529
  Apr 15 08:27:56.534: INFO: Observed &DaemonSet event: ADDED
  Apr 15 08:27:56.536: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:27:56.537: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:27:56.541: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:27:56.542: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:27:56.543: INFO: Found daemon set daemon-set in namespace daemonsets-3672 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 15 08:27:56.543: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/15/24 08:27:56.544
  STEP: watching for the daemon set status to be patched @ 04/15/24 08:27:56.558
  Apr 15 08:27:56.563: INFO: Observed &DaemonSet event: ADDED
  Apr 15 08:27:56.564: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:27:56.564: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:27:56.565: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:27:56.565: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:27:56.565: INFO: Observed daemon set daemon-set in namespace daemonsets-3672 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 15 08:27:56.566: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 08:27:56.566: INFO: Found daemon set daemon-set in namespace daemonsets-3672 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Apr 15 08:27:56.566: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 08:27:56.576
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3672, will wait for the garbage collector to delete the pods @ 04/15/24 08:27:56.576
  Apr 15 08:27:56.644: INFO: Deleting DaemonSet.extensions daemon-set took: 10.855278ms
  Apr 15 08:27:56.746: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.427633ms
  Apr 15 08:27:58.454: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:27:58.454: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 08:27:58.463: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"219387"},"items":null}

  Apr 15 08:27:58.469: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"219387"},"items":null}

  Apr 15 08:27:58.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3672" for this suite. @ 04/15/24 08:27:58.516
• [4.199 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 04/15/24 08:27:58.535
  Apr 15 08:27:58.535: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 08:27:58.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:27:58.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:27:58.58
  STEP: Creating a pod to test substitution in volume subpath @ 04/15/24 08:27:58.587
  STEP: Saw pod success @ 04/15/24 08:28:02.635
  Apr 15 08:28:02.642: INFO: Trying to get logs from node eehaephong4y-3 pod var-expansion-3ac2af7e-9180-41ca-b5cd-53d891ef1c8d container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 08:28:02.656
  Apr 15 08:28:02.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-154" for this suite. @ 04/15/24 08:28:02.691
• [4.174 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/15/24 08:28:02.711
  Apr 15 08:28:02.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:28:02.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:28:02.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:28:02.775
  STEP: Saw pod success @ 04/15/24 08:28:08.92
  Apr 15 08:28:08.926: INFO: Trying to get logs from node eehaephong4y-3 pod client-envvars-93d555ce-7251-494f-954c-6c18cbf171b8 container env3cont: <nil>
  STEP: delete the pod @ 04/15/24 08:28:08.943
  Apr 15 08:28:08.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8356" for this suite. @ 04/15/24 08:28:08.986
• [6.287 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 04/15/24 08:28:09.003
  Apr 15 08:28:09.003: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 08:28:09.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:28:09.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:28:09.043
  STEP: Creating configMap with name configmap-test-volume-map-677154e4-2edb-4c8a-b27f-999526dcde41 @ 04/15/24 08:28:09.048
  STEP: Creating a pod to test consume configMaps @ 04/15/24 08:28:09.058
  STEP: Saw pod success @ 04/15/24 08:28:11.094
  Apr 15 08:28:11.102: INFO: Trying to get logs from node eehaephong4y-3 pod pod-configmaps-6393b848-faa2-49f3-a110-b9f8b35ae7d8 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 08:28:11.114
  Apr 15 08:28:11.152: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8088" for this suite. @ 04/15/24 08:28:11.164
• [2.174 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 04/15/24 08:28:11.178
  Apr 15 08:28:11.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename gc @ 04/15/24 08:28:11.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:28:11.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:28:11.219
  STEP: create the deployment @ 04/15/24 08:28:11.226
  W0415 08:28:11.239881      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/15/24 08:28:11.24
  STEP: delete the deployment @ 04/15/24 08:28:11.77
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/15/24 08:28:11.825
  STEP: Gathering metrics @ 04/15/24 08:28:12.356
  Apr 15 08:28:12.625: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 08:28:12.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3941" for this suite. @ 04/15/24 08:28:12.634
• [1.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/15/24 08:28:12.652
  Apr 15 08:28:12.653: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename proxy @ 04/15/24 08:28:12.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:28:12.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:28:12.696
  Apr 15 08:28:12.700: INFO: Creating pod...
  Apr 15 08:28:14.757: INFO: Creating service...
  Apr 15 08:28:14.776: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/pods/agnhost/proxy?method=DELETE
  Apr 15 08:28:14.788: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 15 08:28:14.788: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/pods/agnhost/proxy?method=OPTIONS
  Apr 15 08:28:14.794: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 15 08:28:14.794: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/pods/agnhost/proxy?method=PATCH
  Apr 15 08:28:14.801: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 15 08:28:14.801: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/pods/agnhost/proxy?method=POST
  Apr 15 08:28:14.807: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 15 08:28:14.807: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/pods/agnhost/proxy?method=PUT
  Apr 15 08:28:14.812: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 15 08:28:14.813: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/services/e2e-proxy-test-service/proxy?method=DELETE
  Apr 15 08:28:14.828: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 15 08:28:14.828: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Apr 15 08:28:14.843: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 15 08:28:14.845: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/services/e2e-proxy-test-service/proxy?method=PATCH
  Apr 15 08:28:14.857: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 15 08:28:14.857: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/services/e2e-proxy-test-service/proxy?method=POST
  Apr 15 08:28:14.933: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 15 08:28:14.933: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/services/e2e-proxy-test-service/proxy?method=PUT
  Apr 15 08:28:14.949: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 15 08:28:14.949: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/pods/agnhost/proxy?method=GET
  Apr 15 08:28:14.955: INFO: http.Client request:GET StatusCode:301
  Apr 15 08:28:14.955: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/services/e2e-proxy-test-service/proxy?method=GET
  Apr 15 08:28:14.974: INFO: http.Client request:GET StatusCode:301
  Apr 15 08:28:14.974: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/pods/agnhost/proxy?method=HEAD
  Apr 15 08:28:14.985: INFO: http.Client request:HEAD StatusCode:301
  Apr 15 08:28:14.985: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-3438/services/e2e-proxy-test-service/proxy?method=HEAD
  Apr 15 08:28:14.994: INFO: http.Client request:HEAD StatusCode:301
  Apr 15 08:28:14.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3438" for this suite. @ 04/15/24 08:28:15.007
• [2.376 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 04/15/24 08:28:15.029
  Apr 15 08:28:15.029: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename security-context-test @ 04/15/24 08:28:15.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:28:15.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:28:15.071
  Apr 15 08:28:17.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-291" for this suite. @ 04/15/24 08:28:17.121
• [2.104 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/15/24 08:28:17.133
  Apr 15 08:28:17.133: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename subpath @ 04/15/24 08:28:17.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:28:17.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:28:17.187
  STEP: Setting up data @ 04/15/24 08:28:17.196
  STEP: Creating pod pod-subpath-test-downwardapi-gbbz @ 04/15/24 08:28:17.216
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 08:28:17.217
  STEP: Saw pod success @ 04/15/24 08:28:41.415
  Apr 15 08:28:41.424: INFO: Trying to get logs from node eehaephong4y-3 pod pod-subpath-test-downwardapi-gbbz container test-container-subpath-downwardapi-gbbz: <nil>
  STEP: delete the pod @ 04/15/24 08:28:41.447
  STEP: Deleting pod pod-subpath-test-downwardapi-gbbz @ 04/15/24 08:28:41.479
  Apr 15 08:28:41.479: INFO: Deleting pod "pod-subpath-test-downwardapi-gbbz" in namespace "subpath-429"
  Apr 15 08:28:41.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-429" for this suite. @ 04/15/24 08:28:41.499
• [24.384 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/15/24 08:28:41.523
  Apr 15 08:28:41.523: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename tables @ 04/15/24 08:28:41.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:28:41.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:28:41.576
  Apr 15 08:28:41.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-676" for this suite. @ 04/15/24 08:28:41.602
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 04/15/24 08:28:41.622
  Apr 15 08:28:41.622: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename sched-preemption @ 04/15/24 08:28:41.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:28:41.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:28:41.667
  Apr 15 08:28:41.716: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 15 08:29:41.730: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/15/24 08:29:41.74
  Apr 15 08:29:41.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/15/24 08:29:41.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:29:41.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:29:41.79
  STEP: Finding an available node @ 04/15/24 08:29:41.796
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/15/24 08:29:41.797
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/15/24 08:29:43.844
  Apr 15 08:29:43.868: INFO: found a healthy node: eehaephong4y-3
  Apr 15 08:29:50.012: INFO: pods created so far: [1 1 1]
  Apr 15 08:29:50.012: INFO: length of pods created so far: 3
  Apr 15 08:29:52.035: INFO: pods created so far: [2 2 1]
  Apr 15 08:29:59.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2956" for this suite. @ 04/15/24 08:29:59.372
  Apr 15 08:29:59.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8124" for this suite. @ 04/15/24 08:29:59.404
• [77.792 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 04/15/24 08:29:59.416
  Apr 15 08:29:59.416: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 08:29:59.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:29:59.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:29:59.465
  Apr 15 08:29:59.472: INFO: Creating ReplicaSet my-hostname-basic-06374c06-8c73-4134-b260-5743f3f95af9
  Apr 15 08:29:59.487: INFO: Pod name my-hostname-basic-06374c06-8c73-4134-b260-5743f3f95af9: Found 0 pods out of 1
  Apr 15 08:30:04.497: INFO: Pod name my-hostname-basic-06374c06-8c73-4134-b260-5743f3f95af9: Found 1 pods out of 1
  Apr 15 08:30:04.497: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-06374c06-8c73-4134-b260-5743f3f95af9" is running
  Apr 15 08:30:04.504: INFO: Pod "my-hostname-basic-06374c06-8c73-4134-b260-5743f3f95af9-nvdc8" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 08:30:00 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 08:29:59 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 08:30:00 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 08:30:00 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 08:29:59 +0000 UTC Reason: Message:}])
  Apr 15 08:30:04.507: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/15/24 08:30:04.508
  Apr 15 08:30:15.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9623" for this suite. @ 04/15/24 08:30:15.789
• [16.389 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 04/15/24 08:30:15.81
  Apr 15 08:30:15.810: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 08:30:15.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:30:15.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:30:15.872
  STEP: Counting existing ResourceQuota @ 04/15/24 08:30:15.88
  STEP: Creating a ResourceQuota @ 04/15/24 08:30:20.89
  STEP: Ensuring resource quota status is calculated @ 04/15/24 08:30:20.907
  STEP: Creating a Pod that fits quota @ 04/15/24 08:30:22.915
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/15/24 08:30:22.961
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/15/24 08:30:24.97
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/15/24 08:30:24.977
  STEP: Ensuring a pod cannot update its resource requirements @ 04/15/24 08:30:24.981
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/15/24 08:30:24.993
  STEP: Deleting the pod @ 04/15/24 08:30:27.01
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 08:30:27.066
  Apr 15 08:30:29.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7960" for this suite. @ 04/15/24 08:30:29.096
• [13.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 04/15/24 08:30:29.117
  Apr 15 08:30:29.118: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:30:29.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:30:29.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:30:29.176
  STEP: starting the proxy server @ 04/15/24 08:30:29.183
  Apr 15 08:30:29.184: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3455 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/15/24 08:30:29.32
  Apr 15 08:30:29.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3455" for this suite. @ 04/15/24 08:30:29.371
• [0.270 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 04/15/24 08:30:29.388
  Apr 15 08:30:29.388: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pod-network-test @ 04/15/24 08:30:29.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:30:29.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:30:29.436
  STEP: Performing setup for networking test in namespace pod-network-test-563 @ 04/15/24 08:30:29.443
  STEP: creating a selector @ 04/15/24 08:30:29.443
  STEP: Creating the service pods in kubernetes @ 04/15/24 08:30:29.443
  Apr 15 08:30:29.443: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/15/24 08:30:51.732
  Apr 15 08:30:53.832: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 15 08:30:53.832: INFO: Going to poll 10.233.64.218 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 08:30:53.836: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.218 8081 | grep -v '^\s*$'] Namespace:pod-network-test-563 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:30:53.837: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:30:53.840: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:30:53.841: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-563/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.218+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 08:30:55.000: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 15 08:30:55.000: INFO: Going to poll 10.233.65.168 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 08:30:55.008: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.168 8081 | grep -v '^\s*$'] Namespace:pod-network-test-563 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:30:55.008: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:30:55.011: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:30:55.012: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-563/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.168+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 08:30:56.151: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 15 08:30:56.152: INFO: Going to poll 10.233.66.217 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 08:30:56.160: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.217 8081 | grep -v '^\s*$'] Namespace:pod-network-test-563 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:30:56.160: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:30:56.163: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:30:56.164: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-563/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.217+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 08:30:57.283: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 15 08:30:57.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-563" for this suite. @ 04/15/24 08:30:57.296
• [27.924 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 04/15/24 08:30:57.312
  Apr 15 08:30:57.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 08:30:57.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:30:57.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:30:57.398
  STEP: creating the pod with failed condition @ 04/15/24 08:30:57.407
  STEP: updating the pod @ 04/15/24 08:32:57.429
  Apr 15 08:32:57.966: INFO: Successfully updated pod "var-expansion-353f73d0-1b9c-4f94-9927-fad815a67c24"
  STEP: waiting for pod running @ 04/15/24 08:32:57.967
  STEP: deleting the pod gracefully @ 04/15/24 08:32:59.985
  Apr 15 08:32:59.986: INFO: Deleting pod "var-expansion-353f73d0-1b9c-4f94-9927-fad815a67c24" in namespace "var-expansion-9229"
  Apr 15 08:33:00.010: INFO: Wait up to 5m0s for pod "var-expansion-353f73d0-1b9c-4f94-9927-fad815a67c24" to be fully deleted
  Apr 15 08:33:32.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9229" for this suite. @ 04/15/24 08:33:32.222
• [154.928 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 04/15/24 08:33:32.247
  Apr 15 08:33:32.247: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 08:33:32.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:33:32.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:33:32.305
  STEP: reading a file in the container @ 04/15/24 08:33:34.387
  Apr 15 08:33:34.388: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7531 pod-service-account-d8b1279c-7752-4e3d-858c-91dcefdd4183 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 04/15/24 08:33:34.742
  Apr 15 08:33:34.743: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7531 pod-service-account-d8b1279c-7752-4e3d-858c-91dcefdd4183 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/15/24 08:33:35.106
  Apr 15 08:33:35.106: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7531 pod-service-account-d8b1279c-7752-4e3d-858c-91dcefdd4183 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Apr 15 08:33:35.422: INFO: Got root ca configmap in namespace "svcaccounts-7531"
  Apr 15 08:33:35.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7531" for this suite. @ 04/15/24 08:33:35.44
• [3.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 04/15/24 08:33:35.456
  Apr 15 08:33:35.456: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 08:33:35.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:33:35.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:33:35.509
  STEP: Creating configMap with name configmap-test-upd-bd5dc079-d058-4ad6-a353-b182c21b67e9 @ 04/15/24 08:33:35.526
  STEP: Creating the pod @ 04/15/24 08:33:35.537
  STEP: Waiting for pod with text data @ 04/15/24 08:33:37.581
  STEP: Waiting for pod with binary data @ 04/15/24 08:33:37.635
  Apr 15 08:33:37.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7543" for this suite. @ 04/15/24 08:33:37.673
• [2.238 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 04/15/24 08:33:37.697
  Apr 15 08:33:37.697: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename sched-pred @ 04/15/24 08:33:37.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:33:37.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:33:37.751
  Apr 15 08:33:37.759: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 15 08:33:37.791: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 08:33:37.805: INFO: 
  Logging pods the apiserver thinks is on node eehaephong4y-1 before test
  Apr 15 08:33:37.839: INFO: coredns-76f75df574-nft85 from kube-system started at 2024-04-15 07:36:17 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.840: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 08:33:37.840: INFO: kube-addon-manager-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.841: INFO: 	Container kube-addon-manager ready: true, restart count 6
  Apr 15 08:33:37.842: INFO: kube-apiserver-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.842: INFO: 	Container kube-apiserver ready: true, restart count 6
  Apr 15 08:33:37.843: INFO: kube-controller-manager-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.843: INFO: 	Container kube-controller-manager ready: true, restart count 6
  Apr 15 08:33:37.843: INFO: kube-flannel-ds-567cz from kube-system started at 2024-04-15 07:36:20 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.844: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 08:33:37.844: INFO: kube-proxy-w6l7t from kube-system started at 2024-04-15 07:36:18 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.844: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 08:33:37.844: INFO: kube-scheduler-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.845: INFO: 	Container kube-scheduler ready: true, restart count 6
  Apr 15 08:33:37.845: INFO: sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-8vjkh from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 08:33:37.845: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:33:37.846: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 08:33:37.846: INFO: 
  Logging pods the apiserver thinks is on node eehaephong4y-2 before test
  Apr 15 08:33:37.866: INFO: coredns-76f75df574-wtmjp from kube-system started at 2024-04-15 08:15:51 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.866: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 08:33:37.866: INFO: kube-addon-manager-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.867: INFO: 	Container kube-addon-manager ready: true, restart count 6
  Apr 15 08:33:37.867: INFO: kube-apiserver-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.867: INFO: 	Container kube-apiserver ready: true, restart count 6
  Apr 15 08:33:37.868: INFO: kube-controller-manager-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.868: INFO: 	Container kube-controller-manager ready: true, restart count 6
  Apr 15 08:33:37.868: INFO: kube-flannel-ds-hbsdj from kube-system started at 2024-04-15 07:36:20 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.868: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 08:33:37.869: INFO: kube-proxy-gt6dv from kube-system started at 2024-04-15 07:36:18 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.869: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 08:33:37.869: INFO: kube-scheduler-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.869: INFO: 	Container kube-scheduler ready: true, restart count 6
  Apr 15 08:33:37.870: INFO: sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-rcjkl from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 08:33:37.870: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:33:37.870: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 08:33:37.871: INFO: 
  Logging pods the apiserver thinks is on node eehaephong4y-3 before test
  Apr 15 08:33:37.897: INFO: pod-configmaps-e79d9a4b-04e0-4f61-bde6-c196111a35da from configmap-7543 started at 2024-04-15 08:33:35 +0000 UTC (2 container statuses recorded)
  Apr 15 08:33:37.897: INFO: 	Container agnhost-container ready: true, restart count 0
  Apr 15 08:33:37.898: INFO: 	Container configmap-volume-binary-test ready: false, restart count 0
  Apr 15 08:33:37.898: INFO: kube-flannel-ds-cvbzz from kube-system started at 2024-04-15 08:16:16 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.899: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 08:33:37.899: INFO: kube-proxy-27pwt from kube-system started at 2024-04-15 07:36:18 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.899: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 08:33:37.899: INFO: sonobuoy from sonobuoy started at 2024-04-15 07:36:43 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.900: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 15 08:33:37.900: INFO: sonobuoy-e2e-job-9c84e5eeb0144b9d from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 08:33:37.900: INFO: 	Container e2e ready: true, restart count 0
  Apr 15 08:33:37.901: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:33:37.901: INFO: sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-m2mlk from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 08:33:37.901: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:33:37.902: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 08:33:37.902: INFO: pod-service-account-d8b1279c-7752-4e3d-858c-91dcefdd4183 from svcaccounts-7531 started at 2024-04-15 08:33:32 +0000 UTC (1 container statuses recorded)
  Apr 15 08:33:37.902: INFO: 	Container test ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/15/24 08:33:37.903
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17c6670df91a8d34], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 04/15/24 08:33:37.983
  Apr 15 08:33:38.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1297" for this suite. @ 04/15/24 08:33:38.998
• [1.325 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 04/15/24 08:33:39.027
  Apr 15 08:33:39.027: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 08:33:39.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:33:39.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:33:39.094
  STEP: Creating a pod to test env composition @ 04/15/24 08:33:39.103
  STEP: Saw pod success @ 04/15/24 08:33:43.173
  Apr 15 08:33:43.181: INFO: Trying to get logs from node eehaephong4y-3 pod var-expansion-cadb5621-9e70-470c-b875-2fe0789c5abf container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 08:33:43.204
  Apr 15 08:33:43.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4594" for this suite. @ 04/15/24 08:33:43.256
• [4.278 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 04/15/24 08:33:43.305
  Apr 15 08:33:43.305: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 08:33:43.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:33:43.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:33:43.356
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/15/24 08:33:43.394
  Apr 15 08:33:43.399: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:33:45.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:33:53.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-832" for this suite. @ 04/15/24 08:33:53.723
• [10.437 seconds]
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/15/24 08:33:53.743
  Apr 15 08:33:53.743: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename prestop @ 04/15/24 08:33:53.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:33:53.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:33:53.799
  STEP: Creating server pod server in namespace prestop-9951 @ 04/15/24 08:33:53.806
  STEP: Waiting for pods to come up. @ 04/15/24 08:33:53.825
  STEP: Creating tester pod tester in namespace prestop-9951 @ 04/15/24 08:33:55.853
  STEP: Deleting pre-stop pod @ 04/15/24 08:33:57.892
  Apr 15 08:34:02.918: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 04/15/24 08:34:02.919
  Apr 15 08:34:02.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9951" for this suite. @ 04/15/24 08:34:02.973
• [9.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 04/15/24 08:34:02.992
  Apr 15 08:34:02.992: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 08:34:02.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:34:03.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:34:03.033
  Apr 15 08:34:03.037: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/15/24 08:34:05.132
  Apr 15 08:34:05.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-9508 --namespace=crd-publish-openapi-9508 create -f -'
  Apr 15 08:34:05.645: INFO: stderr: ""
  Apr 15 08:34:05.645: INFO: stdout: "e2e-test-crd-publish-openapi-4388-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 15 08:34:05.645: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-9508 --namespace=crd-publish-openapi-9508 delete e2e-test-crd-publish-openapi-4388-crds test-cr'
  Apr 15 08:34:05.831: INFO: stderr: ""
  Apr 15 08:34:05.831: INFO: stdout: "e2e-test-crd-publish-openapi-4388-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Apr 15 08:34:05.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-9508 --namespace=crd-publish-openapi-9508 apply -f -'
  Apr 15 08:34:06.030: INFO: stderr: ""
  Apr 15 08:34:06.030: INFO: stdout: "e2e-test-crd-publish-openapi-4388-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 15 08:34:06.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-9508 --namespace=crd-publish-openapi-9508 delete e2e-test-crd-publish-openapi-4388-crds test-cr'
  Apr 15 08:34:06.367: INFO: stderr: ""
  Apr 15 08:34:06.367: INFO: stdout: "e2e-test-crd-publish-openapi-4388-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/15/24 08:34:06.367
  Apr 15 08:34:06.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-9508 explain e2e-test-crd-publish-openapi-4388-crds'
  Apr 15 08:34:06.536: INFO: stderr: ""
  Apr 15 08:34:06.536: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-4388-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Apr 15 08:34:08.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9508" for this suite. @ 04/15/24 08:34:08.584
• [5.608 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 04/15/24 08:34:08.606
  Apr 15 08:34:08.606: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 08:34:08.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:34:08.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:34:08.644
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/15/24 08:34:08.65
  STEP: When a replicaset with a matching selector is created @ 04/15/24 08:34:12.707
  STEP: Then the orphan pod is adopted @ 04/15/24 08:34:12.72
  STEP: When the matched label of one of its pods change @ 04/15/24 08:34:13.735
  Apr 15 08:34:13.746: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/15/24 08:34:13.77
  Apr 15 08:34:14.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3630" for this suite. @ 04/15/24 08:34:14.807
• [6.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 04/15/24 08:34:14.821
  Apr 15 08:34:14.821: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:34:14.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:34:14.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:34:14.904
  STEP: Setting up server cert @ 04/15/24 08:34:14.968
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:34:15.993
  STEP: Deploying the webhook pod @ 04/15/24 08:34:16.017
  STEP: Wait for the deployment to be ready @ 04/15/24 08:34:16.046
  Apr 15 08:34:16.061: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/15/24 08:34:18.088
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:34:18.113
  Apr 15 08:34:19.114: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/15/24 08:34:19.128
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/15/24 08:34:19.172
  Apr 15 08:34:19.173: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:34:19.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6023" for this suite. @ 04/15/24 08:34:19.368
  STEP: Destroying namespace "webhook-markers-8758" for this suite. @ 04/15/24 08:34:19.402
• [4.595 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 04/15/24 08:34:19.417
  Apr 15 08:34:19.417: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 08:34:19.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:34:19.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:34:19.473
  STEP: Creating pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360 @ 04/15/24 08:34:19.479
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 08:34:21.512
  Apr 15 08:34:21.517: INFO: Initial restart count of pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 is 0
  Apr 15 08:34:21.523: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:23.531: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:25.542: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:27.554: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:29.564: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:31.571: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:33.580: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:35.593: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:37.604: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:39.615: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:41.628: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:43.641: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:45.651: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:47.665: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:49.678: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:51.699: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:53.709: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:55.726: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:57.737: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:34:59.750: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:35:01.763: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:35:03.789: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:35:05.801: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:35:07.814: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:35:09.827: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:35:11.846: INFO: Get pod busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 in namespace container-probe-5360
  Apr 15 08:35:11.846: INFO: Restart count of pod container-probe-5360/busybox-c34fe666-b875-4948-84ce-8eaaeeeee203 is now 1 (50.328756649s elapsed)
  STEP: deleting the pod @ 04/15/24 08:35:11.847
  Apr 15 08:35:11.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5360" for this suite. @ 04/15/24 08:35:11.921
• [52.526 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 04/15/24 08:35:11.956
  Apr 15 08:35:11.957: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename chunking @ 04/15/24 08:35:11.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:35:12.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:35:12.027
  STEP: creating a large number of resources @ 04/15/24 08:35:12.035
  STEP: retrieving the first page @ 04/15/24 08:35:29.679
  Apr 15 08:35:29.724: INFO: Retrieved 40/40 results with rv 221547 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 04/15/24 08:35:29.725
  Apr 15 08:35:49.743: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:36:09.754: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:36:29.740: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:36:49.741: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:37:09.763: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:37:29.742: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:37:49.740: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:38:09.784: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:38:29.745: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:38:49.740: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:39:09.745: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:39:29.744: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:39:49.750: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:40:09.742: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:40:29.736: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:40:49.740: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:41:09.736: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:41:29.740: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:41:49.746: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:42:09.739: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:42:29.739: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:42:49.742: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:43:09.743: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:43:29.739: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:43:49.739: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIxNTQ3LCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Apr 15 08:44:09.737: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Apr 15 08:44:09.737: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 04/15/24 08:44:09.737
  STEP: retrieving all remaining pages @ 04/15/24 08:44:09.75
  Apr 15 08:44:09.765: INFO: Retrieved 40/40 results with rv 222429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIyNDI5LCJzdGFydCI6InRlbXBsYXRlLTAxMTlcdTAwMDAifQ
  Apr 15 08:44:09.779: INFO: Retrieved 40/40 results with rv 222429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIyNDI5LCJzdGFydCI6InRlbXBsYXRlLTAxNTlcdTAwMDAifQ
  Apr 15 08:44:09.795: INFO: Retrieved 40/40 results with rv 222429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIyNDI5LCJzdGFydCI6InRlbXBsYXRlLTAxOTlcdTAwMDAifQ
  Apr 15 08:44:09.810: INFO: Retrieved 40/40 results with rv 222429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIyNDI5LCJzdGFydCI6InRlbXBsYXRlLTAyMzlcdTAwMDAifQ
  Apr 15 08:44:09.826: INFO: Retrieved 40/40 results with rv 222429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIyNDI5LCJzdGFydCI6InRlbXBsYXRlLTAyNzlcdTAwMDAifQ
  Apr 15 08:44:09.838: INFO: Retrieved 40/40 results with rv 222429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIyNDI5LCJzdGFydCI6InRlbXBsYXRlLTAzMTlcdTAwMDAifQ
  Apr 15 08:44:09.852: INFO: Retrieved 40/40 results with rv 222429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIyNDI5LCJzdGFydCI6InRlbXBsYXRlLTAzNTlcdTAwMDAifQ
  Apr 15 08:44:09.869: INFO: Retrieved 40/40 results with rv 222429 and continue 
  Apr 15 08:44:09.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7832" for this suite. @ 04/15/24 08:44:09.888
• [537.953 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 04/15/24 08:44:09.918
  Apr 15 08:44:09.919: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename job @ 04/15/24 08:44:09.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:44:09.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:44:09.977
  STEP: Creating a job @ 04/15/24 08:44:09.988
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/15/24 08:44:10.007
  STEP: patching /status @ 04/15/24 08:44:12.02
  STEP: updating /status @ 04/15/24 08:44:12.049
  STEP: get /status @ 04/15/24 08:44:12.073
  Apr 15 08:44:12.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8226" for this suite. @ 04/15/24 08:44:12.102
• [2.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 04/15/24 08:44:12.13
  Apr 15 08:44:12.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl-logs @ 04/15/24 08:44:12.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:44:12.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:44:12.185
  STEP: creating an pod @ 04/15/24 08:44:12.194
  Apr 15 08:44:12.195: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-logs-9675 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Apr 15 08:44:12.442: INFO: stderr: ""
  Apr 15 08:44:12.442: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/15/24 08:44:12.442
  Apr 15 08:44:12.442: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Apr 15 08:44:14.467: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/15/24 08:44:14.467
  Apr 15 08:44:14.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-logs-9675 logs logs-generator logs-generator'
  Apr 15 08:44:14.696: INFO: stderr: ""
  Apr 15 08:44:14.696: INFO: stdout: "I0415 08:44:13.265673       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/rzn 499\nI0415 08:44:13.462948       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/q2n 502\nI0415 08:44:13.662220       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/mxxm 578\nI0415 08:44:13.862945       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/fv2 508\nI0415 08:44:14.063154       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/t8lz 451\nI0415 08:44:14.262782       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/d22 336\nI0415 08:44:14.462307       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/jwxx 408\nI0415 08:44:14.662716       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/rqsc 561\n"
  STEP: limiting log lines @ 04/15/24 08:44:14.696
  Apr 15 08:44:14.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-logs-9675 logs logs-generator logs-generator --tail=1'
  Apr 15 08:44:14.956: INFO: stderr: ""
  Apr 15 08:44:14.956: INFO: stdout: "I0415 08:44:14.864974       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/c4qp 406\n"
  Apr 15 08:44:14.956: INFO: got output "I0415 08:44:14.864974       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/c4qp 406\n"
  STEP: limiting log bytes @ 04/15/24 08:44:14.956
  Apr 15 08:44:14.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-logs-9675 logs logs-generator logs-generator --limit-bytes=1'
  Apr 15 08:44:15.272: INFO: stderr: ""
  Apr 15 08:44:15.272: INFO: stdout: "I"
  Apr 15 08:44:15.272: INFO: got output "I"
  STEP: exposing timestamps @ 04/15/24 08:44:15.272
  Apr 15 08:44:15.285: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-logs-9675 logs logs-generator logs-generator --tail=1 --timestamps'
  Apr 15 08:44:15.541: INFO: stderr: ""
  Apr 15 08:44:15.541: INFO: stdout: "2024-04-15T08:44:15.462896493Z I0415 08:44:15.462767       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/q6ff 538\n"
  Apr 15 08:44:15.541: INFO: got output "2024-04-15T08:44:15.462896493Z I0415 08:44:15.462767       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/q6ff 538\n"
  STEP: restricting to a time range @ 04/15/24 08:44:15.541
  Apr 15 08:44:18.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-logs-9675 logs logs-generator logs-generator --since=1s'
  Apr 15 08:44:18.428: INFO: stderr: ""
  Apr 15 08:44:18.428: INFO: stdout: "I0415 08:44:17.462738       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/lrj 536\nI0415 08:44:17.662151       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/g47d 568\nI0415 08:44:17.862325       1 logs_generator.go:76] 23 GET /api/v1/namespaces/ns/pods/plg 364\nI0415 08:44:18.068488       1 logs_generator.go:76] 24 POST /api/v1/namespaces/ns/pods/dg2t 573\nI0415 08:44:18.263562       1 logs_generator.go:76] 25 PUT /api/v1/namespaces/ns/pods/rjf2 507\n"
  Apr 15 08:44:18.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-logs-9675 logs logs-generator logs-generator --since=24h'
  Apr 15 08:44:18.710: INFO: stderr: ""
  Apr 15 08:44:18.710: INFO: stdout: "I0415 08:44:13.265673       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/rzn 499\nI0415 08:44:13.462948       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/q2n 502\nI0415 08:44:13.662220       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/mxxm 578\nI0415 08:44:13.862945       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/fv2 508\nI0415 08:44:14.063154       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/t8lz 451\nI0415 08:44:14.262782       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/d22 336\nI0415 08:44:14.462307       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/jwxx 408\nI0415 08:44:14.662716       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/rqsc 561\nI0415 08:44:14.864974       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/c4qp 406\nI0415 08:44:15.062211       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/v5hv 419\nI0415 08:44:15.262934       1 logs_generator.go:76] 10 GET /api/v1/namespaces/default/pods/llqp 593\nI0415 08:44:15.462767       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/q6ff 538\nI0415 08:44:15.662224       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/rh4 439\nI0415 08:44:15.862613       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/28s 573\nI0415 08:44:16.063158       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/rcxz 209\nI0415 08:44:16.262731       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/2fb 552\nI0415 08:44:16.463121       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/6xd 430\nI0415 08:44:16.662773       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/f6jk 264\nI0415 08:44:16.862808       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/4kz 300\nI0415 08:44:17.062858       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/tvm5 516\nI0415 08:44:17.262294       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/p8jf 332\nI0415 08:44:17.462738       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/lrj 536\nI0415 08:44:17.662151       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/g47d 568\nI0415 08:44:17.862325       1 logs_generator.go:76] 23 GET /api/v1/namespaces/ns/pods/plg 364\nI0415 08:44:18.068488       1 logs_generator.go:76] 24 POST /api/v1/namespaces/ns/pods/dg2t 573\nI0415 08:44:18.263562       1 logs_generator.go:76] 25 PUT /api/v1/namespaces/ns/pods/rjf2 507\nI0415 08:44:18.464075       1 logs_generator.go:76] 26 GET /api/v1/namespaces/ns/pods/hbrk 282\nI0415 08:44:18.662301       1 logs_generator.go:76] 27 GET /api/v1/namespaces/ns/pods/bkz9 505\n"
  Apr 15 08:44:18.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-logs-9675 delete pod logs-generator'
  Apr 15 08:44:20.489: INFO: stderr: ""
  Apr 15 08:44:20.489: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Apr 15 08:44:20.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9675" for this suite. @ 04/15/24 08:44:20.507
• [8.398 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 04/15/24 08:44:20.528
  Apr 15 08:44:20.528: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename dns @ 04/15/24 08:44:20.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:44:20.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:44:20.573
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9568.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9568.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 04/15/24 08:44:20.579
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9568.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9568.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/15/24 08:44:20.58
  STEP: creating a pod to probe /etc/hosts @ 04/15/24 08:44:20.58
  STEP: submitting the pod to kubernetes @ 04/15/24 08:44:20.581
  STEP: retrieving the pod @ 04/15/24 08:44:22.64
  STEP: looking for the results for each expected name from probers @ 04/15/24 08:44:22.653
  Apr 15 08:44:22.704: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-9568/dns-test-72557386-7d41-41de-8c80-608d4e2417cb: the server could not find the requested resource (get pods dns-test-72557386-7d41-41de-8c80-608d4e2417cb)
  Apr 15 08:44:22.705: INFO: Lookups using dns-9568/dns-test-72557386-7d41-41de-8c80-608d4e2417cb failed for: [jessie_hosts@dns-querier-1]

  Apr 15 08:44:22.721: INFO: Pod client logs for webserver: 
  Apr 15 08:44:22.734: INFO: Pod client logs for querier: 
  Apr 15 08:44:22.750: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:44:27.684: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-9568/dns-test-72557386-7d41-41de-8c80-608d4e2417cb: the server could not find the requested resource (get pods dns-test-72557386-7d41-41de-8c80-608d4e2417cb)
  Apr 15 08:44:27.684: INFO: Lookups using dns-9568/dns-test-72557386-7d41-41de-8c80-608d4e2417cb failed for: [jessie_hosts@dns-querier-1]

  Apr 15 08:44:27.698: INFO: Pod client logs for webserver: 
  Apr 15 08:44:27.714: INFO: Pod client logs for querier: 
  Apr 15 08:44:27.729: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:44:32.697: INFO: DNS probes using dns-9568/dns-test-72557386-7d41-41de-8c80-608d4e2417cb succeeded

  STEP: deleting the pod @ 04/15/24 08:44:32.698
  Apr 15 08:44:32.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9568" for this suite. @ 04/15/24 08:44:32.76
• [12.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 04/15/24 08:44:32.784
  Apr 15 08:44:32.784: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:44:32.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:44:32.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:44:32.826
  STEP: Creating a pod to test downward api env vars @ 04/15/24 08:44:32.832
  STEP: Saw pod success @ 04/15/24 08:44:36.887
  Apr 15 08:44:36.894: INFO: Trying to get logs from node eehaephong4y-3 pod downward-api-ae0b83c6-b910-4a57-add1-8845ecabdc23 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 08:44:36.908
  Apr 15 08:44:36.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3647" for this suite. @ 04/15/24 08:44:36.952
• [4.186 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/15/24 08:44:36.972
  Apr 15 08:44:36.972: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:44:36.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:44:37.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:44:37.019
  STEP: creating the pod @ 04/15/24 08:44:37.024
  STEP: submitting the pod to kubernetes @ 04/15/24 08:44:37.025
  STEP: verifying the pod is in kubernetes @ 04/15/24 08:44:39.085
  STEP: updating the pod @ 04/15/24 08:44:39.093
  Apr 15 08:44:39.623: INFO: Successfully updated pod "pod-update-9f42a910-21dd-4bf3-a821-9904913ef7c9"
  STEP: verifying the updated pod is in kubernetes @ 04/15/24 08:44:39.632
  Apr 15 08:44:39.640: INFO: Pod update OK
  Apr 15 08:44:39.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9107" for this suite. @ 04/15/24 08:44:39.653
• [2.696 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/15/24 08:44:39.669
  Apr 15 08:44:39.669: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename init-container @ 04/15/24 08:44:39.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:44:39.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:44:39.709
  STEP: creating the pod @ 04/15/24 08:44:39.716
  Apr 15 08:44:39.716: INFO: PodSpec: initContainers in spec.initContainers
  Apr 15 08:44:43.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8114" for this suite. @ 04/15/24 08:44:43.569
• [3.917 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 04/15/24 08:44:43.587
  Apr 15 08:44:43.587: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 08:44:43.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:44:43.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:44:43.649
  STEP: Counting existing ResourceQuota @ 04/15/24 08:45:00.67
  STEP: Creating a ResourceQuota @ 04/15/24 08:45:05.679
  STEP: Ensuring resource quota status is calculated @ 04/15/24 08:45:05.691
  STEP: Creating a ConfigMap @ 04/15/24 08:45:07.704
  STEP: Ensuring resource quota status captures configMap creation @ 04/15/24 08:45:07.748
  STEP: Deleting a ConfigMap @ 04/15/24 08:45:09.761
  STEP: Ensuring resource quota status released usage @ 04/15/24 08:45:09.786
  Apr 15 08:45:11.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4688" for this suite. @ 04/15/24 08:45:11.808
• [28.240 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 04/15/24 08:45:11.832
  Apr 15 08:45:11.833: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 08:45:11.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:11.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:11.896
  STEP: Creating configMap that has name configmap-test-emptyKey-66ad53b4-9d4c-4c2a-a909-4015aa08a44d @ 04/15/24 08:45:11.902
  Apr 15 08:45:11.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8378" for this suite. @ 04/15/24 08:45:11.917
• [0.122 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 04/15/24 08:45:11.955
  Apr 15 08:45:11.955: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename sched-pred @ 04/15/24 08:45:11.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:12.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:12.044
  Apr 15 08:45:12.053: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 15 08:45:12.072: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 08:45:12.081: INFO: 
  Logging pods the apiserver thinks is on node eehaephong4y-1 before test
  Apr 15 08:45:12.106: INFO: coredns-76f75df574-nft85 from kube-system started at 2024-04-15 07:36:17 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.106: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 08:45:12.106: INFO: kube-addon-manager-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.106: INFO: 	Container kube-addon-manager ready: true, restart count 6
  Apr 15 08:45:12.106: INFO: kube-apiserver-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.106: INFO: 	Container kube-apiserver ready: true, restart count 6
  Apr 15 08:45:12.106: INFO: kube-controller-manager-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.106: INFO: 	Container kube-controller-manager ready: true, restart count 6
  Apr 15 08:45:12.107: INFO: kube-flannel-ds-567cz from kube-system started at 2024-04-15 07:36:20 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.107: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 08:45:12.107: INFO: kube-proxy-w6l7t from kube-system started at 2024-04-15 07:36:18 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.107: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 08:45:12.107: INFO: kube-scheduler-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.107: INFO: 	Container kube-scheduler ready: true, restart count 6
  Apr 15 08:45:12.107: INFO: sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-8vjkh from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 08:45:12.107: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:45:12.107: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 08:45:12.107: INFO: 
  Logging pods the apiserver thinks is on node eehaephong4y-2 before test
  Apr 15 08:45:12.126: INFO: coredns-76f75df574-wtmjp from kube-system started at 2024-04-15 08:15:51 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.126: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 08:45:12.126: INFO: kube-addon-manager-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.126: INFO: 	Container kube-addon-manager ready: true, restart count 6
  Apr 15 08:45:12.126: INFO: kube-apiserver-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.127: INFO: 	Container kube-apiserver ready: true, restart count 6
  Apr 15 08:45:12.127: INFO: kube-controller-manager-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.127: INFO: 	Container kube-controller-manager ready: true, restart count 6
  Apr 15 08:45:12.127: INFO: kube-flannel-ds-hbsdj from kube-system started at 2024-04-15 07:36:20 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.127: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 08:45:12.127: INFO: kube-proxy-gt6dv from kube-system started at 2024-04-15 07:36:18 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.127: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 08:45:12.127: INFO: kube-scheduler-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.127: INFO: 	Container kube-scheduler ready: true, restart count 6
  Apr 15 08:45:12.127: INFO: sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-rcjkl from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 08:45:12.127: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:45:12.127: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 08:45:12.128: INFO: 
  Logging pods the apiserver thinks is on node eehaephong4y-3 before test
  Apr 15 08:45:12.147: INFO: kube-flannel-ds-cvbzz from kube-system started at 2024-04-15 08:16:16 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.148: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 08:45:12.148: INFO: kube-proxy-27pwt from kube-system started at 2024-04-15 07:36:18 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.149: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 08:45:12.149: INFO: sonobuoy from sonobuoy started at 2024-04-15 07:36:43 +0000 UTC (1 container statuses recorded)
  Apr 15 08:45:12.149: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 15 08:45:12.149: INFO: sonobuoy-e2e-job-9c84e5eeb0144b9d from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 08:45:12.149: INFO: 	Container e2e ready: true, restart count 0
  Apr 15 08:45:12.149: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:45:12.149: INFO: sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-m2mlk from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 08:45:12.149: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 08:45:12.149: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node eehaephong4y-1 @ 04/15/24 08:45:12.195
  STEP: verifying the node has the label node eehaephong4y-2 @ 04/15/24 08:45:12.259
  STEP: verifying the node has the label node eehaephong4y-3 @ 04/15/24 08:45:12.291
  Apr 15 08:45:12.338: INFO: Pod coredns-76f75df574-nft85 requesting resource cpu=100m on Node eehaephong4y-1
  Apr 15 08:45:12.339: INFO: Pod coredns-76f75df574-wtmjp requesting resource cpu=100m on Node eehaephong4y-2
  Apr 15 08:45:12.340: INFO: Pod kube-addon-manager-eehaephong4y-1 requesting resource cpu=5m on Node eehaephong4y-1
  Apr 15 08:45:12.340: INFO: Pod kube-addon-manager-eehaephong4y-2 requesting resource cpu=5m on Node eehaephong4y-2
  Apr 15 08:45:12.341: INFO: Pod kube-apiserver-eehaephong4y-1 requesting resource cpu=250m on Node eehaephong4y-1
  Apr 15 08:45:12.341: INFO: Pod kube-apiserver-eehaephong4y-2 requesting resource cpu=250m on Node eehaephong4y-2
  Apr 15 08:45:12.342: INFO: Pod kube-controller-manager-eehaephong4y-1 requesting resource cpu=200m on Node eehaephong4y-1
  Apr 15 08:45:12.342: INFO: Pod kube-controller-manager-eehaephong4y-2 requesting resource cpu=200m on Node eehaephong4y-2
  Apr 15 08:45:12.343: INFO: Pod kube-flannel-ds-567cz requesting resource cpu=100m on Node eehaephong4y-1
  Apr 15 08:45:12.343: INFO: Pod kube-flannel-ds-cvbzz requesting resource cpu=100m on Node eehaephong4y-3
  Apr 15 08:45:12.344: INFO: Pod kube-flannel-ds-hbsdj requesting resource cpu=100m on Node eehaephong4y-2
  Apr 15 08:45:12.345: INFO: Pod kube-proxy-27pwt requesting resource cpu=0m on Node eehaephong4y-3
  Apr 15 08:45:12.346: INFO: Pod kube-proxy-gt6dv requesting resource cpu=0m on Node eehaephong4y-2
  Apr 15 08:45:12.347: INFO: Pod kube-proxy-w6l7t requesting resource cpu=0m on Node eehaephong4y-1
  Apr 15 08:45:12.348: INFO: Pod kube-scheduler-eehaephong4y-1 requesting resource cpu=100m on Node eehaephong4y-1
  Apr 15 08:45:12.349: INFO: Pod kube-scheduler-eehaephong4y-2 requesting resource cpu=100m on Node eehaephong4y-2
  Apr 15 08:45:12.350: INFO: Pod sonobuoy requesting resource cpu=0m on Node eehaephong4y-3
  Apr 15 08:45:12.351: INFO: Pod sonobuoy-e2e-job-9c84e5eeb0144b9d requesting resource cpu=0m on Node eehaephong4y-3
  Apr 15 08:45:12.352: INFO: Pod sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-8vjkh requesting resource cpu=0m on Node eehaephong4y-1
  Apr 15 08:45:12.352: INFO: Pod sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-m2mlk requesting resource cpu=0m on Node eehaephong4y-3
  Apr 15 08:45:12.352: INFO: Pod sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-rcjkl requesting resource cpu=0m on Node eehaephong4y-2
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/15/24 08:45:12.352
  Apr 15 08:45:12.352: INFO: Creating a pod which consumes cpu=591m on Node eehaephong4y-1
  Apr 15 08:45:12.379: INFO: Creating a pod which consumes cpu=591m on Node eehaephong4y-2
  Apr 15 08:45:12.402: INFO: Creating a pod which consumes cpu=1050m on Node eehaephong4y-3
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/15/24 08:45:14.525
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-63e3f6c1-3c32-4cb7-956c-4d5ff3408808.17c667afadf6367c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5399/filler-pod-63e3f6c1-3c32-4cb7-956c-4d5ff3408808 to eehaephong4y-3] @ 04/15/24 08:45:14.535
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-63e3f6c1-3c32-4cb7-956c-4d5ff3408808.17c667afcd386688], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/15/24 08:45:14.535
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-63e3f6c1-3c32-4cb7-956c-4d5ff3408808.17c667afd6f28a49], Reason = [Created], Message = [Created container filler-pod-63e3f6c1-3c32-4cb7-956c-4d5ff3408808] @ 04/15/24 08:45:14.535
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-63e3f6c1-3c32-4cb7-956c-4d5ff3408808.17c667afd9028c3e], Reason = [Started], Message = [Started container filler-pod-63e3f6c1-3c32-4cb7-956c-4d5ff3408808] @ 04/15/24 08:45:14.535
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-82e57c26-f52f-4099-b6d9-5b590a0b8ada.17c667afaa36d066], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5399/filler-pod-82e57c26-f52f-4099-b6d9-5b590a0b8ada to eehaephong4y-2] @ 04/15/24 08:45:14.535
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-82e57c26-f52f-4099-b6d9-5b590a0b8ada.17c667afd4372ec8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/15/24 08:45:14.535
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-82e57c26-f52f-4099-b6d9-5b590a0b8ada.17c667afe16e81c5], Reason = [Created], Message = [Created container filler-pod-82e57c26-f52f-4099-b6d9-5b590a0b8ada] @ 04/15/24 08:45:14.535
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-82e57c26-f52f-4099-b6d9-5b590a0b8ada.17c667afe3c17de2], Reason = [Started], Message = [Started container filler-pod-82e57c26-f52f-4099-b6d9-5b590a0b8ada] @ 04/15/24 08:45:14.535
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fc4e75c8-dcbb-4e05-9417-2e19b3c308b6.17c667afa7beabad], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5399/filler-pod-fc4e75c8-dcbb-4e05-9417-2e19b3c308b6 to eehaephong4y-1] @ 04/15/24 08:45:14.535
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fc4e75c8-dcbb-4e05-9417-2e19b3c308b6.17c667afe6b287d0], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/15/24 08:45:14.535
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fc4e75c8-dcbb-4e05-9417-2e19b3c308b6.17c667aff497718c], Reason = [Created], Message = [Created container filler-pod-fc4e75c8-dcbb-4e05-9417-2e19b3c308b6] @ 04/15/24 08:45:14.536
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-fc4e75c8-dcbb-4e05-9417-2e19b3c308b6.17c667affab9f575], Reason = [Started], Message = [Started container filler-pod-fc4e75c8-dcbb-4e05-9417-2e19b3c308b6] @ 04/15/24 08:45:14.536
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17c667b028056d1a], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 04/15/24 08:45:14.57
  STEP: removing the label node off the node eehaephong4y-1 @ 04/15/24 08:45:15.57
  STEP: verifying the node doesn't have the label node @ 04/15/24 08:45:15.602
  STEP: removing the label node off the node eehaephong4y-2 @ 04/15/24 08:45:15.618
  STEP: verifying the node doesn't have the label node @ 04/15/24 08:45:15.653
  STEP: removing the label node off the node eehaephong4y-3 @ 04/15/24 08:45:15.673
  STEP: verifying the node doesn't have the label node @ 04/15/24 08:45:15.705
  Apr 15 08:45:15.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5399" for this suite. @ 04/15/24 08:45:15.751
• [3.815 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/15/24 08:45:15.772
  Apr 15 08:45:15.772: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename watch @ 04/15/24 08:45:15.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:15.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:15.819
  STEP: getting a starting resourceVersion @ 04/15/24 08:45:15.828
  STEP: starting a background goroutine to produce watch events @ 04/15/24 08:45:15.847
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/15/24 08:45:15.847
  Apr 15 08:45:18.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6246" for this suite. @ 04/15/24 08:45:18.639
• [2.924 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 04/15/24 08:45:18.697
  Apr 15 08:45:18.697: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 08:45:18.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:18.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:18.738
  STEP: creating service multiprotocol-test in namespace services-2573 @ 04/15/24 08:45:18.745
  STEP: creating pod pod1 in namespace services-2573 @ 04/15/24 08:45:18.771
  STEP: Creating pod pod1 in namespace services-2573 @ 04/15/24 08:45:18.771
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-2573 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 04/15/24 08:45:20.873
  Apr 15 08:45:20.904: INFO: successfully validated that service multiprotocol-test in namespace services-2573 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 04/15/24 08:45:20.904
  Apr 15 08:45:20.904: INFO: Creating new exec pod
  Apr 15 08:45:22.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80'
  Apr 15 08:45:25.384: INFO: rc: 1
  Apr 15 08:45:25.385: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.52.134 80
  nc: connect to 10.233.52.134 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:45:25.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80'
  Apr 15 08:45:27.733: INFO: rc: 1
  Apr 15 08:45:27.733: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.52.134 80
  nc: connect to 10.233.52.134 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:45:27.734: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80'
  Apr 15 08:45:30.062: INFO: rc: 1
  Apr 15 08:45:30.062: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.52.134 80
  nc: connect to 10.233.52.134 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:45:30.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80'
  Apr 15 08:45:32.403: INFO: rc: 1
  Apr 15 08:45:32.404: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.52.134 80
  nc: connect to 10.233.52.134 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:45:32.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80'
  Apr 15 08:45:32.757: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.52.134 80\nConnection to 10.233.52.134 80 port [tcp/http] succeeded!\n"
  Apr 15 08:45:32.758: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:45:32.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.52.134 80'
  Apr 15 08:45:37.047: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.52.134 80\nConnection to 10.233.52.134 80 port [udp/*] succeeded!\n"
  Apr 15 08:45:37.047: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 04/15/24 08:45:37.047
  Apr 15 08:45:37.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80'
  Apr 15 08:45:37.525: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.52.134 80\nConnection to 10.233.52.134 80 port [tcp/http] succeeded!\n"
  Apr 15 08:45:37.526: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 08:45:37.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.52.134 80'
  Apr 15 08:45:41.812: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.52.134 80\nConnection to 10.233.52.134 80 port [udp/*] succeeded!\n"
  Apr 15 08:45:41.812: INFO: stdout: ""
  Apr 15 08:45:41.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.52.134 80'
  Apr 15 08:45:46.132: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.52.134 80\nConnection to 10.233.52.134 80 port [udp/*] succeeded!\n"
  Apr 15 08:45:46.132: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 04/15/24 08:45:46.133
  Apr 15 08:45:46.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.52.134 80'
  Apr 15 08:45:50.548: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.52.134 80\nConnection to 10.233.52.134 80 port [udp/*] succeeded!\n"
  Apr 15 08:45:50.548: INFO: stdout: "pod1"
  Apr 15 08:45:50.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80'
  Apr 15 08:45:52.868: INFO: rc: 1
  Apr 15 08:45:52.868: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.233.52.134 80
  + echo hostName
  nc: connect to 10.233.52.134 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:45:52.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80'
  Apr 15 08:45:55.169: INFO: rc: 1
  Apr 15 08:45:55.169: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.52.134 80
  nc: connect to 10.233.52.134 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:45:55.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80'
  Apr 15 08:45:57.482: INFO: rc: 1
  Apr 15 08:45:57.482: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-2573 exec execpod9snr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.52.134 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.52.134 80
  nc: connect to 10.233.52.134 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 15 08:45:57.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2573" for this suite. @ 04/15/24 08:45:57.496
• [38.814 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 04/15/24 08:45:57.512
  Apr 15 08:45:57.512: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 08:45:57.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:57.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:57.576
  Apr 15 08:45:57.590: INFO: Got root ca configmap in namespace "svcaccounts-2812"
  Apr 15 08:45:57.611: INFO: Deleted root ca configmap in namespace "svcaccounts-2812"
  STEP: waiting for a new root ca configmap created @ 04/15/24 08:45:58.111
  Apr 15 08:45:58.121: INFO: Recreated root ca configmap in namespace "svcaccounts-2812"
  Apr 15 08:45:58.135: INFO: Updated root ca configmap in namespace "svcaccounts-2812"
  STEP: waiting for the root ca configmap reconciled @ 04/15/24 08:45:58.637
  Apr 15 08:45:58.648: INFO: Reconciled root ca configmap in namespace "svcaccounts-2812"
  Apr 15 08:45:58.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2812" for this suite. @ 04/15/24 08:45:58.663
• [1.169 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 04/15/24 08:45:58.681
  Apr 15 08:45:58.681: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename dns @ 04/15/24 08:45:58.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:45:58.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:45:58.734
  STEP: Creating a test externalName service @ 04/15/24 08:45:58.743
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6133.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6133.svc.cluster.local; sleep 1; done
   @ 04/15/24 08:45:58.759
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6133.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6133.svc.cluster.local; sleep 1; done
   @ 04/15/24 08:45:58.759
  STEP: creating a pod to probe DNS @ 04/15/24 08:45:58.759
  STEP: submitting the pod to kubernetes @ 04/15/24 08:45:58.76
  STEP: retrieving the pod @ 04/15/24 08:46:02.815
  STEP: looking for the results for each expected name from probers @ 04/15/24 08:46:02.828
  Apr 15 08:46:02.878: INFO: DNS probes using dns-test-252b7ac9-8880-4835-bb64-a91ba73153dc succeeded

  STEP: changing the externalName to bar.example.com @ 04/15/24 08:46:02.878
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6133.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-6133.svc.cluster.local; sleep 1; done
   @ 04/15/24 08:46:02.936
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6133.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6133.svc.cluster.local; sleep 1; done
   @ 04/15/24 08:46:02.937
  STEP: creating a second pod to probe DNS @ 04/15/24 08:46:02.937
  STEP: submitting the pod to kubernetes @ 04/15/24 08:46:02.937
  STEP: retrieving the pod @ 04/15/24 08:46:06.984
  STEP: looking for the results for each expected name from probers @ 04/15/24 08:46:06.994
  Apr 15 08:46:07.014: INFO: File wheezy_udp@dns-test-service-3.dns-6133.svc.cluster.local from pod  dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 08:46:07.024: INFO: File jessie_udp@dns-test-service-3.dns-6133.svc.cluster.local from pod  dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 08:46:07.025: INFO: Lookups using dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d failed for: [wheezy_udp@dns-test-service-3.dns-6133.svc.cluster.local jessie_udp@dns-test-service-3.dns-6133.svc.cluster.local]

  Apr 15 08:46:07.074: INFO: Pod client logs for webserver: 
  Apr 15 08:46:07.093: INFO: Pod client logs for querier: 
  Apr 15 08:46:07.110: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:46:12.007: INFO: File wheezy_udp@dns-test-service-3.dns-6133.svc.cluster.local from pod  dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 08:46:12.016: INFO: File jessie_udp@dns-test-service-3.dns-6133.svc.cluster.local from pod  dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 08:46:12.017: INFO: Lookups using dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d failed for: [wheezy_udp@dns-test-service-3.dns-6133.svc.cluster.local jessie_udp@dns-test-service-3.dns-6133.svc.cluster.local]

  Apr 15 08:46:12.036: INFO: Pod client logs for webserver: 
  Apr 15 08:46:12.049: INFO: Pod client logs for querier: 
  Apr 15 08:46:12.068: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:46:17.014: INFO: File wheezy_udp@dns-test-service-3.dns-6133.svc.cluster.local from pod  dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 08:46:17.026: INFO: File jessie_udp@dns-test-service-3.dns-6133.svc.cluster.local from pod  dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 08:46:17.026: INFO: Lookups using dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d failed for: [wheezy_udp@dns-test-service-3.dns-6133.svc.cluster.local jessie_udp@dns-test-service-3.dns-6133.svc.cluster.local]

  Apr 15 08:46:17.049: INFO: Pod client logs for webserver: 
  Apr 15 08:46:17.063: INFO: Pod client logs for querier: 
  Apr 15 08:46:17.093: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:46:22.008: INFO: File wheezy_udp@dns-test-service-3.dns-6133.svc.cluster.local from pod  dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 08:46:22.019: INFO: File jessie_udp@dns-test-service-3.dns-6133.svc.cluster.local from pod  dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 08:46:22.020: INFO: Lookups using dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d failed for: [wheezy_udp@dns-test-service-3.dns-6133.svc.cluster.local jessie_udp@dns-test-service-3.dns-6133.svc.cluster.local]

  Apr 15 08:46:22.035: INFO: Pod client logs for webserver: 
  Apr 15 08:46:22.055: INFO: Pod client logs for querier: 
  Apr 15 08:46:22.072: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:46:27.005: INFO: File wheezy_udp@dns-test-service-3.dns-6133.svc.cluster.local from pod  dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 08:46:27.016: INFO: File jessie_udp@dns-test-service-3.dns-6133.svc.cluster.local from pod  dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 08:46:27.016: INFO: Lookups using dns-6133/dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d failed for: [wheezy_udp@dns-test-service-3.dns-6133.svc.cluster.local jessie_udp@dns-test-service-3.dns-6133.svc.cluster.local]

  Apr 15 08:46:27.032: INFO: Pod client logs for webserver: 
  Apr 15 08:46:27.048: INFO: Pod client logs for querier: 
  Apr 15 08:46:27.063: INFO: Pod client logs for jessie-querier: 
  Apr 15 08:46:32.029: INFO: DNS probes using dns-test-9a20f144-ad73-42a8-901c-fa51f0df407d succeeded

  STEP: changing the service to type=ClusterIP @ 04/15/24 08:46:32.03
  W0415 08:46:32.129232      13 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6133.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-6133.svc.cluster.local; sleep 1; done
   @ 04/15/24 08:46:32.13
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6133.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6133.svc.cluster.local; sleep 1; done
   @ 04/15/24 08:46:32.13
  STEP: creating a third pod to probe DNS @ 04/15/24 08:46:32.131
  STEP: submitting the pod to kubernetes @ 04/15/24 08:46:32.152
  STEP: retrieving the pod @ 04/15/24 08:46:34.238
  STEP: looking for the results for each expected name from probers @ 04/15/24 08:46:34.25
  Apr 15 08:46:34.276: INFO: DNS probes using dns-test-ed00c5d4-0225-4c20-9344-1b64e23b957f succeeded

  STEP: deleting the pod @ 04/15/24 08:46:34.278
  STEP: deleting the pod @ 04/15/24 08:46:34.321
  STEP: deleting the pod @ 04/15/24 08:46:34.358
  STEP: deleting the test externalName service @ 04/15/24 08:46:34.444
  Apr 15 08:46:34.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6133" for this suite. @ 04/15/24 08:46:34.512
• [35.848 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 04/15/24 08:46:34.532
  Apr 15 08:46:34.532: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 08:46:34.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:46:34.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:46:34.613
  STEP: Creating service test in namespace statefulset-6 @ 04/15/24 08:46:34.619
  STEP: Creating statefulset ss in namespace statefulset-6 @ 04/15/24 08:46:34.64
  Apr 15 08:46:34.681: INFO: Found 0 stateful pods, waiting for 1
  Apr 15 08:46:44.680: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/15/24 08:46:44.698
  STEP: updating a scale subresource @ 04/15/24 08:46:44.711
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/15/24 08:46:44.726
  STEP: Patch a scale subresource @ 04/15/24 08:46:44.741
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/15/24 08:46:44.759
  Apr 15 08:46:44.783: INFO: Deleting all statefulset in ns statefulset-6
  Apr 15 08:46:44.829: INFO: Scaling statefulset ss to 0
  Apr 15 08:46:54.981: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 08:46:54.988: INFO: Deleting statefulset ss
  Apr 15 08:46:55.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6" for this suite. @ 04/15/24 08:46:55.037
• [20.525 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 04/15/24 08:46:55.06
  Apr 15 08:46:55.060: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename gc @ 04/15/24 08:46:55.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:46:55.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:46:55.104
  STEP: create the rc @ 04/15/24 08:46:55.126
  W0415 08:46:55.143457      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/15/24 08:47:01.23
  STEP: wait for the rc to be deleted @ 04/15/24 08:47:01.362
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/15/24 08:47:06.419
  STEP: Gathering metrics @ 04/15/24 08:47:36.467
  Apr 15 08:47:36.693: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 08:47:36.693: INFO: Deleting pod "simpletest.rc-2klxg" in namespace "gc-4744"
  Apr 15 08:47:36.761: INFO: Deleting pod "simpletest.rc-2nscp" in namespace "gc-4744"
  Apr 15 08:47:36.861: INFO: Deleting pod "simpletest.rc-2xqlw" in namespace "gc-4744"
  Apr 15 08:47:36.920: INFO: Deleting pod "simpletest.rc-44mz4" in namespace "gc-4744"
  Apr 15 08:47:36.988: INFO: Deleting pod "simpletest.rc-4gpth" in namespace "gc-4744"
  Apr 15 08:47:37.023: INFO: Deleting pod "simpletest.rc-4lpdh" in namespace "gc-4744"
  Apr 15 08:47:37.090: INFO: Deleting pod "simpletest.rc-4wbmf" in namespace "gc-4744"
  Apr 15 08:47:37.160: INFO: Deleting pod "simpletest.rc-55mm7" in namespace "gc-4744"
  Apr 15 08:47:37.225: INFO: Deleting pod "simpletest.rc-5gjvv" in namespace "gc-4744"
  Apr 15 08:47:37.378: INFO: Deleting pod "simpletest.rc-5kpsn" in namespace "gc-4744"
  Apr 15 08:47:37.460: INFO: Deleting pod "simpletest.rc-6bcmk" in namespace "gc-4744"
  Apr 15 08:47:37.629: INFO: Deleting pod "simpletest.rc-6gh8q" in namespace "gc-4744"
  Apr 15 08:47:37.835: INFO: Deleting pod "simpletest.rc-6gr5f" in namespace "gc-4744"
  Apr 15 08:47:38.071: INFO: Deleting pod "simpletest.rc-6wl9x" in namespace "gc-4744"
  Apr 15 08:47:38.223: INFO: Deleting pod "simpletest.rc-76zhx" in namespace "gc-4744"
  Apr 15 08:47:38.371: INFO: Deleting pod "simpletest.rc-7mqww" in namespace "gc-4744"
  Apr 15 08:47:38.561: INFO: Deleting pod "simpletest.rc-7rks8" in namespace "gc-4744"
  Apr 15 08:47:38.664: INFO: Deleting pod "simpletest.rc-7rlfx" in namespace "gc-4744"
  Apr 15 08:47:38.752: INFO: Deleting pod "simpletest.rc-854g7" in namespace "gc-4744"
  Apr 15 08:47:38.835: INFO: Deleting pod "simpletest.rc-8ltc5" in namespace "gc-4744"
  Apr 15 08:47:38.965: INFO: Deleting pod "simpletest.rc-8nqd9" in namespace "gc-4744"
  Apr 15 08:47:39.192: INFO: Deleting pod "simpletest.rc-8pssn" in namespace "gc-4744"
  Apr 15 08:47:39.267: INFO: Deleting pod "simpletest.rc-8vmzs" in namespace "gc-4744"
  Apr 15 08:47:39.538: INFO: Deleting pod "simpletest.rc-969sb" in namespace "gc-4744"
  Apr 15 08:47:39.576: INFO: Deleting pod "simpletest.rc-9fwr4" in namespace "gc-4744"
  Apr 15 08:47:39.719: INFO: Deleting pod "simpletest.rc-9tjfq" in namespace "gc-4744"
  Apr 15 08:47:39.916: INFO: Deleting pod "simpletest.rc-9zgmc" in namespace "gc-4744"
  Apr 15 08:47:40.038: INFO: Deleting pod "simpletest.rc-blz96" in namespace "gc-4744"
  Apr 15 08:47:40.159: INFO: Deleting pod "simpletest.rc-btpln" in namespace "gc-4744"
  Apr 15 08:47:40.243: INFO: Deleting pod "simpletest.rc-bzddg" in namespace "gc-4744"
  Apr 15 08:47:40.408: INFO: Deleting pod "simpletest.rc-c8wtc" in namespace "gc-4744"
  Apr 15 08:47:40.514: INFO: Deleting pod "simpletest.rc-cj2cx" in namespace "gc-4744"
  Apr 15 08:47:40.616: INFO: Deleting pod "simpletest.rc-cn8d9" in namespace "gc-4744"
  Apr 15 08:47:40.922: INFO: Deleting pod "simpletest.rc-cqw26" in namespace "gc-4744"
  Apr 15 08:47:41.081: INFO: Deleting pod "simpletest.rc-cwhk4" in namespace "gc-4744"
  Apr 15 08:47:41.161: INFO: Deleting pod "simpletest.rc-cx9rx" in namespace "gc-4744"
  Apr 15 08:47:41.241: INFO: Deleting pod "simpletest.rc-cznzk" in namespace "gc-4744"
  Apr 15 08:47:41.427: INFO: Deleting pod "simpletest.rc-dpg9z" in namespace "gc-4744"
  Apr 15 08:47:41.508: INFO: Deleting pod "simpletest.rc-dvd9x" in namespace "gc-4744"
  Apr 15 08:47:41.544: INFO: Deleting pod "simpletest.rc-dxgpb" in namespace "gc-4744"
  Apr 15 08:47:41.680: INFO: Deleting pod "simpletest.rc-fr74n" in namespace "gc-4744"
  Apr 15 08:47:41.839: INFO: Deleting pod "simpletest.rc-g98pg" in namespace "gc-4744"
  Apr 15 08:47:41.970: INFO: Deleting pod "simpletest.rc-gh4bd" in namespace "gc-4744"
  Apr 15 08:47:42.067: INFO: Deleting pod "simpletest.rc-gnb5c" in namespace "gc-4744"
  Apr 15 08:47:42.158: INFO: Deleting pod "simpletest.rc-gvhsh" in namespace "gc-4744"
  Apr 15 08:47:42.280: INFO: Deleting pod "simpletest.rc-hkc8t" in namespace "gc-4744"
  Apr 15 08:47:42.369: INFO: Deleting pod "simpletest.rc-hnblk" in namespace "gc-4744"
  Apr 15 08:47:42.415: INFO: Deleting pod "simpletest.rc-hrdm4" in namespace "gc-4744"
  Apr 15 08:47:42.486: INFO: Deleting pod "simpletest.rc-jggm7" in namespace "gc-4744"
  Apr 15 08:47:42.554: INFO: Deleting pod "simpletest.rc-jm9dp" in namespace "gc-4744"
  Apr 15 08:47:42.646: INFO: Deleting pod "simpletest.rc-jxsxz" in namespace "gc-4744"
  Apr 15 08:47:42.703: INFO: Deleting pod "simpletest.rc-k5zsm" in namespace "gc-4744"
  Apr 15 08:47:42.938: INFO: Deleting pod "simpletest.rc-knc68" in namespace "gc-4744"
  Apr 15 08:47:43.117: INFO: Deleting pod "simpletest.rc-knzjc" in namespace "gc-4744"
  Apr 15 08:47:43.162: INFO: Deleting pod "simpletest.rc-lbwln" in namespace "gc-4744"
  Apr 15 08:47:43.228: INFO: Deleting pod "simpletest.rc-llvvq" in namespace "gc-4744"
  Apr 15 08:47:43.446: INFO: Deleting pod "simpletest.rc-m2kc7" in namespace "gc-4744"
  Apr 15 08:47:43.640: INFO: Deleting pod "simpletest.rc-mcbr9" in namespace "gc-4744"
  Apr 15 08:47:43.691: INFO: Deleting pod "simpletest.rc-mk6c5" in namespace "gc-4744"
  Apr 15 08:47:43.799: INFO: Deleting pod "simpletest.rc-n6999" in namespace "gc-4744"
  Apr 15 08:47:43.862: INFO: Deleting pod "simpletest.rc-n8tlv" in namespace "gc-4744"
  Apr 15 08:47:43.952: INFO: Deleting pod "simpletest.rc-nhfk5" in namespace "gc-4744"
  Apr 15 08:47:44.039: INFO: Deleting pod "simpletest.rc-nzx2j" in namespace "gc-4744"
  Apr 15 08:47:44.127: INFO: Deleting pod "simpletest.rc-p2d9w" in namespace "gc-4744"
  Apr 15 08:47:44.287: INFO: Deleting pod "simpletest.rc-p999b" in namespace "gc-4744"
  Apr 15 08:47:44.451: INFO: Deleting pod "simpletest.rc-pfkzc" in namespace "gc-4744"
  Apr 15 08:47:44.558: INFO: Deleting pod "simpletest.rc-pnvwb" in namespace "gc-4744"
  Apr 15 08:47:44.620: INFO: Deleting pod "simpletest.rc-q7cql" in namespace "gc-4744"
  Apr 15 08:47:44.702: INFO: Deleting pod "simpletest.rc-qgc5l" in namespace "gc-4744"
  Apr 15 08:47:44.812: INFO: Deleting pod "simpletest.rc-qmwzd" in namespace "gc-4744"
  Apr 15 08:47:44.893: INFO: Deleting pod "simpletest.rc-rng9t" in namespace "gc-4744"
  Apr 15 08:47:45.002: INFO: Deleting pod "simpletest.rc-rt4fp" in namespace "gc-4744"
  Apr 15 08:47:45.135: INFO: Deleting pod "simpletest.rc-rv497" in namespace "gc-4744"
  Apr 15 08:47:45.222: INFO: Deleting pod "simpletest.rc-rxkg7" in namespace "gc-4744"
  Apr 15 08:47:45.255: INFO: Deleting pod "simpletest.rc-sdx4q" in namespace "gc-4744"
  Apr 15 08:47:45.437: INFO: Deleting pod "simpletest.rc-sgmfx" in namespace "gc-4744"
  Apr 15 08:47:45.507: INFO: Deleting pod "simpletest.rc-sqc6t" in namespace "gc-4744"
  Apr 15 08:47:45.613: INFO: Deleting pod "simpletest.rc-stnhw" in namespace "gc-4744"
  Apr 15 08:47:45.675: INFO: Deleting pod "simpletest.rc-svc54" in namespace "gc-4744"
  Apr 15 08:47:45.723: INFO: Deleting pod "simpletest.rc-tctds" in namespace "gc-4744"
  Apr 15 08:47:45.767: INFO: Deleting pod "simpletest.rc-tl52c" in namespace "gc-4744"
  Apr 15 08:47:45.864: INFO: Deleting pod "simpletest.rc-tnbdx" in namespace "gc-4744"
  Apr 15 08:47:45.935: INFO: Deleting pod "simpletest.rc-twzj9" in namespace "gc-4744"
  Apr 15 08:47:45.974: INFO: Deleting pod "simpletest.rc-v24cq" in namespace "gc-4744"
  Apr 15 08:47:46.075: INFO: Deleting pod "simpletest.rc-v867b" in namespace "gc-4744"
  Apr 15 08:47:46.211: INFO: Deleting pod "simpletest.rc-vq9bv" in namespace "gc-4744"
  Apr 15 08:47:46.303: INFO: Deleting pod "simpletest.rc-vs8xq" in namespace "gc-4744"
  Apr 15 08:47:46.406: INFO: Deleting pod "simpletest.rc-wkq4m" in namespace "gc-4744"
  Apr 15 08:47:46.507: INFO: Deleting pod "simpletest.rc-wkz95" in namespace "gc-4744"
  Apr 15 08:47:46.587: INFO: Deleting pod "simpletest.rc-wtxmg" in namespace "gc-4744"
  Apr 15 08:47:46.663: INFO: Deleting pod "simpletest.rc-x2zq5" in namespace "gc-4744"
  Apr 15 08:47:46.897: INFO: Deleting pod "simpletest.rc-x9629" in namespace "gc-4744"
  Apr 15 08:47:47.190: INFO: Deleting pod "simpletest.rc-xhtkh" in namespace "gc-4744"
  Apr 15 08:47:47.293: INFO: Deleting pod "simpletest.rc-xp568" in namespace "gc-4744"
  Apr 15 08:47:47.382: INFO: Deleting pod "simpletest.rc-z6mhj" in namespace "gc-4744"
  Apr 15 08:47:47.551: INFO: Deleting pod "simpletest.rc-z7mfz" in namespace "gc-4744"
  Apr 15 08:47:47.655: INFO: Deleting pod "simpletest.rc-zm96z" in namespace "gc-4744"
  Apr 15 08:47:47.700: INFO: Deleting pod "simpletest.rc-zn7nr" in namespace "gc-4744"
  Apr 15 08:47:47.827: INFO: Deleting pod "simpletest.rc-zxwvz" in namespace "gc-4744"
  Apr 15 08:47:47.926: INFO: Deleting pod "simpletest.rc-zzv4h" in namespace "gc-4744"
  Apr 15 08:47:48.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4744" for this suite. @ 04/15/24 08:47:48.112
• [53.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 04/15/24 08:47:48.164
  Apr 15 08:47:48.164: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 08:47:48.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:47:48.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:47:48.264
  STEP: Creating service test in namespace statefulset-6416 @ 04/15/24 08:47:48.273
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/15/24 08:47:48.33
  STEP: Creating stateful set ss in namespace statefulset-6416 @ 04/15/24 08:47:48.41
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6416 @ 04/15/24 08:47:48.5
  Apr 15 08:47:48.531: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  Apr 15 08:47:58.513: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/15/24 08:47:58.514
  Apr 15 08:47:58.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-6416 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 08:47:58.914: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:47:58.914: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:47:58.914: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 08:47:58.949: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Apr 15 08:48:08.927: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 08:48:08.928: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 15 08:48:08.976: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999096s
  Apr 15 08:48:09.986: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.987145296s
  Apr 15 08:48:11.006: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.977707853s
  Apr 15 08:48:12.013: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.958363538s
  Apr 15 08:48:13.025: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.95066263s
  Apr 15 08:48:14.037: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.938452872s
  Apr 15 08:48:15.058: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.927098947s
  Apr 15 08:48:16.070: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.906036416s
  Apr 15 08:48:17.078: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.893807708s
  Apr 15 08:48:18.089: INFO: Verifying statefulset ss doesn't scale past 1 for another 886.391931ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6416 @ 04/15/24 08:48:19.09
  Apr 15 08:48:19.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-6416 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 08:48:19.500: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 08:48:19.500: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 08:48:19.500: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 08:48:19.510: INFO: Found 1 stateful pods, waiting for 3
  Apr 15 08:48:29.512: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 08:48:29.512: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 08:48:29.512: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/15/24 08:48:29.513
  STEP: Scale down will halt with unhealthy stateful pod @ 04/15/24 08:48:29.513
  Apr 15 08:48:29.529: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-6416 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 08:48:29.815: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:48:29.815: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:48:29.815: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 08:48:29.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-6416 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 08:48:30.141: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:48:30.141: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:48:30.141: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 08:48:30.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-6416 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 08:48:30.489: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:48:30.489: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:48:30.489: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 08:48:30.489: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 15 08:48:30.503: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 1
  Apr 15 08:48:40.506: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 08:48:40.506: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 08:48:40.506: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 08:48:40.538: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999578s
  Apr 15 08:48:41.550: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.986835303s
  Apr 15 08:48:42.561: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.975546352s
  Apr 15 08:48:43.573: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.964460961s
  Apr 15 08:48:44.582: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.953167684s
  Apr 15 08:48:45.597: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.942568377s
  Apr 15 08:48:46.608: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.928001669s
  Apr 15 08:48:47.650: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.918250007s
  Apr 15 08:48:48.669: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.875230293s
  Apr 15 08:48:49.683: INFO: Verifying statefulset ss doesn't scale past 3 for another 855.801736ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6416 @ 04/15/24 08:48:50.684
  Apr 15 08:48:50.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-6416 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 08:48:51.067: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 08:48:51.067: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 08:48:51.067: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 08:48:51.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-6416 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 08:48:51.456: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 08:48:51.456: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 08:48:51.456: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 08:48:51.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-6416 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 08:48:51.858: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 08:48:51.859: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 08:48:51.859: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 08:48:51.859: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/15/24 08:49:01.906
  Apr 15 08:49:01.907: INFO: Deleting all statefulset in ns statefulset-6416
  Apr 15 08:49:01.915: INFO: Scaling statefulset ss to 0
  Apr 15 08:49:01.939: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 08:49:01.947: INFO: Deleting statefulset ss
  Apr 15 08:49:01.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6416" for this suite. @ 04/15/24 08:49:01.993
• [73.846 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 04/15/24 08:49:02.012
  Apr 15 08:49:02.012: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 08:49:02.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:02.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:02.069
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/15/24 08:49:02.079
  STEP: When a replication controller with a matching selector is created @ 04/15/24 08:49:04.139
  STEP: Then the orphan pod is adopted @ 04/15/24 08:49:04.158
  Apr 15 08:49:05.180: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-307" for this suite. @ 04/15/24 08:49:05.194
• [3.215 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/15/24 08:49:05.226
  Apr 15 08:49:05.226: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 08:49:05.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:05.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:05.29
  Apr 15 08:49:05.393: INFO: Create a RollingUpdate DaemonSet
  Apr 15 08:49:05.414: INFO: Check that daemon pods launch on every node of the cluster
  Apr 15 08:49:05.438: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:49:05.439: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  Apr 15 08:49:06.447: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:49:06.447: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  Apr 15 08:49:07.478: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 08:49:07.478: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Apr 15 08:49:07.478: INFO: Update the DaemonSet to trigger a rollout
  Apr 15 08:49:07.511: INFO: Updating DaemonSet daemon-set
  Apr 15 08:49:09.547: INFO: Roll back the DaemonSet before rollout is complete
  Apr 15 08:49:09.592: INFO: Updating DaemonSet daemon-set
  Apr 15 08:49:09.592: INFO: Make sure DaemonSet rollback is complete
  Apr 15 08:49:09.605: INFO: Wrong image for pod: daemon-set-d59bh. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Apr 15 08:49:09.605: INFO: Pod daemon-set-d59bh is not available
  Apr 15 08:49:15.602: INFO: Pod daemon-set-f9jm2 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 08:49:15.628
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2561, will wait for the garbage collector to delete the pods @ 04/15/24 08:49:15.629
  Apr 15 08:49:15.701: INFO: Deleting DaemonSet.extensions daemon-set took: 12.937331ms
  Apr 15 08:49:15.803: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.588273ms
  Apr 15 08:49:47.713: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:49:47.713: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 08:49:47.721: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"226191"},"items":null}

  Apr 15 08:49:47.728: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"226191"},"items":null}

  Apr 15 08:49:47.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2561" for this suite. @ 04/15/24 08:49:47.774
• [42.560 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/15/24 08:49:47.788
  Apr 15 08:49:47.788: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename secrets @ 04/15/24 08:49:47.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:47.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:47.832
  STEP: Creating secret with name secret-test-8526bb2e-5bab-47a6-bddb-ff4218de7dfe @ 04/15/24 08:49:47.839
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:49:47.85
  STEP: Saw pod success @ 04/15/24 08:49:51.898
  Apr 15 08:49:51.905: INFO: Trying to get logs from node eehaephong4y-3 pod pod-secrets-b6254bf5-9bfe-4e7f-97e6-6b77ce020747 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:49:51.948
  Apr 15 08:49:51.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-767" for this suite. @ 04/15/24 08:49:52.01
• [4.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 04/15/24 08:49:52.026
  Apr 15 08:49:52.026: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename limitrange @ 04/15/24 08:49:52.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:52.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:52.121
  STEP: Creating a LimitRange @ 04/15/24 08:49:52.128
  STEP: Setting up watch @ 04/15/24 08:49:52.128
  STEP: Submitting a LimitRange @ 04/15/24 08:49:52.236
  STEP: Verifying LimitRange creation was observed @ 04/15/24 08:49:52.266
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/15/24 08:49:52.268
  Apr 15 08:49:52.285: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 15 08:49:52.286: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/15/24 08:49:52.286
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/15/24 08:49:52.3
  Apr 15 08:49:52.309: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 15 08:49:52.309: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/15/24 08:49:52.309
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/15/24 08:49:52.332
  Apr 15 08:49:52.361: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Apr 15 08:49:52.361: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/15/24 08:49:52.362
  STEP: Failing to create a Pod with more than max resources @ 04/15/24 08:49:52.368
  STEP: Updating a LimitRange @ 04/15/24 08:49:52.38
  STEP: Verifying LimitRange updating is effective @ 04/15/24 08:49:52.406
  STEP: Creating a Pod with less than former min resources @ 04/15/24 08:49:54.414
  STEP: Failing to create a Pod with more than max resources @ 04/15/24 08:49:54.427
  STEP: Deleting a LimitRange @ 04/15/24 08:49:54.432
  STEP: Verifying the LimitRange was deleted @ 04/15/24 08:49:54.456
  Apr 15 08:49:59.464: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/15/24 08:49:59.464
  Apr 15 08:49:59.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5170" for this suite. @ 04/15/24 08:49:59.516
• [7.512 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/15/24 08:49:59.54
  Apr 15 08:49:59.540: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:49:59.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:49:59.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:49:59.592
  STEP: Create a pod @ 04/15/24 08:49:59.597
  STEP: patching /status @ 04/15/24 08:50:01.633
  Apr 15 08:50:01.651: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Apr 15 08:50:01.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-382" for this suite. @ 04/15/24 08:50:01.668
• [2.141 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/15/24 08:50:01.683
  Apr 15 08:50:01.683: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 08:50:01.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:50:01.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:50:01.726
  STEP: Creating a ForbidConcurrent cronjob @ 04/15/24 08:50:01.732
  STEP: Ensuring a job is scheduled @ 04/15/24 08:50:01.75
  STEP: Ensuring exactly one is scheduled @ 04/15/24 08:51:01.76
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/15/24 08:51:01.767
  STEP: Ensuring no more jobs are scheduled @ 04/15/24 08:51:01.774
  STEP: Removing cronjob @ 04/15/24 08:56:01.788
  Apr 15 08:56:01.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5067" for this suite. @ 04/15/24 08:56:01.821
• [360.154 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 04/15/24 08:56:01.839
  Apr 15 08:56:01.839: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 08:56:01.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:56:01.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:56:01.892
  STEP: Creating service test in namespace statefulset-8624 @ 04/15/24 08:56:01.897
  STEP: Creating stateful set ss in namespace statefulset-8624 @ 04/15/24 08:56:01.91
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8624 @ 04/15/24 08:56:01.934
  Apr 15 08:56:01.943: INFO: Found 0 stateful pods, waiting for 1
  Apr 15 08:56:11.943: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/15/24 08:56:11.943
  Apr 15 08:56:11.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-8624 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 08:56:12.353: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:56:12.353: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:56:12.353: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 08:56:12.364: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Apr 15 08:56:22.364: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 08:56:22.364: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 15 08:56:22.411: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Apr 15 08:56:22.411: INFO: ss-0  eehaephong4y-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:13 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:13 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:01 +0000 UTC  }]
  Apr 15 08:56:22.411: INFO: 
  Apr 15 08:56:22.411: INFO: StatefulSet ss has not reached scale 3, at 1
  Apr 15 08:56:23.419: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.980813066s
  Apr 15 08:56:24.461: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.973267465s
  Apr 15 08:56:25.470: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.930926533s
  Apr 15 08:56:26.481: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.922529666s
  Apr 15 08:56:27.495: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.910475772s
  Apr 15 08:56:28.505: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.896672932s
  Apr 15 08:56:29.515: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.887547862s
  Apr 15 08:56:30.524: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.876807265s
  Apr 15 08:56:31.539: INFO: Verifying statefulset ss doesn't scale past 3 for another 867.19605ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8624 @ 04/15/24 08:56:32.539
  Apr 15 08:56:32.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-8624 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 08:56:32.913: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 08:56:32.913: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 08:56:32.913: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 08:56:32.915: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-8624 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 08:56:33.233: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 15 08:56:33.233: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 08:56:33.233: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 08:56:33.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-8624 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 08:56:33.566: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 15 08:56:33.566: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 08:56:33.566: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 08:56:33.577: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 08:56:33.577: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 08:56:33.577: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/15/24 08:56:33.577
  Apr 15 08:56:33.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-8624 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 08:56:33.871: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:56:33.871: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:56:33.871: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 08:56:33.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-8624 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 08:56:34.248: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:56:34.248: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:56:34.248: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 08:56:34.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=statefulset-8624 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 08:56:34.570: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 08:56:34.570: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 08:56:34.570: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 08:56:34.570: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 15 08:56:34.580: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Apr 15 08:56:44.591: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 08:56:44.591: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 08:56:44.591: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 08:56:44.626: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Apr 15 08:56:44.626: INFO: ss-0  eehaephong4y-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:01 +0000 UTC  }]
  Apr 15 08:56:44.626: INFO: ss-1  eehaephong4y-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:24 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:22 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:22 +0000 UTC  }]
  Apr 15 08:56:44.626: INFO: ss-2  eehaephong4y-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:24 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:22 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:22 +0000 UTC  }]
  Apr 15 08:56:44.626: INFO: 
  Apr 15 08:56:44.626: INFO: StatefulSet ss has not reached scale 0, at 3
  Apr 15 08:56:45.636: INFO: POD   NODE            PHASE      GRACE  CONDITIONS
  Apr 15 08:56:45.636: INFO: ss-0  eehaephong4y-3  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:45 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:01 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:34 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:34 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 08:56:01 +0000 UTC  }]
  Apr 15 08:56:45.637: INFO: 
  Apr 15 08:56:45.637: INFO: StatefulSet ss has not reached scale 0, at 1
  Apr 15 08:56:46.645: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.973719938s
  Apr 15 08:56:47.654: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.966888154s
  Apr 15 08:56:48.661: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.957708599s
  Apr 15 08:56:49.670: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.950990766s
  Apr 15 08:56:50.680: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.940653197s
  Apr 15 08:56:51.689: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.932266089s
  Apr 15 08:56:52.697: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.923238332s
  Apr 15 08:56:53.704: INFO: Verifying statefulset ss doesn't scale past 0 for another 914.870144ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8624 @ 04/15/24 08:56:54.704
  Apr 15 08:56:54.712: INFO: Scaling statefulset ss to 0
  Apr 15 08:56:54.733: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 08:56:54.740: INFO: Deleting all statefulset in ns statefulset-8624
  Apr 15 08:56:54.746: INFO: Scaling statefulset ss to 0
  Apr 15 08:56:54.773: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 08:56:54.780: INFO: Deleting statefulset ss
  Apr 15 08:56:54.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8624" for this suite. @ 04/15/24 08:56:54.827
• [53.005 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/15/24 08:56:54.845
  Apr 15 08:56:54.845: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:56:54.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:56:54.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:56:54.928
  STEP: creating the pod @ 04/15/24 08:56:54.935
  STEP: submitting the pod to kubernetes @ 04/15/24 08:56:54.936
  STEP: verifying QOS class is set on the pod @ 04/15/24 08:56:54.951
  Apr 15 08:56:54.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5521" for this suite. @ 04/15/24 08:56:55.012
• [0.182 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/15/24 08:56:55.03
  Apr 15 08:56:55.030: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/15/24 08:56:55.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:56:55.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:56:55.067
  STEP: Cleaning up the secret @ 04/15/24 08:56:57.137
  STEP: Cleaning up the configmap @ 04/15/24 08:56:57.151
  STEP: Cleaning up the pod @ 04/15/24 08:56:57.166
  Apr 15 08:56:57.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5269" for this suite. @ 04/15/24 08:56:57.232
• [2.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/15/24 08:56:57.264
  Apr 15 08:56:57.265: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pods @ 04/15/24 08:56:57.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:56:57.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:56:57.339
  STEP: creating the pod @ 04/15/24 08:56:57.364
  STEP: submitting the pod to kubernetes @ 04/15/24 08:56:57.365
  W0415 08:56:57.432201      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 04/15/24 08:56:59.468
  STEP: updating the pod @ 04/15/24 08:56:59.477
  Apr 15 08:57:00.008: INFO: Successfully updated pod "pod-update-activedeadlineseconds-d992e35f-ebf3-4f10-95be-386ef7c500fc"
  Apr 15 08:57:04.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5962" for this suite. @ 04/15/24 08:57:04.052
• [6.800 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 04/15/24 08:57:04.068
  Apr 15 08:57:04.068: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 08:57:04.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:57:04.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:57:04.116
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/15/24 08:57:04.123
  Apr 15 08:57:04.126: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/15/24 08:57:11.847
  Apr 15 08:57:11.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:57:13.545: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:57:20.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-591" for this suite. @ 04/15/24 08:57:20.379
• [16.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/15/24 08:57:20.405
  Apr 15 08:57:20.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename watch @ 04/15/24 08:57:20.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:57:20.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:57:20.445
  STEP: creating a new configmap @ 04/15/24 08:57:20.449
  STEP: modifying the configmap once @ 04/15/24 08:57:20.461
  STEP: modifying the configmap a second time @ 04/15/24 08:57:20.479
  STEP: deleting the configmap @ 04/15/24 08:57:20.498
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/15/24 08:57:20.514
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/15/24 08:57:20.519
  Apr 15 08:57:20.519: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1092  91dcc103-b231-4715-aab1-d7d74bd517cd 227449 0 2024-04-15 08:57:20 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-15 08:57:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:57:20.520: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1092  91dcc103-b231-4715-aab1-d7d74bd517cd 227450 0 2024-04-15 08:57:20 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-15 08:57:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 08:57:20.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1092" for this suite. @ 04/15/24 08:57:20.533
• [0.142 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 04/15/24 08:57:20.548
  Apr 15 08:57:20.548: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:57:20.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:57:20.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:57:20.592
  STEP: Setting up server cert @ 04/15/24 08:57:20.641
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:57:21.321
  STEP: Deploying the webhook pod @ 04/15/24 08:57:21.339
  STEP: Wait for the deployment to be ready @ 04/15/24 08:57:21.364
  Apr 15 08:57:21.393: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/15/24 08:57:23.414
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:57:23.44
  Apr 15 08:57:24.441: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/15/24 08:57:24.456
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 08:57:24.494
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/15/24 08:57:24.509
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 08:57:24.529
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/15/24 08:57:24.547
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 08:57:24.557
  Apr 15 08:57:24.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1524" for this suite. @ 04/15/24 08:57:24.688
  STEP: Destroying namespace "webhook-markers-5342" for this suite. @ 04/15/24 08:57:24.706
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 04/15/24 08:57:24.721
  Apr 15 08:57:24.721: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 08:57:24.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:57:24.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:57:24.763
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 08:57:24.768
  STEP: Saw pod success @ 04/15/24 08:57:28.807
  Apr 15 08:57:28.821: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-ebe9861e-442b-49fe-a236-8efbf1445325 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 08:57:28.863
  Apr 15 08:57:28.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6559" for this suite. @ 04/15/24 08:57:28.909
• [4.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/15/24 08:57:28.934
  Apr 15 08:57:28.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename init-container @ 04/15/24 08:57:28.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:57:28.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:57:28.987
  STEP: creating the pod @ 04/15/24 08:57:28.993
  Apr 15 08:57:28.994: INFO: PodSpec: initContainers in spec.initContainers
  Apr 15 08:58:09.214: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-e77b8c61-152d-4cfb-9476-d646391ec147", GenerateName:"", Namespace:"init-container-6383", SelfLink:"", UID:"9a811992-4a4d-4a2b-88fe-30d16060a3a5", ResourceVersion:"227659", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 8, 57, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"994499950"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 8, 57, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00443a2a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 8, 58, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00443a2d0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-r5ggj", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0012cf0a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-r5ggj", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-r5ggj", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-r5ggj", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc001b2fee8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"eehaephong4y-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0001f9d50), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001b2ff90)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc001b2ffb0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc001b2ffb8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc001b2ffbc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc00111a7e0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 8, 57, 30, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 8, 57, 29, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 8, 57, 29, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 8, 57, 29, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 8, 57, 29, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.84", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.121.84"}}, PodIP:"10.233.66.37", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.66.37"}}, StartTime:time.Date(2024, time.April, 15, 8, 57, 29, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0001f9e30)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0001f9ea0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"cri-o://c42982bd3a7aaf3564664804b7524bb35f9c745e27ab5e0594f2d0cc03bd6d98", Started:(*bool)(0xc003da005a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0012cf100), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003da006f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0012cf0e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc003da003f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Apr 15 08:58:09.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6383" for this suite. @ 04/15/24 08:58:09.238
• [40.329 seconds]
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/15/24 08:58:09.264
  Apr 15 08:58:09.266: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename events @ 04/15/24 08:58:09.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:58:09.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:58:09.334
  STEP: Create set of events @ 04/15/24 08:58:09.341
  STEP: get a list of Events with a label in the current namespace @ 04/15/24 08:58:09.378
  STEP: delete a list of events @ 04/15/24 08:58:09.387
  Apr 15 08:58:09.387: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/15/24 08:58:09.431
  Apr 15 08:58:09.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1586" for this suite. @ 04/15/24 08:58:09.451
• [0.204 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 04/15/24 08:58:09.47
  Apr 15 08:58:09.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 08:58:09.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:58:09.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:58:09.511
  Apr 15 08:58:09.519: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:58:13.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8029" for this suite. @ 04/15/24 08:58:13.229
• [3.775 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 04/15/24 08:58:13.245
  Apr 15 08:58:13.245: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 08:58:13.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:58:13.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:58:13.323
  STEP: validating cluster-info @ 04/15/24 08:58:13.33
  Apr 15 08:58:13.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-8606 cluster-info'
  Apr 15 08:58:13.542: INFO: stderr: ""
  Apr 15 08:58:13.542: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Apr 15 08:58:13.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8606" for this suite. @ 04/15/24 08:58:13.554
• [0.335 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/15/24 08:58:13.582
  Apr 15 08:58:13.582: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/15/24 08:58:13.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:58:13.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:58:13.624
  STEP: creating a target pod @ 04/15/24 08:58:13.63
  STEP: adding an ephemeral container @ 04/15/24 08:58:15.698
  STEP: checking pod container endpoints @ 04/15/24 08:58:19.759
  Apr 15 08:58:19.759: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3131 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:58:19.759: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 08:58:19.761: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:58:19.762: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-3131/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 15 08:58:19.964: INFO: Exec stderr: ""
  Apr 15 08:58:19.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3131" for this suite. @ 04/15/24 08:58:19.994
• [6.428 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/15/24 08:58:20.01
  Apr 15 08:58:20.010: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:58:20.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:58:20.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:58:20.047
  STEP: Creating projection with secret that has name projected-secret-test-2420c2a2-aa26-49fb-9213-13023fd946c8 @ 04/15/24 08:58:20.053
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:58:20.066
  STEP: Saw pod success @ 04/15/24 08:58:24.115
  Apr 15 08:58:24.124: INFO: Trying to get logs from node eehaephong4y-3 pod pod-projected-secrets-b98ecec6-3fa6-4171-8d28-8c6a591c7108 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:58:24.14
  Apr 15 08:58:24.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2793" for this suite. @ 04/15/24 08:58:24.205
• [4.208 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 04/15/24 08:58:24.221
  Apr 15 08:58:24.222: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 08:58:24.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:58:24.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:58:24.266
  STEP: Creating pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987 @ 04/15/24 08:58:24.272
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 08:58:26.324
  Apr 15 08:58:26.330: INFO: Initial restart count of pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c is 0
  Apr 15 08:58:26.340: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:28.351: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:30.361: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:32.370: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:34.382: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:36.393: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:38.404: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:40.421: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:42.431: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:44.441: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:46.449: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:48.460: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:50.470: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:52.480: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:54.491: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:56.500: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:58:58.512: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:00.520: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:02.530: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:04.538: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:06.547: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:08.555: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:10.567: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:12.585: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:14.595: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:16.612: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:18.625: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:20.635: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:22.648: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:24.657: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:26.666: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:28.683: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:30.692: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:32.703: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:34.712: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:36.725: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:38.735: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:40.748: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:42.759: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:44.769: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:46.778: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:48.790: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:50.800: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:52.810: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:54.821: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:56.834: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 08:59:58.859: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:00.870: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:02.887: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:04.898: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:06.930: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:08.942: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:10.953: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:12.965: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:14.977: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:16.984: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:18.993: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:21.006: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:23.016: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:25.024: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:27.038: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:29.049: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:31.057: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:33.075: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:35.085: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:37.097: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:39.108: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:41.119: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:43.128: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:45.142: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:47.150: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:49.161: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:51.171: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:53.183: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:55.195: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:57.207: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:00:59.217: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:01.228: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:03.236: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:05.245: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:07.256: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:09.266: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:11.276: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:13.284: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:15.342: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:17.354: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:19.364: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:21.374: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:23.383: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:25.392: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:27.403: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:29.412: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:31.423: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:33.435: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:35.449: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:37.459: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:39.470: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:41.479: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:43.489: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:45.499: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:47.512: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:49.521: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:51.534: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:53.541: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:55.552: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:57.561: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:01:59.573: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:02:01.592: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:02:03.605: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:02:05.619: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:02:07.629: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:02:09.640: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:02:11.654: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:02:13.667: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:02:15.679: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:02:17.689: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:02:19.704: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:02:21.720: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:02:23.729: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  Apr 15 09:02:25.737: INFO: Get pod busybox-a19105a9-9be7-4a86-9bb9-858ca427bb9c in namespace container-probe-1987
  STEP: deleting the pod @ 04/15/24 09:02:27.74
  Apr 15 09:02:27.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1987" for this suite. @ 04/15/24 09:02:27.786
• [243.583 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 04/15/24 09:02:27.806
  Apr 15 09:02:27.807: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 09:02:27.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:27.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:27.848
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1423 @ 04/15/24 09:02:27.855
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/15/24 09:02:27.887
  STEP: creating service externalsvc in namespace services-1423 @ 04/15/24 09:02:27.887
  STEP: creating replication controller externalsvc in namespace services-1423 @ 04/15/24 09:02:27.942
  I0415 09:02:27.969659      13 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1423, replica count: 2
  I0415 09:02:31.022397      13 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/15/24 09:02:31.038
  Apr 15 09:02:31.079: INFO: Creating new exec pod
  Apr 15 09:02:33.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-1423 exec execpodhqhqp -- /bin/sh -x -c nslookup clusterip-service.services-1423.svc.cluster.local'
  Apr 15 09:02:33.677: INFO: stderr: "+ nslookup clusterip-service.services-1423.svc.cluster.local\n"
  Apr 15 09:02:33.677: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-1423.svc.cluster.local\tcanonical name = externalsvc.services-1423.svc.cluster.local.\nName:\texternalsvc.services-1423.svc.cluster.local\nAddress: 10.233.56.101\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1423, will wait for the garbage collector to delete the pods @ 04/15/24 09:02:33.678
  Apr 15 09:02:33.751: INFO: Deleting ReplicationController externalsvc took: 15.151027ms
  Apr 15 09:02:33.852: INFO: Terminating ReplicationController externalsvc pods took: 101.251121ms
  Apr 15 09:02:37.338: INFO: Cleaning up the ClusterIP to ExternalName test service
  Apr 15 09:02:37.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1423" for this suite. @ 04/15/24 09:02:37.397
• [9.619 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/15/24 09:02:37.426
  Apr 15 09:02:37.426: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename subjectreview @ 04/15/24 09:02:37.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:37.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:37.472
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6140" @ 04/15/24 09:02:37.479
  Apr 15 09:02:37.490: INFO: saUsername: "system:serviceaccount:subjectreview-6140:e2e"
  Apr 15 09:02:37.491: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6140"}
  Apr 15 09:02:37.491: INFO: saUID: "764692a8-2a57-4ae5-afa8-7dea6237cb2f"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6140:e2e" @ 04/15/24 09:02:37.491
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6140:e2e" @ 04/15/24 09:02:37.492
  Apr 15 09:02:37.497: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6140:e2e" api 'list' configmaps in "subjectreview-6140" namespace @ 04/15/24 09:02:37.498
  Apr 15 09:02:37.503: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6140:e2e" @ 04/15/24 09:02:37.504
  Apr 15 09:02:37.520: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Apr 15 09:02:37.520: INFO: LocalSubjectAccessReview has been verified
  Apr 15 09:02:37.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-6140" for this suite. @ 04/15/24 09:02:37.547
• [0.137 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 04/15/24 09:02:37.564
  Apr 15 09:02:37.564: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 09:02:37.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:37.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:37.607
  STEP: Creating configMap with name configmap-test-volume-6fc9bc9a-9b1a-437f-9f22-c646be684b71 @ 04/15/24 09:02:37.613
  STEP: Creating a pod to test consume configMaps @ 04/15/24 09:02:37.626
  STEP: Saw pod success @ 04/15/24 09:02:41.684
  Apr 15 09:02:41.691: INFO: Trying to get logs from node eehaephong4y-3 pod pod-configmaps-a2769eb4-3674-40c9-a59d-0f32d24cb9ce container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 09:02:41.727
  Apr 15 09:02:41.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6027" for this suite. @ 04/15/24 09:02:41.775
• [4.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 04/15/24 09:02:41.794
  Apr 15 09:02:41.794: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename podtemplate @ 04/15/24 09:02:41.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:41.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:41.837
  STEP: Create a pod template @ 04/15/24 09:02:41.842
  STEP: Replace a pod template @ 04/15/24 09:02:41.856
  Apr 15 09:02:41.876: INFO: Found updated podtemplate annotation: "true"

  Apr 15 09:02:41.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3637" for this suite. @ 04/15/24 09:02:41.887
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 04/15/24 09:02:41.907
  Apr 15 09:02:41.907: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 09:02:41.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:41.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:41.951
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/15/24 09:02:41.955
  Apr 15 09:02:41.957: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:02:44.414: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:02:52.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7559" for this suite. @ 04/15/24 09:02:52.631
• [10.737 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 04/15/24 09:02:52.644
  Apr 15 09:02:52.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 09:02:52.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:52.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:52.682
  STEP: Creating replication controller my-hostname-basic-e144aa83-b3d1-4f7a-af67-55e0d4b0a1a8 @ 04/15/24 09:02:52.687
  Apr 15 09:02:52.711: INFO: Pod name my-hostname-basic-e144aa83-b3d1-4f7a-af67-55e0d4b0a1a8: Found 0 pods out of 1
  Apr 15 09:02:57.723: INFO: Pod name my-hostname-basic-e144aa83-b3d1-4f7a-af67-55e0d4b0a1a8: Found 1 pods out of 1
  Apr 15 09:02:57.723: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-e144aa83-b3d1-4f7a-af67-55e0d4b0a1a8" are running
  Apr 15 09:02:57.731: INFO: Pod "my-hostname-basic-e144aa83-b3d1-4f7a-af67-55e0d4b0a1a8-q6xn8" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 09:02:54 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 09:02:52 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 09:02:54 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 09:02:54 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 09:02:52 +0000 UTC Reason: Message:}])
  Apr 15 09:02:57.731: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/15/24 09:02:57.731
  Apr 15 09:02:57.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7171" for this suite. @ 04/15/24 09:02:57.777
• [5.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 04/15/24 09:02:57.799
  Apr 15 09:02:57.800: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 09:02:57.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:02:57.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:02:57.87
  STEP: Setting up server cert @ 04/15/24 09:02:57.934
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 09:02:59.145
  STEP: Deploying the webhook pod @ 04/15/24 09:02:59.163
  STEP: Wait for the deployment to be ready @ 04/15/24 09:02:59.193
  Apr 15 09:02:59.221: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/15/24 09:03:01.24
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 09:03:01.267
  Apr 15 09:03:02.268: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/15/24 09:03:02.285
  STEP: create a pod that should be updated by the webhook @ 04/15/24 09:03:02.328
  Apr 15 09:03:02.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6913" for this suite. @ 04/15/24 09:03:02.508
  STEP: Destroying namespace "webhook-markers-7562" for this suite. @ 04/15/24 09:03:02.524
• [4.752 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 04/15/24 09:03:02.553
  Apr 15 09:03:02.553: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 09:03:02.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:02.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:02.598
  STEP: Creating a ResourceQuota @ 04/15/24 09:03:02.603
  STEP: Getting a ResourceQuota @ 04/15/24 09:03:02.629
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/15/24 09:03:02.639
  STEP: Patching the ResourceQuota @ 04/15/24 09:03:02.651
  STEP: Deleting a Collection of ResourceQuotas @ 04/15/24 09:03:02.667
  STEP: Verifying the deleted ResourceQuota @ 04/15/24 09:03:02.699
  Apr 15 09:03:02.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2625" for this suite. @ 04/15/24 09:03:02.722
• [0.188 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 04/15/24 09:03:02.742
  Apr 15 09:03:02.742: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename dns @ 04/15/24 09:03:02.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:02.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:02.794
  STEP: Creating a test headless service @ 04/15/24 09:03:02.803
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7238.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7238.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7238.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7238.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7238.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7238.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7238.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7238.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7238.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 204.27.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.27.204_udp@PTR;check="$$(dig +tcp +noall +answer +search 204.27.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.27.204_tcp@PTR;sleep 1; done
   @ 04/15/24 09:03:02.84
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7238.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7238.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7238.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7238.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7238.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7238.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7238.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7238.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7238.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7238.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 204.27.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.27.204_udp@PTR;check="$$(dig +tcp +noall +answer +search 204.27.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.27.204_tcp@PTR;sleep 1; done
   @ 04/15/24 09:03:02.841
  STEP: creating a pod to probe DNS @ 04/15/24 09:03:02.841
  STEP: submitting the pod to kubernetes @ 04/15/24 09:03:02.841
  STEP: retrieving the pod @ 04/15/24 09:03:04.945
  STEP: looking for the results for each expected name from probers @ 04/15/24 09:03:04.954
  Apr 15 09:03:04.979: INFO: Unable to read wheezy_udp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:04.991: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:05.001: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:05.019: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:05.067: INFO: Unable to read jessie_udp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:05.075: INFO: Unable to read jessie_tcp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:05.082: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:05.091: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:05.124: INFO: Lookups using dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80 failed for: [wheezy_udp@dns-test-service.dns-7238.svc.cluster.local wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local jessie_udp@dns-test-service.dns-7238.svc.cluster.local jessie_tcp@dns-test-service.dns-7238.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local]

  Apr 15 09:03:05.176: INFO: Pod client logs for webserver: 
  Apr 15 09:03:05.189: INFO: Pod client logs for querier: 
  Apr 15 09:03:05.201: INFO: Pod client logs for jessie-querier: 
  Apr 15 09:03:09.967: INFO: Unable to read wheezy_udp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:09.976: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:09.988: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:09.997: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:10.052: INFO: Unable to read jessie_udp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:10.061: INFO: Unable to read jessie_tcp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:10.071: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:10.081: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:10.117: INFO: Lookups using dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80 failed for: [wheezy_udp@dns-test-service.dns-7238.svc.cluster.local wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local jessie_udp@dns-test-service.dns-7238.svc.cluster.local jessie_tcp@dns-test-service.dns-7238.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local]

  Apr 15 09:03:10.135: INFO: Pod client logs for webserver: 
  Apr 15 09:03:10.148: INFO: Pod client logs for querier: 
  Apr 15 09:03:10.162: INFO: Pod client logs for jessie-querier: 
  Apr 15 09:03:14.966: INFO: Unable to read wheezy_udp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:14.984: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:14.995: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:15.006: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:15.075: INFO: Unable to read jessie_udp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:15.083: INFO: Unable to read jessie_tcp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:15.093: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:15.103: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:15.145: INFO: Lookups using dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80 failed for: [wheezy_udp@dns-test-service.dns-7238.svc.cluster.local wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local jessie_udp@dns-test-service.dns-7238.svc.cluster.local jessie_tcp@dns-test-service.dns-7238.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local]

  Apr 15 09:03:15.166: INFO: Pod client logs for webserver: 
  Apr 15 09:03:15.183: INFO: Pod client logs for querier: 
  Apr 15 09:03:15.198: INFO: Pod client logs for jessie-querier: 
  Apr 15 09:03:19.964: INFO: Unable to read wheezy_udp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:19.974: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:19.986: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:19.998: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:20.062: INFO: Unable to read jessie_udp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:20.071: INFO: Unable to read jessie_tcp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:20.080: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:20.087: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:20.122: INFO: Lookups using dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80 failed for: [wheezy_udp@dns-test-service.dns-7238.svc.cluster.local wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local jessie_udp@dns-test-service.dns-7238.svc.cluster.local jessie_tcp@dns-test-service.dns-7238.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local]

  Apr 15 09:03:20.142: INFO: Pod client logs for webserver: 
  Apr 15 09:03:20.157: INFO: Pod client logs for querier: 
  Apr 15 09:03:20.169: INFO: Pod client logs for jessie-querier: 
  Apr 15 09:03:24.965: INFO: Unable to read wheezy_udp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:24.976: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:24.989: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:25.000: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:25.051: INFO: Unable to read jessie_udp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:25.061: INFO: Unable to read jessie_tcp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:25.072: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:25.080: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:25.116: INFO: Lookups using dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80 failed for: [wheezy_udp@dns-test-service.dns-7238.svc.cluster.local wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local jessie_udp@dns-test-service.dns-7238.svc.cluster.local jessie_tcp@dns-test-service.dns-7238.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local]

  Apr 15 09:03:25.133: INFO: Pod client logs for webserver: 
  Apr 15 09:03:25.151: INFO: Pod client logs for querier: 
  Apr 15 09:03:25.172: INFO: Pod client logs for jessie-querier: 
  Apr 15 09:03:29.967: INFO: Unable to read wheezy_udp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:29.977: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:29.987: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:29.998: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:30.057: INFO: Unable to read jessie_udp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:30.068: INFO: Unable to read jessie_tcp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:30.075: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:30.087: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:30.121: INFO: Lookups using dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80 failed for: [wheezy_udp@dns-test-service.dns-7238.svc.cluster.local wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local jessie_udp@dns-test-service.dns-7238.svc.cluster.local jessie_tcp@dns-test-service.dns-7238.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local]

  Apr 15 09:03:30.136: INFO: Pod client logs for webserver: 
  Apr 15 09:03:30.153: INFO: Pod client logs for querier: 
  Apr 15 09:03:30.166: INFO: Pod client logs for jessie-querier: 
  Apr 15 09:03:34.978: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:34.989: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:35.001: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local from pod dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80: the server could not find the requested resource (get pods dns-test-6ae8c595-916a-436d-8291-50de296a7e80)
  Apr 15 09:03:35.133: INFO: Lookups using dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80 failed for: [wheezy_tcp@dns-test-service.dns-7238.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7238.svc.cluster.local]

  Apr 15 09:03:35.152: INFO: Pod client logs for webserver: 
  Apr 15 09:03:35.177: INFO: Pod client logs for querier: 
  Apr 15 09:03:35.191: INFO: Pod client logs for jessie-querier: 
  Apr 15 09:03:40.142: INFO: DNS probes using dns-7238/dns-test-6ae8c595-916a-436d-8291-50de296a7e80 succeeded

  STEP: deleting the pod @ 04/15/24 09:03:40.142
  STEP: deleting the test service @ 04/15/24 09:03:40.172
  STEP: deleting the test headless service @ 04/15/24 09:03:40.279
  Apr 15 09:03:40.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7238" for this suite. @ 04/15/24 09:03:40.396
• [37.704 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 04/15/24 09:03:40.478
  Apr 15 09:03:40.482: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 09:03:40.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:40.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:40.588
  STEP: Creating configMap configmap-4567/configmap-test-8e51dc3b-5c21-4fdf-b253-792c4f2f7a95 @ 04/15/24 09:03:40.604
  STEP: Creating a pod to test consume configMaps @ 04/15/24 09:03:40.618
  STEP: Saw pod success @ 04/15/24 09:03:44.669
  Apr 15 09:03:44.700: INFO: Trying to get logs from node eehaephong4y-3 pod pod-configmaps-b72c29ff-ab61-434c-ac6d-b740c046fd22 container env-test: <nil>
  STEP: delete the pod @ 04/15/24 09:03:44.732
  Apr 15 09:03:44.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4567" for this suite. @ 04/15/24 09:03:44.78
• [4.333 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/15/24 09:03:44.811
  Apr 15 09:03:44.811: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename deployment @ 04/15/24 09:03:44.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:44.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:44.86
  Apr 15 09:03:44.867: INFO: Creating deployment "test-recreate-deployment"
  Apr 15 09:03:44.884: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Apr 15 09:03:44.902: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Apr 15 09:03:46.919: INFO: Waiting deployment "test-recreate-deployment" to complete
  Apr 15 09:03:46.927: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Apr 15 09:03:46.954: INFO: Updating deployment test-recreate-deployment
  Apr 15 09:03:46.954: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Apr 15 09:03:47.175: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-283",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd22484a-db6d-480f-be69-ee79d3b9a4bb",
      ResourceVersion: (string) (len=6) "228786",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848768624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 09:03:47.189: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-283",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a32db9ea-47c7-48f0-8fbc-0fb369488956",
      ResourceVersion: (string) (len=6) "228784",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848768627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fd22484a-db6d-480f-be69-ee79d3b9a4bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 64 32 32 34 38  34 61 2d 64 62 36 64 2d  |\"fd22484a-db6d-|
              00000120  34 38 30 66 2d 62 65 36  39 2d 65 65 37 39 64 33  |480f-be69-ee79d3|
              00000130  62 39 61 34 62 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b9a4bb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 09:03:47.211: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Apr 15 09:03:47.212: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-283",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51bd4f3f-a065-4f17-a28b-8fd6b16fcbb2",
      ResourceVersion: (string) (len=6) "228773",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848768624,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fd22484a-db6d-480f-be69-ee79d3b9a4bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768626,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 64 32 32 34 38  34 61 2d 64 62 36 64 2d  |\"fd22484a-db6d-|
              00000120  34 38 30 66 2d 62 65 36  39 2d 65 65 37 39 64 33  |480f-be69-ee79d3|
              00000130  62 39 61 34 62 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b9a4bb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 09:03:47.238: INFO: Pod "test-recreate-deployment-76fb77d45-5bjpd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-5bjpd",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=14) "deployment-283",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df41e547-b207-439b-b10a-8347881e76da",
      ResourceVersion: (string) (len=6) "228785",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848768627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "a32db9ea-47c7-48f0-8fbc-0fb369488956",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  32 64 62 39 65 61 2d 34  |d\":\"a32db9ea-4|
              00000090  37 63 37 2d 34 38 66 30  2d 38 66 62 63 2d 30 66  |7c7-48f0-8fbc-0f|
              000000a0  62 33 36 39 34 38 38 39  35 36 5c 22 7d 22 3a 7b  |b369488956\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jsj4c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jsj4c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848768627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.84"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848768627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:03:47.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-283" for this suite. @ 04/15/24 09:03:47.268
• [2.479 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 04/15/24 09:03:47.29
  Apr 15 09:03:47.290: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:03:47.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:47.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:47.334
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 09:03:47.362
  STEP: Saw pod success @ 04/15/24 09:03:51.408
  Apr 15 09:03:51.414: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-899f127a-2242-41dc-8f42-edaa2dce1f90 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 09:03:51.429
  Apr 15 09:03:51.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9511" for this suite. @ 04/15/24 09:03:51.473
• [4.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 04/15/24 09:03:51.497
  Apr 15 09:03:51.497: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 09:03:51.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:51.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:51.539
  STEP: creating an Endpoint @ 04/15/24 09:03:51.549
  STEP: waiting for available Endpoint @ 04/15/24 09:03:51.559
  STEP: listing all Endpoints @ 04/15/24 09:03:51.562
  STEP: updating the Endpoint @ 04/15/24 09:03:51.569
  STEP: fetching the Endpoint @ 04/15/24 09:03:51.581
  STEP: patching the Endpoint @ 04/15/24 09:03:51.589
  STEP: fetching the Endpoint @ 04/15/24 09:03:51.601
  STEP: deleting the Endpoint by Collection @ 04/15/24 09:03:51.608
  STEP: waiting for Endpoint deletion @ 04/15/24 09:03:51.626
  STEP: fetching the Endpoint @ 04/15/24 09:03:51.63
  Apr 15 09:03:51.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7898" for this suite. @ 04/15/24 09:03:51.647
• [0.164 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 04/15/24 09:03:51.662
  Apr 15 09:03:51.662: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 09:03:51.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:51.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:51.709
  STEP: Counting existing ResourceQuota @ 04/15/24 09:03:51.714
  STEP: Creating a ResourceQuota @ 04/15/24 09:03:56.723
  STEP: Ensuring resource quota status is calculated @ 04/15/24 09:03:56.739
  Apr 15 09:03:58.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4192" for this suite. @ 04/15/24 09:03:58.756
• [7.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 04/15/24 09:03:58.771
  Apr 15 09:03:58.771: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 09:03:58.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:03:58.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:03:58.806
  STEP: Creating simple DaemonSet "daemon-set" @ 04/15/24 09:03:58.859
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 09:03:58.87
  Apr 15 09:03:58.903: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 09:03:58.903: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  Apr 15 09:03:59.931: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 09:03:59.931: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  Apr 15 09:04:00.895: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 09:04:00.895: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  Apr 15 09:04:01.893: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 09:04:01.893: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/15/24 09:04:01.901
  STEP: DeleteCollection of the DaemonSets @ 04/15/24 09:04:01.91
  STEP: Verify that ReplicaSets have been deleted @ 04/15/24 09:04:01.929
  Apr 15 09:04:01.975: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"228932"},"items":null}

  Apr 15 09:04:01.995: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"228934"},"items":[{"metadata":{"name":"daemon-set-8s2q8","generateName":"daemon-set-","namespace":"daemonsets-9775","uid":"b1f7ec7c-76a7-4dd6-bd35-ad6ace6563ac","resourceVersion":"228931","creationTimestamp":"2024-04-15T09:03:58Z","deletionTimestamp":"2024-04-15T09:04:31Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2f00e743-7aac-49c4-a521-a770c58441f7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-15T09:03:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2f00e743-7aac-49c4-a521-a770c58441f7\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-15T09:04:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.206\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rrv6m","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rrv6m","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"eehaephong4y-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["eehaephong4y-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:04:00Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:03:58Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:04:00Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:04:00Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:03:58Z"}],"hostIP":"192.168.121.233","hostIPs":[{"ip":"192.168.121.233"}],"podIP":"10.233.65.206","podIPs":[{"ip":"10.233.65.206"}],"startTime":"2024-04-15T09:03:58Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-15T09:03:59Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://e165c00be00cbfdb272160ba1cfb66be1900ca88536eb482d3ef927fa763f413","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-ff6dx","generateName":"daemon-set-","namespace":"daemonsets-9775","uid":"6e10e396-76d8-4bf7-ae80-8718f920fc0d","resourceVersion":"228933","creationTimestamp":"2024-04-15T09:03:58Z","deletionTimestamp":"2024-04-15T09:04:31Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2f00e743-7aac-49c4-a521-a770c58441f7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-15T09:03:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2f00e743-7aac-49c4-a521-a770c58441f7\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-15T09:03:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.50\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-n7p47","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-n7p47","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"eehaephong4y-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["eehaephong4y-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:03:59Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:03:59Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:03:59Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:03:59Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:03:58Z"}],"hostIP":"192.168.121.84","hostIPs":[{"ip":"192.168.121.84"}],"podIP":"10.233.66.50","podIPs":[{"ip":"10.233.66.50"}],"startTime":"2024-04-15T09:03:59Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-15T09:03:59Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://f92d70805b7a7b55bee3b15e2518769f701c26b2b9d789a9f5ddec924489acef","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-vw5vs","generateName":"daemon-set-","namespace":"daemonsets-9775","uid":"ef62526c-0de8-45c7-8908-f04289158bf5","resourceVersion":"228928","creationTimestamp":"2024-04-15T09:03:58Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2f00e743-7aac-49c4-a521-a770c58441f7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-15T09:03:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2f00e743-7aac-49c4-a521-a770c58441f7\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-15T09:04:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.5\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rmt45","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rmt45","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"eehaephong4y-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["eehaephong4y-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:04:01Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:03:59Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:04:01Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:04:01Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T09:03:58Z"}],"hostIP":"192.168.121.26","hostIPs":[{"ip":"192.168.121.26"}],"podIP":"10.233.64.5","podIPs":[{"ip":"10.233.64.5"}],"startTime":"2024-04-15T09:03:59Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-15T09:04:01Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://97dc2fa65e2b3118fa537809d86a516916ada5bc96af0d313000022bbb951b39","started":true}],"qosClass":"BestEffort"}}]}

  Apr 15 09:04:02.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9775" for this suite. @ 04/15/24 09:04:02.069
• [3.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 04/15/24 09:04:02.092
  Apr 15 09:04:02.092: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename endpointslice @ 04/15/24 09:04:02.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:02.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:02.146
  STEP: referencing a single matching pod @ 04/15/24 09:04:07.356
  STEP: referencing matching pods with named port @ 04/15/24 09:04:12.378
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/15/24 09:04:17.397
  STEP: recreating EndpointSlices after they've been deleted @ 04/15/24 09:04:22.419
  Apr 15 09:04:22.473: INFO: EndpointSlice for Service endpointslice-5405/example-named-port not found
  Apr 15 09:04:32.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5405" for this suite. @ 04/15/24 09:04:32.5
• [30.430 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 04/15/24 09:04:32.539
  Apr 15 09:04:32.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 09:04:32.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:32.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:32.595
  STEP: Setting up server cert @ 04/15/24 09:04:32.666
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 09:04:33.773
  STEP: Deploying the webhook pod @ 04/15/24 09:04:33.801
  STEP: Wait for the deployment to be ready @ 04/15/24 09:04:33.875
  Apr 15 09:04:33.894: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/15/24 09:04:35.92
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 09:04:35.962
  Apr 15 09:04:36.964: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/15/24 09:04:36.983
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/15/24 09:04:37.04
  STEP: Creating a configMap that should not be mutated @ 04/15/24 09:04:37.058
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/15/24 09:04:37.086
  STEP: Creating a configMap that should be mutated @ 04/15/24 09:04:37.103
  Apr 15 09:04:37.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1218" for this suite. @ 04/15/24 09:04:37.282
  STEP: Destroying namespace "webhook-markers-3878" for this suite. @ 04/15/24 09:04:37.303
• [4.779 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 04/15/24 09:04:37.319
  Apr 15 09:04:37.319: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 09:04:37.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:37.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:37.391
  STEP: create deployment with httpd image @ 04/15/24 09:04:37.397
  Apr 15 09:04:37.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-6761 create -f -'
  Apr 15 09:04:37.834: INFO: stderr: ""
  Apr 15 09:04:37.834: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/15/24 09:04:37.834
  Apr 15 09:04:37.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-6761 diff -f -'
  Apr 15 09:04:38.453: INFO: rc: 1
  Apr 15 09:04:38.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-6761 delete -f -'
  Apr 15 09:04:38.683: INFO: stderr: ""
  Apr 15 09:04:38.683: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Apr 15 09:04:38.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6761" for this suite. @ 04/15/24 09:04:38.697
• [1.395 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 04/15/24 09:04:38.716
  Apr 15 09:04:38.716: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 09:04:38.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:38.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:38.767
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/15/24 09:04:38.775
  STEP: Saw pod success @ 04/15/24 09:04:42.836
  Apr 15 09:04:42.844: INFO: Trying to get logs from node eehaephong4y-3 pod pod-afb1825c-2112-46ee-9b13-33881d33443f container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:04:42.859
  Apr 15 09:04:42.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4959" for this suite. @ 04/15/24 09:04:43.012
• [4.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 04/15/24 09:04:43.033
  Apr 15 09:04:43.033: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename disruption @ 04/15/24 09:04:43.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:43.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:43.091
  STEP: creating the pdb @ 04/15/24 09:04:43.099
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:04:43.113
  STEP: updating the pdb @ 04/15/24 09:04:45.121
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:04:45.159
  STEP: patching the pdb @ 04/15/24 09:04:45.173
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:04:45.213
  STEP: Waiting for the pdb to be deleted @ 04/15/24 09:04:45.253
  Apr 15 09:04:45.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4445" for this suite. @ 04/15/24 09:04:45.275
• [2.258 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 04/15/24 09:04:45.293
  Apr 15 09:04:45.293: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename sched-preemption @ 04/15/24 09:04:45.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:04:45.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:04:45.374
  Apr 15 09:04:45.412: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 15 09:05:45.428: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/15/24 09:05:45.44
  Apr 15 09:05:45.508: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 15 09:05:45.523: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 15 09:05:45.580: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 15 09:05:45.617: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 15 09:05:45.739: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 15 09:05:45.781: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/15/24 09:05:45.782
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/15/24 09:05:49.901
  Apr 15 09:05:54.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4693" for this suite. @ 04/15/24 09:05:54.288
• [69.018 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 04/15/24 09:05:54.312
  Apr 15 09:05:54.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 09:05:54.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:05:54.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:05:54.368
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/15/24 09:05:54.375
  STEP: Saw pod success @ 04/15/24 09:05:58.435
  Apr 15 09:05:58.448: INFO: Trying to get logs from node eehaephong4y-3 pod pod-d0d160e1-5511-4f9a-b3fa-70440781d1f4 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:05:58.469
  Apr 15 09:05:58.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1020" for this suite. @ 04/15/24 09:05:58.528
• [4.236 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 04/15/24 09:05:58.548
  Apr 15 09:05:58.548: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 09:05:58.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:05:58.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:05:58.6
  STEP: Creating pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567 @ 04/15/24 09:05:58.609
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 09:06:02.664
  Apr 15 09:06:02.673: INFO: Initial restart count of pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a is 0
  Apr 15 09:06:02.681: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:04.689: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:06.698: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:08.709: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:10.722: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:12.733: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:14.742: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:16.755: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:18.768: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:20.780: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:22.791: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:24.805: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:26.815: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:28.825: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:30.851: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:32.861: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:34.913: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:36.923: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:38.933: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:40.944: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:42.961: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:44.973: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:46.983: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:49.005: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:51.014: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:53.029: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:55.042: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:57.055: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:06:59.069: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:07:01.084: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:07:03.094: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:07:05.104: INFO: Get pod test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a in namespace container-probe-3567
  Apr 15 09:07:05.104: INFO: Restart count of pod container-probe-3567/test-grpc-445a1a9e-82ec-4954-932d-45dce84c961a is now 1 (1m2.431073988s elapsed)
  STEP: deleting the pod @ 04/15/24 09:07:05.105
  Apr 15 09:07:05.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3567" for this suite. @ 04/15/24 09:07:05.157
• [66.631 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 04/15/24 09:07:05.19
  Apr 15 09:07:05.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename discovery @ 04/15/24 09:07:05.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:05.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:05.257
  STEP: Setting up server cert @ 04/15/24 09:07:05.267
  STEP: Requesting APIResourceList from "/api/v1" @ 04/15/24 09:07:06.348
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/15/24 09:07:06.353
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/15/24 09:07:06.356
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/15/24 09:07:06.359
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/15/24 09:07:06.361
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/15/24 09:07:06.365
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/15/24 09:07:06.367
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/15/24 09:07:06.37
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/15/24 09:07:06.374
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/15/24 09:07:06.378
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/15/24 09:07:06.38
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/15/24 09:07:06.384
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/15/24 09:07:06.386
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/15/24 09:07:06.389
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/15/24 09:07:06.392
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/15/24 09:07:06.397
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/15/24 09:07:06.399
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/15/24 09:07:06.402
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/15/24 09:07:06.406
  Apr 15 09:07:06.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-264" for this suite. @ 04/15/24 09:07:06.426
• [1.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 04/15/24 09:07:06.456
  Apr 15 09:07:06.457: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 09:07:06.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:06.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:06.503
  STEP: creating a ReplicationController @ 04/15/24 09:07:06.524
  STEP: waiting for RC to be added @ 04/15/24 09:07:06.538
  STEP: waiting for available Replicas @ 04/15/24 09:07:06.539
  STEP: patching ReplicationController @ 04/15/24 09:07:07.895
  STEP: waiting for RC to be modified @ 04/15/24 09:07:07.927
  STEP: patching ReplicationController status @ 04/15/24 09:07:07.928
  STEP: waiting for RC to be modified @ 04/15/24 09:07:07.942
  STEP: waiting for available Replicas @ 04/15/24 09:07:07.945
  STEP: fetching ReplicationController status @ 04/15/24 09:07:07.955
  STEP: patching ReplicationController scale @ 04/15/24 09:07:07.967
  STEP: waiting for RC to be modified @ 04/15/24 09:07:07.985
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/15/24 09:07:07.986
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/15/24 09:07:09.393
  STEP: updating ReplicationController status @ 04/15/24 09:07:09.404
  STEP: waiting for RC to be modified @ 04/15/24 09:07:09.422
  STEP: listing all ReplicationControllers @ 04/15/24 09:07:09.428
  STEP: checking that ReplicationController has expected values @ 04/15/24 09:07:09.44
  STEP: deleting ReplicationControllers by collection @ 04/15/24 09:07:09.44
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/15/24 09:07:09.463
  Apr 15 09:07:09.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 09:07:09.611843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-2861" for this suite. @ 04/15/24 09:07:09.627
• [3.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 04/15/24 09:07:09.65
  Apr 15 09:07:09.650: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 09:07:09.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:09.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:09.7
  E0415 09:07:10.613013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:11.612740      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:11.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5946" for this suite. @ 04/15/24 09:07:11.81
• [2.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 04/15/24 09:07:11.836
  Apr 15 09:07:11.836: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 09:07:11.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:11.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:11.897
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/15/24 09:07:11.911
  E0415 09:07:12.612957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:13.613598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:14.614191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:15.614132      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:07:15.993
  Apr 15 09:07:16.000: INFO: Trying to get logs from node eehaephong4y-3 pod pod-a7d02557-1fe5-4ecf-82b3-aaffee6ab575 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:07:16.016
  Apr 15 09:07:16.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2911" for this suite. @ 04/15/24 09:07:16.053
• [4.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/15/24 09:07:16.076
  Apr 15 09:07:16.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/15/24 09:07:16.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:16.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:16.139
  STEP: mirroring a new custom Endpoint @ 04/15/24 09:07:16.175
  Apr 15 09:07:16.202: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0415 09:07:16.615073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:17.616109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 04/15/24 09:07:18.214
  Apr 15 09:07:18.233: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0415 09:07:18.616887      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:19.617028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 04/15/24 09:07:20.242
  Apr 15 09:07:20.267: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0415 09:07:20.619460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:21.622294      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:22.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-3335" for this suite. @ 04/15/24 09:07:22.287
• [6.225 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 04/15/24 09:07:22.302
  Apr 15 09:07:22.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 09:07:22.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:22.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:22.36
  E0415 09:07:22.619994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:23.620922      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:24.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-530" for this suite. @ 04/15/24 09:07:24.454
• [2.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 04/15/24 09:07:24.47
  Apr 15 09:07:24.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 09:07:24.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:24.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:24.524
  STEP: creating the pod @ 04/15/24 09:07:24.534
  Apr 15 09:07:24.535: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-2997 create -f -'
  E0415 09:07:24.621164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:24.919: INFO: stderr: ""
  Apr 15 09:07:24.920: INFO: stdout: "pod/pause created\n"
  E0415 09:07:25.621951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:26.622355      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/15/24 09:07:26.943
  Apr 15 09:07:26.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-2997 label pods pause testing-label=testing-label-value'
  Apr 15 09:07:27.135: INFO: stderr: ""
  Apr 15 09:07:27.136: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/15/24 09:07:27.136
  Apr 15 09:07:27.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-2997 get pod pause -L testing-label'
  Apr 15 09:07:27.291: INFO: stderr: ""
  Apr 15 09:07:27.291: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/15/24 09:07:27.291
  Apr 15 09:07:27.291: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-2997 label pods pause testing-label-'
  Apr 15 09:07:27.471: INFO: stderr: ""
  Apr 15 09:07:27.471: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/15/24 09:07:27.471
  Apr 15 09:07:27.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-2997 get pod pause -L testing-label'
  E0415 09:07:27.622440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:27.626: INFO: stderr: ""
  Apr 15 09:07:27.626: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 04/15/24 09:07:27.627
  Apr 15 09:07:27.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-2997 delete --grace-period=0 --force -f -'
  Apr 15 09:07:27.820: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:07:27.821: INFO: stdout: "pod \"pause\" force deleted\n"
  Apr 15 09:07:27.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-2997 get rc,svc -l name=pause --no-headers'
  Apr 15 09:07:28.019: INFO: stderr: "No resources found in kubectl-2997 namespace.\n"
  Apr 15 09:07:28.019: INFO: stdout: ""
  Apr 15 09:07:28.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-2997 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 15 09:07:28.168: INFO: stderr: ""
  Apr 15 09:07:28.168: INFO: stdout: ""
  Apr 15 09:07:28.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2997" for this suite. @ 04/15/24 09:07:28.179
• [3.720 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 04/15/24 09:07:28.195
  Apr 15 09:07:28.195: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/15/24 09:07:28.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:28.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:28.246
  STEP: Setting up the test @ 04/15/24 09:07:28.264
  STEP: Creating hostNetwork=false pod @ 04/15/24 09:07:28.265
  E0415 09:07:28.623624      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:29.623967      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 04/15/24 09:07:30.314
  E0415 09:07:30.624540      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:31.625779      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 04/15/24 09:07:32.36
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/15/24 09:07:32.36
  Apr 15 09:07:32.360: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8235 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:07:32.361: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:07:32.362: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:07:32.363: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8235/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 15 09:07:32.546: INFO: Exec stderr: ""
  Apr 15 09:07:32.546: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8235 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:07:32.547: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:07:32.549: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:07:32.550: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8235/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0415 09:07:32.626065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:32.661: INFO: Exec stderr: ""
  Apr 15 09:07:32.662: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8235 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:07:32.662: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:07:32.666: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:07:32.666: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8235/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 15 09:07:32.817: INFO: Exec stderr: ""
  Apr 15 09:07:32.817: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8235 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:07:32.817: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:07:32.820: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:07:32.820: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8235/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 15 09:07:32.927: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/15/24 09:07:32.927
  Apr 15 09:07:32.928: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8235 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:07:32.928: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:07:32.930: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:07:32.931: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8235/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 15 09:07:33.120: INFO: Exec stderr: ""
  Apr 15 09:07:33.120: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8235 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:07:33.120: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:07:33.122: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:07:33.123: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8235/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 15 09:07:33.250: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/15/24 09:07:33.25
  Apr 15 09:07:33.250: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8235 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:07:33.250: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:07:33.253: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:07:33.253: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8235/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 15 09:07:33.430: INFO: Exec stderr: ""
  Apr 15 09:07:33.430: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8235 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:07:33.430: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:07:33.434: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:07:33.434: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8235/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 15 09:07:33.570: INFO: Exec stderr: ""
  Apr 15 09:07:33.570: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8235 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:07:33.570: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:07:33.573: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:07:33.573: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8235/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E0415 09:07:33.627123      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:33.717: INFO: Exec stderr: ""
  Apr 15 09:07:33.718: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8235 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:07:33.718: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:07:33.721: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:07:33.721: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8235/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 15 09:07:33.892: INFO: Exec stderr: ""
  Apr 15 09:07:33.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8235" for this suite. @ 04/15/24 09:07:33.902
• [5.726 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 04/15/24 09:07:33.924
  Apr 15 09:07:33.924: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 09:07:33.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:33.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:33.975
  STEP: Creating configMap configmap-2678/configmap-test-4c9aa7fd-c2fb-4972-aa1c-efba031a07ab @ 04/15/24 09:07:33.981
  STEP: Creating a pod to test consume configMaps @ 04/15/24 09:07:33.994
  E0415 09:07:34.627212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:35.628485      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:36.629358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:37.629660      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:07:38.039
  Apr 15 09:07:38.047: INFO: Trying to get logs from node eehaephong4y-1 pod pod-configmaps-f6f3af97-564a-49c4-bdb6-bad675130be1 container env-test: <nil>
  STEP: delete the pod @ 04/15/24 09:07:38.088
  Apr 15 09:07:38.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2678" for this suite. @ 04/15/24 09:07:38.132
• [4.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/15/24 09:07:38.148
  Apr 15 09:07:38.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:07:38.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:38.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:38.19
  STEP: Creating projection with secret that has name projected-secret-test-map-16d2b715-68ed-4a70-80dd-db9a610ab937 @ 04/15/24 09:07:38.196
  STEP: Creating a pod to test consume secrets @ 04/15/24 09:07:38.21
  E0415 09:07:38.631195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:39.631598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:40.631445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:41.631854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:07:42.275
  Apr 15 09:07:42.284: INFO: Trying to get logs from node eehaephong4y-2 pod pod-projected-secrets-f2247ec4-6a87-457f-8196-fe90c822bb74 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 09:07:42.323
  Apr 15 09:07:42.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2727" for this suite. @ 04/15/24 09:07:42.371
• [4.237 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 04/15/24 09:07:42.386
  Apr 15 09:07:42.386: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 09:07:42.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:42.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:42.434
  STEP: Setting up server cert @ 04/15/24 09:07:42.484
  E0415 09:07:42.631741      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:43.632737      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 09:07:43.645
  STEP: Deploying the webhook pod @ 04/15/24 09:07:43.669
  STEP: Wait for the deployment to be ready @ 04/15/24 09:07:43.692
  Apr 15 09:07:43.711: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0415 09:07:44.633597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:45.633713      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 09:07:45.74
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 09:07:45.789
  E0415 09:07:46.634366      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:46.789: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/15/24 09:07:46.805
  STEP: create a configmap that should be updated by the webhook @ 04/15/24 09:07:46.849
  Apr 15 09:07:47.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3159" for this suite. @ 04/15/24 09:07:47.072
  STEP: Destroying namespace "webhook-markers-2113" for this suite. @ 04/15/24 09:07:47.088
• [4.718 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 04/15/24 09:07:47.105
  Apr 15 09:07:47.105: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 09:07:47.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:47.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:47.158
  STEP: creating a Service @ 04/15/24 09:07:47.179
  STEP: watching for the Service to be added @ 04/15/24 09:07:47.214
  Apr 15 09:07:47.220: INFO: Found Service test-service-5cq66 in namespace services-8040 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31664}]
  Apr 15 09:07:47.220: INFO: Service test-service-5cq66 created
  STEP: Getting /status @ 04/15/24 09:07:47.22
  Apr 15 09:07:47.231: INFO: Service test-service-5cq66 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/15/24 09:07:47.231
  STEP: watching for the Service to be patched @ 04/15/24 09:07:47.247
  Apr 15 09:07:47.251: INFO: observed Service test-service-5cq66 in namespace services-8040 with annotations: map[] & LoadBalancer: {[]}
  Apr 15 09:07:47.251: INFO: Found Service test-service-5cq66 in namespace services-8040 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Apr 15 09:07:47.251: INFO: Service test-service-5cq66 has service status patched
  STEP: updating the ServiceStatus @ 04/15/24 09:07:47.251
  Apr 15 09:07:47.271: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/15/24 09:07:47.271
  Apr 15 09:07:47.278: INFO: Observed Service test-service-5cq66 in namespace services-8040 with annotations: map[] & Conditions: {[]}
  Apr 15 09:07:47.280: INFO: Observed event: &Service{ObjectMeta:{test-service-5cq66  services-8040  330df807-18b4-4912-8453-98019ed9b2df 230113 0 2024-04-15 09:07:47 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-04-15 09:07:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-04-15 09:07:47 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31664,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.22.16,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.22.16],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Apr 15 09:07:47.282: INFO: Found Service test-service-5cq66 in namespace services-8040 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 15 09:07:47.283: INFO: Service test-service-5cq66 has service status updated
  STEP: patching the service @ 04/15/24 09:07:47.284
  STEP: watching for the Service to be patched @ 04/15/24 09:07:47.346
  Apr 15 09:07:47.350: INFO: observed Service test-service-5cq66 in namespace services-8040 with labels: map[test-service-static:true]
  Apr 15 09:07:47.350: INFO: observed Service test-service-5cq66 in namespace services-8040 with labels: map[test-service-static:true]
  Apr 15 09:07:47.350: INFO: observed Service test-service-5cq66 in namespace services-8040 with labels: map[test-service-static:true]
  Apr 15 09:07:47.351: INFO: Found Service test-service-5cq66 in namespace services-8040 with labels: map[test-service:patched test-service-static:true]
  Apr 15 09:07:47.351: INFO: Service test-service-5cq66 patched
  STEP: deleting the service @ 04/15/24 09:07:47.354
  STEP: watching for the Service to be deleted @ 04/15/24 09:07:47.405
  Apr 15 09:07:47.409: INFO: Observed event: ADDED
  Apr 15 09:07:47.410: INFO: Observed event: MODIFIED
  Apr 15 09:07:47.411: INFO: Observed event: MODIFIED
  Apr 15 09:07:47.412: INFO: Observed event: MODIFIED
  Apr 15 09:07:47.412: INFO: Found Service test-service-5cq66 in namespace services-8040 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Apr 15 09:07:47.412: INFO: Service test-service-5cq66 deleted
  Apr 15 09:07:47.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8040" for this suite. @ 04/15/24 09:07:47.428
• [0.339 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 04/15/24 09:07:47.446
  Apr 15 09:07:47.446: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 09:07:47.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:47.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:47.502
  STEP: Creating the pod @ 04/15/24 09:07:47.509
  E0415 09:07:47.635235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:48.636099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:49.636957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:50.110: INFO: Successfully updated pod "labelsupdate1da5f5a2-c30d-436c-9efe-5ec4b1c5df37"
  E0415 09:07:50.637150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:51.637428      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:52.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-470" for this suite. @ 04/15/24 09:07:52.168
• [4.742 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 04/15/24 09:07:52.19
  Apr 15 09:07:52.190: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 09:07:52.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:52.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:52.271
  STEP: creating a collection of services @ 04/15/24 09:07:52.282
  Apr 15 09:07:52.282: INFO: Creating e2e-svc-a-9c7gx
  Apr 15 09:07:52.312: INFO: Creating e2e-svc-b-s4nm9
  Apr 15 09:07:52.347: INFO: Creating e2e-svc-c-gzxkn
  STEP: deleting service collection @ 04/15/24 09:07:52.383
  Apr 15 09:07:52.466: INFO: Collection of services has been deleted
  Apr 15 09:07:52.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7079" for this suite. @ 04/15/24 09:07:52.481
• [0.308 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 04/15/24 09:07:52.499
  Apr 15 09:07:52.499: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 09:07:52.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:07:52.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:07:52.595
  STEP: creating service in namespace services-8277 @ 04/15/24 09:07:52.607
  STEP: creating service affinity-clusterip in namespace services-8277 @ 04/15/24 09:07:52.609
  E0415 09:07:52.637632      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-clusterip in namespace services-8277 @ 04/15/24 09:07:52.651
  I0415 09:07:52.666253      13 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-8277, replica count: 3
  E0415 09:07:53.638939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:54.639803      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:55.640295      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 09:07:55.719225      13 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 09:07:55.739: INFO: Creating new exec pod
  E0415 09:07:56.641336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:57.641511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:07:58.641823      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:07:58.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-8277 exec execpod-affinityth9lb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Apr 15 09:07:59.182: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Apr 15 09:07:59.183: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:07:59.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-8277 exec execpod-affinityth9lb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.226 80'
  Apr 15 09:07:59.545: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.44.226 80\nConnection to 10.233.44.226 80 port [tcp/http] succeeded!\n"
  Apr 15 09:07:59.545: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:07:59.546: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-8277 exec execpod-affinityth9lb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.44.226:80/ ; done'
  E0415 09:07:59.642626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:08:00.176: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.226:80/\n"
  Apr 15 09:08:00.176: INFO: stdout: "\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch\naffinity-clusterip-jdqch"
  Apr 15 09:08:00.176: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.176: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.176: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.176: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.176: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.176: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.176: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.176: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.176: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.176: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.176: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.176: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.176: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.177: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.177: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.177: INFO: Received response from host: affinity-clusterip-jdqch
  Apr 15 09:08:00.177: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8277, will wait for the garbage collector to delete the pods @ 04/15/24 09:08:00.205
  Apr 15 09:08:00.292: INFO: Deleting ReplicationController affinity-clusterip took: 21.667608ms
  Apr 15 09:08:00.493: INFO: Terminating ReplicationController affinity-clusterip pods took: 201.396397ms
  E0415 09:08:00.643037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:01.645418      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:02.644714      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:03.645576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:08:04.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8277" for this suite. @ 04/15/24 09:08:04.068
• [11.587 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 04/15/24 09:08:04.087
  Apr 15 09:08:04.087: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:08:04.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:08:04.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:08:04.141
  STEP: Creating configMap with name cm-test-opt-del-55a9bc14-95a0-4145-a152-205d26faacc6 @ 04/15/24 09:08:04.169
  STEP: Creating configMap with name cm-test-opt-upd-6e35854f-32f3-4391-b099-ba75d60f8935 @ 04/15/24 09:08:04.182
  STEP: Creating the pod @ 04/15/24 09:08:04.195
  E0415 09:08:04.645703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:05.645895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:06.647066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:07.647261      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-55a9bc14-95a0-4145-a152-205d26faacc6 @ 04/15/24 09:08:08.325
  STEP: Updating configmap cm-test-opt-upd-6e35854f-32f3-4391-b099-ba75d60f8935 @ 04/15/24 09:08:08.346
  STEP: Creating configMap with name cm-test-opt-create-19635611-7481-4c50-81a1-cc827c78b1dd @ 04/15/24 09:08:08.362
  STEP: waiting to observe update in volume @ 04/15/24 09:08:08.376
  E0415 09:08:08.648053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:09.648309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:10.648536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:11.648714      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:12.648938      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:13.649883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:14.650484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:15.653221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:16.652273      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:17.652574      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:18.653393      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:19.653741      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:20.654745      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:21.655677      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:22.655863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:23.656040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:24.662933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:25.663100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:26.663281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:27.663649      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:28.664587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:29.664865      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:30.666609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:31.666232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:32.666739      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:33.667127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:34.667420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:35.667752      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:36.668942      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:37.669129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:38.669260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:39.669587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:40.670590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:41.670939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:42.672060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:43.672232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:44.672508      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:45.672908      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:46.673773      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:47.674907      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:48.675067      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:49.675365      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:50.676189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:51.676743      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:52.676958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:53.678180      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:54.678206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:55.678892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:56.679035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:57.679985      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:58.681049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:08:59.681084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:00.681269      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:01.681524      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:02.681896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:03.682240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:04.682831      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:05.683834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:06.684204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:07.684535      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:08.684896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:09.685184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:10.685287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:11.685583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:12.685770      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:09:13.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9357" for this suite. @ 04/15/24 09:09:13.169
• [69.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 04/15/24 09:09:13.197
  Apr 15 09:09:13.197: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 09:09:13.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:09:13.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:09:13.272
  STEP: creating service endpoint-test2 in namespace services-5570 @ 04/15/24 09:09:13.284
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5570 to expose endpoints map[] @ 04/15/24 09:09:13.326
  Apr 15 09:09:13.360: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0415 09:09:13.686896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:09:14.382: INFO: successfully validated that service endpoint-test2 in namespace services-5570 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5570 @ 04/15/24 09:09:14.383
  E0415 09:09:14.687698      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:15.687914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5570 to expose endpoints map[pod1:[80]] @ 04/15/24 09:09:16.447
  Apr 15 09:09:16.470: INFO: successfully validated that service endpoint-test2 in namespace services-5570 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/15/24 09:09:16.471
  Apr 15 09:09:16.471: INFO: Creating new exec pod
  E0415 09:09:16.688526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:17.689360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:18.689668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:09:19.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5570 exec execpod78vwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0415 09:09:19.690173      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:09:19.981: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 15 09:09:19.981: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:09:19.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5570 exec execpod78vwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.21.89 80'
  Apr 15 09:09:20.346: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.21.89 80\nConnection to 10.233.21.89 80 port [tcp/http] succeeded!\n"
  Apr 15 09:09:20.346: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5570 @ 04/15/24 09:09:20.347
  E0415 09:09:20.691176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:21.691542      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5570 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/15/24 09:09:22.391
  Apr 15 09:09:22.426: INFO: successfully validated that service endpoint-test2 in namespace services-5570 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/15/24 09:09:22.426
  E0415 09:09:22.691950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:09:23.432: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5570 exec execpod78vwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0415 09:09:23.692821      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:09:23.782: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 15 09:09:23.782: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:09:23.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5570 exec execpod78vwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.21.89 80'
  Apr 15 09:09:24.135: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.21.89 80\nConnection to 10.233.21.89 80 port [tcp/http] succeeded!\n"
  Apr 15 09:09:24.136: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5570 @ 04/15/24 09:09:24.136
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5570 to expose endpoints map[pod2:[80]] @ 04/15/24 09:09:24.167
  E0415 09:09:24.693239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:09:25.215: INFO: successfully validated that service endpoint-test2 in namespace services-5570 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/15/24 09:09:25.217
  E0415 09:09:25.693465      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:09:26.218: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5570 exec execpod78vwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 15 09:09:26.546: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 15 09:09:26.546: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:09:26.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-5570 exec execpod78vwx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.21.89 80'
  E0415 09:09:26.695378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:09:26.852: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.21.89 80\nConnection to 10.233.21.89 80 port [tcp/http] succeeded!\n"
  Apr 15 09:09:26.853: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5570 @ 04/15/24 09:09:26.853
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5570 to expose endpoints map[] @ 04/15/24 09:09:26.872
  E0415 09:09:27.695514      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:09:27.940: INFO: successfully validated that service endpoint-test2 in namespace services-5570 exposes endpoints map[]
  Apr 15 09:09:27.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5570" for this suite. @ 04/15/24 09:09:28.007
• [14.833 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 04/15/24 09:09:28.031
  Apr 15 09:09:28.031: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename sched-pred @ 04/15/24 09:09:28.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:09:28.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:09:28.089
  Apr 15 09:09:28.097: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 15 09:09:28.132: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 09:09:28.147: INFO: 
  Logging pods the apiserver thinks is on node eehaephong4y-1 before test
  Apr 15 09:09:28.209: INFO: coredns-76f75df574-nft85 from kube-system started at 2024-04-15 07:36:17 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.209: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 09:09:28.214: INFO: kube-addon-manager-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.215: INFO: 	Container kube-addon-manager ready: true, restart count 6
  Apr 15 09:09:28.216: INFO: kube-apiserver-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.217: INFO: 	Container kube-apiserver ready: true, restart count 6
  Apr 15 09:09:28.218: INFO: kube-controller-manager-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.218: INFO: 	Container kube-controller-manager ready: true, restart count 6
  Apr 15 09:09:28.218: INFO: kube-flannel-ds-567cz from kube-system started at 2024-04-15 07:36:20 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.219: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 09:09:28.219: INFO: kube-proxy-w6l7t from kube-system started at 2024-04-15 07:36:18 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.220: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 09:09:28.220: INFO: kube-scheduler-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.220: INFO: 	Container kube-scheduler ready: true, restart count 6
  Apr 15 09:09:28.221: INFO: sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-8vjkh from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 09:09:28.222: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 09:09:28.223: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 09:09:28.224: INFO: 
  Logging pods the apiserver thinks is on node eehaephong4y-2 before test
  Apr 15 09:09:28.254: INFO: coredns-76f75df574-wtmjp from kube-system started at 2024-04-15 08:15:51 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.254: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 09:09:28.254: INFO: kube-addon-manager-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.254: INFO: 	Container kube-addon-manager ready: true, restart count 6
  Apr 15 09:09:28.254: INFO: kube-apiserver-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.254: INFO: 	Container kube-apiserver ready: true, restart count 6
  Apr 15 09:09:28.254: INFO: kube-controller-manager-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.254: INFO: 	Container kube-controller-manager ready: true, restart count 6
  Apr 15 09:09:28.254: INFO: kube-flannel-ds-hbsdj from kube-system started at 2024-04-15 07:36:20 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.254: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 09:09:28.254: INFO: kube-proxy-gt6dv from kube-system started at 2024-04-15 07:36:18 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.254: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 09:09:28.254: INFO: kube-scheduler-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.254: INFO: 	Container kube-scheduler ready: true, restart count 6
  Apr 15 09:09:28.254: INFO: sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-rcjkl from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 09:09:28.254: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 09:09:28.254: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 09:09:28.254: INFO: 
  Logging pods the apiserver thinks is on node eehaephong4y-3 before test
  Apr 15 09:09:28.273: INFO: kube-flannel-ds-cvbzz from kube-system started at 2024-04-15 08:16:16 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.274: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 09:09:28.275: INFO: kube-proxy-27pwt from kube-system started at 2024-04-15 07:36:18 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.276: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 09:09:28.277: INFO: execpod78vwx from services-5570 started at 2024-04-15 09:09:16 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.278: INFO: 	Container agnhost-container ready: true, restart count 0
  Apr 15 09:09:28.279: INFO: sonobuoy from sonobuoy started at 2024-04-15 07:36:43 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:28.279: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 15 09:09:28.280: INFO: sonobuoy-e2e-job-9c84e5eeb0144b9d from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 09:09:28.281: INFO: 	Container e2e ready: true, restart count 0
  Apr 15 09:09:28.281: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 09:09:28.282: INFO: sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-m2mlk from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 09:09:28.282: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 09:09:28.283: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/15/24 09:09:28.283
  E0415 09:09:28.696721      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:29.696638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/15/24 09:09:30.347
  STEP: Trying to apply a random label on the found node. @ 04/15/24 09:09:30.375
  STEP: verifying the node has the label kubernetes.io/e2e-2e2f93b2-0fbd-401a-91e5-3f4901cdfb62 42 @ 04/15/24 09:09:30.399
  STEP: Trying to relaunch the pod, now with labels. @ 04/15/24 09:09:30.411
  E0415 09:09:30.697863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:31.697734      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-2e2f93b2-0fbd-401a-91e5-3f4901cdfb62 off the node eehaephong4y-3 @ 04/15/24 09:09:32.463
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-2e2f93b2-0fbd-401a-91e5-3f4901cdfb62 @ 04/15/24 09:09:32.509
  Apr 15 09:09:32.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4398" for this suite. @ 04/15/24 09:09:32.54
• [4.534 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 04/15/24 09:09:32.565
  Apr 15 09:09:32.565: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename secrets @ 04/15/24 09:09:32.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:09:32.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:09:32.626
  STEP: creating secret secrets-3172/secret-test-f539a76a-6d31-4a36-a7ea-98ef97b7bd94 @ 04/15/24 09:09:32.637
  STEP: Creating a pod to test consume secrets @ 04/15/24 09:09:32.651
  E0415 09:09:32.700554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:33.700579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:34.700719      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:35.701439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:36.702095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:09:36.712
  Apr 15 09:09:36.722: INFO: Trying to get logs from node eehaephong4y-3 pod pod-configmaps-7789bc5b-6e48-4f01-91d8-2a9b3ad644fa container env-test: <nil>
  STEP: delete the pod @ 04/15/24 09:09:36.748
  Apr 15 09:09:36.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3172" for this suite. @ 04/15/24 09:09:36.806
• [4.256 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 04/15/24 09:09:36.824
  Apr 15 09:09:36.825: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 09:09:36.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:09:36.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:09:36.872
  STEP: set up a multi version CRD @ 04/15/24 09:09:36.882
  Apr 15 09:09:36.885: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  E0415 09:09:37.702597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:38.703105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:39.703704      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:40.704373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:41.704482      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 04/15/24 09:09:42.208
  STEP: check the unserved version gets removed @ 04/15/24 09:09:42.269
  E0415 09:09:42.704597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:43.705405      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 04/15/24 09:09:43.824
  E0415 09:09:44.705824      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:45.707084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:46.708128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:09:47.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8195" for this suite. @ 04/15/24 09:09:47.451
• [10.653 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 04/15/24 09:09:47.48
  Apr 15 09:09:47.481: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename gc @ 04/15/24 09:09:47.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:09:47.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:09:47.529
  STEP: create the deployment @ 04/15/24 09:09:47.536
  W0415 09:09:47.548085      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/15/24 09:09:47.549
  E0415 09:09:47.708995      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 04/15/24 09:09:48.059
  STEP: wait for all rs to be garbage collected @ 04/15/24 09:09:48.078
  STEP: expected 0 rs, got 1 rs @ 04/15/24 09:09:48.101
  STEP: expected 0 pods, got 2 pods @ 04/15/24 09:09:48.11
  STEP: Gathering metrics @ 04/15/24 09:09:48.612
  E0415 09:09:48.709732      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:09:48.878: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 09:09:48.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7163" for this suite. @ 04/15/24 09:09:48.903
• [1.448 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 04/15/24 09:09:48.929
  Apr 15 09:09:48.929: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename sched-pred @ 04/15/24 09:09:48.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:09:49.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:09:49.09
  Apr 15 09:09:49.109: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 15 09:09:49.141: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 09:09:49.153: INFO: 
  Logging pods the apiserver thinks is on node eehaephong4y-1 before test
  Apr 15 09:09:49.173: INFO: coredns-76f75df574-nft85 from kube-system started at 2024-04-15 07:36:17 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.174: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 09:09:49.174: INFO: kube-addon-manager-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.175: INFO: 	Container kube-addon-manager ready: true, restart count 6
  Apr 15 09:09:49.175: INFO: kube-apiserver-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.176: INFO: 	Container kube-apiserver ready: true, restart count 6
  Apr 15 09:09:49.176: INFO: kube-controller-manager-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.177: INFO: 	Container kube-controller-manager ready: true, restart count 6
  Apr 15 09:09:49.177: INFO: kube-flannel-ds-567cz from kube-system started at 2024-04-15 07:36:20 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.177: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 09:09:49.178: INFO: kube-proxy-w6l7t from kube-system started at 2024-04-15 07:36:18 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.178: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 09:09:49.179: INFO: kube-scheduler-eehaephong4y-1 from kube-system started at 2024-04-15 06:17:37 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.180: INFO: 	Container kube-scheduler ready: true, restart count 6
  Apr 15 09:09:49.180: INFO: sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-8vjkh from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 09:09:49.180: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 09:09:49.181: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 09:09:49.181: INFO: 
  Logging pods the apiserver thinks is on node eehaephong4y-2 before test
  Apr 15 09:09:49.211: INFO: coredns-76f75df574-wtmjp from kube-system started at 2024-04-15 08:15:51 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.211: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 09:09:49.211: INFO: kube-addon-manager-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.211: INFO: 	Container kube-addon-manager ready: true, restart count 6
  Apr 15 09:09:49.211: INFO: kube-apiserver-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.212: INFO: 	Container kube-apiserver ready: true, restart count 6
  Apr 15 09:09:49.212: INFO: kube-controller-manager-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.212: INFO: 	Container kube-controller-manager ready: true, restart count 6
  Apr 15 09:09:49.212: INFO: kube-flannel-ds-hbsdj from kube-system started at 2024-04-15 07:36:20 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.212: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 09:09:49.212: INFO: kube-proxy-gt6dv from kube-system started at 2024-04-15 07:36:18 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.212: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 09:09:49.212: INFO: kube-scheduler-eehaephong4y-2 from kube-system started at 2024-04-15 06:18:03 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.212: INFO: 	Container kube-scheduler ready: true, restart count 6
  Apr 15 09:09:49.212: INFO: sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-rcjkl from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 09:09:49.212: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 09:09:49.212: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 09:09:49.212: INFO: 
  Logging pods the apiserver thinks is on node eehaephong4y-3 before test
  Apr 15 09:09:49.231: INFO: kube-flannel-ds-cvbzz from kube-system started at 2024-04-15 08:16:16 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.232: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 09:09:49.232: INFO: kube-proxy-27pwt from kube-system started at 2024-04-15 07:36:18 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.232: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 09:09:49.233: INFO: sonobuoy from sonobuoy started at 2024-04-15 07:36:43 +0000 UTC (1 container statuses recorded)
  Apr 15 09:09:49.233: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 15 09:09:49.234: INFO: sonobuoy-e2e-job-9c84e5eeb0144b9d from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 09:09:49.234: INFO: 	Container e2e ready: true, restart count 0
  Apr 15 09:09:49.235: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 09:09:49.235: INFO: sonobuoy-systemd-logs-daemon-set-347ee8f7598a441a-m2mlk from sonobuoy started at 2024-04-15 07:36:44 +0000 UTC (2 container statuses recorded)
  Apr 15 09:09:49.236: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 09:09:49.236: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/15/24 09:09:49.237
  E0415 09:09:49.710140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:50.711334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/15/24 09:09:51.306
  STEP: Trying to apply a random label on the found node. @ 04/15/24 09:09:51.36
  STEP: verifying the node has the label kubernetes.io/e2e-4446a7ab-be6b-45bc-9ec7-a3ace26a8dd7 95 @ 04/15/24 09:09:51.392
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/15/24 09:09:51.404
  E0415 09:09:51.711447      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:52.712009      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.84 on the node which pod4 resides and expect not scheduled @ 04/15/24 09:09:53.435
  E0415 09:09:53.712903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:54.713530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:55.714993      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:56.714544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:57.715443      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:58.715806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:09:59.716269      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:00.716109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:01.716361      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:02.716636      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:03.717104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:04.717416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:05.717434      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:06.717956      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:07.720146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:08.718613      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:09.719430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:10.720309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:11.720926      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:12.724519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:13.723181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:14.724260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:15.725070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:16.725331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:17.725502      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:18.725691      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:19.726999      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:20.729075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:21.728068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:22.728781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:23.729754      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:24.729940      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:25.731020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:26.731143      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:27.731963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:28.732183      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:29.732763      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:30.733371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:31.733411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:32.733687      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:33.734367      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:34.734431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:35.735084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:36.735245      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:37.735830      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:38.736032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:39.737050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:40.737188      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:41.738009      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:42.738863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:43.739533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:44.739842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:45.740084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:46.740725      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:47.741070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:48.741172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:49.741752      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:50.742115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:51.742290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:52.742609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:53.742798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:54.743585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:55.743851      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:56.744186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:57.744553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:58.744618      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:10:59.744781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:00.745020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:01.745164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:02.746106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:03.746472      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:04.746526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:05.747122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:06.747497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:07.747605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:08.747964      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:09.748298      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:10.748524      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:11.748928      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:12.749399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:13.750159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:14.750775      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:15.750979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:16.751290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:17.751755      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:18.751823      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:19.752828      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:20.753071      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:21.753991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:22.754289      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:23.754460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:24.754729      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:25.755473      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:26.756234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:27.756886      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:28.757397      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:29.757747      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:30.758145      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:31.758637      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:32.759033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:33.759888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:34.759431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:35.760319      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:36.760085      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:37.760660      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:38.761360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:39.761683      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:40.761835      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:41.762212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:42.762327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:43.763260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:44.763442      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:45.763993      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:46.764431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:47.764624      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:48.764859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:49.765740      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:50.766770      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:51.767034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:52.768166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:53.768397      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:54.768754      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:55.769184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:56.769593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:57.769808      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:58.769948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:11:59.770556      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:00.771368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:01.771388      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:02.772282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:03.773081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:04.774302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:05.775195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:06.776563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:07.776939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:08.777683      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:09.777763      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:10.777909      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:11.779008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:12.779428      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:13.779685      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:14.779866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:15.780707      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:16.781899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:17.781977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:18.783462      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:19.783452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:20.784075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:21.784464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:22.785309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:23.785764      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:24.785840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:25.786690      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:26.786852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:27.787884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:28.788141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:29.788484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:30.789017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:31.789263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:32.789901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:33.790870      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:34.791242      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:35.791411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:36.792541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:37.792883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:38.793160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:39.793674      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:40.794485      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:41.794890      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:42.795452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:43.795336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:44.795719      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:45.796043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:46.796861      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:47.797858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:48.798596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:49.799944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:50.801013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:51.801513      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:52.801483      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:53.801701      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:54.802926      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:55.804007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:56.805211      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:57.806148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:58.807105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:12:59.811177      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:00.809683      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:01.810320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:02.810391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:03.811262      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:04.817580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:05.815680      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:06.815756      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:07.816424      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:08.816815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:09.816911      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:10.822187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:11.820143      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:12.820343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:13.821464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:14.822856      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:15.829420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:16.827136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:17.827055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:18.828016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:19.829617      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:20.829536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:21.830612      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:22.831439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:23.831799      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:24.832224      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:25.833177      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:26.833138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:27.833805      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:28.834883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:29.835765      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:30.836076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:31.836954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:32.837484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:33.837882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:34.839298      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:35.839254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:36.840085      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:37.841263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:38.841716      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:39.842003      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:40.842907      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:41.843650      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:42.843874      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:43.844362      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:44.844614      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:45.845053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:46.846173      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:47.847016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:48.848512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:49.848038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:50.849155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:51.849356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:52.850170      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:53.849988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:54.850960      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:55.851333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:56.852190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:57.852432      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:58.852841      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:13:59.853652      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:00.854563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:01.855225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:02.855691      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:03.855763      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:04.856872      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:05.857826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:06.858596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:07.859579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:08.859825      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:09.860027      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:10.860714      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:11.860973      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:12.861457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:13.862210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:14.863044      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:15.862930      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:16.863229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:17.863716      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:18.864477      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:19.864790      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:20.864893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:21.865325      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:22.866400      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:23.866620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:24.866879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:25.867032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:26.867239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:27.867595      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:28.867862      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:29.868105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:30.868995      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:31.869588      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:32.869616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:33.870773      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:34.871353      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:35.871069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:36.871378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:37.871757      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:38.872765      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:39.872842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:40.873111      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:41.873228      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:42.873374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:43.873520      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:44.874505      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:45.874900      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:46.875085      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:47.875127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:48.875539      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:49.875762      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:50.876450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:51.877275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:14:52.878073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-4446a7ab-be6b-45bc-9ec7-a3ace26a8dd7 off the node eehaephong4y-3 @ 04/15/24 09:14:53.458
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-4446a7ab-be6b-45bc-9ec7-a3ace26a8dd7 @ 04/15/24 09:14:53.498
  Apr 15 09:14:53.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1280" for this suite. @ 04/15/24 09:14:53.526
• [304.620 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/15/24 09:14:53.558
  Apr 15 09:14:53.558: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 09:14:53.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:14:53.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:14:53.631
  STEP: Creating simple DaemonSet "daemon-set" @ 04/15/24 09:14:53.716
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 09:14:53.741
  Apr 15 09:14:53.767: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 09:14:53.767: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  E0415 09:14:53.879665      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:54.795: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 09:14:54.796: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  E0415 09:14:54.879430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:55.767: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 09:14:55.768: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/15/24 09:14:55.778
  Apr 15 09:14:55.837: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 09:14:55.837: INFO: Node eehaephong4y-2 is running 0 daemon pod, expected 1
  E0415 09:14:55.880453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:56.839: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 09:14:56.839: INFO: Node eehaephong4y-2 is running 0 daemon pod, expected 1
  E0415 09:14:56.881238      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:57.836: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 09:14:57.836: INFO: Node eehaephong4y-2 is running 0 daemon pod, expected 1
  E0415 09:14:57.881981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:58.843: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 09:14:58.843: INFO: Node eehaephong4y-2 is running 0 daemon pod, expected 1
  E0415 09:14:58.882631      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:59.835: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 09:14:59.835: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 09:14:59.848
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5706, will wait for the garbage collector to delete the pods @ 04/15/24 09:14:59.848
  E0415 09:14:59.883828      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:14:59.922: INFO: Deleting DaemonSet.extensions daemon-set took: 17.38914ms
  Apr 15 09:15:00.024: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.41258ms
  E0415 09:15:00.884067      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:01.885017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:02.885988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:02.939: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 09:15:02.939: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 09:15:02.950: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"231434"},"items":null}

  Apr 15 09:15:02.957: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"231434"},"items":null}

  Apr 15 09:15:02.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5706" for this suite. @ 04/15/24 09:15:03.009
• [9.469 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 04/15/24 09:15:03.028
  Apr 15 09:15:03.028: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename security-context-test @ 04/15/24 09:15:03.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:15:03.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:15:03.079
  E0415 09:15:03.886977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:04.887187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:05.888617      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:06.888563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:07.221: INFO: Got logs for pod "busybox-privileged-false-5e937ea8-db05-4401-8648-987688613a8c": "ip: RTNETLINK answers: Operation not permitted\n"
  Apr 15 09:15:07.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5320" for this suite. @ 04/15/24 09:15:07.245
• [4.236 seconds]
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/15/24 09:15:07.265
  Apr 15 09:15:07.265: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename watch @ 04/15/24 09:15:07.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:15:07.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:15:07.346
  STEP: creating a watch on configmaps with a certain label @ 04/15/24 09:15:07.356
  STEP: creating a new configmap @ 04/15/24 09:15:07.359
  STEP: modifying the configmap once @ 04/15/24 09:15:07.377
  STEP: changing the label value of the configmap @ 04/15/24 09:15:07.397
  STEP: Expecting to observe a delete notification for the watched object @ 04/15/24 09:15:07.416
  Apr 15 09:15:07.416: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8650  3e2915fe-cef3-4d17-a210-c13d24c2211e 231465 0 2024-04-15 09:15:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 09:15:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 09:15:07.416: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8650  3e2915fe-cef3-4d17-a210-c13d24c2211e 231467 0 2024-04-15 09:15:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 09:15:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 09:15:07.417: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8650  3e2915fe-cef3-4d17-a210-c13d24c2211e 231468 0 2024-04-15 09:15:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 09:15:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/15/24 09:15:07.418
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/15/24 09:15:07.441
  E0415 09:15:07.888494      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:08.888950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:09.889279      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:10.890027      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:11.891074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:12.890384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:13.890937      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:14.891083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:15.895078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:16.892875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 04/15/24 09:15:17.442
  STEP: modifying the configmap a third time @ 04/15/24 09:15:17.468
  STEP: deleting the configmap @ 04/15/24 09:15:17.486
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/15/24 09:15:17.501
  Apr 15 09:15:17.501: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8650  3e2915fe-cef3-4d17-a210-c13d24c2211e 231523 0 2024-04-15 09:15:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 09:15:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 09:15:17.502: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8650  3e2915fe-cef3-4d17-a210-c13d24c2211e 231525 0 2024-04-15 09:15:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 09:15:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 09:15:17.502: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8650  3e2915fe-cef3-4d17-a210-c13d24c2211e 231526 0 2024-04-15 09:15:07 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 09:15:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 09:15:17.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8650" for this suite. @ 04/15/24 09:15:17.518
• [10.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 04/15/24 09:15:17.55
  Apr 15 09:15:17.550: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 09:15:17.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:15:17.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:15:17.605
  E0415 09:15:17.893343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:18.893402      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:19.894267      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:20.895657      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:21.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5948" for this suite. @ 04/15/24 09:15:21.662
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 04/15/24 09:15:21.691
  Apr 15 09:15:21.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:15:21.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:15:21.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:15:21.746
  STEP: Creating the pod @ 04/15/24 09:15:21.758
  E0415 09:15:21.896609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:22.897731      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:23.898113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:24.360: INFO: Successfully updated pod "annotationupdate956860a4-c60c-4785-9c74-e1359f6a86b6"
  E0415 09:15:24.898924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:25.899365      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:26.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7674" for this suite. @ 04/15/24 09:15:26.407
• [4.733 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 04/15/24 09:15:26.431
  Apr 15 09:15:26.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 09:15:26.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:15:26.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:15:26.493
  STEP: creating service in namespace services-6251 @ 04/15/24 09:15:26.501
  STEP: creating service affinity-nodeport in namespace services-6251 @ 04/15/24 09:15:26.502
  STEP: creating replication controller affinity-nodeport in namespace services-6251 @ 04/15/24 09:15:26.564
  I0415 09:15:26.580404      13 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-6251, replica count: 3
  E0415 09:15:26.900726      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:27.900451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:28.900554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 09:15:29.633130      13 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 09:15:29.667: INFO: Creating new exec pod
  E0415 09:15:29.901211      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:30.902270      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:31.902809      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:32.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-6251 exec execpod-affinityc6zqb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  E0415 09:15:32.902921      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:33.139: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Apr 15 09:15:33.139: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:15:33.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-6251 exec execpod-affinityc6zqb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.23.94 80'
  Apr 15 09:15:33.462: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.23.94 80\nConnection to 10.233.23.94 80 port [tcp/http] succeeded!\n"
  Apr 15 09:15:33.462: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:15:33.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-6251 exec execpod-affinityc6zqb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.233 31506'
  Apr 15 09:15:33.792: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.233 31506\nConnection to 192.168.121.233 31506 port [tcp/*] succeeded!\n"
  Apr 15 09:15:33.793: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:15:33.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-6251 exec execpod-affinityc6zqb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.26 31506'
  E0415 09:15:33.903075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:34.219: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.26 31506\nConnection to 192.168.121.26 31506 port [tcp/*] succeeded!\n"
  Apr 15 09:15:34.219: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:15:34.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-6251 exec execpod-affinityc6zqb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.26:31506/ ; done'
  Apr 15 09:15:34.759: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31506/\n"
  Apr 15 09:15:34.759: INFO: stdout: "\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw\naffinity-nodeport-5m8bw"
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Received response from host: affinity-nodeport-5m8bw
  Apr 15 09:15:34.759: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-6251, will wait for the garbage collector to delete the pods @ 04/15/24 09:15:34.786
  Apr 15 09:15:34.890: INFO: Deleting ReplicationController affinity-nodeport took: 46.321979ms
  E0415 09:15:34.904044      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:34.993: INFO: Terminating ReplicationController affinity-nodeport pods took: 102.860817ms
  E0415 09:15:35.904039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:36.905048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:37.906442      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:15:38.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6251" for this suite. @ 04/15/24 09:15:38.29
• [11.876 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 04/15/24 09:15:38.31
  Apr 15 09:15:38.310: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename taint-single-pod @ 04/15/24 09:15:38.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:15:38.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:15:38.356
  Apr 15 09:15:38.364: INFO: Waiting up to 1m0s for all nodes to be ready
  E0415 09:15:38.907175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:39.907730      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:40.908342      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:41.908638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:42.908901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:43.910073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:44.910562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:45.910949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:46.911150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:47.911358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:48.914313      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:49.914613      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:50.915547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:51.915761      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:52.916564      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:53.916895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:54.917243      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:55.917694      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:56.917973      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:57.919720      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:58.920425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:15:59.920914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:00.920974      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:01.921154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:02.921462      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:03.921753      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:04.923108      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:05.923604      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:06.924283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:07.924349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:08.925013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:09.925148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:10.925375      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:11.925649      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:12.927102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:13.927643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:14.927767      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:15.928255      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:16.928728      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:17.930329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:18.930173      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:19.930412      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:20.931512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:21.931698      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:22.932842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:23.934001      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:24.934986      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:25.935138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:26.936034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:27.936432      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:28.936705      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:29.937450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:30.937734      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:31.938528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:32.938780      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:33.938754      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:34.938961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:35.939624      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:36.939842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:37.940064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:16:38.366: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 09:16:38.379: INFO: Starting informer...
  STEP: Starting pod... @ 04/15/24 09:16:38.379
  Apr 15 09:16:38.615: INFO: Pod is running on eehaephong4y-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/15/24 09:16:38.615
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/15/24 09:16:38.649
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/15/24 09:16:38.658
  Apr 15 09:16:38.658: INFO: Pod wasn't evicted. Proceeding
  Apr 15 09:16:38.658: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/15/24 09:16:38.694
  STEP: Waiting some time to make sure that toleration time passed. @ 04/15/24 09:16:38.719
  E0415 09:16:38.941227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:39.942265      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:40.942212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:41.942458      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:42.942882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:43.943914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:44.944760      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:45.945843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:46.945983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:47.946277      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:48.947023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:49.947275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:50.947459      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:51.947795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:52.948046      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:53.949173      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:54.949411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:55.949693      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:56.950517      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:57.951004      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:58.951729      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:16:59.951924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:00.952250      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:01.952373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:02.952712      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:03.952796      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:04.953198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:05.953353      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:06.953632      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:07.953915      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:08.954961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:09.955601      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:10.955737      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:11.956038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:12.956174      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:13.956866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:14.957163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:15.957350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:16.957798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:17.957888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:18.958760      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:19.959176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:20.960130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:21.960354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:22.960597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:23.961598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:24.963054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:25.963015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:26.963394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:27.963497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:28.963764      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:29.964206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:30.964475      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:31.964966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:32.965996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:33.966347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:34.966730      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:35.967529      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:36.968663      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:37.968881      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:38.969863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:39.969979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:40.970104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:41.971212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:42.971392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:43.971741      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:44.971992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:45.972194      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:46.973235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:47.973494      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:48.974190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:49.975571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:50.975933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:51.976915      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:52.977337      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:17:53.720: INFO: Pod wasn't evicted. Test successful
  Apr 15 09:17:53.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-8912" for this suite. @ 04/15/24 09:17:53.736
• [135.448 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 04/15/24 09:17:53.76
  Apr 15 09:17:53.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:17:53.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:17:53.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:17:53.829
  STEP: Creating configMap with name projected-configmap-test-volume-map-49bfc345-0983-45e5-92b9-3a3349f8a3ef @ 04/15/24 09:17:53.837
  STEP: Creating a pod to test consume configMaps @ 04/15/24 09:17:53.849
  E0415 09:17:53.979355      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:54.980465      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:55.981487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:56.982320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:17:57.907
  Apr 15 09:17:57.913: INFO: Trying to get logs from node eehaephong4y-3 pod pod-projected-configmaps-42aaddb1-d2b2-4772-94a2-c0a27ecbbee9 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 09:17:57.951
  E0415 09:17:57.983614      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:17:57.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2533" for this suite. @ 04/15/24 09:17:58.005
• [4.261 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/15/24 09:17:58.022
  Apr 15 09:17:58.022: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename secrets @ 04/15/24 09:17:58.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:17:58.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:17:58.067
  STEP: Creating secret with name secret-test-5759b18b-05dd-4da9-9bd3-d0be1ff19458 @ 04/15/24 09:17:58.128
  STEP: Creating a pod to test consume secrets @ 04/15/24 09:17:58.138
  E0415 09:17:58.983981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:17:59.984187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:00.984529      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:01.984697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:18:02.192
  Apr 15 09:18:02.206: INFO: Trying to get logs from node eehaephong4y-3 pod pod-secrets-ac12b984-11ea-4615-aa01-fcf0ad4dd0ee container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 09:18:02.237
  Apr 15 09:18:02.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5453" for this suite. @ 04/15/24 09:18:02.326
  STEP: Destroying namespace "secret-namespace-545" for this suite. @ 04/15/24 09:18:02.342
• [4.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 04/15/24 09:18:02.364
  Apr 15 09:18:02.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename disruption @ 04/15/24 09:18:02.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:02.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:02.454
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/15/24 09:18:02.466
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:18:02.484
  E0415 09:18:02.985289      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:03.985580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/15/24 09:18:04.515
  STEP: Waiting for all pods to be running @ 04/15/24 09:18:04.515
  Apr 15 09:18:04.526: INFO: pods: 0 < 3
  E0415 09:18:04.994335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:05.987365      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/15/24 09:18:06.54
  STEP: Updating the pdb to allow a pod to be evicted @ 04/15/24 09:18:06.585
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:18:06.609
  E0415 09:18:06.987423      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:07.988189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/15/24 09:18:08.618
  STEP: Waiting for all pods to be running @ 04/15/24 09:18:08.619
  STEP: Waiting for the pdb to observed all healthy pods @ 04/15/24 09:18:08.627
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/15/24 09:18:08.696
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:18:08.792
  E0415 09:18:08.988677      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:09.988971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 04/15/24 09:18:10.804
  STEP: locating a running pod @ 04/15/24 09:18:10.818
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/15/24 09:18:10.848
  STEP: Waiting for the pdb to be deleted @ 04/15/24 09:18:10.936
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/15/24 09:18:10.946
  STEP: Waiting for all pods to be running @ 04/15/24 09:18:10.946
  E0415 09:18:10.989660      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:18:11.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5951" for this suite. @ 04/15/24 09:18:11.064
• [8.781 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 04/15/24 09:18:11.148
  Apr 15 09:18:11.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 09:18:11.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:11.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:11.248
  STEP: Creating Pod @ 04/15/24 09:18:11.257
  E0415 09:18:11.989925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:12.991522      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 04/15/24 09:18:13.399
  Apr 15 09:18:13.399: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-312 PodName:pod-sharedvolume-7456857a-64d5-4fea-9a75-d31099dc7220 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:18:13.400: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:18:13.403: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:18:13.403: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-312/pods/pod-sharedvolume-7456857a-64d5-4fea-9a75-d31099dc7220/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Apr 15 09:18:13.548: INFO: Exec stderr: ""
  Apr 15 09:18:13.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-312" for this suite. @ 04/15/24 09:18:13.565
• [2.440 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 04/15/24 09:18:13.589
  Apr 15 09:18:13.590: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pod-network-test @ 04/15/24 09:18:13.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:13.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:13.647
  STEP: Performing setup for networking test in namespace pod-network-test-1857 @ 04/15/24 09:18:13.653
  STEP: creating a selector @ 04/15/24 09:18:13.653
  STEP: Creating the service pods in kubernetes @ 04/15/24 09:18:13.654
  Apr 15 09:18:13.654: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0415 09:18:13.992235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:14.993394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:15.993236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:16.993228      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:17.993824      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:18.994927      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:19.994387      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:20.995340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:21.995867      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:22.996825      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:23.997781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:24.998577      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/15/24 09:18:25.846
  E0415 09:18:25.998971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:27.004885      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:18:27.898: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 15 09:18:27.899: INFO: Breadth first check of 10.233.64.16 on host 192.168.121.26...
  Apr 15 09:18:27.908: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.90:9080/dial?request=hostname&protocol=http&host=10.233.64.16&port=8083&tries=1'] Namespace:pod-network-test-1857 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:18:27.908: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:18:27.911: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:18:27.912: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1857/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.90%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.16%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0415 09:18:28.000302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:18:28.111: INFO: Waiting for responses: map[]
  Apr 15 09:18:28.111: INFO: reached 10.233.64.16 after 0/1 tries
  Apr 15 09:18:28.112: INFO: Breadth first check of 10.233.65.217 on host 192.168.121.233...
  Apr 15 09:18:28.120: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.90:9080/dial?request=hostname&protocol=http&host=10.233.65.217&port=8083&tries=1'] Namespace:pod-network-test-1857 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:18:28.120: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:18:28.123: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:18:28.124: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1857/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.90%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.217%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 09:18:28.261: INFO: Waiting for responses: map[]
  Apr 15 09:18:28.262: INFO: reached 10.233.65.217 after 0/1 tries
  Apr 15 09:18:28.264: INFO: Breadth first check of 10.233.66.89 on host 192.168.121.84...
  Apr 15 09:18:28.271: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.90:9080/dial?request=hostname&protocol=http&host=10.233.66.89&port=8083&tries=1'] Namespace:pod-network-test-1857 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:18:28.271: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:18:28.273: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:18:28.273: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1857/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.90%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.89%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 09:18:28.398: INFO: Waiting for responses: map[]
  Apr 15 09:18:28.399: INFO: reached 10.233.66.89 after 0/1 tries
  Apr 15 09:18:28.399: INFO: Going to retry 0 out of 3 pods....
  Apr 15 09:18:28.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1857" for this suite. @ 04/15/24 09:18:28.415
• [14.846 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 04/15/24 09:18:28.436
  Apr 15 09:18:28.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 09:18:28.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:28.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:28.49
  STEP: Creating configMap with name cm-test-opt-del-c9ec1a9a-960b-4ae4-b452-547da3e2755b @ 04/15/24 09:18:28.508
  STEP: Creating configMap with name cm-test-opt-upd-244605f4-be18-4ec6-bf52-9d41282edb58 @ 04/15/24 09:18:28.519
  STEP: Creating the pod @ 04/15/24 09:18:28.528
  E0415 09:18:29.000781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:30.001798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-c9ec1a9a-960b-4ae4-b452-547da3e2755b @ 04/15/24 09:18:30.627
  STEP: Updating configmap cm-test-opt-upd-244605f4-be18-4ec6-bf52-9d41282edb58 @ 04/15/24 09:18:30.644
  STEP: Creating configMap with name cm-test-opt-create-8fe372a0-f2d9-4f17-b146-6e9f67ac827a @ 04/15/24 09:18:30.66
  STEP: waiting to observe update in volume @ 04/15/24 09:18:30.672
  E0415 09:18:31.002522      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:32.002924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:18:32.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3186" for this suite. @ 04/15/24 09:18:32.759
• [4.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/15/24 09:18:32.783
  Apr 15 09:18:32.783: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:18:32.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:32.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:32.831
  STEP: Creating secret with name projected-secret-test-32e8766d-2764-44fe-b1c3-87dcabe0049a @ 04/15/24 09:18:32.837
  STEP: Creating a pod to test consume secrets @ 04/15/24 09:18:32.852
  E0415 09:18:33.003143      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:34.004107      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:35.004798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:36.005042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:18:36.906
  Apr 15 09:18:36.914: INFO: Trying to get logs from node eehaephong4y-3 pod pod-projected-secrets-f6de387a-4b50-4b47-8caa-e7d4eb153683 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 09:18:36.933
  Apr 15 09:18:36.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4865" for this suite. @ 04/15/24 09:18:36.987
• [4.220 seconds]
------------------------------
SSSSSSSSS  E0415 09:18:37.006008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 04/15/24 09:18:37.035
  Apr 15 09:18:37.035: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 09:18:37.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:37.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:37.085
  STEP: Creating a test namespace @ 04/15/24 09:18:37.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:37.125
  STEP: Creating a service in the namespace @ 04/15/24 09:18:37.129
  STEP: Deleting the namespace @ 04/15/24 09:18:37.16
  STEP: Waiting for the namespace to be removed. @ 04/15/24 09:18:37.189
  E0415 09:18:38.006207      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:39.006800      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:40.007175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:41.007299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:42.007542      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:43.008146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/15/24 09:18:43.197
  STEP: Verifying there is no service in the namespace @ 04/15/24 09:18:43.247
  Apr 15 09:18:43.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-364" for this suite. @ 04/15/24 09:18:43.277
  STEP: Destroying namespace "nsdeletetest-7447" for this suite. @ 04/15/24 09:18:43.324
  Apr 15 09:18:43.338: INFO: Namespace nsdeletetest-7447 was already deleted
  STEP: Destroying namespace "nsdeletetest-6372" for this suite. @ 04/15/24 09:18:43.338
• [6.324 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 04/15/24 09:18:43.361
  Apr 15 09:18:43.361: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 09:18:43.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:43.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:43.413
  Apr 15 09:18:43.461: INFO: created pod pod-service-account-defaultsa
  Apr 15 09:18:43.461: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Apr 15 09:18:43.478: INFO: created pod pod-service-account-mountsa
  Apr 15 09:18:43.478: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Apr 15 09:18:43.488: INFO: created pod pod-service-account-nomountsa
  Apr 15 09:18:43.488: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Apr 15 09:18:43.501: INFO: created pod pod-service-account-defaultsa-mountspec
  Apr 15 09:18:43.501: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Apr 15 09:18:43.519: INFO: created pod pod-service-account-mountsa-mountspec
  Apr 15 09:18:43.519: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Apr 15 09:18:43.534: INFO: created pod pod-service-account-nomountsa-mountspec
  Apr 15 09:18:43.535: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Apr 15 09:18:43.549: INFO: created pod pod-service-account-defaultsa-nomountspec
  Apr 15 09:18:43.549: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Apr 15 09:18:43.565: INFO: created pod pod-service-account-mountsa-nomountspec
  Apr 15 09:18:43.566: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Apr 15 09:18:43.587: INFO: created pod pod-service-account-nomountsa-nomountspec
  Apr 15 09:18:43.587: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Apr 15 09:18:43.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8174" for this suite. @ 04/15/24 09:18:43.628
• [0.343 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 04/15/24 09:18:43.704
  Apr 15 09:18:43.704: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 09:18:43.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:43.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:43.854
  STEP: creating a ServiceAccount @ 04/15/24 09:18:43.882
  STEP: watching for the ServiceAccount to be added @ 04/15/24 09:18:43.962
  STEP: patching the ServiceAccount @ 04/15/24 09:18:43.984
  E0415 09:18:44.008294      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/15/24 09:18:44.01
  STEP: deleting the ServiceAccount @ 04/15/24 09:18:44.019
  Apr 15 09:18:44.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-884" for this suite. @ 04/15/24 09:18:44.098
• [0.419 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 04/15/24 09:18:44.126
  Apr 15 09:18:44.126: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 09:18:44.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:44.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:44.194
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 09:18:44.203
  E0415 09:18:45.009518      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:46.010000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:47.009955      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:48.010216      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:18:48.296
  Apr 15 09:18:48.309: INFO: Trying to get logs from node eehaephong4y-2 pod downwardapi-volume-317440fc-320f-48a0-8737-7fbba09b178b container client-container: <nil>
  STEP: delete the pod @ 04/15/24 09:18:48.343
  Apr 15 09:18:48.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-607" for this suite. @ 04/15/24 09:18:48.383
• [4.268 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 04/15/24 09:18:48.395
  Apr 15 09:18:48.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename server-version @ 04/15/24 09:18:48.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:48.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:48.447
  STEP: Request ServerVersion @ 04/15/24 09:18:48.454
  STEP: Confirm major version @ 04/15/24 09:18:48.457
  Apr 15 09:18:48.458: INFO: Major version: 1
  STEP: Confirm minor version @ 04/15/24 09:18:48.458
  Apr 15 09:18:48.458: INFO: cleanMinorVersion: 29
  Apr 15 09:18:48.459: INFO: Minor version: 29
  Apr 15 09:18:48.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-9106" for this suite. @ 04/15/24 09:18:48.476
• [0.095 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 04/15/24 09:18:48.491
  Apr 15 09:18:48.491: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 09:18:48.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:18:48.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:18:48.542
  STEP: Creating resourceQuota "e2e-rq-status-5m4dv" @ 04/15/24 09:18:48.557
  Apr 15 09:18:48.574: INFO: Resource quota "e2e-rq-status-5m4dv" reports spec: hard cpu limit of 500m
  Apr 15 09:18:48.574: INFO: Resource quota "e2e-rq-status-5m4dv" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-5m4dv" /status @ 04/15/24 09:18:48.575
  STEP: Confirm /status for "e2e-rq-status-5m4dv" resourceQuota via watch @ 04/15/24 09:18:48.629
  Apr 15 09:18:48.633: INFO: observed resourceQuota "e2e-rq-status-5m4dv" in namespace "resourcequota-3061" with hard status: v1.ResourceList(nil)
  Apr 15 09:18:48.634: INFO: Found resourceQuota "e2e-rq-status-5m4dv" in namespace "resourcequota-3061" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 15 09:18:48.634: INFO: ResourceQuota "e2e-rq-status-5m4dv" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/15/24 09:18:48.64
  Apr 15 09:18:48.654: INFO: Resource quota "e2e-rq-status-5m4dv" reports spec: hard cpu limit of 1
  Apr 15 09:18:48.654: INFO: Resource quota "e2e-rq-status-5m4dv" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-5m4dv" /status @ 04/15/24 09:18:48.654
  STEP: Confirm /status for "e2e-rq-status-5m4dv" resourceQuota via watch @ 04/15/24 09:18:48.668
  Apr 15 09:18:48.671: INFO: observed resourceQuota "e2e-rq-status-5m4dv" in namespace "resourcequota-3061" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 15 09:18:48.672: INFO: Found resourceQuota "e2e-rq-status-5m4dv" in namespace "resourcequota-3061" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Apr 15 09:18:48.672: INFO: ResourceQuota "e2e-rq-status-5m4dv" /status was patched
  STEP: Get "e2e-rq-status-5m4dv" /status @ 04/15/24 09:18:48.672
  Apr 15 09:18:48.679: INFO: Resourcequota "e2e-rq-status-5m4dv" reports status: hard cpu of 1
  Apr 15 09:18:48.679: INFO: Resourcequota "e2e-rq-status-5m4dv" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-5m4dv" /status before checking Spec is unchanged @ 04/15/24 09:18:48.686
  Apr 15 09:18:48.698: INFO: Resourcequota "e2e-rq-status-5m4dv" reports status: hard cpu of 2
  Apr 15 09:18:48.698: INFO: Resourcequota "e2e-rq-status-5m4dv" reports status: hard memory of 2Gi
  Apr 15 09:18:48.703: INFO: Found resourceQuota "e2e-rq-status-5m4dv" in namespace "resourcequota-3061" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Apr 15 09:18:48.709: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bb94e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bb9548), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bb95c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:18:49.010738      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:50.011060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:51.016950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:52.016630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:53.017169      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:18:53.718: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00114f7d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00114f818), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00114f848), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:18:54.018135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:55.018948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:56.018987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:57.020175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:18:58.021274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:18:58.717: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bb9ad0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bb9b48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000bb9b78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:18:59.021800      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:00.022253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:01.023496      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:02.022971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:03.023902      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:19:03.714: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00114fde8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00114fe18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00114fe78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:19:04.025095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:05.026042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:06.026137      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:07.026040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:08.026318      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:19:08.716: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c501e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:19:09.027235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:10.027478      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:11.028050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:12.028337      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:13.028309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:19:13.712: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50540), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50570), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c505a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:19:14.029121      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:15.029105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:16.029492      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:17.029716      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:18.029968      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:19:18.712: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043ba348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043ba378), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043ba3c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:19:19.030083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:20.030505      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:21.031221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:22.031380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:23.031983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:19:23.714: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50c18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50c60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50cc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:19:24.033517      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:25.033283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:26.033296      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:27.033343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:28.033782      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:19:28.713: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50f78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50fc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c51050), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:19:29.033915      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:30.034294      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:31.036586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:32.035249      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:33.035199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:19:33.728: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043ba978), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043ba9a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043baa08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:19:34.035402      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:35.036020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:36.036364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:37.037187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:38.038121      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:19:38.719: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c51428), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c51470), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c514b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:19:39.039122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:40.040586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:41.040157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:42.040242      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:43.040815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:19:43.713: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043bae10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043bae58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043bae88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:19:44.041035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:45.041851      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:46.042636      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:47.044703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:48.043298      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:19:48.714: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c51a58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c51aa0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c51ae8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:19:49.044044      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:50.048526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:51.048711      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:52.049394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:53.049855      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:19:53.720: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043ba120), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043ba168), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043ba198), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:19:54.054221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:55.050591      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:56.051056      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:57.051205      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:19:58.051449      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:19:58.714: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c504b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c504e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:19:59.051742      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:00.052689      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:01.053219      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:02.053499      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:03.053815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:03.715: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043ba4e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043ba510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043ba558), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:20:04.054327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:05.054895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:06.054904      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:07.055331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:08.056231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:08.713: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50b40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50b88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50bb8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:20:09.056963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:10.057354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:11.057897      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:12.057675      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:13.057868      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:13.719: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50ee8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50f18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c50f90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:20:14.059101      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:15.058995      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:16.059390      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:17.059719      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:18.060968      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:18.714: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c51380), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c513b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c51428), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:20:19.062441      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:20.063630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:21.063082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:22.063077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:23.064165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:23.715: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043bac18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043bac60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043baca8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:20:24.064290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:25.065155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:26.065338      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:27.065366      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:28.067084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:28.711: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c518c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c51908), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c51938), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:20:29.068380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:30.069430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:31.070223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:32.070506      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:33.070906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:33.715: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043bb098), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043bb0c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043bb0f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:20:34.071962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:35.072647      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:36.073085      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:37.073398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:38.073429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:38.714: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043bb338), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043bb380), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043bb3b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:20:39.074097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:40.074277      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:41.074349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:42.074749      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:43.075032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:43.713: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c51f80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c51fc8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e70000), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:20:44.075727      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:45.076959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:46.077145      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:47.077401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:48.077601      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:48.721: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-5m4dv", GenerateName:"", Namespace:"resourcequota-3061", SelfLink:"", UID:"e011fdba-7687-4536-8e2e-0d5a151d3fb6", ResourceVersion:"232600", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-5m4dv"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e70630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e70690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 9, 18, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e706c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0415 09:20:49.078307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:50.078852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:51.078771      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:52.079287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:53.079716      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:53.711: INFO: ResourceQuota "e2e-rq-status-5m4dv" Spec was unchanged and /status reset
  Apr 15 09:20:53.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3061" for this suite. @ 04/15/24 09:20:53.727
• [125.265 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 04/15/24 09:20:53.763
  Apr 15 09:20:53.763: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 09:20:53.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:53.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:53.814
  Apr 15 09:20:53.823: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  E0415 09:20:54.080888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:55.081535      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:56.082433      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0415 09:20:56.611918      13 warnings.go:70] unknown field "alpha"
  W0415 09:20:56.611998      13 warnings.go:70] unknown field "beta"
  W0415 09:20:56.612024      13 warnings.go:70] unknown field "delta"
  W0415 09:20:56.612049      13 warnings.go:70] unknown field "epsilon"
  W0415 09:20:56.612071      13 warnings.go:70] unknown field "gamma"
  E0415 09:20:57.083366      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:20:57.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4274" for this suite. @ 04/15/24 09:20:57.221
• [3.474 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 04/15/24 09:20:57.247
  Apr 15 09:20:57.247: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 09:20:57.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:20:57.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:20:57.298
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/15/24 09:20:57.307
  E0415 09:20:58.084074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:20:59.085183      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:00.085336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:01.086357      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:21:01.369
  Apr 15 09:21:01.377: INFO: Trying to get logs from node eehaephong4y-3 pod pod-259de9c8-e80a-4f63-aae5-a557dbc6ba5b container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:21:01.421
  Apr 15 09:21:01.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8987" for this suite. @ 04/15/24 09:21:01.479
• [4.246 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 04/15/24 09:21:01.5
  Apr 15 09:21:01.500: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename events @ 04/15/24 09:21:01.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:21:01.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:21:01.548
  STEP: creating a test event @ 04/15/24 09:21:01.558
  STEP: listing all events in all namespaces @ 04/15/24 09:21:01.57
  STEP: patching the test event @ 04/15/24 09:21:01.579
  STEP: fetching the test event @ 04/15/24 09:21:01.593
  STEP: updating the test event @ 04/15/24 09:21:01.6
  STEP: getting the test event @ 04/15/24 09:21:01.623
  STEP: deleting the test event @ 04/15/24 09:21:01.631
  STEP: listing all events in all namespaces @ 04/15/24 09:21:01.647
  Apr 15 09:21:01.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5277" for this suite. @ 04/15/24 09:21:01.668
• [0.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 04/15/24 09:21:01.696
  Apr 15 09:21:01.697: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 09:21:01.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:21:01.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:21:01.746
  STEP: apply creating a deployment @ 04/15/24 09:21:01.754
  Apr 15 09:21:01.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-642" for this suite. @ 04/15/24 09:21:01.798
• [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 04/15/24 09:21:01.827
  Apr 15 09:21:01.827: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 09:21:01.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:21:01.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:21:01.873
  STEP: creating service in namespace services-6944 @ 04/15/24 09:21:01.88
  STEP: creating service affinity-nodeport-transition in namespace services-6944 @ 04/15/24 09:21:01.88
  STEP: creating replication controller affinity-nodeport-transition in namespace services-6944 @ 04/15/24 09:21:01.92
  I0415 09:21:01.942287      13 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-6944, replica count: 3
  E0415 09:21:02.087582      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:03.088410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:04.089500      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 09:21:04.995003      13 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 09:21:05.018: INFO: Creating new exec pod
  E0415 09:21:05.090180      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:06.090446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:07.091625      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:21:08.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-6944 exec execpod-affinitys4hn4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E0415 09:21:08.092050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:21:08.483: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Apr 15 09:21:08.483: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:21:08.484: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-6944 exec execpod-affinitys4hn4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.2.177 80'
  Apr 15 09:21:08.780: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.2.177 80\nConnection to 10.233.2.177 80 port [tcp/http] succeeded!\n"
  Apr 15 09:21:08.782: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:21:08.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-6944 exec execpod-affinitys4hn4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.84 31781'
  Apr 15 09:21:09.090: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.84 31781\nConnection to 192.168.121.84 31781 port [tcp/*] succeeded!\n"
  Apr 15 09:21:09.090: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:21:09.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-6944 exec execpod-affinitys4hn4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.233 31781'
  E0415 09:21:09.092352      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:21:09.366: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.233 31781\nConnection to 192.168.121.233 31781 port [tcp/*] succeeded!\n"
  Apr 15 09:21:09.366: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 09:21:09.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-6944 exec execpod-affinitys4hn4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.26:31781/ ; done'
  Apr 15 09:21:09.947: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n"
  Apr 15 09:21:09.947: INFO: stdout: "\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-gtfrz\naffinity-nodeport-transition-psxzr\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-gtfrz\naffinity-nodeport-transition-gtfrz\naffinity-nodeport-transition-gtfrz\naffinity-nodeport-transition-psxzr\naffinity-nodeport-transition-psxzr\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-psxzr\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-psxzr\naffinity-nodeport-transition-psxzr\naffinity-nodeport-transition-psxzr\naffinity-nodeport-transition-gtfrz"
  Apr 15 09:21:09.947: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-gtfrz
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-psxzr
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-gtfrz
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-gtfrz
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-gtfrz
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-psxzr
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-psxzr
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-psxzr
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-psxzr
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-psxzr
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-psxzr
  Apr 15 09:21:09.948: INFO: Received response from host: affinity-nodeport-transition-gtfrz
  Apr 15 09:21:09.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-6944 exec execpod-affinitys4hn4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.26:31781/ ; done'
  E0415 09:21:10.092678      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:21:10.483: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.26:31781/\n"
  Apr 15 09:21:10.483: INFO: stdout: "\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw\naffinity-nodeport-transition-d76kw"
  Apr 15 09:21:10.483: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.484: INFO: Received response from host: affinity-nodeport-transition-d76kw
  Apr 15 09:21:10.485: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6944, will wait for the garbage collector to delete the pods @ 04/15/24 09:21:10.514
  Apr 15 09:21:10.589: INFO: Deleting ReplicationController affinity-nodeport-transition took: 17.026345ms
  Apr 15 09:21:10.690: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.231528ms
  E0415 09:21:11.093844      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:12.094254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:13.095260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:21:13.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6944" for this suite. @ 04/15/24 09:21:13.764
• [11.952 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 04/15/24 09:21:13.78
  Apr 15 09:21:13.780: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/15/24 09:21:13.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:21:13.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:21:13.82
  STEP: getting /apis @ 04/15/24 09:21:13.825
  STEP: getting /apis/storage.k8s.io @ 04/15/24 09:21:13.833
  STEP: getting /apis/storage.k8s.io/v1 @ 04/15/24 09:21:13.835
  STEP: creating @ 04/15/24 09:21:13.836
  STEP: watching @ 04/15/24 09:21:13.862
  Apr 15 09:21:13.862: INFO: starting watch
  STEP: getting @ 04/15/24 09:21:13.878
  STEP: listing in namespace @ 04/15/24 09:21:13.884
  STEP: listing across namespaces @ 04/15/24 09:21:13.892
  STEP: patching @ 04/15/24 09:21:13.897
  STEP: updating @ 04/15/24 09:21:13.906
  Apr 15 09:21:13.918: INFO: waiting for watch events with expected annotations in namespace
  Apr 15 09:21:13.918: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/15/24 09:21:13.918
  STEP: deleting a collection @ 04/15/24 09:21:13.942
  Apr 15 09:21:13.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2434" for this suite. @ 04/15/24 09:21:13.986
• [0.222 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 04/15/24 09:21:14.006
  Apr 15 09:21:14.007: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 09:21:14.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:21:14.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:21:14.053
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/15/24 09:21:14.059
  E0415 09:21:14.096928      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:15.097825      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:16.097709      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:17.097925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:18.098428      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:21:18.101
  Apr 15 09:21:18.107: INFO: Trying to get logs from node eehaephong4y-3 pod pod-9a15e329-fbad-45a3-ad0a-c57d00238a0f container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:21:18.124
  Apr 15 09:21:18.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2837" for this suite. @ 04/15/24 09:21:18.177
• [4.191 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 04/15/24 09:21:18.2
  Apr 15 09:21:18.200: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 09:21:18.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:21:18.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:21:18.245
  STEP: Creating configMap with name configmap-test-volume-map-ee2ac0f7-b90d-473d-a531-6bd9e6722b52 @ 04/15/24 09:21:18.251
  STEP: Creating a pod to test consume configMaps @ 04/15/24 09:21:18.261
  E0415 09:21:19.099576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:20.099845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:21.100406      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:22.101247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:21:22.315
  Apr 15 09:21:22.322: INFO: Trying to get logs from node eehaephong4y-3 pod pod-configmaps-2fe18543-3093-4896-8e4d-fa3e23381356 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 09:21:22.337
  Apr 15 09:21:22.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5171" for this suite. @ 04/15/24 09:21:22.374
• [4.201 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 04/15/24 09:21:22.403
  Apr 15 09:21:22.403: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:21:22.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:21:22.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:21:22.452
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 09:21:22.461
  E0415 09:21:23.101670      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:24.104264      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:25.103963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:26.103851      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:21:26.538
  Apr 15 09:21:26.547: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-783823ba-63be-4404-ac11-1916e6267b0f container client-container: <nil>
  STEP: delete the pod @ 04/15/24 09:21:26.568
  Apr 15 09:21:26.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3773" for this suite. @ 04/15/24 09:21:26.624
• [4.239 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 04/15/24 09:21:26.644
  Apr 15 09:21:26.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 09:21:26.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:21:26.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:21:26.703
  E0415 09:21:27.104204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:28.105059      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:21:28.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2232" for this suite. @ 04/15/24 09:21:28.798
• [2.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/15/24 09:21:28.82
  Apr 15 09:21:28.820: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename init-container @ 04/15/24 09:21:28.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:21:28.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:21:28.882
  STEP: creating the pod @ 04/15/24 09:21:28.891
  Apr 15 09:21:28.892: INFO: PodSpec: initContainers in spec.initContainers
  E0415 09:21:29.107223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:30.107106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:31.107019      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:32.107132      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:33.107323      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:21:33.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-126" for this suite. @ 04/15/24 09:21:33.54
• [4.733 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/15/24 09:21:33.56
  Apr 15 09:21:33.560: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pods @ 04/15/24 09:21:33.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:21:33.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:21:33.613
  Apr 15 09:21:33.618: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: creating the pod @ 04/15/24 09:21:33.62
  STEP: submitting the pod to kubernetes @ 04/15/24 09:21:33.621
  E0415 09:21:34.108082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:35.108612      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:21:35.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8304" for this suite. @ 04/15/24 09:21:35.702
• [2.158 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/15/24 09:21:35.72
  Apr 15 09:21:35.720: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename subpath @ 04/15/24 09:21:35.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:21:35.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:21:35.766
  STEP: Setting up data @ 04/15/24 09:21:35.772
  STEP: Creating pod pod-subpath-test-secret-gct9 @ 04/15/24 09:21:35.797
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 09:21:35.798
  E0415 09:21:36.109201      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:37.109528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:38.110292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:39.110530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:40.110994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:41.111469      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:42.111857      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:43.112416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:44.113119      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:45.113406      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:46.113806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:47.114374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:48.114729      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:49.114798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:50.115947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:51.130854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:52.131542      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:53.131767      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:54.133086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:55.133219      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:56.134144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:57.134391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:58.134910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:21:59.135321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:21:59.941
  Apr 15 09:21:59.950: INFO: Trying to get logs from node eehaephong4y-3 pod pod-subpath-test-secret-gct9 container test-container-subpath-secret-gct9: <nil>
  STEP: delete the pod @ 04/15/24 09:21:59.972
  STEP: Deleting pod pod-subpath-test-secret-gct9 @ 04/15/24 09:22:00.015
  Apr 15 09:22:00.015: INFO: Deleting pod "pod-subpath-test-secret-gct9" in namespace "subpath-3314"
  Apr 15 09:22:00.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3314" for this suite. @ 04/15/24 09:22:00.039
• [24.334 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/15/24 09:22:00.059
  Apr 15 09:22:00.059: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename events @ 04/15/24 09:22:00.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:00.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:00.108
  STEP: creating a test event @ 04/15/24 09:22:00.115
  STEP: listing events in all namespaces @ 04/15/24 09:22:00.133
  E0415 09:22:00.135797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing events in test namespace @ 04/15/24 09:22:00.144
  STEP: listing events with field selection filtering on source @ 04/15/24 09:22:00.153
  STEP: listing events with field selection filtering on reportingController @ 04/15/24 09:22:00.161
  STEP: getting the test event @ 04/15/24 09:22:00.172
  STEP: patching the test event @ 04/15/24 09:22:00.18
  STEP: getting the test event @ 04/15/24 09:22:00.2
  STEP: updating the test event @ 04/15/24 09:22:00.208
  STEP: getting the test event @ 04/15/24 09:22:00.227
  STEP: deleting the test event @ 04/15/24 09:22:00.235
  STEP: listing events in all namespaces @ 04/15/24 09:22:00.25
  STEP: listing events in test namespace @ 04/15/24 09:22:00.26
  Apr 15 09:22:00.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6332" for this suite. @ 04/15/24 09:22:00.279
• [0.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 04/15/24 09:22:00.296
  Apr 15 09:22:00.296: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename apf @ 04/15/24 09:22:00.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:00.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:00.345
  STEP: getting /apis @ 04/15/24 09:22:00.352
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/15/24 09:22:00.361
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/15/24 09:22:00.363
  STEP: creating @ 04/15/24 09:22:00.367
  STEP: getting @ 04/15/24 09:22:00.418
  STEP: listing @ 04/15/24 09:22:00.428
  STEP: watching @ 04/15/24 09:22:00.445
  Apr 15 09:22:00.445: INFO: starting watch
  STEP: patching @ 04/15/24 09:22:00.448
  STEP: updating @ 04/15/24 09:22:00.47
  Apr 15 09:22:00.489: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 04/15/24 09:22:00.49
  STEP: patching /status @ 04/15/24 09:22:00.505
  STEP: updating /status @ 04/15/24 09:22:00.518
  STEP: deleting @ 04/15/24 09:22:00.544
  STEP: deleting a collection @ 04/15/24 09:22:00.568
  Apr 15 09:22:00.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7733" for this suite. @ 04/15/24 09:22:00.624
• [0.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 04/15/24 09:22:00.641
  Apr 15 09:22:00.641: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 09:22:00.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:00.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:00.697
  STEP: Creating a pod to test substitution in container's command @ 04/15/24 09:22:00.702
  E0415 09:22:01.135895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:02.139003      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:03.138314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:04.139020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:22:04.766
  Apr 15 09:22:04.777: INFO: Trying to get logs from node eehaephong4y-3 pod var-expansion-287190dd-0f16-4df7-80b7-6f54c2c14fe9 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 09:22:04.794
  Apr 15 09:22:04.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9710" for this suite. @ 04/15/24 09:22:04.855
• [4.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 04/15/24 09:22:04.881
  Apr 15 09:22:04.881: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pv @ 04/15/24 09:22:04.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:04.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:04.93
  STEP: Creating initial PV and PVC @ 04/15/24 09:22:04.938
  Apr 15 09:22:04.938: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-283" @ 04/15/24 09:22:05.013
  STEP: Listing PVCs in namespace "pv-283" @ 04/15/24 09:22:05.031
  STEP: Reading "pvc-bpvlj" Status @ 04/15/24 09:22:05.043
  STEP: Reading "pv-283-6mnwp" Status @ 04/15/24 09:22:05.053
  STEP: Patching "pvc-bpvlj" Status @ 04/15/24 09:22:05.074
  STEP: Patching "pv-283-6mnwp" Status @ 04/15/24 09:22:05.091
  STEP: Updating "pvc-bpvlj" Status @ 04/15/24 09:22:05.115
  E0415 09:22:05.139422      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating "pv-283-6mnwp" Status @ 04/15/24 09:22:05.146
  Apr 15 09:22:05.187: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Apr 15 09:22:05.188: INFO: Deleting PersistentVolumeClaim "pvc-bpvlj"
  Apr 15 09:22:05.209: INFO: Deleting PersistentVolume "pv-283-6mnwp"
  Apr 15 09:22:05.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-283" for this suite. @ 04/15/24 09:22:05.253
• [0.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 04/15/24 09:22:05.287
  Apr 15 09:22:05.287: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 09:22:05.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:05.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:05.405
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 09:22:05.416
  E0415 09:22:06.139169      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:07.139440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:08.139914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:09.140462      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:22:09.495
  Apr 15 09:22:09.523: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-63587392-a44b-42ca-8107-d8f09f927417 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 09:22:09.545
  Apr 15 09:22:09.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1072" for this suite. @ 04/15/24 09:22:09.607
• [4.347 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/15/24 09:22:09.636
  Apr 15 09:22:09.637: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/15/24 09:22:09.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:09.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:09.695
  STEP: Creating two CSIDrivers @ 04/15/24 09:22:09.702
  STEP: Getting "inline-driver-4cb17a2f-14aa-469f-bc65-0c024e8e7745" & "inline-driver-7d0b84cd-c43d-41a7-b1eb-bcbb504a6eee" @ 04/15/24 09:22:09.751
  STEP: Patching the CSIDriver "inline-driver-7d0b84cd-c43d-41a7-b1eb-bcbb504a6eee" @ 04/15/24 09:22:09.771
  STEP: Updating the CSIDriver "inline-driver-7d0b84cd-c43d-41a7-b1eb-bcbb504a6eee" @ 04/15/24 09:22:09.79
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-1366" @ 04/15/24 09:22:09.81
  STEP: Deleting CSIDriver "inline-driver-4cb17a2f-14aa-469f-bc65-0c024e8e7745" @ 04/15/24 09:22:09.82
  STEP: Confirm deletion of CSIDriver "inline-driver-4cb17a2f-14aa-469f-bc65-0c024e8e7745" @ 04/15/24 09:22:09.839
  STEP: Deleting CSIDriver "inline-driver-7d0b84cd-c43d-41a7-b1eb-bcbb504a6eee" via DeleteCollection @ 04/15/24 09:22:09.85
  STEP: Confirm deletion of CSIDriver "inline-driver-7d0b84cd-c43d-41a7-b1eb-bcbb504a6eee" @ 04/15/24 09:22:09.872
  Apr 15 09:22:09.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1366" for this suite. @ 04/15/24 09:22:09.902
• [0.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 04/15/24 09:22:09.922
  Apr 15 09:22:09.922: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename csi-storageclass @ 04/15/24 09:22:09.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:09.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:09.982
  STEP: Creating a StorageClass @ 04/15/24 09:22:09.99
  STEP: Get StorageClass "e2e-xmtw5" @ 04/15/24 09:22:10.003
  STEP: Patching the StorageClass "e2e-xmtw5" @ 04/15/24 09:22:10.012
  STEP: Delete StorageClass "e2e-xmtw5" @ 04/15/24 09:22:10.024
  STEP: Confirm deletion of StorageClass "e2e-xmtw5" @ 04/15/24 09:22:10.039
  STEP: Create a replacement StorageClass @ 04/15/24 09:22:10.049
  STEP: Updating StorageClass "e2e-v2-5lzvn" @ 04/15/24 09:22:10.061
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-5lzvn=updated" @ 04/15/24 09:22:10.082
  STEP: Deleting StorageClass "e2e-v2-5lzvn" via DeleteCollection @ 04/15/24 09:22:10.089
  STEP: Confirm deletion of StorageClass "e2e-v2-5lzvn" @ 04/15/24 09:22:10.106
  Apr 15 09:22:10.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-6467" for this suite. @ 04/15/24 09:22:10.132
  E0415 09:22:10.140995      13 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.231 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 04/15/24 09:22:10.153
  Apr 15 09:22:10.153: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 09:22:10.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:10.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:10.213
  STEP: Creating configMap with name configmap-test-volume-c3142c62-7a1f-441e-a739-52192516185e @ 04/15/24 09:22:10.22
  STEP: Creating a pod to test consume configMaps @ 04/15/24 09:22:10.233
  E0415 09:22:11.140998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:12.141914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:13.143405      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:14.144166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:22:14.29
  Apr 15 09:22:14.299: INFO: Trying to get logs from node eehaephong4y-3 pod pod-configmaps-add11eeb-3793-45ee-8f0c-1652c2320967 container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 09:22:14.324
  Apr 15 09:22:14.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6274" for this suite. @ 04/15/24 09:22:14.376
• [4.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 04/15/24 09:22:14.398
  Apr 15 09:22:14.398: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 09:22:14.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:14.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:14.476
  STEP: Counting existing ResourceQuota @ 04/15/24 09:22:14.48
  E0415 09:22:15.143457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:16.144323      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:17.144660      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:18.145503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:19.146240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/15/24 09:22:19.501
  STEP: Ensuring resource quota status is calculated @ 04/15/24 09:22:19.536
  E0415 09:22:20.146390      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:21.147187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 04/15/24 09:22:21.555
  STEP: Creating a NodePort Service @ 04/15/24 09:22:21.603
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/15/24 09:22:21.656
  STEP: Ensuring resource quota status captures service creation @ 04/15/24 09:22:21.701
  E0415 09:22:22.148048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:23.148862      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 04/15/24 09:22:23.711
  STEP: Ensuring resource quota status released usage @ 04/15/24 09:22:23.832
  E0415 09:22:24.150759      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:25.149100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:22:25.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3096" for this suite. @ 04/15/24 09:22:25.863
• [11.480 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 04/15/24 09:22:25.88
  Apr 15 09:22:25.880: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename endpointslice @ 04/15/24 09:22:25.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:25.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:25.927
  Apr 15 09:22:25.956: INFO: Endpoints addresses: [192.168.121.233 192.168.121.26] , ports: [6443]
  Apr 15 09:22:25.956: INFO: EndpointSlices addresses: [192.168.121.233 192.168.121.26] , ports: [6443]
  Apr 15 09:22:25.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6324" for this suite. @ 04/15/24 09:22:25.968
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 04/15/24 09:22:25.992
  Apr 15 09:22:25.992: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 09:22:25.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:26.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:26.04
  STEP: Creating service test in namespace statefulset-3197 @ 04/15/24 09:22:26.047
  Apr 15 09:22:26.090: INFO: Found 0 stateful pods, waiting for 1
  E0415 09:22:26.149524      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:27.151658      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:28.151633      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:29.152216      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:30.152774      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:31.153715      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:32.154479      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:33.154777      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:34.156134      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:35.156869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:22:36.091: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/15/24 09:22:36.111
  W0415 09:22:36.130590      13 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Apr 15 09:22:36.153: INFO: Found 1 stateful pods, waiting for 2
  E0415 09:22:36.157616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:37.158829      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:38.159575      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:39.160484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:40.160917      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:41.161084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:42.161383      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:43.161893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:44.161910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:45.162210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:22:46.161: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 09:22:46.161: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  E0415 09:22:46.162398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all StatefulSets @ 04/15/24 09:22:46.19
  STEP: Delete all of the StatefulSets @ 04/15/24 09:22:46.226
  STEP: Verify that StatefulSets have been deleted @ 04/15/24 09:22:46.249
  Apr 15 09:22:46.260: INFO: Deleting all statefulset in ns statefulset-3197
  Apr 15 09:22:46.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3197" for this suite. @ 04/15/24 09:22:46.323
• [20.421 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 04/15/24 09:22:46.415
  Apr 15 09:22:46.415: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename podtemplate @ 04/15/24 09:22:46.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:46.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:46.567
  STEP: Create set of pod templates @ 04/15/24 09:22:46.576
  Apr 15 09:22:46.602: INFO: created test-podtemplate-1
  Apr 15 09:22:46.614: INFO: created test-podtemplate-2
  Apr 15 09:22:46.626: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/15/24 09:22:46.626
  STEP: delete collection of pod templates @ 04/15/24 09:22:46.641
  Apr 15 09:22:46.641: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/15/24 09:22:46.687
  Apr 15 09:22:46.687: INFO: requesting list of pod templates to confirm quantity
  Apr 15 09:22:46.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2259" for this suite. @ 04/15/24 09:22:46.704
• [0.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 04/15/24 09:22:46.722
  Apr 15 09:22:46.722: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 09:22:46.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:46.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:46.783
  STEP: Setting up server cert @ 04/15/24 09:22:46.907
  E0415 09:22:47.163272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 09:22:48.026
  STEP: Deploying the webhook pod @ 04/15/24 09:22:48.044
  STEP: Wait for the deployment to be ready @ 04/15/24 09:22:48.068
  Apr 15 09:22:48.092: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 09:22:48.163606      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:49.164497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 09:22:50.114
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 09:22:50.138
  E0415 09:22:50.165319      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:22:51.138: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 15 09:22:51.164: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  E0415 09:22:51.166757      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/15/24 09:22:51.695
  STEP: Creating a custom resource that should be denied by the webhook @ 04/15/24 09:22:51.743
  E0415 09:22:52.166899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:53.167008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/15/24 09:22:53.848
  STEP: Updating the custom resource with disallowed data should be denied @ 04/15/24 09:22:53.863
  STEP: Deleting the custom resource should be denied @ 04/15/24 09:22:53.886
  STEP: Remove the offending key and value from the custom resource data @ 04/15/24 09:22:53.904
  STEP: Deleting the updated custom resource should be successful @ 04/15/24 09:22:53.928
  E0415 09:22:54.168024      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:22:54.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5620" for this suite. @ 04/15/24 09:22:54.626
  STEP: Destroying namespace "webhook-markers-3842" for this suite. @ 04/15/24 09:22:54.643
• [7.939 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 04/15/24 09:22:54.666
  Apr 15 09:22:54.666: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename security-context @ 04/15/24 09:22:54.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:54.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:54.757
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/15/24 09:22:54.767
  E0415 09:22:55.168634      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:56.168635      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:57.168608      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:22:58.168975      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:22:58.82
  Apr 15 09:22:58.835: INFO: Trying to get logs from node eehaephong4y-3 pod security-context-87fca387-5250-4c34-a6df-45fbaae198ef container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:22:58.855
  Apr 15 09:22:58.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9030" for this suite. @ 04/15/24 09:22:58.955
• [4.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/15/24 09:22:58.989
  Apr 15 09:22:58.989: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:22:58.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:22:59.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:22:59.044
  STEP: Creating configMap with name configmap-projected-all-test-volume-1e9b6cc8-4887-4d08-af7d-82971882d0d5 @ 04/15/24 09:22:59.059
  STEP: Creating secret with name secret-projected-all-test-volume-e908cf73-1b7e-4664-b422-ac3bc388e7e7 @ 04/15/24 09:22:59.073
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/15/24 09:22:59.085
  E0415 09:22:59.169678      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:00.169872      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:23:01.122
  Apr 15 09:23:01.131: INFO: Trying to get logs from node eehaephong4y-3 pod projected-volume-9af0d060-281b-416d-85d2-8bdcd40d219e container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 09:23:01.146
  E0415 09:23:01.171259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:23:01.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6620" for this suite. @ 04/15/24 09:23:01.205
• [2.232 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 04/15/24 09:23:01.223
  Apr 15 09:23:01.223: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 09:23:01.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:23:01.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:23:01.27
  STEP: Creating configMap with name configmap-test-volume-43e12bfe-3cd6-43cd-9a9f-8e41c869f589 @ 04/15/24 09:23:01.28
  STEP: Creating a pod to test consume configMaps @ 04/15/24 09:23:01.295
  E0415 09:23:02.171725      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:03.172378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:04.172852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:05.173987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:23:05.365
  Apr 15 09:23:05.373: INFO: Trying to get logs from node eehaephong4y-3 pod pod-configmaps-9bccc45d-916d-41da-a95d-8b30b03e60f9 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 09:23:05.39
  Apr 15 09:23:05.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9935" for this suite. @ 04/15/24 09:23:05.439
• [4.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 04/15/24 09:23:05.461
  Apr 15 09:23:05.461: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 09:23:05.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:23:05.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:23:05.502
  E0415 09:23:06.175062      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:07.175358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:08.175795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:09.175955      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:10.176157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:11.177015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:12.177751      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:13.178004      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:14.178229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:15.179128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:16.180274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:17.180125      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:18.180488      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:19.180600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:20.181834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:21.182105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:22.182962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:23.183205      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:24.183870      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:25.184487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:26.185022      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:27.185357      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:23:27.655: INFO: Container started at 2024-04-15 09:23:06 +0000 UTC, pod became ready at 2024-04-15 09:23:25 +0000 UTC
  Apr 15 09:23:27.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8606" for this suite. @ 04/15/24 09:23:27.665
• [22.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 04/15/24 09:23:27.69
  Apr 15 09:23:27.690: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename sched-preemption @ 04/15/24 09:23:27.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:23:27.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:23:27.743
  Apr 15 09:23:27.786: INFO: Waiting up to 1m0s for all nodes to be ready
  E0415 09:23:28.185625      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:29.185862      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:30.186124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:31.186499      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:32.187727      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:33.189409      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:34.190297      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:35.191026      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:36.191272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:37.191284      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:38.191617      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:39.192202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:40.192405      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:41.193154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:42.194210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:43.194460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:44.195414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:45.195640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:46.195988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:47.196167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:48.197113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:49.197940      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:50.198165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:51.198857      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:52.199722      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:53.200006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:54.200594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:55.200793      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:56.201036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:57.201317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:58.202324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:23:59.203298      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:00.203447      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:01.204393      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:02.205327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:03.205965      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:04.206113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:05.207017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:06.208070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:07.208444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:08.208641      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:09.209551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:10.209825      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:11.209993      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:12.210840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:13.211129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:14.212257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:15.212606      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:16.212671      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:17.213058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:18.213384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:19.214474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:20.215199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:21.215833      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:22.216502      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:23.217260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:24.217473      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:25.217989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:26.218425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:27.218809      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:24:27.799: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/15/24 09:24:27.808
  Apr 15 09:24:27.808: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/15/24 09:24:27.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:24:27.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:24:27.874
  Apr 15 09:24:27.922: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Apr 15 09:24:27.933: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Apr 15 09:24:28.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2738" for this suite. @ 04/15/24 09:24:28.173
  Apr 15 09:24:28.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1975" for this suite. @ 04/15/24 09:24:28.194
• [60.520 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 04/15/24 09:24:28.21
  Apr 15 09:24:28.210: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 09:24:28.213
  E0415 09:24:28.219377      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:24:28.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:24:28.254
  Apr 15 09:24:28.259: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  E0415 09:24:29.220367      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:30.230721      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:31.225786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:32.225689      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:33.227480      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:34.227326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:24:34.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-47" for this suite. @ 04/15/24 09:24:34.81
• [6.619 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 04/15/24 09:24:34.832
  Apr 15 09:24:34.833: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename configmap @ 04/15/24 09:24:34.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:24:34.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:24:34.902
  STEP: Creating configMap with name configmap-test-upd-66d47b08-40d7-4384-88b5-b51b53e49c4f @ 04/15/24 09:24:34.92
  STEP: Creating the pod @ 04/15/24 09:24:34.931
  E0415 09:24:35.228529      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:36.228789      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-66d47b08-40d7-4384-88b5-b51b53e49c4f @ 04/15/24 09:24:37.008
  STEP: waiting to observe update in volume @ 04/15/24 09:24:37.02
  E0415 09:24:37.228916      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:38.229160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:39.230833      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:40.231155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:41.231222      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:42.231777      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:43.232310      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:44.232498      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:45.233373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:46.233866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:47.234220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:48.235160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:49.236218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:50.237152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:51.237476      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:52.238169      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:53.239356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:54.239227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:55.239745      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:56.240191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:57.240981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:58.241391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:24:59.242169      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:00.242749      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:01.242822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:02.243333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:03.244175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:04.244389      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:05.244881      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:06.245173      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:07.245640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:08.249582      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:09.246204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:10.246326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:11.247012      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:12.247154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:13.248619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:14.249549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:15.249866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:16.250051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:17.250746      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:18.251165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:19.251038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:20.251703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:21.252212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:22.251916      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:23.252423      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:24.252808      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:25.252936      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:26.254140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:27.254303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:28.255778      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:29.255558      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:30.256499      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:31.256710      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:32.257206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:33.257234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:34.257780      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:35.257957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:36.258270      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:37.258610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:38.259757      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:39.259842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:39.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1711" for this suite. @ 04/15/24 09:25:39.711
• [64.900 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 04/15/24 09:25:39.737
  Apr 15 09:25:39.738: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 09:25:39.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:39.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:39.799
  STEP: Setting up server cert @ 04/15/24 09:25:39.872
  E0415 09:25:40.260579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 09:25:40.714
  STEP: Deploying the webhook pod @ 04/15/24 09:25:40.739
  STEP: Wait for the deployment to be ready @ 04/15/24 09:25:40.771
  Apr 15 09:25:40.807: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 09:25:41.261198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:42.261527      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 09:25:42.83
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 09:25:42.915
  E0415 09:25:43.261924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:43.916: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/15/24 09:25:43.934
  STEP: create a namespace for the webhook @ 04/15/24 09:25:43.991
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/15/24 09:25:44.025
  Apr 15 09:25:44.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2845" for this suite. @ 04/15/24 09:25:44.196
  STEP: Destroying namespace "webhook-markers-2880" for this suite. @ 04/15/24 09:25:44.213
  STEP: Destroying namespace "fail-closed-namespace-9697" for this suite. @ 04/15/24 09:25:44.229
• [4.511 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS  E0415 09:25:44.261887      13 retrywatcher.go:129] "Watch failed" err="context canceled"
SSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 04/15/24 09:25:44.265
  Apr 15 09:25:44.265: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename security-context-test @ 04/15/24 09:25:44.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:44.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:44.316
  E0415 09:25:45.262041      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:46.264744      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:47.262819      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:48.263048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:48.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8880" for this suite. @ 04/15/24 09:25:48.394
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 04/15/24 09:25:48.415
  Apr 15 09:25:48.415: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 09:25:48.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:48.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:48.468
  Apr 15 09:25:48.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3216" for this suite. @ 04/15/24 09:25:48.509
• [0.108 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 04/15/24 09:25:48.525
  Apr 15 09:25:48.526: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename discovery @ 04/15/24 09:25:48.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:48.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:48.573
  STEP: Setting up server cert @ 04/15/24 09:25:48.586
  E0415 09:25:49.263307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:49.469: INFO: Checking APIGroup: apiregistration.k8s.io
  Apr 15 09:25:49.472: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Apr 15 09:25:49.472: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Apr 15 09:25:49.473: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Apr 15 09:25:49.473: INFO: Checking APIGroup: apps
  Apr 15 09:25:49.474: INFO: PreferredVersion.GroupVersion: apps/v1
  Apr 15 09:25:49.475: INFO: Versions found [{apps/v1 v1}]
  Apr 15 09:25:49.477: INFO: apps/v1 matches apps/v1
  Apr 15 09:25:49.477: INFO: Checking APIGroup: events.k8s.io
  Apr 15 09:25:49.480: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Apr 15 09:25:49.480: INFO: Versions found [{events.k8s.io/v1 v1}]
  Apr 15 09:25:49.480: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Apr 15 09:25:49.480: INFO: Checking APIGroup: authentication.k8s.io
  Apr 15 09:25:49.482: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Apr 15 09:25:49.482: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Apr 15 09:25:49.482: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Apr 15 09:25:49.482: INFO: Checking APIGroup: authorization.k8s.io
  Apr 15 09:25:49.486: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Apr 15 09:25:49.486: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Apr 15 09:25:49.486: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Apr 15 09:25:49.486: INFO: Checking APIGroup: autoscaling
  Apr 15 09:25:49.488: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Apr 15 09:25:49.488: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Apr 15 09:25:49.488: INFO: autoscaling/v2 matches autoscaling/v2
  Apr 15 09:25:49.488: INFO: Checking APIGroup: batch
  Apr 15 09:25:49.491: INFO: PreferredVersion.GroupVersion: batch/v1
  Apr 15 09:25:49.491: INFO: Versions found [{batch/v1 v1}]
  Apr 15 09:25:49.491: INFO: batch/v1 matches batch/v1
  Apr 15 09:25:49.491: INFO: Checking APIGroup: certificates.k8s.io
  Apr 15 09:25:49.495: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Apr 15 09:25:49.495: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Apr 15 09:25:49.495: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Apr 15 09:25:49.495: INFO: Checking APIGroup: networking.k8s.io
  Apr 15 09:25:49.499: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Apr 15 09:25:49.499: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Apr 15 09:25:49.499: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Apr 15 09:25:49.499: INFO: Checking APIGroup: policy
  Apr 15 09:25:49.502: INFO: PreferredVersion.GroupVersion: policy/v1
  Apr 15 09:25:49.503: INFO: Versions found [{policy/v1 v1}]
  Apr 15 09:25:49.503: INFO: policy/v1 matches policy/v1
  Apr 15 09:25:49.504: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Apr 15 09:25:49.507: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Apr 15 09:25:49.507: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Apr 15 09:25:49.507: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Apr 15 09:25:49.507: INFO: Checking APIGroup: storage.k8s.io
  Apr 15 09:25:49.510: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Apr 15 09:25:49.511: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Apr 15 09:25:49.512: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Apr 15 09:25:49.512: INFO: Checking APIGroup: admissionregistration.k8s.io
  Apr 15 09:25:49.516: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Apr 15 09:25:49.516: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Apr 15 09:25:49.516: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Apr 15 09:25:49.516: INFO: Checking APIGroup: apiextensions.k8s.io
  Apr 15 09:25:49.521: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Apr 15 09:25:49.521: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Apr 15 09:25:49.521: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Apr 15 09:25:49.521: INFO: Checking APIGroup: scheduling.k8s.io
  Apr 15 09:25:49.524: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Apr 15 09:25:49.524: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Apr 15 09:25:49.524: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Apr 15 09:25:49.524: INFO: Checking APIGroup: coordination.k8s.io
  Apr 15 09:25:49.527: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Apr 15 09:25:49.527: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Apr 15 09:25:49.527: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Apr 15 09:25:49.527: INFO: Checking APIGroup: node.k8s.io
  Apr 15 09:25:49.529: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Apr 15 09:25:49.529: INFO: Versions found [{node.k8s.io/v1 v1}]
  Apr 15 09:25:49.529: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Apr 15 09:25:49.529: INFO: Checking APIGroup: discovery.k8s.io
  Apr 15 09:25:49.532: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Apr 15 09:25:49.532: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Apr 15 09:25:49.533: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Apr 15 09:25:49.533: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Apr 15 09:25:49.537: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Apr 15 09:25:49.537: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Apr 15 09:25:49.537: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Apr 15 09:25:49.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7257" for this suite. @ 04/15/24 09:25:49.557
• [1.051 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 04/15/24 09:25:49.578
  Apr 15 09:25:49.578: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 09:25:49.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:49.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:49.662
  Apr 15 09:25:49.675: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  E0415 09:25:50.263716      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:51.264042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/15/24 09:25:51.911
  Apr 15 09:25:51.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 --namespace=crd-publish-openapi-1436 create -f -'
  E0415 09:25:52.265130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:52.378: INFO: stderr: ""
  Apr 15 09:25:52.378: INFO: stdout: "e2e-test-crd-publish-openapi-1590-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 15 09:25:52.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 --namespace=crd-publish-openapi-1436 delete e2e-test-crd-publish-openapi-1590-crds test-foo'
  Apr 15 09:25:52.564: INFO: stderr: ""
  Apr 15 09:25:52.564: INFO: stdout: "e2e-test-crd-publish-openapi-1590-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Apr 15 09:25:52.564: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 --namespace=crd-publish-openapi-1436 apply -f -'
  Apr 15 09:25:53.009: INFO: stderr: ""
  Apr 15 09:25:53.009: INFO: stdout: "e2e-test-crd-publish-openapi-1590-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 15 09:25:53.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 --namespace=crd-publish-openapi-1436 delete e2e-test-crd-publish-openapi-1590-crds test-foo'
  Apr 15 09:25:53.206: INFO: stderr: ""
  Apr 15 09:25:53.207: INFO: stdout: "e2e-test-crd-publish-openapi-1590-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/15/24 09:25:53.207
  Apr 15 09:25:53.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 --namespace=crd-publish-openapi-1436 create -f -'
  E0415 09:25:53.265423      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:53.419: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/15/24 09:25:53.419
  Apr 15 09:25:53.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 --namespace=crd-publish-openapi-1436 create -f -'
  Apr 15 09:25:53.657: INFO: rc: 1
  Apr 15 09:25:53.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 --namespace=crd-publish-openapi-1436 apply -f -'
  Apr 15 09:25:53.877: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/15/24 09:25:53.877
  Apr 15 09:25:53.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 --namespace=crd-publish-openapi-1436 create -f -'
  Apr 15 09:25:54.091: INFO: rc: 1
  Apr 15 09:25:54.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 --namespace=crd-publish-openapi-1436 apply -f -'
  E0415 09:25:54.265968      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:54.322: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/15/24 09:25:54.322
  Apr 15 09:25:54.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 explain e2e-test-crd-publish-openapi-1590-crds'
  Apr 15 09:25:54.492: INFO: stderr: ""
  Apr 15 09:25:54.492: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1590-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/15/24 09:25:54.493
  Apr 15 09:25:54.493: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 explain e2e-test-crd-publish-openapi-1590-crds.metadata'
  Apr 15 09:25:54.668: INFO: stderr: ""
  Apr 15 09:25:54.668: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1590-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Apr 15 09:25:54.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 explain e2e-test-crd-publish-openapi-1590-crds.spec'
  Apr 15 09:25:54.847: INFO: stderr: ""
  Apr 15 09:25:54.847: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1590-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Apr 15 09:25:54.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 explain e2e-test-crd-publish-openapi-1590-crds.spec.bars'
  Apr 15 09:25:55.034: INFO: stderr: ""
  Apr 15 09:25:55.034: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1590-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/15/24 09:25:55.035
  Apr 15 09:25:55.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-1436 explain e2e-test-crd-publish-openapi-1590-crds.spec.bars2'
  Apr 15 09:25:55.195: INFO: rc: 1
  E0415 09:25:55.267641      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:25:56.267738      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:57.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1436" for this suite. @ 04/15/24 09:25:57.109
• [7.548 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/15/24 09:25:57.131
  Apr 15 09:25:57.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 09:25:57.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:25:57.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:25:57.197
  Apr 15 09:25:57.265: INFO: Creating daemon "daemon-set" with a node selector
  E0415 09:25:57.268681      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/15/24 09:25:57.283
  Apr 15 09:25:57.298: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 09:25:57.298: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/15/24 09:25:57.298
  Apr 15 09:25:57.406: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 09:25:57.406: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  E0415 09:25:58.269232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:58.397: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 09:25:58.397: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  E0415 09:25:59.269286      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:25:59.399: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 09:25:59.399: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/15/24 09:25:59.405
  Apr 15 09:25:59.439: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 09:25:59.439: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0415 09:26:00.269785      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:00.444: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 09:26:00.444: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/15/24 09:26:00.444
  Apr 15 09:26:00.471: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 09:26:00.472: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  E0415 09:26:01.270977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:01.472: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 09:26:01.473: INFO: Node eehaephong4y-1 is running 0 daemon pod, expected 1
  E0415 09:26:02.271160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:02.472: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 09:26:02.472: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 09:26:02.488
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-347, will wait for the garbage collector to delete the pods @ 04/15/24 09:26:02.489
  Apr 15 09:26:02.568: INFO: Deleting DaemonSet.extensions daemon-set took: 19.347263ms
  Apr 15 09:26:02.669: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.336584ms
  E0415 09:26:03.271947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:04.075: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 09:26:04.075: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 09:26:04.081: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"234644"},"items":null}

  Apr 15 09:26:04.088: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"234644"},"items":null}

  Apr 15 09:26:04.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-347" for this suite. @ 04/15/24 09:26:04.183
• [7.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/15/24 09:26:04.199
  Apr 15 09:26:04.199: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:26:04.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:26:04.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:26:04.253
  STEP: Creating projection with secret that has name projected-secret-test-map-9e02f64c-0d9c-4787-9084-2cc7ac4e0d2f @ 04/15/24 09:26:04.259
  STEP: Creating a pod to test consume secrets @ 04/15/24 09:26:04.269
  E0415 09:26:04.272553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:05.273031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:06.273531      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:07.273675      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:08.274208      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:26:08.309
  Apr 15 09:26:08.317: INFO: Trying to get logs from node eehaephong4y-3 pod pod-projected-secrets-cd9587a6-b1c9-4b30-b6ae-fbb8714958b9 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 09:26:08.356
  Apr 15 09:26:08.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-475" for this suite. @ 04/15/24 09:26:08.398
• [4.213 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/15/24 09:26:08.412
  Apr 15 09:26:08.412: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 09:26:08.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:26:08.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:26:08.461
  STEP: create the container @ 04/15/24 09:26:08.471
  W0415 09:26:08.493342      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/15/24 09:26:08.493
  E0415 09:26:09.276212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:10.275265      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:11.276098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/15/24 09:26:11.549
  STEP: the container should be terminated @ 04/15/24 09:26:11.558
  STEP: the termination message should be set @ 04/15/24 09:26:11.558
  Apr 15 09:26:11.559: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/15/24 09:26:11.559
  Apr 15 09:26:11.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7565" for this suite. @ 04/15/24 09:26:11.615
• [3.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 04/15/24 09:26:11.643
  Apr 15 09:26:11.643: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 09:26:11.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:26:11.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:26:11.721
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/15/24 09:26:11.733
  E0415 09:26:12.277203      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:13.278420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:14.278847      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:15.279405      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:26:15.797
  Apr 15 09:26:15.803: INFO: Trying to get logs from node eehaephong4y-3 pod pod-7552a19b-daba-42b5-a2cb-6de91b586e6a container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:26:15.827
  Apr 15 09:26:15.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4088" for this suite. @ 04/15/24 09:26:15.88
• [4.254 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 04/15/24 09:26:15.897
  Apr 15 09:26:15.897: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename deployment @ 04/15/24 09:26:15.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:26:15.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:26:15.946
  STEP: creating a Deployment @ 04/15/24 09:26:15.964
  Apr 15 09:26:15.965: INFO: Creating simple deployment test-deployment-5dlw7
  Apr 15 09:26:15.991: INFO: new replicaset for deployment "test-deployment-5dlw7" is yet to be created
  E0415 09:26:16.280892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:17.283104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 04/15/24 09:26:18.024
  Apr 15 09:26:18.035: INFO: Deployment test-deployment-5dlw7 has Conditions: [{Available True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5dlw7-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/15/24 09:26:18.035
  Apr 15 09:26:18.069: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 9, 26, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 9, 26, 16, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 9, 26, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 9, 26, 16, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-5dlw7-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/15/24 09:26:18.07
  Apr 15 09:26:18.076: INFO: Observed &Deployment event: ADDED
  Apr 15 09:26:18.077: INFO: Observed Deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5dlw7-5d576bd769"}
  Apr 15 09:26:18.079: INFO: Observed &Deployment event: MODIFIED
  Apr 15 09:26:18.080: INFO: Observed Deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5dlw7-5d576bd769"}
  Apr 15 09:26:18.081: INFO: Observed Deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 15 09:26:18.083: INFO: Observed &Deployment event: MODIFIED
  Apr 15 09:26:18.083: INFO: Observed Deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 15 09:26:18.084: INFO: Observed Deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-5dlw7-5d576bd769" is progressing.}
  Apr 15 09:26:18.086: INFO: Observed &Deployment event: MODIFIED
  Apr 15 09:26:18.086: INFO: Observed Deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 15 09:26:18.087: INFO: Observed Deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5dlw7-5d576bd769" has successfully progressed.}
  Apr 15 09:26:18.088: INFO: Observed &Deployment event: MODIFIED
  Apr 15 09:26:18.088: INFO: Observed Deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 15 09:26:18.089: INFO: Observed Deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5dlw7-5d576bd769" has successfully progressed.}
  Apr 15 09:26:18.089: INFO: Found Deployment test-deployment-5dlw7 in namespace deployment-8739 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 09:26:18.090: INFO: Deployment test-deployment-5dlw7 has an updated status
  STEP: patching the Statefulset Status @ 04/15/24 09:26:18.091
  Apr 15 09:26:18.091: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 15 09:26:18.106: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/15/24 09:26:18.107
  Apr 15 09:26:18.117: INFO: Observed &Deployment event: ADDED
  Apr 15 09:26:18.117: INFO: Observed deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5dlw7-5d576bd769"}
  Apr 15 09:26:18.117: INFO: Observed &Deployment event: MODIFIED
  Apr 15 09:26:18.117: INFO: Observed deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5dlw7-5d576bd769"}
  Apr 15 09:26:18.117: INFO: Observed deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 15 09:26:18.118: INFO: Observed &Deployment event: MODIFIED
  Apr 15 09:26:18.118: INFO: Observed deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 15 09:26:18.118: INFO: Observed deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-5dlw7-5d576bd769" is progressing.}
  Apr 15 09:26:18.118: INFO: Observed &Deployment event: MODIFIED
  Apr 15 09:26:18.119: INFO: Observed deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 15 09:26:18.119: INFO: Observed deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5dlw7-5d576bd769" has successfully progressed.}
  Apr 15 09:26:18.121: INFO: Observed &Deployment event: MODIFIED
  Apr 15 09:26:18.121: INFO: Observed deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 15 09:26:18.121: INFO: Observed deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 09:26:16 +0000 UTC 2024-04-15 09:26:16 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5dlw7-5d576bd769" has successfully progressed.}
  Apr 15 09:26:18.121: INFO: Observed deployment test-deployment-5dlw7 in namespace deployment-8739 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 09:26:18.122: INFO: Observed &Deployment event: MODIFIED
  Apr 15 09:26:18.122: INFO: Found deployment test-deployment-5dlw7 in namespace deployment-8739 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Apr 15 09:26:18.123: INFO: Deployment test-deployment-5dlw7 has a patched status
  Apr 15 09:26:18.132: INFO: Deployment "test-deployment-5dlw7":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-5dlw7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8739",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b685ad13-64cc-4e9d-9818-c36204ff1c7c",
      ResourceVersion: (string) (len=6) "234776",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769975,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-5dlw7-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 09:26:18.146: INFO: New ReplicaSet "test-deployment-5dlw7-5d576bd769" of Deployment "test-deployment-5dlw7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-5dlw7-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8739",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc26968c-cee3-46a6-8296-30c6833249e3",
      ResourceVersion: (string) (len=6) "234766",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-5dlw7",
          UID: (types.UID) (len=36) "b685ad13-64cc-4e9d-9818-c36204ff1c7c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 62 36 38  |k:{\"uid\":\"b68|
              00000120  35 61 64 31 33 2d 36 34  63 63 2d 34 65 39 64 2d  |5ad13-64cc-4e9d-|
              00000130  39 38 31 38 2d 63 33 36  32 30 34 66 66 31 63 37  |9818-c36204ff1c7|
              00000140  63 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |c\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 09:26:18.159: INFO: Pod "test-deployment-5dlw7-5d576bd769-jjlfs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-5dlw7-5d576bd769-jjlfs",
      GenerateName: (string) (len=33) "test-deployment-5dlw7-5d576bd769-",
      Namespace: (string) (len=15) "deployment-8739",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59b30297-551b-4ea6-8332-5e03d3a852af",
      ResourceVersion: (string) (len=6) "234765",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-5dlw7-5d576bd769",
          UID: (types.UID) (len=36) "fc26968c-cee3-46a6-8296-30c6833249e3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 66 63 32 36 39 36 38  63 2d 63 65 65 33 2d 34  |"fc26968c-cee3-4|
              000000a0  36 61 36 2d 38 32 39 36  2d 33 30 63 36 38 33 33  |6a6-8296-30c6833|
              000000b0  32 34 39 65 33 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |249e3\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 32 31 5c 22 7d 22 3a  |.233.66.121\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-28ds8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-28ds8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848769976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.84"
        }
      },
      PodIP: (string) (len=13) "10.233.66.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848769976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848769976,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://b39631c6592c6ab8b1c75a3eec33282e0011aab606a867489b19eca65a4de77a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:26:18.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8739" for this suite. @ 04/15/24 09:26:18.196
• [2.317 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 04/15/24 09:26:18.215
  Apr 15 09:26:18.215: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 09:26:18.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:26:18.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:26:18.266
  Apr 15 09:26:18.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  E0415 09:26:18.283090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:19.283580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:20.283978      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0415 09:26:21.059365      13 warnings.go:70] unknown field "alpha"
  W0415 09:26:21.059983      13 warnings.go:70] unknown field "beta"
  W0415 09:26:21.060282      13 warnings.go:70] unknown field "delta"
  W0415 09:26:21.060578      13 warnings.go:70] unknown field "epsilon"
  W0415 09:26:21.060954      13 warnings.go:70] unknown field "gamma"
  E0415 09:26:21.285110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:21.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7230" for this suite. @ 04/15/24 09:26:21.766
• [3.567 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 04/15/24 09:26:21.785
  Apr 15 09:26:21.785: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 09:26:21.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:26:21.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:26:21.836
  STEP: Updating Namespace "namespaces-2249" @ 04/15/24 09:26:21.843
  Apr 15 09:26:21.882: INFO: Namespace "namespaces-2249" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"a2febfff-5a34-433a-8828-9d38138f3554", "kubernetes.io/metadata.name":"namespaces-2249", "namespaces-2249":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Apr 15 09:26:21.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2249" for this suite. @ 04/15/24 09:26:21.898
• [0.124 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 04/15/24 09:26:21.91
  Apr 15 09:26:21.910: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename containers @ 04/15/24 09:26:21.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:26:21.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:26:21.964
  STEP: Creating a pod to test override arguments @ 04/15/24 09:26:21.971
  E0415 09:26:22.285355      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:23.285877      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:24.285853      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:25.286076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:26:26.022
  Apr 15 09:26:26.030: INFO: Trying to get logs from node eehaephong4y-3 pod client-containers-30364984-2285-4bf1-880b-b01420c42fec container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 09:26:26.042
  Apr 15 09:26:26.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8955" for this suite. @ 04/15/24 09:26:26.088
• [4.201 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 04/15/24 09:26:26.112
  Apr 15 09:26:26.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 09:26:26.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:26:26.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:26:26.156
  Apr 15 09:26:26.165: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  E0415 09:26:26.286204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:27.287373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:28.287638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0415 09:26:28.983340      13 warnings.go:70] unknown field "alpha"
  W0415 09:26:28.983414      13 warnings.go:70] unknown field "beta"
  W0415 09:26:28.983440      13 warnings.go:70] unknown field "delta"
  W0415 09:26:28.983460      13 warnings.go:70] unknown field "epsilon"
  W0415 09:26:28.983474      13 warnings.go:70] unknown field "gamma"
  E0415 09:26:29.288059      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:26:29.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9053" for this suite. @ 04/15/24 09:26:29.605
• [3.508 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/15/24 09:26:29.621
  Apr 15 09:26:29.621: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename secrets @ 04/15/24 09:26:29.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:26:29.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:26:29.664
  STEP: Creating secret with name s-test-opt-del-50b05160-fe99-47b2-96f9-d97c76e48501 @ 04/15/24 09:26:29.683
  STEP: Creating secret with name s-test-opt-upd-e10a300b-24f3-4844-a2b9-bb0e78bcdfda @ 04/15/24 09:26:29.695
  STEP: Creating the pod @ 04/15/24 09:26:29.704
  E0415 09:26:30.288516      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:31.288760      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-50b05160-fe99-47b2-96f9-d97c76e48501 @ 04/15/24 09:26:31.808
  STEP: Updating secret s-test-opt-upd-e10a300b-24f3-4844-a2b9-bb0e78bcdfda @ 04/15/24 09:26:31.82
  STEP: Creating secret with name s-test-opt-create-c969f3b6-c446-4325-9563-f0247ada6af0 @ 04/15/24 09:26:31.83
  STEP: waiting to observe update in volume @ 04/15/24 09:26:31.841
  E0415 09:26:32.288996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:33.289402      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:34.290342      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:35.290746      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:36.292657      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:37.291497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:38.292494      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:39.293092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:40.294007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:41.294302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:42.295518      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:43.295658      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:44.296008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:45.296846      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:46.296945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:47.297351      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:48.297930      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:49.298299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:50.300010      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:51.300762      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:52.301439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:53.302305      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:54.302992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:55.303131      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:56.305594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:57.306623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:58.307039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:26:59.308083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:00.308963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:01.310164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:02.310705      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:03.310707      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:04.314306      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:05.311924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:06.312268      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:07.312531      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:08.312870      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:09.313000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:10.314026      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:11.314886      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:12.315307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:13.315990      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:14.316261      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:15.316686      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:16.316879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:17.317006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:18.317597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:19.318234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:20.318340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:21.318561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:22.319165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:23.319327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:24.320091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:25.320541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:26.321017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:27.321296      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:28.321724      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:29.322076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:30.322543      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:31.322408      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:32.323116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:33.324229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:34.324262      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:35.324497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:36.325186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:37.335099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:38.335365      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:39.335832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:40.335904      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:41.336211      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:42.336448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:43.337122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:44.338025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:45.337746      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:46.337818      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:47.338574      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:48.338982      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:49.339104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:50.340079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:51.340895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:52.341104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:52.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9141" for this suite. @ 04/15/24 09:27:52.853
• [83.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/15/24 09:27:52.875
  Apr 15 09:27:52.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename deployment @ 04/15/24 09:27:52.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:27:52.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:27:52.937
  Apr 15 09:27:52.972: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0415 09:27:53.342193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:54.342124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:55.342713      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:56.342838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:57.349938      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:57.980: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 09:27:57.98
  Apr 15 09:27:57.981: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0415 09:27:58.344159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:27:59.344395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:27:59.988: INFO: Creating deployment "test-rollover-deployment"
  Apr 15 09:28:00.005: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0415 09:28:00.345045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:01.345928      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:02.020: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Apr 15 09:28:02.036: INFO: Ensure that both replica sets have 1 created replica
  Apr 15 09:28:02.053: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Apr 15 09:28:02.082: INFO: Updating deployment test-rollover-deployment
  Apr 15 09:28:02.082: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0415 09:28:02.346832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:03.347526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:04.102: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Apr 15 09:28:04.131: INFO: Make sure deployment "test-rollover-deployment" is complete
  Apr 15 09:28:04.156: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 09:28:04.157: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 9, 28, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 09:28:04.347646      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:05.348064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:06.181: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 09:28:06.181: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 9, 28, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 09:28:06.348844      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:07.349290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:08.171: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 09:28:08.172: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 9, 28, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 09:28:08.350197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:09.350348      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:10.176: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 09:28:10.176: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 9, 28, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 09:28:10.351251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:11.352116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:12.181: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 09:28:12.181: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 9, 28, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 9, 28, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 09:28:12.352189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:13.353191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:14.176: INFO: 
  Apr 15 09:28:14.176: INFO: Ensure that both old replica sets have no replicas
  Apr 15 09:28:14.198: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3015",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b40b6ba-2e3c-4ef6-bd55-0cf0c61976eb",
      ResourceVersion: (string) (len=6) "235194",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 09:28:14.220: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3015",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bfc489b4-dda5-4d1d-a720-bc9a1d93530a",
      ResourceVersion: (string) (len=6) "235184",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770082,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4b40b6ba-2e3c-4ef6-bd55-0cf0c61976eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 62 34 30 62 36  62 61 2d 32 65 33 63 2d  |\"4b40b6ba-2e3c-|
              00000120  34 65 66 36 2d 62 64 35  35 2d 30 63 66 30 63 36  |4ef6-bd55-0cf0c6|
              00000130  31 39 37 36 65 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1976eb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 09:28:14.224: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Apr 15 09:28:14.224: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3015",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb74f6c4-0df7-4bd3-9842-0aee821fefa3",
      ResourceVersion: (string) (len=6) "235193",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770072,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4b40b6ba-2e3c-4ef6-bd55-0cf0c61976eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770072,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  34 62 34 30 62 36 62 61  2d 32 65 33 63 2d 34 65  |4b40b6ba-2e3c-4e|
              000000c0  66 36 2d 62 64 35 35 2d  30 63 66 30 63 36 31 39  |f6-bd55-0cf0c619|
              000000d0  37 36 65 62 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |76eb\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 09:28:14.230: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3015",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a89cbe3-78a2-4ac4-9584-6a2e450dfa16",
      ResourceVersion: (string) (len=6) "235147",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4b40b6ba-2e3c-4ef6-bd55-0cf0c61976eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 62 34 30 62 36  62 61 2d 32 65 33 63 2d  |\"4b40b6ba-2e3c-|
              00000120  34 65 66 36 2d 62 64 35  35 2d 30 63 66 30 63 36  |4ef6-bd55-0cf0c6|
              00000130  31 39 37 36 65 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1976eb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 09:28:14.243: INFO: Pod "test-rollover-deployment-68774655d5-9jkcj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-9jkcj",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-3015",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d7672572-433e-4f33-9ad4-3aaef8002875",
      ResourceVersion: (string) (len=6) "235162",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770082,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "bfc489b4-dda5-4d1d-a720-bc9a1d93530a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  63 34 38 39 62 34 2d 64  |d\":\"bfc489b4-d|
              00000090  64 61 35 2d 34 64 31 64  2d 61 37 32 30 2d 62 63  |da5-4d1d-a720-bc|
              000000a0  39 61 31 64 39 33 35 33  30 61 5c 22 7d 22 3a 7b  |9a1d93530a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 32 36 5c 22 7d 22 3a  |.233.66.126\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qgpgj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qgpgj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.84"
        }
      },
      PodIP: (string) (len=13) "10.233.66.126",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.126"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770082,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848770082,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://1503b620f818129e8a994460bd314c0bac50e821babff27b545c5905256fd6bc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 09:28:14.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3015" for this suite. @ 04/15/24 09:28:14.266
• [21.406 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/15/24 09:28:14.284
  Apr 15 09:28:14.284: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/15/24 09:28:14.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:28:14.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:28:14.327
  STEP: creating a target pod @ 04/15/24 09:28:14.337
  E0415 09:28:14.354226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:15.355240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:16.356691      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/15/24 09:28:16.383
  E0415 09:28:17.356733      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:18.356669      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/15/24 09:28:18.43
  Apr 15 09:28:18.430: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-855 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:28:18.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:28:18.432: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:28:18.433: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-855/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 15 09:28:18.579: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/15/24 09:28:18.594
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/15/24 09:28:18.604
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/15/24 09:28:18.632
  Apr 15 09:28:18.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-855" for this suite. @ 04/15/24 09:28:18.66
• [4.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 04/15/24 09:28:18.687
  Apr 15 09:28:18.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:28:18.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:28:18.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:28:18.725
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 09:28:18.732
  E0415 09:28:19.357541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:20.358072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:21.359530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:22.359378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:28:22.789
  Apr 15 09:28:22.799: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-1bd9a897-04b6-436a-be20-3bcfc4fe678a container client-container: <nil>
  STEP: delete the pod @ 04/15/24 09:28:22.825
  Apr 15 09:28:22.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3391" for this suite. @ 04/15/24 09:28:22.918
• [4.251 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 04/15/24 09:28:22.938
  Apr 15 09:28:22.938: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename sysctl @ 04/15/24 09:28:22.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:28:22.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:28:22.982
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/15/24 09:28:22.987
  Apr 15 09:28:22.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9905" for this suite. @ 04/15/24 09:28:23.01
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 04/15/24 09:28:23.028
  Apr 15 09:28:23.028: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pv @ 04/15/24 09:28:23.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:28:23.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:28:23.074
  STEP: Creating initial PV and PVC @ 04/15/24 09:28:23.079
  Apr 15 09:28:23.080: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1668" @ 04/15/24 09:28:23.118
  STEP: Listing PVCs in namespace "pv-1668" @ 04/15/24 09:28:23.128
  STEP: Patching the PV "pv-1668-gz9rb" @ 04/15/24 09:28:23.137
  STEP: Patching the PVC "pvc-2jg2v" @ 04/15/24 09:28:23.256
  STEP: Getting PV "pv-1668-gz9rb" @ 04/15/24 09:28:23.352
  E0415 09:28:23.360497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting PVC "pvc-2jg2v" @ 04/15/24 09:28:23.362
  STEP: Deleting PVC "pvc-2jg2v" @ 04/15/24 09:28:23.381
  STEP: Confirm deletion of PVC "pvc-2jg2v" @ 04/15/24 09:28:23.4
  E0415 09:28:24.361063      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:25.361714      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-1668-gz9rb" @ 04/15/24 09:28:25.426
  STEP: Confirm deletion of PV "pv-1668-gz9rb" @ 04/15/24 09:28:25.446
  E0415 09:28:26.362005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:27.362879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 04/15/24 09:28:27.468
  Apr 15 09:28:27.468: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-1668-2xbf7" @ 04/15/24 09:28:27.502
  STEP: Updating the PVC "pvc-4zqml" @ 04/15/24 09:28:27.519
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-4zqml=updated" @ 04/15/24 09:28:27.54
  STEP: Deleting PVC "pvc-4zqml" via DeleteCollection @ 04/15/24 09:28:27.56
  STEP: Confirm deletion of PVC "pvc-4zqml" @ 04/15/24 09:28:27.588
  E0415 09:28:28.362483      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:29.363414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-1668-2xbf7" via DeleteCollection @ 04/15/24 09:28:29.63
  STEP: Confirm deletion of PV "pv-1668-2xbf7" @ 04/15/24 09:28:29.659
  E0415 09:28:30.363533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:31.364335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:31.679: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Apr 15 09:28:31.679: INFO: Deleting PersistentVolumeClaim "pvc-4zqml"
  Apr 15 09:28:31.696: INFO: Deleting PersistentVolume "pv-1668-2xbf7"
  Apr 15 09:28:31.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1668" for this suite. @ 04/15/24 09:28:31.718
• [8.709 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 04/15/24 09:28:31.739
  Apr 15 09:28:31.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename ingress @ 04/15/24 09:28:31.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:28:31.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:28:31.787
  STEP: getting /apis @ 04/15/24 09:28:31.793
  STEP: getting /apis/networking.k8s.io @ 04/15/24 09:28:31.805
  STEP: getting /apis/networking.k8s.iov1 @ 04/15/24 09:28:31.808
  STEP: creating @ 04/15/24 09:28:31.811
  STEP: getting @ 04/15/24 09:28:31.855
  STEP: listing @ 04/15/24 09:28:31.863
  STEP: watching @ 04/15/24 09:28:31.877
  Apr 15 09:28:31.878: INFO: starting watch
  STEP: cluster-wide listing @ 04/15/24 09:28:31.882
  STEP: cluster-wide watching @ 04/15/24 09:28:31.891
  Apr 15 09:28:31.892: INFO: starting watch
  STEP: patching @ 04/15/24 09:28:31.896
  STEP: updating @ 04/15/24 09:28:31.911
  Apr 15 09:28:31.937: INFO: waiting for watch events with expected annotations
  Apr 15 09:28:31.938: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/15/24 09:28:31.939
  STEP: updating /status @ 04/15/24 09:28:31.953
  STEP: get /status @ 04/15/24 09:28:31.974
  STEP: deleting @ 04/15/24 09:28:31.984
  STEP: deleting a collection @ 04/15/24 09:28:32.02
  Apr 15 09:28:32.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3594" for this suite. @ 04/15/24 09:28:32.104
• [0.380 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 04/15/24 09:28:32.125
  Apr 15 09:28:32.125: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:28:32.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:28:32.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:28:32.193
  STEP: Creating configMap with name projected-configmap-test-volume-map-8ecebe96-c43c-4163-bce9-130c636204cb @ 04/15/24 09:28:32.203
  STEP: Creating a pod to test consume configMaps @ 04/15/24 09:28:32.22
  E0415 09:28:32.364968      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:33.365275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:34.366183      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:35.366584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:28:36.293
  Apr 15 09:28:36.300: INFO: Trying to get logs from node eehaephong4y-3 pod pod-projected-configmaps-39a40065-4496-43bc-bea6-9f75c399013d container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 09:28:36.321
  Apr 15 09:28:36.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 09:28:36.366947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-9845" for this suite. @ 04/15/24 09:28:36.377
• [4.267 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 04/15/24 09:28:36.392
  Apr 15 09:28:36.392: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/15/24 09:28:36.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:28:36.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:28:36.455
  STEP: create the container to handle the HTTPGet hook request. @ 04/15/24 09:28:36.481
  E0415 09:28:37.368728      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:38.369237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/15/24 09:28:38.555
  E0415 09:28:39.369781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:40.369971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/15/24 09:28:40.604
  STEP: delete the pod with lifecycle hook @ 04/15/24 09:28:40.626
  E0415 09:28:41.369953      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:42.370774      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:42.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7196" for this suite. @ 04/15/24 09:28:42.686
• [6.312 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 04/15/24 09:28:42.706
  Apr 15 09:28:42.706: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:28:42.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:28:42.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:28:42.796
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 09:28:42.805
  E0415 09:28:43.371388      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:44.372314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:45.373445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:46.374557      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:28:46.904
  Apr 15 09:28:46.914: INFO: Trying to get logs from node eehaephong4y-3 pod downwardapi-volume-a5e850d4-7396-4910-9960-8e7f4ee9418c container client-container: <nil>
  STEP: delete the pod @ 04/15/24 09:28:46.931
  Apr 15 09:28:46.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6139" for this suite. @ 04/15/24 09:28:46.983
• [4.292 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/15/24 09:28:47.002
  Apr 15 09:28:47.002: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename deployment @ 04/15/24 09:28:47.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:28:47.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:28:47.054
  STEP: creating a Deployment @ 04/15/24 09:28:47.072
  STEP: waiting for Deployment to be created @ 04/15/24 09:28:47.087
  STEP: waiting for all Replicas to be Ready @ 04/15/24 09:28:47.092
  Apr 15 09:28:47.096: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 09:28:47.096: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 09:28:47.116: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 09:28:47.116: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 09:28:47.155: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 09:28:47.155: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 09:28:47.233: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 09:28:47.234: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0415 09:28:47.375340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:48.379840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:48.631: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 15 09:28:48.631: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 15 09:28:48.741: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/15/24 09:28:48.741
  Apr 15 09:28:48.765: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/15/24 09:28:48.765
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 0
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2
  Apr 15 09:28:48.772: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2
  Apr 15 09:28:48.803: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2
  Apr 15 09:28:48.803: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2
  Apr 15 09:28:48.862: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2
  Apr 15 09:28:48.862: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2
  Apr 15 09:28:48.894: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1
  Apr 15 09:28:48.894: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1
  Apr 15 09:28:48.951: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1
  Apr 15 09:28:48.951: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1
  E0415 09:28:49.380083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:49.793: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2
  Apr 15 09:28:49.794: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2
  Apr 15 09:28:49.846: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1
  STEP: listing Deployments @ 04/15/24 09:28:49.847
  Apr 15 09:28:49.872: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/15/24 09:28:49.873
  Apr 15 09:28:49.937: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/15/24 09:28:49.941
  Apr 15 09:28:49.978: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 09:28:49.979: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 09:28:50.035: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 09:28:50.182: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 09:28:50.236: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0415 09:28:50.380948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:51.381620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:51.736: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 09:28:51.828: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 09:28:51.952: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 09:28:51.976: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0415 09:28:52.381559      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:53.382253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:28:53.763: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/15/24 09:28:53.819
  STEP: fetching the DeploymentStatus @ 04/15/24 09:28:53.852
  Apr 15 09:28:53.868: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1
  Apr 15 09:28:53.868: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1
  Apr 15 09:28:53.868: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1
  Apr 15 09:28:53.868: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1
  Apr 15 09:28:53.868: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 1
  Apr 15 09:28:53.869: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2
  Apr 15 09:28:53.869: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 3
  Apr 15 09:28:53.870: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2
  Apr 15 09:28:53.870: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 2
  Apr 15 09:28:53.870: INFO: observed Deployment test-deployment in namespace deployment-5406 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/15/24 09:28:53.87
  Apr 15 09:28:53.904: INFO: observed event type MODIFIED
  Apr 15 09:28:53.905: INFO: observed event type MODIFIED
  Apr 15 09:28:53.905: INFO: observed event type MODIFIED
  Apr 15 09:28:53.906: INFO: observed event type MODIFIED
  Apr 15 09:28:53.906: INFO: observed event type MODIFIED
  Apr 15 09:28:53.906: INFO: observed event type MODIFIED
  Apr 15 09:28:53.906: INFO: observed event type MODIFIED
  Apr 15 09:28:53.907: INFO: observed event type MODIFIED
  Apr 15 09:28:53.907: INFO: observed event type MODIFIED
  Apr 15 09:28:53.908: INFO: observed event type MODIFIED
  Apr 15 09:28:53.908: INFO: observed event type MODIFIED
  Apr 15 09:28:53.908: INFO: observed event type MODIFIED
  Apr 15 09:28:53.908: INFO: observed event type MODIFIED
  Apr 15 09:28:53.922: INFO: Log out all the ReplicaSets if there is no deployment created
  Apr 15 09:28:53.950: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "143a5ee0-aa6b-4434-a828-aff3ae3ef4ac",
      ResourceVersion: (string) (len=6) "235664",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770128,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "8a691f8c-d131-4f69-9071-fa816b4f8b2a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 61 36 39  31 66 38 63 2d 64 31 33  |":\"8a691f8c-d13|
              00000130  31 2d 34 66 36 39 2d 39  30 37 31 2d 66 61 38 31  |1-4f69-9071-fa81|
              00000140  36 62 34 66 38 62 32 61  5c 22 7d 22 3a 7b 7d 7d  |6b4f8b2a\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 15 09:28:53.994: INFO: pod: "test-deployment-64fd565c98-tqhwm":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-tqhwm",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-5406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5613233-2c3d-4027-93ed-263ec307f5b4",
      ResourceVersion: (string) (len=6) "235658",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770135,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "143a5ee0-aa6b-4434-a828-aff3ae3ef4ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 34 33 61 35 65 65 30  |uid\":\"143a5ee0|
              000000a0  2d 61 61 36 62 2d 34 34  33 34 2d 61 38 32 38 2d  |-aa6b-4434-a828-|
              000000b0  61 66 66 33 61 65 33 65  66 34 61 63 5c 22 7d 22  |aff3ae3ef4ac\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  32 31 5c 22 7d 22 3a 7b  |.233.64.21\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2c7rl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2c7rl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.26",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.26"
        }
      },
      PodIP: (string) (len=12) "10.233.64.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770130,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848770131,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=72) "cri-o://e1f64476f0a22478164bae7b6de702ffc1a3ebd543bbb038458bb476b35e1c6d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 15 09:28:53.998: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83ddee04-3303-4fa3-9b89-09c59f64085d",
      ResourceVersion: (string) (len=6) "235656",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770130,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "8a691f8c-d131-4f69-9071-fa816b4f8b2a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 61 36 39  31 66 38 63 2d 64 31 33  |":\"8a691f8c-d13|
              00000130  31 2d 34 66 36 39 2d 39  30 37 31 2d 66 61 38 31  |1-4f69-9071-fa81|
              00000140  36 62 34 66 38 62 32 61  5c 22 7d 22 3a 7b 7d 7d  |6b4f8b2a\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 15 09:28:54.034: INFO: pod: "test-deployment-79ff746c4-5sgcr":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-5sgcr",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7fd9dad-dfd0-473e-a741-ca421ab7fbb4",
      ResourceVersion: (string) (len=6) "235613",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770130,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "83ddee04-3303-4fa3-9b89-09c59f64085d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 33 64 64 65 65 30 34  |uid\":\"83ddee04|
              000000a0  2d 33 33 30 33 2d 34 66  61 33 2d 39 62 38 39 2d  |-3303-4fa3-9b89-|
              000000b0  30 39 63 35 39 66 36 34  30 38 35 64 5c 22 7d 22  |09c59f64085d\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 33 35 5c 22 7d 22 3a  |.233.66.135\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m4ld2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m4ld2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.84",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.84"
        }
      },
      PodIP: (string) (len=13) "10.233.66.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770130,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848770130,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://2f1d6655534d1d0ab719a20e86f29025e18896601860caa7634f4b299d20db4b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 15 09:28:54.050: INFO: pod: "test-deployment-79ff746c4-86lgt":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-86lgt",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-5406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5ea8eca-35ba-4fbd-b85e-e8d5693180db",
      ResourceVersion: (string) (len=6) "235655",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770131,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "83ddee04-3303-4fa3-9b89-09c59f64085d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 33 64 64 65 65 30 34  |uid\":\"83ddee04|
              000000a0  2d 33 33 30 33 2d 34 66  61 33 2d 39 62 38 39 2d  |-3303-4fa3-9b89-|
              000000b0  30 39 63 35 39 66 36 34  30 38 35 64 5c 22 7d 22  |09c59f64085d\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 32 33 5c 22 7d 22 3a  |.233.65.223\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b68wx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b68wx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eehaephong4y-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.233",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.233"
        }
      },
      PodIP: (string) (len=13) "10.233.65.223",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.223"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770131,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848770132,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://7b0981432f7ad30499df8124a87e6b8b203404beb9091dc8747bb8b321069980",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 15 09:28:54.067: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f549d122-549c-4454-9dfb-e7bd5ff67331",
      ResourceVersion: (string) (len=6) "235568",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848770127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "8a691f8c-d131-4f69-9071-fa816b4f8b2a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 61 36 39  31 66 38 63 2d 64 31 33  |":\"8a691f8c-d13|
              00000130  31 2d 34 66 36 39 2d 39  30 37 31 2d 66 61 38 31  |1-4f69-9071-fa81|
              00000140  36 62 34 66 38 62 32 61  5c 22 7d 22 3a 7b 7d 7d  |6b4f8b2a\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848770129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 15 09:28:54.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5406" for this suite. @ 04/15/24 09:28:54.15
• [7.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 04/15/24 09:28:54.177
  Apr 15 09:28:54.177: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename services @ 04/15/24 09:28:54.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:28:54.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:28:54.295
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1485 @ 04/15/24 09:28:54.304
  STEP: changing the ExternalName service to type=NodePort @ 04/15/24 09:28:54.324
  STEP: creating replication controller externalname-service in namespace services-1485 @ 04/15/24 09:28:54.36
  E0415 09:28:54.383068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 09:28:54.387576      13 runners.go:197] Created replication controller with name: externalname-service, namespace: services-1485, replica count: 2
  E0415 09:28:55.383555      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:56.384365      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:57.384722      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 09:28:57.438982      13 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 09:28:57.439: INFO: Creating new exec pod
  E0415 09:28:58.385110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:28:59.386088      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:00.386841      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:00.482: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-1485 exec execpod98mxh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 15 09:29:00.851: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 15 09:29:00.851: INFO: stdout: "externalname-service-8qtrw"
  Apr 15 09:29:00.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-1485 exec execpod98mxh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.32.218 80'
  Apr 15 09:29:01.119: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.32.218 80\nConnection to 10.233.32.218 80 port [tcp/http] succeeded!\n"
  Apr 15 09:29:01.119: INFO: stdout: ""
  E0415 09:29:01.387039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:01.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-1485 exec execpod98mxh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.32.218 80'
  Apr 15 09:29:02.116: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.32.218 80\nConnection to 10.233.32.218 80 port [tcp/http] succeeded!\n"
  Apr 15 09:29:02.116: INFO: stdout: "externalname-service-8qtrw"
  Apr 15 09:29:02.117: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-1485 exec execpod98mxh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.26 30837'
  E0415 09:29:02.388079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:02.429: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.26 30837\nConnection to 192.168.121.26 30837 port [tcp/*] succeeded!\n"
  Apr 15 09:29:02.429: INFO: stdout: "externalname-service-8qtrw"
  Apr 15 09:29:02.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=services-1485 exec execpod98mxh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.233 30837'
  Apr 15 09:29:02.802: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.233 30837\nConnection to 192.168.121.233 30837 port [tcp/*] succeeded!\n"
  Apr 15 09:29:02.803: INFO: stdout: "externalname-service-vshp2"
  Apr 15 09:29:02.803: INFO: Cleaning up the ExternalName to NodePort test service
  Apr 15 09:29:02.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1485" for this suite. @ 04/15/24 09:29:03.009
• [8.849 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 04/15/24 09:29:03.03
  Apr 15 09:29:03.030: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 09:29:03.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:29:03.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:29:03.091
  E0415 09:29:03.389258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:04.389643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:05.137: INFO: Deleting pod "var-expansion-92158bb0-de0d-4b5d-8a0f-bdf24f5a6a5b" in namespace "var-expansion-3624"
  Apr 15 09:29:05.150: INFO: Wait up to 5m0s for pod "var-expansion-92158bb0-de0d-4b5d-8a0f-bdf24f5a6a5b" to be fully deleted
  E0415 09:29:05.391693      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:06.391059      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:07.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3624" for this suite. @ 04/15/24 09:29:07.189
• [4.189 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 04/15/24 09:29:07.222
  Apr 15 09:29:07.222: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename projected @ 04/15/24 09:29:07.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:29:07.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:29:07.273
  STEP: Creating the pod @ 04/15/24 09:29:07.284
  E0415 09:29:07.391539      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:08.392711      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:09.393876      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:09.915: INFO: Successfully updated pod "labelsupdate4518e2cd-423b-4d0f-b68b-521cf0906c51"
  E0415 09:29:10.394430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:11.395317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:12.395580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:13.395700      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:29:14.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6206" for this suite. @ 04/15/24 09:29:14.039
• [6.844 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 04/15/24 09:29:14.069
  Apr 15 09:29:14.069: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename sched-preemption @ 04/15/24 09:29:14.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:29:14.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:29:14.122
  Apr 15 09:29:14.166: INFO: Waiting up to 1m0s for all nodes to be ready
  E0415 09:29:14.395997      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:15.396243      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:16.397409      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:17.397580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:18.398875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:19.399078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:20.399547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:21.400083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:22.400893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:23.401651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:24.401763      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:25.402492      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:26.403007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:27.403580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:28.403756      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:29.403880      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:30.404449      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:31.404712      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:32.404936      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:33.404988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:34.405301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:35.406508      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:36.407426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:37.407708      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:38.407921      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:39.408086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:40.408346      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:41.408554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:42.409106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:43.409395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:44.409688      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:45.410327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:46.410919      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:47.411177      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:48.412102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:49.412470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:50.412931      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:51.413257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:52.413867      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:53.413715      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:54.414692      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:55.415432      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:56.415548      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:57.415872      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:58.417114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:29:59.417169      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:00.417340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:01.417526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:02.418139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:03.418193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:04.419308      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:05.419991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:06.421275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:07.421860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:08.423220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:09.423149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:10.424051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:11.424178      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:12.424379      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:13.424759      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:14.186: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/15/24 09:30:14.195
  Apr 15 09:30:14.283: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 15 09:30:14.307: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 15 09:30:14.390: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  E0415 09:30:14.425222      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:14.434: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 15 09:30:14.524: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 15 09:30:14.580: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/15/24 09:30:14.58
  E0415 09:30:15.425171      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:16.426198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/15/24 09:30:16.647
  E0415 09:30:17.427124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:18.427736      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:19.428082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:20.428154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:20.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4266" for this suite. @ 04/15/24 09:30:20.902
• [66.850 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 04/15/24 09:30:20.921
  Apr 15 09:30:20.921: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename events @ 04/15/24 09:30:20.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:30:20.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:30:20.971
  STEP: Create set of events @ 04/15/24 09:30:20.981
  Apr 15 09:30:20.995: INFO: created test-event-1
  Apr 15 09:30:21.017: INFO: created test-event-2
  Apr 15 09:30:21.027: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/15/24 09:30:21.027
  STEP: delete collection of events @ 04/15/24 09:30:21.037
  Apr 15 09:30:21.038: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/15/24 09:30:21.106
  Apr 15 09:30:21.107: INFO: requesting list of events to confirm quantity
  Apr 15 09:30:21.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8640" for this suite. @ 04/15/24 09:30:21.142
• [0.250 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 04/15/24 09:30:21.184
  Apr 15 09:30:21.185: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 09:30:21.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:30:21.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:30:21.267
  Apr 15 09:30:21.277: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  E0415 09:30:21.429126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:22.429726      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/15/24 09:30:23.295
  Apr 15 09:30:23.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-4409 --namespace=crd-publish-openapi-4409 create -f -'
  E0415 09:30:23.431155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:23.799: INFO: stderr: ""
  Apr 15 09:30:23.799: INFO: stdout: "e2e-test-crd-publish-openapi-4552-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 15 09:30:23.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-4409 --namespace=crd-publish-openapi-4409 delete e2e-test-crd-publish-openapi-4552-crds test-cr'
  Apr 15 09:30:24.133: INFO: stderr: ""
  Apr 15 09:30:24.133: INFO: stdout: "e2e-test-crd-publish-openapi-4552-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Apr 15 09:30:24.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-4409 --namespace=crd-publish-openapi-4409 apply -f -'
  Apr 15 09:30:24.343: INFO: stderr: ""
  Apr 15 09:30:24.343: INFO: stdout: "e2e-test-crd-publish-openapi-4552-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 15 09:30:24.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-4409 --namespace=crd-publish-openapi-4409 delete e2e-test-crd-publish-openapi-4552-crds test-cr'
  E0415 09:30:24.431013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:24.537: INFO: stderr: ""
  Apr 15 09:30:24.537: INFO: stdout: "e2e-test-crd-publish-openapi-4552-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/15/24 09:30:24.537
  Apr 15 09:30:24.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=crd-publish-openapi-4409 explain e2e-test-crd-publish-openapi-4552-crds'
  Apr 15 09:30:24.697: INFO: stderr: ""
  Apr 15 09:30:24.697: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4552-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0415 09:30:25.432054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:26.432167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:27.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4409" for this suite. @ 04/15/24 09:30:27.113
• [6.032 seconds]
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 04/15/24 09:30:27.216
  Apr 15 09:30:27.216: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename security-context @ 04/15/24 09:30:27.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:30:27.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:30:27.416
  E0415 09:30:27.433170      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/15/24 09:30:27.447
  E0415 09:30:28.433585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:29.434060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:30.434384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:31.438402      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:30:31.598
  Apr 15 09:30:31.607: INFO: Trying to get logs from node eehaephong4y-3 pod security-context-a65dcb90-b079-4d44-965c-852bfd51fdad container test-container: <nil>
  STEP: delete the pod @ 04/15/24 09:30:31.62
  Apr 15 09:30:31.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-691" for this suite. @ 04/15/24 09:30:31.671
• [4.468 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 04/15/24 09:30:31.684
  Apr 15 09:30:31.685: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 09:30:31.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:30:31.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:30:31.721
  STEP: creating all guestbook components @ 04/15/24 09:30:31.727
  Apr 15 09:30:31.728: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Apr 15 09:30:31.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3636 create -f -'
  Apr 15 09:30:32.080: INFO: stderr: ""
  Apr 15 09:30:32.081: INFO: stdout: "service/agnhost-replica created\n"
  Apr 15 09:30:32.081: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Apr 15 09:30:32.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3636 create -f -'
  E0415 09:30:32.438999      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:32.497: INFO: stderr: ""
  Apr 15 09:30:32.497: INFO: stdout: "service/agnhost-primary created\n"
  Apr 15 09:30:32.498: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Apr 15 09:30:32.498: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3636 create -f -'
  Apr 15 09:30:32.925: INFO: stderr: ""
  Apr 15 09:30:32.925: INFO: stdout: "service/frontend created\n"
  Apr 15 09:30:32.925: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Apr 15 09:30:32.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3636 create -f -'
  Apr 15 09:30:33.179: INFO: stderr: ""
  Apr 15 09:30:33.179: INFO: stdout: "deployment.apps/frontend created\n"
  Apr 15 09:30:33.179: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 15 09:30:33.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3636 create -f -'
  E0415 09:30:33.442954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:33.556: INFO: stderr: ""
  Apr 15 09:30:33.556: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Apr 15 09:30:33.557: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 15 09:30:33.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3636 create -f -'
  Apr 15 09:30:33.864: INFO: stderr: ""
  Apr 15 09:30:33.864: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/15/24 09:30:33.864
  Apr 15 09:30:33.864: INFO: Waiting for all frontend pods to be Running.
  E0415 09:30:34.443886      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:35.445357      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:36.446148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:37.446855      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:38.446722      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:38.915: INFO: Waiting for frontend to serve content.
  Apr 15 09:30:38.944: INFO: Trying to add a new entry to the guestbook.
  Apr 15 09:30:38.971: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/15/24 09:30:38.987
  Apr 15 09:30:38.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3636 delete --grace-period=0 --force -f -'
  Apr 15 09:30:39.219: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:30:39.219: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 09:30:39.219
  Apr 15 09:30:39.221: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3636 delete --grace-period=0 --force -f -'
  Apr 15 09:30:39.408: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:30:39.408: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 09:30:39.408
  Apr 15 09:30:39.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3636 delete --grace-period=0 --force -f -'
  E0415 09:30:39.447343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:39.609: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:30:39.609: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 09:30:39.609
  Apr 15 09:30:39.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3636 delete --grace-period=0 --force -f -'
  Apr 15 09:30:39.770: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:30:39.771: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 09:30:39.771
  Apr 15 09:30:39.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3636 delete --grace-period=0 --force -f -'
  Apr 15 09:30:40.012: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:30:40.012: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 09:30:40.012
  Apr 15 09:30:40.013: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=kubectl-3636 delete --grace-period=0 --force -f -'
  Apr 15 09:30:40.254: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 09:30:40.254: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Apr 15 09:30:40.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3636" for this suite. @ 04/15/24 09:30:40.266
• [8.609 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 04/15/24 09:30:40.294
  Apr 15 09:30:40.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 09:30:40.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:30:40.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:30:40.381
  Apr 15 09:30:40.388: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  W0415 09:30:40.393612      13 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc004a554b0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0415 09:30:40.448668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:41.449329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:42.449882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0415 09:30:43.130957      13 warnings.go:70] unknown field "alpha"
  W0415 09:30:43.131208      13 warnings.go:70] unknown field "beta"
  W0415 09:30:43.131339      13 warnings.go:70] unknown field "delta"
  W0415 09:30:43.131477      13 warnings.go:70] unknown field "epsilon"
  W0415 09:30:43.131606      13 warnings.go:70] unknown field "gamma"
  E0415 09:30:43.450064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:43.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8015" for this suite. @ 04/15/24 09:30:43.744
• [3.463 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 04/15/24 09:30:43.764
  Apr 15 09:30:43.764: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename dns @ 04/15/24 09:30:43.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:30:43.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:30:43.846
  STEP: Creating a test headless service @ 04/15/24 09:30:43.852
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-603.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-603.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 04/15/24 09:30:43.861
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-603.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-603.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/15/24 09:30:43.861
  STEP: creating a pod to probe DNS @ 04/15/24 09:30:43.861
  STEP: submitting the pod to kubernetes @ 04/15/24 09:30:43.861
  E0415 09:30:44.450850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:45.451529      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 09:30:45.902
  STEP: looking for the results for each expected name from probers @ 04/15/24 09:30:45.91
  Apr 15 09:30:45.964: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-603/dns-test-763df37c-4e98-416d-8b60-835ddc15e1b6: the server could not find the requested resource (get pods dns-test-763df37c-4e98-416d-8b60-835ddc15e1b6)
  Apr 15 09:30:45.964: INFO: Lookups using dns-603/dns-test-763df37c-4e98-416d-8b60-835ddc15e1b6 failed for: [jessie_hosts@dns-querier-2]

  Apr 15 09:30:45.982: INFO: Pod client logs for webserver: 
  Apr 15 09:30:45.998: INFO: Pod client logs for querier: 
  Apr 15 09:30:46.019: INFO: Pod client logs for jessie-querier: 
  E0415 09:30:46.451508      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:47.452004      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:48.452149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:49.453152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:50.453870      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:50.944: INFO: DNS probes using dns-603/dns-test-763df37c-4e98-416d-8b60-835ddc15e1b6 succeeded

  STEP: deleting the pod @ 04/15/24 09:30:50.945
  STEP: deleting the test headless service @ 04/15/24 09:30:50.986
  Apr 15 09:30:51.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-603" for this suite. @ 04/15/24 09:30:51.041
• [7.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 04/15/24 09:30:51.059
  Apr 15 09:30:51.059: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename disruption @ 04/15/24 09:30:51.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:30:51.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:30:51.1
  STEP: Creating a kubernetes client @ 04/15/24 09:30:51.104
  Apr 15 09:30:51.104: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename disruption-2 @ 04/15/24 09:30:51.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:30:51.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:30:51.139
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:30:51.163
  E0415 09:30:51.454913      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:52.454989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:30:53.181
  E0415 09:30:53.455626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:54.455602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/15/24 09:30:55.209
  STEP: listing a collection of PDBs across all namespaces @ 04/15/24 09:30:55.234
  STEP: listing a collection of PDBs in namespace disruption-4705 @ 04/15/24 09:30:55.242
  STEP: deleting a collection of PDBs @ 04/15/24 09:30:55.25
  STEP: Waiting for the PDB collection to be deleted @ 04/15/24 09:30:55.276
  Apr 15 09:30:55.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6563" for this suite. @ 04/15/24 09:30:55.298
  Apr 15 09:30:55.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4705" for this suite. @ 04/15/24 09:30:55.353
• [4.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 04/15/24 09:30:55.39
  Apr 15 09:30:55.390: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 09:30:55.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:30:55.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:30:55.421
  STEP: Waiting for pod completion @ 04/15/24 09:30:55.444
  E0415 09:30:55.455807      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:56.455836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:57.456176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:58.456970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:30:59.456875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:30:59.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7927" for this suite. @ 04/15/24 09:30:59.495
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 04/15/24 09:30:59.515
  Apr 15 09:30:59.515: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename webhook @ 04/15/24 09:30:59.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:30:59.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:30:59.553
  STEP: Setting up server cert @ 04/15/24 09:30:59.588
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 09:31:00.331
  STEP: Deploying the webhook pod @ 04/15/24 09:31:00.349
  STEP: Wait for the deployment to be ready @ 04/15/24 09:31:00.377
  Apr 15 09:31:00.400: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 09:31:00.458083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:01.458090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 09:31:02.421
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 09:31:02.44
  E0415 09:31:02.459065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:31:03.440: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/15/24 09:31:03.453
  E0415 09:31:03.459735      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a pod @ 04/15/24 09:31:03.481
  E0415 09:31:04.460837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:05.461332      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/15/24 09:31:05.516
  Apr 15 09:31:05.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2907074321 --namespace=webhook-8839 attach --namespace=webhook-8839 to-be-attached-pod -i -c=container1'
  Apr 15 09:31:05.723: INFO: rc: 1
  Apr 15 09:31:05.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8839" for this suite. @ 04/15/24 09:31:05.898
  STEP: Destroying namespace "webhook-markers-3956" for this suite. @ 04/15/24 09:31:05.951
• [6.453 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 04/15/24 09:31:05.969
  Apr 15 09:31:05.970: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 09:31:05.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:31:06.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:31:06.021
  STEP: Creating a pod to test substitution in container's args @ 04/15/24 09:31:06.029
  E0415 09:31:06.462223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:07.462731      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:08.463163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:09.464268      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 09:31:10.079
  Apr 15 09:31:10.087: INFO: Trying to get logs from node eehaephong4y-3 pod var-expansion-854ad39d-b1a8-4433-a663-b6e801cbd097 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 09:31:10.108
  Apr 15 09:31:10.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4532" for this suite. @ 04/15/24 09:31:10.162
• [4.207 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 04/15/24 09:31:10.178
  Apr 15 09:31:10.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename crd-webhook @ 04/15/24 09:31:10.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:31:10.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:31:10.244
  STEP: Setting up server cert @ 04/15/24 09:31:10.257
  E0415 09:31:10.464465      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/15/24 09:31:11.264
  STEP: Deploying the custom resource conversion webhook pod @ 04/15/24 09:31:11.301
  STEP: Wait for the deployment to be ready @ 04/15/24 09:31:11.352
  Apr 15 09:31:11.397: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0415 09:31:11.470374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:12.471724      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 09:31:13.432
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 09:31:13.463
  E0415 09:31:13.472105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:31:14.463: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  E0415 09:31:14.472206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:31:14.484: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  E0415 09:31:15.472837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:16.474030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/15/24 09:31:17.419
  STEP: v2 custom resource should be converted @ 04/15/24 09:31:17.437
  E0415 09:31:17.474442      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:31:18.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1679" for this suite. @ 04/15/24 09:31:18.147
• [8.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 04/15/24 09:31:18.213
  Apr 15 09:31:18.213: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  STEP: Building a namespace api object, basename pod-network-test @ 04/15/24 09:31:18.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 09:31:18.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 09:31:18.276
  STEP: Performing setup for networking test in namespace pod-network-test-2643 @ 04/15/24 09:31:18.285
  STEP: creating a selector @ 04/15/24 09:31:18.286
  STEP: Creating the service pods in kubernetes @ 04/15/24 09:31:18.286
  Apr 15 09:31:18.287: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0415 09:31:18.475422      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:19.475675      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:20.476998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:21.477131      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:22.478049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:23.478058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:24.478275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:25.478860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:26.479160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:27.480370      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:28.481296      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:29.482240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:30.482985      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:31.484042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:32.484486      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:33.484925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:34.485912      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:35.486344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:36.486767      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:37.486944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:38.487603      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:39.488123      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:40.488964      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/15/24 09:31:40.583
  E0415 09:31:41.489581      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 09:31:42.490168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 09:31:42.678: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 15 09:31:42.678: INFO: Going to poll 10.233.64.28 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 09:31:42.685: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.28:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2643 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:31:42.685: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:31:42.688: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:31:42.688: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2643/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.28%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 09:31:42.933: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 15 09:31:42.933: INFO: Going to poll 10.233.65.227 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 09:31:42.945: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.227:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2643 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:31:42.945: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:31:42.950: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:31:42.950: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2643/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.227%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 09:31:43.145: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 15 09:31:43.145: INFO: Going to poll 10.233.66.152 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 09:31:43.154: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.152:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2643 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 09:31:43.154: INFO: >>> kubeConfig: /tmp/kubeconfig-2907074321
  Apr 15 09:31:43.157: INFO: ExecWithOptions: Clientset creation
  Apr 15 09:31:43.157: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2643/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.152%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 09:31:43.309: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 15 09:31:43.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2643" for this suite. @ 04/15/24 09:31:43.326
• [25.136 seconds]
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Apr 15 09:31:43.355: INFO: Running AfterSuite actions on node 1
  Apr 15 09:31:43.356: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:621
  E0415 09:31:43.490537      13 retrywatcher.go:129] "Watch failed" err="context canceled"
[ReportAfterSuite] PASSED [0.229 seconds]
------------------------------

Ran 388 of 7407 Specs in 6894.065 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h54m58.327584466s
Test Suite Passed
