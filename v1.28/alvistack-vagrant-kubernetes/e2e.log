  I0415 06:19:01.150520      15 e2e.go:117] Starting e2e run "d013de23-84f9-4d57-a303-6d8e87369628" on Ginkgo node 1
  Apr 15 06:19:01.250: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1713161940 - will randomize all specs

Will run 380 of 7389 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Apr 15 06:19:01.705: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 06:19:01.726: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Apr 15 06:19:01.803: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Apr 15 06:19:01.812: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds' (0 seconds elapsed)
  Apr 15 06:19:01.812: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Apr 15 06:19:01.812: INFO: e2e test version: v1.28.8
  Apr 15 06:19:01.813: INFO: kube-apiserver version: v1.28.8
  Apr 15 06:19:01.814: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 06:19:01.823: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.120 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/15/24 06:19:02.4
  Apr 15 06:19:02.400: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename init-container @ 04/15/24 06:19:02.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:19:02.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:19:02.442
  STEP: creating the pod @ 04/15/24 06:19:02.447
  Apr 15 06:19:02.448: INFO: PodSpec: initContainers in spec.initContainers
  Apr 15 06:19:06.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9760" for this suite. @ 04/15/24 06:19:06.473
• [4.088 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 04/15/24 06:19:06.492
  Apr 15 06:19:06.492: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 06:19:06.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:19:06.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:19:06.548
  STEP: Creating configMap with name projected-configmap-test-volume-97b60bc4-8e62-4a72-9196-5c7e5d9d4aaa @ 04/15/24 06:19:06.558
  STEP: Creating a pod to test consume configMaps @ 04/15/24 06:19:06.57
  STEP: Saw pod success @ 04/15/24 06:19:10.644
  Apr 15 06:19:10.652: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-projected-configmaps-e36dfdb0-9f26-4015-a0d2-bc0956993dda container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 06:19:10.694
  Apr 15 06:19:10.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5068" for this suite. @ 04/15/24 06:19:10.754
• [4.280 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 04/15/24 06:19:10.778
  Apr 15 06:19:10.778: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 06:19:10.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:19:10.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:19:10.825
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/15/24 06:19:10.831
  STEP: Saw pod success @ 04/15/24 06:19:14.884
  Apr 15 06:19:14.890: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-53fc2a20-c5a8-4dda-b14a-e5d703cf0ebd container test-container: <nil>
  STEP: delete the pod @ 04/15/24 06:19:14.906
  Apr 15 06:19:14.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6346" for this suite. @ 04/15/24 06:19:14.951
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 04/15/24 06:19:14.973
  Apr 15 06:19:14.973: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename sched-preemption @ 04/15/24 06:19:14.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:19:15.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:19:15.012
  Apr 15 06:19:15.058: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 15 06:20:15.141: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/15/24 06:20:15.148
  Apr 15 06:20:15.207: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 15 06:20:15.227: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 15 06:20:15.367: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 15 06:20:15.421: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 15 06:20:15.558: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 15 06:20:15.577: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/15/24 06:20:15.578
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/15/24 06:20:19.709
  Apr 15 06:20:23.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8122" for this suite. @ 04/15/24 06:20:24.18
• [69.277 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 04/15/24 06:20:24.256
  Apr 15 06:20:24.256: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 06:20:24.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:20:24.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:20:24.333
  STEP: Creating configMap with name projected-configmap-test-volume-64f365a0-ce0c-4677-943d-e50c134f88aa @ 04/15/24 06:20:24.34
  STEP: Creating a pod to test consume configMaps @ 04/15/24 06:20:24.372
  STEP: Saw pod success @ 04/15/24 06:20:28.447
  Apr 15 06:20:28.455: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-projected-configmaps-00898455-f35f-4f4f-b4d4-cf3cc6657825 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 06:20:28.473
  Apr 15 06:20:28.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3756" for this suite. @ 04/15/24 06:20:28.539
• [4.299 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/15/24 06:20:28.562
  Apr 15 06:20:28.562: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 06:20:28.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:20:28.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:20:28.602
  STEP: create the container @ 04/15/24 06:20:28.61
  W0415 06:20:28.626569      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/15/24 06:20:28.627
  STEP: get the container status @ 04/15/24 06:20:31.711
  STEP: the container should be terminated @ 04/15/24 06:20:31.726
  STEP: the termination message should be set @ 04/15/24 06:20:31.726
  Apr 15 06:20:31.726: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/15/24 06:20:31.727
  Apr 15 06:20:31.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7520" for this suite. @ 04/15/24 06:20:31.802
• [3.262 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 04/15/24 06:20:31.828
  Apr 15 06:20:31.828: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 06:20:31.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:20:31.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:20:31.913
  STEP: Creating pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310 @ 04/15/24 06:20:31.935
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 06:20:33.995
  Apr 15 06:20:34.006: INFO: Initial restart count of pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a is 0
  Apr 15 06:20:34.014: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:20:36.025: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:20:38.042: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:20:40.055: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:20:42.064: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:20:44.081: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:20:46.091: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:20:48.104: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:20:50.126: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:20:52.134: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:20:54.143: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:20:56.155: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:20:58.164: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:00.183: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:02.192: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:04.201: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:06.211: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:08.248: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:10.258: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:12.266: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:14.280: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:16.288: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:18.297: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:20.306: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:22.317: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:24.329: INFO: Get pod busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a in namespace container-probe-310
  Apr 15 06:21:24.330: INFO: Restart count of pod container-probe-310/busybox-5947f6aa-e4b5-4b3c-9ef8-e756d8990f7a is now 1 (50.32268104s elapsed)
  Apr 15 06:21:24.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/15/24 06:21:24.346
  STEP: Destroying namespace "container-probe-310" for this suite. @ 04/15/24 06:21:24.375
• [52.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 04/15/24 06:21:24.448
  Apr 15 06:21:24.448: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 06:21:24.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:21:24.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:21:24.52
  Apr 15 06:21:26.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-557" for this suite. @ 04/15/24 06:21:26.623
• [2.191 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 04/15/24 06:21:26.641
  Apr 15 06:21:26.641: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 06:21:26.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:21:26.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:21:26.683
  STEP: Given a ReplicationController is created @ 04/15/24 06:21:26.689
  STEP: When the matched label of one of its pods change @ 04/15/24 06:21:26.7
  Apr 15 06:21:26.710: INFO: Pod name pod-release: Found 0 pods out of 1
  Apr 15 06:21:31.721: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/15/24 06:21:31.743
  Apr 15 06:21:32.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4606" for this suite. @ 04/15/24 06:21:32.776
• [6.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 04/15/24 06:21:32.803
  Apr 15 06:21:32.804: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 06:21:32.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:21:32.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:21:32.862
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/15/24 06:21:32.873
  STEP: Saw pod success @ 04/15/24 06:21:36.951
  Apr 15 06:21:36.964: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-cd2b0411-68fa-4f07-9983-bbc756506def container test-container: <nil>
  STEP: delete the pod @ 04/15/24 06:21:36.988
  Apr 15 06:21:37.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7715" for this suite. @ 04/15/24 06:21:37.032
• [4.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 04/15/24 06:21:37.075
  Apr 15 06:21:37.075: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 06:21:37.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:21:37.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:21:37.122
  STEP: Creating configMap with name configmap-test-volume-0713222f-c470-4ec6-b9db-d913fe1a41a5 @ 04/15/24 06:21:37.129
  STEP: Creating a pod to test consume configMaps @ 04/15/24 06:21:37.14
  STEP: Saw pod success @ 04/15/24 06:21:41.18
  Apr 15 06:21:41.187: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-configmaps-5e708518-cb9e-4bfc-9fde-02ba6c47079b container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 06:21:41.199
  Apr 15 06:21:41.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-476" for this suite. @ 04/15/24 06:21:41.244
• [4.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 04/15/24 06:21:41.3
  Apr 15 06:21:41.301: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl-logs @ 04/15/24 06:21:41.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:21:41.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:21:41.344
  STEP: creating an pod @ 04/15/24 06:21:41.357
  Apr 15 06:21:41.358: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-logs-2408 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Apr 15 06:21:41.862: INFO: stderr: ""
  Apr 15 06:21:41.862: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/15/24 06:21:41.862
  Apr 15 06:21:41.862: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Apr 15 06:21:43.887: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/15/24 06:21:43.887
  Apr 15 06:21:43.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-logs-2408 logs logs-generator logs-generator'
  Apr 15 06:21:44.112: INFO: stderr: ""
  Apr 15 06:21:44.112: INFO: stdout: "I0415 06:21:42.626831       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/b2m 267\nI0415 06:21:42.823439       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/54h 557\nI0415 06:21:43.023939       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/cp2q 598\nI0415 06:21:43.223445       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/kpb 558\nI0415 06:21:43.423899       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/dzzs 485\nI0415 06:21:43.624007       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/fgd 445\nI0415 06:21:43.823491       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/b8cv 337\nI0415 06:21:44.023944       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/7pfd 558\n"
  STEP: limiting log lines @ 04/15/24 06:21:44.112
  Apr 15 06:21:44.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-logs-2408 logs logs-generator logs-generator --tail=1'
  Apr 15 06:21:44.305: INFO: stderr: ""
  Apr 15 06:21:44.305: INFO: stdout: "I0415 06:21:44.223680       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/psj 472\n"
  Apr 15 06:21:44.305: INFO: got output "I0415 06:21:44.223680       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/psj 472\n"
  STEP: limiting log bytes @ 04/15/24 06:21:44.305
  Apr 15 06:21:44.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-logs-2408 logs logs-generator logs-generator --limit-bytes=1'
  Apr 15 06:21:44.503: INFO: stderr: ""
  Apr 15 06:21:44.503: INFO: stdout: "I"
  Apr 15 06:21:44.503: INFO: got output "I"
  STEP: exposing timestamps @ 04/15/24 06:21:44.503
  Apr 15 06:21:44.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-logs-2408 logs logs-generator logs-generator --tail=1 --timestamps'
  Apr 15 06:21:44.667: INFO: stderr: ""
  Apr 15 06:21:44.667: INFO: stdout: "2024-04-15T06:21:44.623630870Z I0415 06:21:44.623511       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/fhn 577\n"
  Apr 15 06:21:44.667: INFO: got output "2024-04-15T06:21:44.623630870Z I0415 06:21:44.623511       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/fhn 577\n"
  STEP: restricting to a time range @ 04/15/24 06:21:44.667
  Apr 15 06:21:47.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-logs-2408 logs logs-generator logs-generator --since=1s'
  Apr 15 06:21:47.399: INFO: stderr: ""
  Apr 15 06:21:47.399: INFO: stdout: "I0415 06:21:46.423875       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/bhjc 203\nI0415 06:21:46.623502       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/8bsq 543\nI0415 06:21:46.823735       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/l8rh 363\nI0415 06:21:47.023063       1 logs_generator.go:76] 22 GET /api/v1/namespaces/kube-system/pods/zzs 265\nI0415 06:21:47.223639       1 logs_generator.go:76] 23 POST /api/v1/namespaces/ns/pods/7jl 253\n"
  Apr 15 06:21:47.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-logs-2408 logs logs-generator logs-generator --since=24h'
  Apr 15 06:21:47.575: INFO: stderr: ""
  Apr 15 06:21:47.575: INFO: stdout: "I0415 06:21:42.626831       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/b2m 267\nI0415 06:21:42.823439       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/54h 557\nI0415 06:21:43.023939       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/cp2q 598\nI0415 06:21:43.223445       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/kpb 558\nI0415 06:21:43.423899       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/dzzs 485\nI0415 06:21:43.624007       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/fgd 445\nI0415 06:21:43.823491       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/b8cv 337\nI0415 06:21:44.023944       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/7pfd 558\nI0415 06:21:44.223680       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/psj 472\nI0415 06:21:44.423931       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/g7w 299\nI0415 06:21:44.623511       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/fhn 577\nI0415 06:21:44.823168       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/xsz5 268\nI0415 06:21:45.023435       1 logs_generator.go:76] 12 POST /api/v1/namespaces/default/pods/crc 590\nI0415 06:21:45.223079       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/l2x 548\nI0415 06:21:45.423643       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/8gh 218\nI0415 06:21:45.623932       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/cs4j 555\nI0415 06:21:45.823529       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/fc2z 499\nI0415 06:21:46.023145       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/j8x 443\nI0415 06:21:46.223390       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/nm8 476\nI0415 06:21:46.423875       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/bhjc 203\nI0415 06:21:46.623502       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/8bsq 543\nI0415 06:21:46.823735       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/l8rh 363\nI0415 06:21:47.023063       1 logs_generator.go:76] 22 GET /api/v1/namespaces/kube-system/pods/zzs 265\nI0415 06:21:47.223639       1 logs_generator.go:76] 23 POST /api/v1/namespaces/ns/pods/7jl 253\nI0415 06:21:47.424067       1 logs_generator.go:76] 24 POST /api/v1/namespaces/kube-system/pods/5wwl 527\n"
  Apr 15 06:21:47.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-logs-2408 delete pod logs-generator'
  Apr 15 06:21:48.395: INFO: stderr: ""
  Apr 15 06:21:48.395: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Apr 15 06:21:48.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2408" for this suite. @ 04/15/24 06:21:48.405
• [7.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 04/15/24 06:21:48.42
  Apr 15 06:21:48.420: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 06:21:48.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:21:48.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:21:48.46
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/15/24 06:21:48.466
  STEP: Saw pod success @ 04/15/24 06:21:50.509
  Apr 15 06:21:50.516: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-1551383a-2bb1-45b2-b123-9db2504e2ae0 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 06:21:50.548
  Apr 15 06:21:50.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1992" for this suite. @ 04/15/24 06:21:50.59
• [2.184 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 04/15/24 06:21:50.61
  Apr 15 06:21:50.610: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 06:21:50.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:21:50.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:21:50.664
  Apr 15 06:21:50.675: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  W0415 06:21:50.679730      15 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc001266470 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0415 06:21:53.446551      15 warnings.go:70] unknown field "alpha"
  W0415 06:21:53.447242      15 warnings.go:70] unknown field "beta"
  W0415 06:21:53.447897      15 warnings.go:70] unknown field "delta"
  W0415 06:21:53.448435      15 warnings.go:70] unknown field "epsilon"
  W0415 06:21:53.449020      15 warnings.go:70] unknown field "gamma"
  Apr 15 06:21:54.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9268" for this suite. @ 04/15/24 06:21:54.212
• [3.620 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/15/24 06:21:54.231
  Apr 15 06:21:54.231: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 06:21:54.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:21:54.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:21:54.277
  STEP: create the container @ 04/15/24 06:21:54.29
  W0415 06:21:54.313633      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/15/24 06:21:54.315
  STEP: get the container status @ 04/15/24 06:21:57.362
  STEP: the container should be terminated @ 04/15/24 06:21:57.369
  STEP: the termination message should be set @ 04/15/24 06:21:57.369
  Apr 15 06:21:57.369: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/15/24 06:21:57.37
  Apr 15 06:21:57.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7188" for this suite. @ 04/15/24 06:21:57.41
• [3.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/15/24 06:21:57.44
  Apr 15 06:21:57.440: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename subpath @ 04/15/24 06:21:57.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:21:57.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:21:57.493
  STEP: Setting up data @ 04/15/24 06:21:57.505
  STEP: Creating pod pod-subpath-test-downwardapi-jxq5 @ 04/15/24 06:21:57.535
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 06:21:57.535
  STEP: Saw pod success @ 04/15/24 06:22:19.728
  Apr 15 06:22:19.737: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-subpath-test-downwardapi-jxq5 container test-container-subpath-downwardapi-jxq5: <nil>
  STEP: delete the pod @ 04/15/24 06:22:19.76
  STEP: Deleting pod pod-subpath-test-downwardapi-jxq5 @ 04/15/24 06:22:19.802
  Apr 15 06:22:19.802: INFO: Deleting pod "pod-subpath-test-downwardapi-jxq5" in namespace "subpath-7969"
  Apr 15 06:22:19.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7969" for this suite. @ 04/15/24 06:22:19.819
• [22.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 04/15/24 06:22:19.86
  Apr 15 06:22:19.860: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename disruption @ 04/15/24 06:22:19.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:22:19.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:22:19.919
  STEP: Waiting for the pdb to be processed @ 04/15/24 06:22:19.943
  STEP: Waiting for all pods to be running @ 04/15/24 06:22:22.014
  Apr 15 06:22:22.027: INFO: running pods: 0 < 3
  Apr 15 06:22:24.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1872" for this suite. @ 04/15/24 06:22:24.06
• [4.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 04/15/24 06:22:24.096
  Apr 15 06:22:24.097: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 06:22:24.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:22:24.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:22:24.169
  Apr 15 06:22:46.334: INFO: Container started at 2024-04-15 06:22:24 +0000 UTC, pod became ready at 2024-04-15 06:22:44 +0000 UTC
  Apr 15 06:22:46.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5311" for this suite. @ 04/15/24 06:22:46.347
• [22.268 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 04/15/24 06:22:46.365
  Apr 15 06:22:46.365: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 06:22:46.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:22:46.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:22:46.409
  STEP: Creating the pod @ 04/15/24 06:22:46.417
  Apr 15 06:22:49.075: INFO: Successfully updated pod "labelsupdate1096665c-2a0f-4fbc-9755-4f3263e5cc4f"
  Apr 15 06:22:51.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6975" for this suite. @ 04/15/24 06:22:51.123
• [4.778 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/15/24 06:22:51.156
  Apr 15 06:22:51.156: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/15/24 06:22:51.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:22:51.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:22:51.217
  STEP: creating a target pod @ 04/15/24 06:22:51.225
  STEP: adding an ephemeral container @ 04/15/24 06:22:53.283
  STEP: checking pod container endpoints @ 04/15/24 06:22:55.341
  Apr 15 06:22:55.341: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1960 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 06:22:55.341: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 06:22:55.344: INFO: ExecWithOptions: Clientset creation
  Apr 15 06:22:55.344: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-1960/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 15 06:22:55.482: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/15/24 06:22:55.497
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/15/24 06:22:55.507
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/15/24 06:22:55.54
  Apr 15 06:22:55.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1960" for this suite. @ 04/15/24 06:22:55.563
• [4.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/15/24 06:22:55.59
  Apr 15 06:22:55.590: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 06:22:55.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:22:55.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:22:55.632
  STEP: create the container @ 04/15/24 06:22:55.639
  W0415 06:22:55.720259      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/15/24 06:22:55.72
  STEP: get the container status @ 04/15/24 06:22:58.766
  STEP: the container should be terminated @ 04/15/24 06:22:58.773
  STEP: the termination message should be set @ 04/15/24 06:22:58.773
  Apr 15 06:22:58.773: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/15/24 06:22:58.773
  Apr 15 06:22:58.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2732" for this suite. @ 04/15/24 06:22:58.817
• [3.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 04/15/24 06:22:58.844
  Apr 15 06:22:58.844: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 06:22:58.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:22:58.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:22:58.93
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/15/24 06:22:58.947
  STEP: Saw pod success @ 04/15/24 06:23:03.032
  Apr 15 06:23:03.040: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-f689cc5b-646a-4faf-aa49-3210b703c084 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 06:23:03.054
  Apr 15 06:23:03.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2922" for this suite. @ 04/15/24 06:23:03.118
• [4.292 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 04/15/24 06:23:03.139
  Apr 15 06:23:03.139: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 06:23:03.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:23:03.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:23:03.194
  STEP: creating the pod @ 04/15/24 06:23:03.204
  Apr 15 06:23:03.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8634 create -f -'
  Apr 15 06:23:04.915: INFO: stderr: ""
  Apr 15 06:23:04.916: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/15/24 06:23:06.94
  Apr 15 06:23:06.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8634 label pods pause testing-label=testing-label-value'
  Apr 15 06:23:07.166: INFO: stderr: ""
  Apr 15 06:23:07.166: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/15/24 06:23:07.166
  Apr 15 06:23:07.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8634 get pod pause -L testing-label'
  Apr 15 06:23:07.415: INFO: stderr: ""
  Apr 15 06:23:07.416: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/15/24 06:23:07.416
  Apr 15 06:23:07.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8634 label pods pause testing-label-'
  Apr 15 06:23:07.671: INFO: stderr: ""
  Apr 15 06:23:07.671: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/15/24 06:23:07.671
  Apr 15 06:23:07.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8634 get pod pause -L testing-label'
  Apr 15 06:23:07.849: INFO: stderr: ""
  Apr 15 06:23:07.849: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 04/15/24 06:23:07.85
  Apr 15 06:23:07.850: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8634 delete --grace-period=0 --force -f -'
  Apr 15 06:23:08.019: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 06:23:08.019: INFO: stdout: "pod \"pause\" force deleted\n"
  Apr 15 06:23:08.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8634 get rc,svc -l name=pause --no-headers'
  Apr 15 06:23:08.243: INFO: stderr: "No resources found in kubectl-8634 namespace.\n"
  Apr 15 06:23:08.243: INFO: stdout: ""
  Apr 15 06:23:08.244: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8634 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 15 06:23:08.428: INFO: stderr: ""
  Apr 15 06:23:08.428: INFO: stdout: ""
  Apr 15 06:23:08.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8634" for this suite. @ 04/15/24 06:23:08.452
• [5.349 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 04/15/24 06:23:08.49
  Apr 15 06:23:08.490: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 06:23:08.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:23:08.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:23:08.549
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/15/24 06:23:08.555
  Apr 15 06:23:08.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-4736 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 15 06:23:08.767: INFO: stderr: ""
  Apr 15 06:23:08.767: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/15/24 06:23:08.767
  Apr 15 06:23:08.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-4736 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Apr 15 06:23:09.025: INFO: stderr: ""
  Apr 15 06:23:09.025: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/15/24 06:23:09.026
  Apr 15 06:23:09.036: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-4736 delete pods e2e-test-httpd-pod'
  Apr 15 06:23:11.045: INFO: stderr: ""
  Apr 15 06:23:11.045: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 15 06:23:11.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4736" for this suite. @ 04/15/24 06:23:11.061
• [2.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 04/15/24 06:23:11.114
  Apr 15 06:23:11.115: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 06:23:11.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:23:11.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:23:11.203
  STEP: Creating configMap with name projected-configmap-test-volume-468ca7e8-8d5c-46e5-92b1-5a4acf82e6f8 @ 04/15/24 06:23:11.209
  STEP: Creating a pod to test consume configMaps @ 04/15/24 06:23:11.218
  STEP: Saw pod success @ 04/15/24 06:23:15.27
  Apr 15 06:23:15.287: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-projected-configmaps-0d442f99-ffbb-4689-8d44-1663d818f038 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 06:23:15.308
  Apr 15 06:23:15.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3706" for this suite. @ 04/15/24 06:23:15.377
• [4.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 04/15/24 06:23:15.427
  Apr 15 06:23:15.427: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 06:23:15.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:23:15.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:23:15.483
  Apr 15 06:23:19.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1752" for this suite. @ 04/15/24 06:23:19.568
• [4.166 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 04/15/24 06:23:19.598
  Apr 15 06:23:19.598: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 06:23:19.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:23:19.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:23:19.678
  Apr 15 06:23:19.684: INFO: Creating ReplicaSet my-hostname-basic-f3a903c8-0aaf-41b4-becd-006816e02b10
  Apr 15 06:23:19.712: INFO: Pod name my-hostname-basic-f3a903c8-0aaf-41b4-becd-006816e02b10: Found 0 pods out of 1
  Apr 15 06:23:24.727: INFO: Pod name my-hostname-basic-f3a903c8-0aaf-41b4-becd-006816e02b10: Found 1 pods out of 1
  Apr 15 06:23:24.727: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-f3a903c8-0aaf-41b4-becd-006816e02b10" is running
  Apr 15 06:23:24.736: INFO: Pod "my-hostname-basic-f3a903c8-0aaf-41b4-becd-006816e02b10-tbz2j" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 06:23:19 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 06:23:21 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 06:23:21 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 06:23:19 +0000 UTC Reason: Message:}])
  Apr 15 06:23:24.737: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/15/24 06:23:24.738
  Apr 15 06:23:24.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8110" for this suite. @ 04/15/24 06:23:24.793
• [5.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 04/15/24 06:23:24.823
  Apr 15 06:23:24.824: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 06:23:24.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:23:24.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:23:24.879
  STEP: fetching the /apis discovery document @ 04/15/24 06:23:24.887
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/15/24 06:23:24.89
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/15/24 06:23:24.89
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/15/24 06:23:24.891
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/15/24 06:23:24.893
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/15/24 06:23:24.893
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/15/24 06:23:24.899
  Apr 15 06:23:24.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2607" for this suite. @ 04/15/24 06:23:24.918
• [0.110 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 04/15/24 06:23:24.937
  Apr 15 06:23:24.937: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 06:23:24.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:23:24.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:23:24.982
  STEP: Creating configMap with name projected-configmap-test-volume-map-2aeccce9-fa47-4e31-b6d7-e8230a0aef82 @ 04/15/24 06:23:24.99
  STEP: Creating a pod to test consume configMaps @ 04/15/24 06:23:25.006
  STEP: Saw pod success @ 04/15/24 06:23:29.075
  Apr 15 06:23:29.084: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-projected-configmaps-6c3fb461-099c-4f69-940e-b00363247b77 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 06:23:29.103
  Apr 15 06:23:29.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1638" for this suite. @ 04/15/24 06:23:29.156
• [4.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 04/15/24 06:23:29.186
  Apr 15 06:23:29.186: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 06:23:29.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:23:29.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:23:29.236
  STEP: creating a replication controller @ 04/15/24 06:23:29.249
  Apr 15 06:23:29.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 create -f -'
  Apr 15 06:23:29.890: INFO: stderr: ""
  Apr 15 06:23:29.890: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/15/24 06:23:29.89
  Apr 15 06:23:29.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 06:23:30.180: INFO: stderr: ""
  Apr 15 06:23:30.180: INFO: stdout: "update-demo-nautilus-6pdw7 update-demo-nautilus-h86xj "
  Apr 15 06:23:30.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods update-demo-nautilus-6pdw7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 06:23:30.470: INFO: stderr: ""
  Apr 15 06:23:30.470: INFO: stdout: ""
  Apr 15 06:23:30.470: INFO: update-demo-nautilus-6pdw7 is created but not running
  Apr 15 06:23:35.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 06:23:35.679: INFO: stderr: ""
  Apr 15 06:23:35.679: INFO: stdout: "update-demo-nautilus-6pdw7 update-demo-nautilus-h86xj "
  Apr 15 06:23:35.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods update-demo-nautilus-6pdw7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 06:23:35.858: INFO: stderr: ""
  Apr 15 06:23:35.858: INFO: stdout: ""
  Apr 15 06:23:35.858: INFO: update-demo-nautilus-6pdw7 is created but not running
  Apr 15 06:23:40.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 06:23:41.038: INFO: stderr: ""
  Apr 15 06:23:41.038: INFO: stdout: "update-demo-nautilus-6pdw7 update-demo-nautilus-h86xj "
  Apr 15 06:23:41.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods update-demo-nautilus-6pdw7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 06:23:41.216: INFO: stderr: ""
  Apr 15 06:23:41.216: INFO: stdout: "true"
  Apr 15 06:23:41.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods update-demo-nautilus-6pdw7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 06:23:41.410: INFO: stderr: ""
  Apr 15 06:23:41.410: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 06:23:41.410: INFO: validating pod update-demo-nautilus-6pdw7
  Apr 15 06:23:41.425: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 06:23:41.427: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 06:23:41.428: INFO: update-demo-nautilus-6pdw7 is verified up and running
  Apr 15 06:23:41.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods update-demo-nautilus-h86xj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 06:23:41.610: INFO: stderr: ""
  Apr 15 06:23:41.610: INFO: stdout: "true"
  Apr 15 06:23:41.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods update-demo-nautilus-h86xj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 06:23:41.761: INFO: stderr: ""
  Apr 15 06:23:41.761: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 06:23:41.761: INFO: validating pod update-demo-nautilus-h86xj
  Apr 15 06:23:41.780: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 06:23:41.780: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 06:23:41.780: INFO: update-demo-nautilus-h86xj is verified up and running
  STEP: scaling down the replication controller @ 04/15/24 06:23:41.78
  Apr 15 06:23:41.799: INFO: scanned /root for discovery docs: <nil>
  Apr 15 06:23:41.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Apr 15 06:23:43.016: INFO: stderr: ""
  Apr 15 06:23:43.016: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/15/24 06:23:43.016
  Apr 15 06:23:43.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 06:23:43.204: INFO: stderr: ""
  Apr 15 06:23:43.204: INFO: stdout: "update-demo-nautilus-h86xj "
  Apr 15 06:23:43.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods update-demo-nautilus-h86xj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 06:23:43.402: INFO: stderr: ""
  Apr 15 06:23:43.402: INFO: stdout: "true"
  Apr 15 06:23:43.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods update-demo-nautilus-h86xj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 06:23:43.559: INFO: stderr: ""
  Apr 15 06:23:43.559: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 06:23:43.559: INFO: validating pod update-demo-nautilus-h86xj
  Apr 15 06:23:43.568: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 06:23:43.568: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 06:23:43.568: INFO: update-demo-nautilus-h86xj is verified up and running
  STEP: scaling up the replication controller @ 04/15/24 06:23:43.568
  Apr 15 06:23:43.585: INFO: scanned /root for discovery docs: <nil>
  Apr 15 06:23:43.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Apr 15 06:23:44.836: INFO: stderr: ""
  Apr 15 06:23:44.836: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/15/24 06:23:44.836
  Apr 15 06:23:44.837: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 06:23:44.988: INFO: stderr: ""
  Apr 15 06:23:44.988: INFO: stdout: "update-demo-nautilus-h86xj update-demo-nautilus-rfwcl "
  Apr 15 06:23:44.989: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods update-demo-nautilus-h86xj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 06:23:45.165: INFO: stderr: ""
  Apr 15 06:23:45.165: INFO: stdout: "true"
  Apr 15 06:23:45.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods update-demo-nautilus-h86xj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 06:23:45.327: INFO: stderr: ""
  Apr 15 06:23:45.327: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 06:23:45.327: INFO: validating pod update-demo-nautilus-h86xj
  Apr 15 06:23:45.334: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 06:23:45.334: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 06:23:45.334: INFO: update-demo-nautilus-h86xj is verified up and running
  Apr 15 06:23:45.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods update-demo-nautilus-rfwcl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 06:23:45.497: INFO: stderr: ""
  Apr 15 06:23:45.497: INFO: stdout: "true"
  Apr 15 06:23:45.498: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods update-demo-nautilus-rfwcl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 06:23:45.671: INFO: stderr: ""
  Apr 15 06:23:45.671: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 06:23:45.671: INFO: validating pod update-demo-nautilus-rfwcl
  Apr 15 06:23:45.689: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 06:23:45.689: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 06:23:45.689: INFO: update-demo-nautilus-rfwcl is verified up and running
  STEP: using delete to clean up resources @ 04/15/24 06:23:45.689
  Apr 15 06:23:45.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 delete --grace-period=0 --force -f -'
  Apr 15 06:23:45.855: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 06:23:45.855: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 15 06:23:45.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get rc,svc -l name=update-demo --no-headers'
  Apr 15 06:23:46.131: INFO: stderr: "No resources found in kubectl-5803 namespace.\n"
  Apr 15 06:23:46.131: INFO: stdout: ""
  Apr 15 06:23:46.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5803 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 15 06:23:46.357: INFO: stderr: ""
  Apr 15 06:23:46.357: INFO: stdout: ""
  Apr 15 06:23:46.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5803" for this suite. @ 04/15/24 06:23:46.372
• [17.213 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 04/15/24 06:23:46.399
  Apr 15 06:23:46.399: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename security-context-test @ 04/15/24 06:23:46.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:23:46.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:23:46.448
  Apr 15 06:23:50.566: INFO: Got logs for pod "busybox-privileged-false-040e5127-b479-4cf3-982c-43ca0dc129a4": "ip: RTNETLINK answers: Operation not permitted\n"
  Apr 15 06:23:50.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-413" for this suite. @ 04/15/24 06:23:50.581
• [4.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 04/15/24 06:23:50.597
  Apr 15 06:23:50.599: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 06:23:50.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:23:50.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:23:50.649
  STEP: Creating configMap with name configmap-test-volume-f7fdeb01-375a-44de-b577-7e24e3896239 @ 04/15/24 06:23:50.655
  STEP: Creating a pod to test consume configMaps @ 04/15/24 06:23:50.666
  STEP: Saw pod success @ 04/15/24 06:23:54.72
  Apr 15 06:23:54.729: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-configmaps-b12874a1-aadd-444b-bd40-f597003f20cb container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 06:23:54.742
  Apr 15 06:23:54.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9765" for this suite. @ 04/15/24 06:23:54.795
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/15/24 06:23:54.824
  Apr 15 06:23:54.824: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename secrets @ 04/15/24 06:23:54.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:23:54.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:23:54.871
  STEP: Creating secret with name secret-test-bdffe39f-a3e0-430c-a29d-29ef634dd4f4 @ 04/15/24 06:23:54.878
  STEP: Creating a pod to test consume secrets @ 04/15/24 06:23:54.89
  STEP: Saw pod success @ 04/15/24 06:23:58.945
  Apr 15 06:23:58.952: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-secrets-91942f29-8557-463d-99b2-5eace1982f29 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 06:23:58.977
  Apr 15 06:23:59.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9616" for this suite. @ 04/15/24 06:23:59.029
• [4.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 04/15/24 06:23:59.055
  Apr 15 06:23:59.055: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 06:23:59.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:23:59.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:23:59.128
  STEP: create deployment with httpd image @ 04/15/24 06:23:59.135
  Apr 15 06:23:59.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9894 create -f -'
  Apr 15 06:23:59.745: INFO: stderr: ""
  Apr 15 06:23:59.745: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/15/24 06:23:59.745
  Apr 15 06:23:59.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9894 diff -f -'
  Apr 15 06:24:00.259: INFO: rc: 1
  Apr 15 06:24:00.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9894 delete -f -'
  Apr 15 06:24:00.481: INFO: stderr: ""
  Apr 15 06:24:00.481: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Apr 15 06:24:00.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9894" for this suite. @ 04/15/24 06:24:00.495
• [1.468 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 04/15/24 06:24:00.523
  Apr 15 06:24:00.523: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 06:24:00.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:24:00.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:24:00.64
  STEP: Creating configMap with name cm-test-opt-del-42ad8bb0-3600-4e56-945c-9776684e4ffd @ 04/15/24 06:24:00.669
  STEP: Creating configMap with name cm-test-opt-upd-f3e22918-051a-43d9-8140-42c0049e2d79 @ 04/15/24 06:24:00.682
  STEP: Creating the pod @ 04/15/24 06:24:00.694
  STEP: Deleting configmap cm-test-opt-del-42ad8bb0-3600-4e56-945c-9776684e4ffd @ 04/15/24 06:24:02.796
  STEP: Updating configmap cm-test-opt-upd-f3e22918-051a-43d9-8140-42c0049e2d79 @ 04/15/24 06:24:02.816
  STEP: Creating configMap with name cm-test-opt-create-5868fbcd-c66c-4599-ac37-de8edfea0c5f @ 04/15/24 06:24:02.829
  STEP: waiting to observe update in volume @ 04/15/24 06:24:02.841
  Apr 15 06:24:04.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9983" for this suite. @ 04/15/24 06:24:04.91
• [4.404 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 04/15/24 06:24:04.931
  Apr 15 06:24:04.932: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 06:24:04.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:24:04.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:24:04.985
  STEP: Starting the proxy @ 04/15/24 06:24:04.989
  Apr 15 06:24:04.991: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5890 proxy --unix-socket=/tmp/kubectl-proxy-unix3360145098/test'
  STEP: retrieving proxy /api/ output @ 04/15/24 06:24:05.118
  Apr 15 06:24:05.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5890" for this suite. @ 04/15/24 06:24:05.137
• [0.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:792
  STEP: Creating a kubernetes client @ 04/15/24 06:24:05.157
  Apr 15 06:24:05.158: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 06:24:05.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:24:05.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:24:05.206
  STEP: Creating service test in namespace statefulset-2684 @ 04/15/24 06:24:05.213
  STEP: Looking for a node to schedule stateful set and pod @ 04/15/24 06:24:05.224
  STEP: Creating pod with conflicting port in namespace statefulset-2684 @ 04/15/24 06:24:05.241
  STEP: Waiting until pod test-pod will start running in namespace statefulset-2684 @ 04/15/24 06:24:05.266
  STEP: Creating statefulset with conflicting port in namespace statefulset-2684 @ 04/15/24 06:24:09.298
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-2684 @ 04/15/24 06:24:09.319
  Apr 15 06:24:09.375: INFO: Observed stateful pod in namespace: statefulset-2684, name: ss-0, uid: 648cadff-2660-4229-8569-d0fa1b4294f5, status phase: Pending. Waiting for statefulset controller to delete.
  Apr 15 06:24:09.414: INFO: Observed stateful pod in namespace: statefulset-2684, name: ss-0, uid: 648cadff-2660-4229-8569-d0fa1b4294f5, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 15 06:24:09.485: INFO: Observed stateful pod in namespace: statefulset-2684, name: ss-0, uid: 648cadff-2660-4229-8569-d0fa1b4294f5, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 15 06:24:09.494: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-2684
  STEP: Removing pod with conflicting port in namespace statefulset-2684 @ 04/15/24 06:24:09.495
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-2684 and will be in running state @ 04/15/24 06:24:09.618
  Apr 15 06:24:11.674: INFO: Deleting all statefulset in ns statefulset-2684
  Apr 15 06:24:11.685: INFO: Scaling statefulset ss to 0
  Apr 15 06:24:21.728: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 06:24:21.735: INFO: Deleting statefulset ss
  Apr 15 06:24:21.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2684" for this suite. @ 04/15/24 06:24:21.778
• [16.634 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 04/15/24 06:24:21.791
  Apr 15 06:24:21.791: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 06:24:21.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:24:21.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:24:21.832
  STEP: Creating a ResourceQuota with best effort scope @ 04/15/24 06:24:21.84
  STEP: Ensuring ResourceQuota status is calculated @ 04/15/24 06:24:21.853
  STEP: Creating a ResourceQuota with not best effort scope @ 04/15/24 06:24:23.862
  STEP: Ensuring ResourceQuota status is calculated @ 04/15/24 06:24:23.874
  STEP: Creating a best-effort pod @ 04/15/24 06:24:25.883
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/15/24 06:24:25.918
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/15/24 06:24:27.928
  STEP: Deleting the pod @ 04/15/24 06:24:29.937
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 06:24:29.965
  STEP: Creating a not best-effort pod @ 04/15/24 06:24:31.974
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/15/24 06:24:31.996
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/15/24 06:24:34.006
  STEP: Deleting the pod @ 04/15/24 06:24:36.015
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 06:24:36.036
  Apr 15 06:24:38.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7428" for this suite. @ 04/15/24 06:24:38.058
• [16.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 04/15/24 06:24:38.093
  Apr 15 06:24:38.093: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 06:24:38.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:24:38.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:24:38.146
  STEP: Creating a pod to test service account token:  @ 04/15/24 06:24:38.152
  STEP: Saw pod success @ 04/15/24 06:24:42.207
  Apr 15 06:24:42.215: INFO: Trying to get logs from node thuchow3cah4-3 pod test-pod-b987dfee-c33a-4cad-9741-339dea7328e3 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 06:24:42.239
  Apr 15 06:24:42.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6606" for this suite. @ 04/15/24 06:24:42.289
• [4.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:750
  STEP: Creating a kubernetes client @ 04/15/24 06:24:42.321
  Apr 15 06:24:42.321: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 06:24:42.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:24:42.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:24:42.369
  STEP: Creating service test in namespace statefulset-3838 @ 04/15/24 06:24:42.377
  STEP: Creating stateful set ss in namespace statefulset-3838 @ 04/15/24 06:24:42.394
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3838 @ 04/15/24 06:24:42.423
  Apr 15 06:24:42.450: INFO: Found 0 stateful pods, waiting for 1
  Apr 15 06:24:52.461: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/15/24 06:24:52.461
  Apr 15 06:24:52.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-3838 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 06:24:52.880: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 06:24:52.880: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 06:24:52.880: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 06:24:52.891: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Apr 15 06:25:02.902: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 06:25:02.902: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 15 06:25:02.970: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999534s
  Apr 15 06:25:03.980: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.964393543s
  Apr 15 06:25:04.993: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.95436091s
  Apr 15 06:25:06.003: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.940723773s
  Apr 15 06:25:07.012: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.931764924s
  Apr 15 06:25:08.023: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.923009935s
  Apr 15 06:25:09.034: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.911378368s
  Apr 15 06:25:10.043: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.900935585s
  Apr 15 06:25:11.052: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.891568016s
  Apr 15 06:25:12.063: INFO: Verifying statefulset ss doesn't scale past 3 for another 882.088135ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3838 @ 04/15/24 06:25:13.063
  Apr 15 06:25:13.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-3838 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 06:25:13.400: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 06:25:13.400: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 06:25:13.400: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 06:25:13.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-3838 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 06:25:13.744: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 15 06:25:13.744: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 06:25:13.744: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 06:25:13.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-3838 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 06:25:14.154: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 15 06:25:14.154: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 06:25:14.154: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 06:25:14.167: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 06:25:14.167: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 06:25:14.167: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/15/24 06:25:14.167
  Apr 15 06:25:14.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-3838 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 06:25:14.477: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 06:25:14.477: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 06:25:14.477: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 06:25:14.478: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-3838 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 06:25:14.775: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 06:25:14.775: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 06:25:14.775: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 06:25:14.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-3838 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 06:25:15.339: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 06:25:15.339: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 06:25:15.339: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 06:25:15.339: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 15 06:25:15.390: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Apr 15 06:25:25.420: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 06:25:25.420: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 06:25:25.420: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 06:25:25.464: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Apr 15 06:25:25.464: INFO: ss-0  thuchow3cah4-3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:24:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:14 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:14 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:24:42 +0000 UTC  }]
  Apr 15 06:25:25.464: INFO: ss-1  thuchow3cah4-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:02 +0000 UTC  }]
  Apr 15 06:25:25.464: INFO: ss-2  thuchow3cah4-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:02 +0000 UTC  }]
  Apr 15 06:25:25.464: INFO: 
  Apr 15 06:25:25.464: INFO: StatefulSet ss has not reached scale 0, at 3
  Apr 15 06:25:26.482: INFO: POD   NODE            PHASE      GRACE  CONDITIONS
  Apr 15 06:25:26.482: INFO: ss-0  thuchow3cah4-3  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:24:42 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:14 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:14 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:24:42 +0000 UTC  }]
  Apr 15 06:25:26.482: INFO: ss-1  thuchow3cah4-2  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:02 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:15 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:15 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:02 +0000 UTC  }]
  Apr 15 06:25:26.482: INFO: ss-2  thuchow3cah4-1  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:03 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:15 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:15 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:25:02 +0000 UTC  }]
  Apr 15 06:25:26.482: INFO: 
  Apr 15 06:25:26.482: INFO: StatefulSet ss has not reached scale 0, at 3
  Apr 15 06:25:27.489: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.965952094s
  Apr 15 06:25:28.496: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.958230126s
  Apr 15 06:25:29.504: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.951562793s
  Apr 15 06:25:30.521: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.943494377s
  Apr 15 06:25:31.529: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.92594382s
  Apr 15 06:25:32.538: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.918417648s
  Apr 15 06:25:33.545: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.909189683s
  Apr 15 06:25:34.553: INFO: Verifying statefulset ss doesn't scale past 0 for another 902.230127ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3838 @ 04/15/24 06:25:35.554
  Apr 15 06:25:35.563: INFO: Scaling statefulset ss to 0
  Apr 15 06:25:35.596: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 06:25:35.612: INFO: Deleting all statefulset in ns statefulset-3838
  Apr 15 06:25:35.628: INFO: Scaling statefulset ss to 0
  Apr 15 06:25:35.727: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 06:25:35.735: INFO: Deleting statefulset ss
  Apr 15 06:25:35.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3838" for this suite. @ 04/15/24 06:25:35.794
• [53.489 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 04/15/24 06:25:35.819
  Apr 15 06:25:35.819: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename security-context-test @ 04/15/24 06:25:35.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:25:35.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:25:35.89
  Apr 15 06:25:39.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5891" for this suite. @ 04/15/24 06:25:39.966
• [4.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/15/24 06:25:40.001
  Apr 15 06:25:40.001: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename watch @ 04/15/24 06:25:40.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:25:40.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:25:40.049
  STEP: creating a watch on configmaps with label A @ 04/15/24 06:25:40.06
  STEP: creating a watch on configmaps with label B @ 04/15/24 06:25:40.067
  STEP: creating a watch on configmaps with label A or B @ 04/15/24 06:25:40.077
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/15/24 06:25:40.082
  Apr 15 06:25:40.111: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4943  d4752b6f-8708-4331-b374-b5b73c0f5d48 147057 0 2024-04-15 06:25:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 06:25:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 06:25:40.116: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4943  d4752b6f-8708-4331-b374-b5b73c0f5d48 147057 0 2024-04-15 06:25:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 06:25:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/15/24 06:25:40.118
  Apr 15 06:25:40.144: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4943  d4752b6f-8708-4331-b374-b5b73c0f5d48 147058 0 2024-04-15 06:25:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 06:25:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 06:25:40.144: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4943  d4752b6f-8708-4331-b374-b5b73c0f5d48 147058 0 2024-04-15 06:25:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 06:25:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/15/24 06:25:40.145
  Apr 15 06:25:40.170: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4943  d4752b6f-8708-4331-b374-b5b73c0f5d48 147059 0 2024-04-15 06:25:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 06:25:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 06:25:40.171: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4943  d4752b6f-8708-4331-b374-b5b73c0f5d48 147059 0 2024-04-15 06:25:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 06:25:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/15/24 06:25:40.172
  Apr 15 06:25:40.192: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4943  d4752b6f-8708-4331-b374-b5b73c0f5d48 147060 0 2024-04-15 06:25:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 06:25:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 06:25:40.192: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4943  d4752b6f-8708-4331-b374-b5b73c0f5d48 147060 0 2024-04-15 06:25:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-15 06:25:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/15/24 06:25:40.193
  Apr 15 06:25:40.204: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4943  a363edd5-ef9e-4650-b2d7-0db4e24b28f1 147061 0 2024-04-15 06:25:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-15 06:25:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 06:25:40.204: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4943  a363edd5-ef9e-4650-b2d7-0db4e24b28f1 147061 0 2024-04-15 06:25:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-15 06:25:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/15/24 06:25:50.205
  Apr 15 06:25:50.222: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4943  a363edd5-ef9e-4650-b2d7-0db4e24b28f1 147119 0 2024-04-15 06:25:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-15 06:25:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 06:25:50.223: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4943  a363edd5-ef9e-4650-b2d7-0db4e24b28f1 147119 0 2024-04-15 06:25:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-15 06:25:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 06:26:00.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4943" for this suite. @ 04/15/24 06:26:00.242
• [20.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 04/15/24 06:26:00.273
  Apr 15 06:26:00.273: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename disruption @ 04/15/24 06:26:00.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:26:00.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:26:00.325
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/15/24 06:26:00.333
  STEP: Waiting for the pdb to be processed @ 04/15/24 06:26:00.345
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/15/24 06:26:02.375
  STEP: Waiting for all pods to be running @ 04/15/24 06:26:02.375
  Apr 15 06:26:02.383: INFO: pods: 0 < 3
  Apr 15 06:26:04.395: INFO: running pods: 2 < 3
  STEP: locating a running pod @ 04/15/24 06:26:06.392
  STEP: Updating the pdb to allow a pod to be evicted @ 04/15/24 06:26:06.416
  STEP: Waiting for the pdb to be processed @ 04/15/24 06:26:06.431
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/15/24 06:26:08.449
  STEP: Waiting for all pods to be running @ 04/15/24 06:26:08.449
  STEP: Waiting for the pdb to observed all healthy pods @ 04/15/24 06:26:08.456
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/15/24 06:26:08.523
  STEP: Waiting for the pdb to be processed @ 04/15/24 06:26:08.6
  STEP: Waiting for all pods to be running @ 04/15/24 06:26:10.627
  STEP: locating a running pod @ 04/15/24 06:26:10.635
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/15/24 06:26:10.655
  STEP: Waiting for the pdb to be deleted @ 04/15/24 06:26:10.67
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/15/24 06:26:10.679
  STEP: Waiting for all pods to be running @ 04/15/24 06:26:10.68
  Apr 15 06:26:10.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8530" for this suite. @ 04/15/24 06:26:10.731
• [10.501 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 04/15/24 06:26:10.774
  Apr 15 06:26:10.774: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 06:26:10.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:26:10.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:26:10.825
  Apr 15 06:26:10.832: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/15/24 06:26:13.026
  Apr 15 06:26:13.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-2717 --namespace=crd-publish-openapi-2717 create -f -'
  Apr 15 06:26:14.554: INFO: stderr: ""
  Apr 15 06:26:14.554: INFO: stdout: "e2e-test-crd-publish-openapi-2843-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 15 06:26:14.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-2717 --namespace=crd-publish-openapi-2717 delete e2e-test-crd-publish-openapi-2843-crds test-cr'
  Apr 15 06:26:14.761: INFO: stderr: ""
  Apr 15 06:26:14.761: INFO: stdout: "e2e-test-crd-publish-openapi-2843-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Apr 15 06:26:14.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-2717 --namespace=crd-publish-openapi-2717 apply -f -'
  Apr 15 06:26:15.145: INFO: stderr: ""
  Apr 15 06:26:15.145: INFO: stdout: "e2e-test-crd-publish-openapi-2843-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 15 06:26:15.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-2717 --namespace=crd-publish-openapi-2717 delete e2e-test-crd-publish-openapi-2843-crds test-cr'
  Apr 15 06:26:15.310: INFO: stderr: ""
  Apr 15 06:26:15.310: INFO: stdout: "e2e-test-crd-publish-openapi-2843-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/15/24 06:26:15.31
  Apr 15 06:26:15.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-2717 explain e2e-test-crd-publish-openapi-2843-crds'
  Apr 15 06:26:16.458: INFO: stderr: ""
  Apr 15 06:26:16.458: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-2843-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Apr 15 06:26:18.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2717" for this suite. @ 04/15/24 06:26:18.427
• [7.666 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 04/15/24 06:26:18.444
  Apr 15 06:26:18.444: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 06:26:18.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:26:18.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:26:18.48
  STEP: Creating a pod to test substitution in volume subpath @ 04/15/24 06:26:18.484
  STEP: Saw pod success @ 04/15/24 06:26:22.53
  Apr 15 06:26:22.540: INFO: Trying to get logs from node thuchow3cah4-3 pod var-expansion-480cb2ca-eb0c-416f-aaaf-1de0d0f0f213 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 06:26:22.584
  Apr 15 06:26:22.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4964" for this suite. @ 04/15/24 06:26:22.637
• [4.214 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 04/15/24 06:26:22.66
  Apr 15 06:26:22.660: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 06:26:22.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:26:22.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:26:22.709
  STEP: Create a ReplicaSet @ 04/15/24 06:26:22.715
  STEP: Verify that the required pods have come up @ 04/15/24 06:26:22.734
  Apr 15 06:26:22.742: INFO: Pod name sample-pod: Found 0 pods out of 3
  Apr 15 06:26:27.752: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/15/24 06:26:27.753
  Apr 15 06:26:27.762: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/15/24 06:26:27.762
  STEP: DeleteCollection of the ReplicaSets @ 04/15/24 06:26:27.77
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/15/24 06:26:27.792
  Apr 15 06:26:27.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6206" for this suite. @ 04/15/24 06:26:27.819
• [5.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/15/24 06:26:27.912
  Apr 15 06:26:27.912: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename secrets @ 04/15/24 06:26:27.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:26:27.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:26:27.99
  STEP: Creating secret with name secret-test-e1db52af-65e4-40de-bb75-c37a0988812a @ 04/15/24 06:26:28.078
  STEP: Creating a pod to test consume secrets @ 04/15/24 06:26:28.101
  STEP: Saw pod success @ 04/15/24 06:26:32.147
  Apr 15 06:26:32.164: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-secrets-e7969a60-6f70-4223-b9b3-c29a0325c301 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 06:26:32.183
  Apr 15 06:26:32.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2895" for this suite. @ 04/15/24 06:26:32.249
  STEP: Destroying namespace "secret-namespace-766" for this suite. @ 04/15/24 06:26:32.263
• [4.367 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 04/15/24 06:26:32.281
  Apr 15 06:26:32.281: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 06:26:32.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:26:32.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:26:32.32
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 06:26:32.326
  STEP: Saw pod success @ 04/15/24 06:26:36.368
  Apr 15 06:26:36.374: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-82f9b669-e797-4436-9ac1-954e8c6e9772 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 06:26:36.389
  Apr 15 06:26:36.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7060" for this suite. @ 04/15/24 06:26:36.435
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 04/15/24 06:26:36.466
  Apr 15 06:26:36.466: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 06:26:36.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:26:36.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:26:36.508
  STEP: Creating pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373 @ 04/15/24 06:26:36.513
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 06:26:38.556
  Apr 15 06:26:38.562: INFO: Initial restart count of pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 is 0
  Apr 15 06:26:38.567: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:26:40.575: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:26:42.584: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:26:44.594: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:26:46.600: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:26:48.609: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:26:50.617: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:26:52.627: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:26:54.637: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:26:56.647: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:26:58.656: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:00.665: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:02.675: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:04.682: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:06.691: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:08.698: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:10.710: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:12.721: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:14.734: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:16.744: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:18.752: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:20.763: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:22.771: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:24.780: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:26.789: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:28.800: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:30.813: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:32.823: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:34.830: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:36.842: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:38.851: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:40.860: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:42.870: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:44.880: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:46.893: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:48.901: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:50.911: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:52.925: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:54.934: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:56.944: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:27:58.952: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:00.959: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:02.967: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:04.976: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:06.984: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:08.994: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:11.002: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:13.014: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:15.024: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:17.038: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:19.046: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:21.064: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:23.073: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:25.082: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:27.089: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:29.103: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:31.111: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:33.118: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:35.125: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:37.131: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:39.140: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:41.149: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:43.159: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:45.170: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:47.178: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:49.188: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:51.196: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:53.208: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:55.216: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:57.226: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:28:59.235: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:01.246: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:03.257: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:05.265: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:07.282: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:09.290: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:11.299: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:13.312: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:15.334: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:17.346: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:19.355: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:21.364: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:23.373: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:25.383: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:27.390: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:29.403: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:31.416: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:33.427: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:35.436: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:37.446: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:39.454: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:41.464: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:43.473: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:45.483: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:47.491: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:49.498: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:51.507: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:53.517: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:55.527: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:57.537: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:29:59.549: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:01.560: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:03.569: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:05.578: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:07.597: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:09.607: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:11.656: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:13.671: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:15.681: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:17.691: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:19.699: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:21.710: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:23.721: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:25.728: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:27.741: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:29.757: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:31.765: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:33.776: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:35.783: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:37.794: INFO: Get pod busybox-3fd1d2fa-0760-4507-add9-6bcaeecfdec8 in namespace container-probe-8373
  Apr 15 06:30:39.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/15/24 06:30:39.811
  STEP: Destroying namespace "container-probe-8373" for this suite. @ 04/15/24 06:30:39.845
• [243.406 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 04/15/24 06:30:39.875
  Apr 15 06:30:39.875: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/15/24 06:30:39.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:30:39.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:30:39.923
  STEP: create the container to handle the HTTPGet hook request. @ 04/15/24 06:30:39.941
  STEP: create the pod with lifecycle hook @ 04/15/24 06:30:41.997
  STEP: delete the pod with lifecycle hook @ 04/15/24 06:30:44.031
  STEP: check prestop hook @ 04/15/24 06:30:46.057
  Apr 15 06:30:46.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-178" for this suite. @ 04/15/24 06:30:46.108
• [6.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 04/15/24 06:30:46.127
  Apr 15 06:30:46.127: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 06:30:46.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:30:46.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:30:46.16
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 06:30:46.166
  STEP: Saw pod success @ 04/15/24 06:30:50.21
  Apr 15 06:30:50.217: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-98b71d56-2f47-4a2b-b534-e36772f9b515 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 06:30:50.237
  Apr 15 06:30:50.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6054" for this suite. @ 04/15/24 06:30:50.273
• [4.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 04/15/24 06:30:50.29
  Apr 15 06:30:50.290: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 06:30:50.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:30:50.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:30:50.328
  STEP: Creating a cronjob @ 04/15/24 06:30:50.334
  STEP: creating @ 04/15/24 06:30:50.334
  STEP: getting @ 04/15/24 06:30:50.351
  STEP: listing @ 04/15/24 06:30:50.36
  STEP: watching @ 04/15/24 06:30:50.368
  Apr 15 06:30:50.368: INFO: starting watch
  STEP: cluster-wide listing @ 04/15/24 06:30:50.371
  STEP: cluster-wide watching @ 04/15/24 06:30:50.38
  Apr 15 06:30:50.381: INFO: starting watch
  STEP: patching @ 04/15/24 06:30:50.383
  STEP: updating @ 04/15/24 06:30:50.393
  Apr 15 06:30:50.410: INFO: waiting for watch events with expected annotations
  Apr 15 06:30:50.411: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/15/24 06:30:50.412
  STEP: updating /status @ 04/15/24 06:30:50.423
  STEP: get /status @ 04/15/24 06:30:50.439
  STEP: deleting @ 04/15/24 06:30:50.446
  STEP: deleting a collection @ 04/15/24 06:30:50.481
  Apr 15 06:30:50.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8119" for this suite. @ 04/15/24 06:30:50.522
• [0.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/15/24 06:30:50.544
  Apr 15 06:30:50.544: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pods @ 04/15/24 06:30:50.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:30:50.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:30:50.589
  STEP: creating a Pod with a static label @ 04/15/24 06:30:50.614
  STEP: watching for Pod to be ready @ 04/15/24 06:30:50.632
  Apr 15 06:30:50.638: INFO: observed Pod pod-test in namespace pods-2394 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Apr 15 06:30:50.648: INFO: observed Pod pod-test in namespace pods-2394 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:30:50 +0000 UTC  }]
  Apr 15 06:30:50.680: INFO: observed Pod pod-test in namespace pods-2394 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:30:50 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:30:50 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:30:50 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:30:50 +0000 UTC  }]
  Apr 15 06:30:52.179: INFO: Found Pod pod-test in namespace pods-2394 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:30:50 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:30:52 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:30:52 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-15 06:30:50 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/15/24 06:30:52.19
  STEP: getting the Pod and ensuring that it's patched @ 04/15/24 06:30:52.217
  STEP: replacing the Pod's status Ready condition to False @ 04/15/24 06:30:52.225
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/15/24 06:30:52.252
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/15/24 06:30:52.253
  STEP: watching for the Pod to be deleted @ 04/15/24 06:30:52.272
  Apr 15 06:30:52.277: INFO: observed event type MODIFIED
  Apr 15 06:30:54.185: INFO: observed event type MODIFIED
  Apr 15 06:30:54.284: INFO: observed event type MODIFIED
  Apr 15 06:30:55.189: INFO: observed event type MODIFIED
  Apr 15 06:30:55.210: INFO: observed event type MODIFIED
  Apr 15 06:30:55.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2394" for this suite. @ 04/15/24 06:30:55.239
• [4.706 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 04/15/24 06:30:55.253
  Apr 15 06:30:55.253: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename disruption @ 04/15/24 06:30:55.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:30:55.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:30:55.286
  STEP: Creating a kubernetes client @ 04/15/24 06:30:55.291
  Apr 15 06:30:55.292: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename disruption-2 @ 04/15/24 06:30:55.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:30:55.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:30:55.339
  STEP: Waiting for the pdb to be processed @ 04/15/24 06:30:55.365
  STEP: Waiting for the pdb to be processed @ 04/15/24 06:30:57.398
  STEP: Waiting for the pdb to be processed @ 04/15/24 06:30:59.427
  STEP: listing a collection of PDBs across all namespaces @ 04/15/24 06:31:01.443
  STEP: listing a collection of PDBs in namespace disruption-7604 @ 04/15/24 06:31:01.451
  STEP: deleting a collection of PDBs @ 04/15/24 06:31:01.461
  STEP: Waiting for the PDB collection to be deleted @ 04/15/24 06:31:01.49
  Apr 15 06:31:01.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 15 06:31:01.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-4341" for this suite. @ 04/15/24 06:31:01.522
  STEP: Destroying namespace "disruption-7604" for this suite. @ 04/15/24 06:31:01.54
• [6.303 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 04/15/24 06:31:01.559
  Apr 15 06:31:01.559: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 06:31:01.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:31:01.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:31:01.599
  STEP: creating a ConfigMap @ 04/15/24 06:31:01.605
  STEP: fetching the ConfigMap @ 04/15/24 06:31:01.613
  STEP: patching the ConfigMap @ 04/15/24 06:31:01.621
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/15/24 06:31:01.638
  STEP: deleting the ConfigMap by collection with a label selector @ 04/15/24 06:31:01.65
  STEP: listing all ConfigMaps in test namespace @ 04/15/24 06:31:01.669
  Apr 15 06:31:01.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6930" for this suite. @ 04/15/24 06:31:01.692
• [0.153 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 04/15/24 06:31:01.716
  Apr 15 06:31:01.717: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename gc @ 04/15/24 06:31:01.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:31:01.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:31:01.758
  Apr 15 06:31:01.841: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"cc9728b2-b66f-4bf0-adba-8f6660173db0", Controller:(*bool)(0xc004174fd2), BlockOwnerDeletion:(*bool)(0xc004174fd3)}}
  Apr 15 06:31:01.866: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"322a7a5c-44b6-47d9-ac79-7fe18a80c4b0", Controller:(*bool)(0xc0042fd44a), BlockOwnerDeletion:(*bool)(0xc0042fd44b)}}
  Apr 15 06:31:01.879: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"bfe00570-4c3d-4531-8228-3a8a8d34e051", Controller:(*bool)(0xc0042fd68a), BlockOwnerDeletion:(*bool)(0xc0042fd68b)}}
  Apr 15 06:31:06.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4723" for this suite. @ 04/15/24 06:31:06.921
• [5.228 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 04/15/24 06:31:06.948
  Apr 15 06:31:06.948: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 06:31:06.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:31:07.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:31:07.036
  STEP: Setting up server cert @ 04/15/24 06:31:07.133
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 06:31:09.205
  STEP: Deploying the webhook pod @ 04/15/24 06:31:09.225
  STEP: Wait for the deployment to be ready @ 04/15/24 06:31:09.25
  Apr 15 06:31:09.265: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/15/24 06:31:11.294
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 06:31:11.331
  Apr 15 06:31:12.331: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/15/24 06:31:12.352
  STEP: create a pod @ 04/15/24 06:31:12.415
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/15/24 06:31:14.452
  Apr 15 06:31:14.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=webhook-7225 attach --namespace=webhook-7225 to-be-attached-pod -i -c=container1'
  Apr 15 06:31:14.647: INFO: rc: 1
  Apr 15 06:31:14.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7225" for this suite. @ 04/15/24 06:31:14.767
  STEP: Destroying namespace "webhook-markers-9868" for this suite. @ 04/15/24 06:31:14.788
• [7.861 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 04/15/24 06:31:14.81
  Apr 15 06:31:14.810: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 06:31:14.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:31:14.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:31:14.848
  STEP: Counting existing ResourceQuota @ 04/15/24 06:31:31.861
  STEP: Creating a ResourceQuota @ 04/15/24 06:31:36.869
  STEP: Ensuring resource quota status is calculated @ 04/15/24 06:31:36.887
  STEP: Creating a ConfigMap @ 04/15/24 06:31:38.896
  STEP: Ensuring resource quota status captures configMap creation @ 04/15/24 06:31:38.918
  STEP: Deleting a ConfigMap @ 04/15/24 06:31:40.928
  STEP: Ensuring resource quota status released usage @ 04/15/24 06:31:40.945
  Apr 15 06:31:42.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2692" for this suite. @ 04/15/24 06:31:42.983
• [28.191 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 04/15/24 06:31:43.002
  Apr 15 06:31:43.002: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 06:31:43.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:31:43.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:31:43.073
  STEP: Creating configMap with name configmap-test-upd-4253413e-6502-4bc7-b603-9247ce0ee9cd @ 04/15/24 06:31:43.089
  STEP: Creating the pod @ 04/15/24 06:31:43.108
  STEP: Waiting for pod with text data @ 04/15/24 06:31:45.145
  STEP: Waiting for pod with binary data @ 04/15/24 06:31:45.162
  Apr 15 06:31:45.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9395" for this suite. @ 04/15/24 06:31:45.193
• [2.208 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 04/15/24 06:31:45.212
  Apr 15 06:31:45.212: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 06:31:45.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:31:45.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:31:45.249
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 06:31:45.255
  STEP: Saw pod success @ 04/15/24 06:31:49.306
  Apr 15 06:31:49.313: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-de92975b-a55e-45bb-bbac-2869ad5c3df0 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 06:31:49.33
  Apr 15 06:31:49.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3913" for this suite. @ 04/15/24 06:31:49.371
• [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 04/15/24 06:31:49.395
  Apr 15 06:31:49.395: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename security-context @ 04/15/24 06:31:49.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:31:49.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:31:49.434
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/15/24 06:31:49.44
  STEP: Saw pod success @ 04/15/24 06:31:53.485
  Apr 15 06:31:53.492: INFO: Trying to get logs from node thuchow3cah4-3 pod security-context-cf3e8137-df08-4de1-b0d3-6e800b319baf container test-container: <nil>
  STEP: delete the pod @ 04/15/24 06:31:53.51
  Apr 15 06:31:53.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1054" for this suite. @ 04/15/24 06:31:53.553
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/15/24 06:31:53.582
  Apr 15 06:31:53.582: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename crd-watch @ 04/15/24 06:31:53.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:31:53.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:31:53.621
  Apr 15 06:31:53.626: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Creating first CR  @ 04/15/24 06:31:56.29
  Apr 15 06:31:56.305: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T06:31:56Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T06:31:56Z]] name:name1 resourceVersion:148448 uid:8b8804a2-7056-4d4c-80cd-1ea0f94767b0] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 04/15/24 06:32:06.306
  Apr 15 06:32:06.324: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T06:32:06Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T06:32:06Z]] name:name2 resourceVersion:148474 uid:891a8f82-f0cc-447a-aedf-96ef3384ba08] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 04/15/24 06:32:16.325
  Apr 15 06:32:16.339: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T06:31:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T06:32:16Z]] name:name1 resourceVersion:148492 uid:8b8804a2-7056-4d4c-80cd-1ea0f94767b0] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 04/15/24 06:32:26.339
  Apr 15 06:32:26.355: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T06:32:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T06:32:26Z]] name:name2 resourceVersion:148510 uid:891a8f82-f0cc-447a-aedf-96ef3384ba08] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 04/15/24 06:32:36.356
  Apr 15 06:32:36.373: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T06:31:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T06:32:16Z]] name:name1 resourceVersion:148528 uid:8b8804a2-7056-4d4c-80cd-1ea0f94767b0] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 04/15/24 06:32:46.375
  Apr 15 06:32:46.391: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-15T06:32:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-15T06:32:26Z]] name:name2 resourceVersion:148546 uid:891a8f82-f0cc-447a-aedf-96ef3384ba08] num:map[num1:9223372036854775807 num2:1000000]]}
  Apr 15 06:32:56.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-818" for this suite. @ 04/15/24 06:32:56.944
• [63.379 seconds]
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/15/24 06:32:56.961
  Apr 15 06:32:56.961: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename svc-latency @ 04/15/24 06:32:56.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:32:57.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:32:57.021
  Apr 15 06:32:57.027: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-5393 @ 04/15/24 06:32:57.03
  I0415 06:32:57.045718      15 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-5393, replica count: 1
  I0415 06:32:58.097767      15 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0415 06:32:59.099462      15 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 06:32:59.222: INFO: Created: latency-svc-ghsns
  Apr 15 06:32:59.251: INFO: Got endpoints: latency-svc-ghsns [50.365809ms]
  Apr 15 06:32:59.279: INFO: Created: latency-svc-878qd
  Apr 15 06:32:59.305: INFO: Got endpoints: latency-svc-878qd [52.952695ms]
  Apr 15 06:32:59.310: INFO: Created: latency-svc-rptsr
  Apr 15 06:32:59.330: INFO: Got endpoints: latency-svc-rptsr [77.254434ms]
  Apr 15 06:32:59.331: INFO: Created: latency-svc-s5jbx
  Apr 15 06:32:59.337: INFO: Created: latency-svc-8mfn8
  Apr 15 06:32:59.352: INFO: Got endpoints: latency-svc-s5jbx [99.342651ms]
  Apr 15 06:32:59.364: INFO: Got endpoints: latency-svc-8mfn8 [111.023615ms]
  Apr 15 06:32:59.384: INFO: Created: latency-svc-zw2qv
  Apr 15 06:32:59.400: INFO: Got endpoints: latency-svc-zw2qv [134.86543ms]
  Apr 15 06:32:59.418: INFO: Created: latency-svc-cw2tq
  Apr 15 06:32:59.425: INFO: Created: latency-svc-9g9qd
  Apr 15 06:32:59.444: INFO: Got endpoints: latency-svc-9g9qd [173.65356ms]
  Apr 15 06:32:59.462: INFO: Got endpoints: latency-svc-cw2tq [202.347013ms]
  Apr 15 06:32:59.470: INFO: Created: latency-svc-7w2tj
  Apr 15 06:32:59.502: INFO: Got endpoints: latency-svc-7w2tj [241.6915ms]
  Apr 15 06:32:59.518: INFO: Created: latency-svc-27np4
  Apr 15 06:32:59.537: INFO: Created: latency-svc-jscp4
  Apr 15 06:32:59.538: INFO: Got endpoints: latency-svc-27np4 [264.498973ms]
  Apr 15 06:32:59.551: INFO: Got endpoints: latency-svc-jscp4 [278.456323ms]
  Apr 15 06:32:59.560: INFO: Created: latency-svc-p4sdd
  Apr 15 06:32:59.612: INFO: Created: latency-svc-w6lkj
  Apr 15 06:32:59.613: INFO: Got endpoints: latency-svc-p4sdd [340.254032ms]
  Apr 15 06:32:59.624: INFO: Created: latency-svc-8gqk2
  Apr 15 06:32:59.662: INFO: Got endpoints: latency-svc-w6lkj [387.964874ms]
  Apr 15 06:32:59.678: INFO: Got endpoints: latency-svc-8gqk2 [403.691622ms]
  Apr 15 06:32:59.707: INFO: Created: latency-svc-hzn4d
  Apr 15 06:32:59.730: INFO: Got endpoints: latency-svc-hzn4d [454.873567ms]
  Apr 15 06:32:59.744: INFO: Created: latency-svc-k9s5q
  Apr 15 06:32:59.776: INFO: Created: latency-svc-2fsr4
  Apr 15 06:32:59.781: INFO: Got endpoints: latency-svc-k9s5q [505.360297ms]
  Apr 15 06:32:59.807: INFO: Created: latency-svc-4sd4j
  Apr 15 06:32:59.821: INFO: Got endpoints: latency-svc-2fsr4 [516.098006ms]
  Apr 15 06:32:59.832: INFO: Got endpoints: latency-svc-4sd4j [501.961342ms]
  Apr 15 06:32:59.982: INFO: Created: latency-svc-46ntn
  Apr 15 06:32:59.982: INFO: Created: latency-svc-2mwmx
  Apr 15 06:32:59.983: INFO: Created: latency-svc-qf772
  Apr 15 06:32:59.983: INFO: Created: latency-svc-56sjs
  Apr 15 06:32:59.984: INFO: Created: latency-svc-sm8sn
  Apr 15 06:32:59.984: INFO: Created: latency-svc-ggm64
  Apr 15 06:32:59.985: INFO: Created: latency-svc-sqwsx
  Apr 15 06:32:59.986: INFO: Created: latency-svc-mb2x2
  Apr 15 06:32:59.987: INFO: Created: latency-svc-rh7vq
  Apr 15 06:32:59.987: INFO: Created: latency-svc-g9gmw
  Apr 15 06:33:00.000: INFO: Created: latency-svc-7jsw8
  Apr 15 06:33:00.000: INFO: Created: latency-svc-d8wnm
  Apr 15 06:33:00.002: INFO: Created: latency-svc-4692v
  Apr 15 06:33:00.003: INFO: Created: latency-svc-27w4j
  Apr 15 06:33:00.003: INFO: Created: latency-svc-mmvf7
  Apr 15 06:33:00.026: INFO: Got endpoints: latency-svc-d8wnm [474.397088ms]
  Apr 15 06:33:00.065: INFO: Got endpoints: latency-svc-qf772 [713.677425ms]
  Apr 15 06:33:00.065: INFO: Got endpoints: latency-svc-56sjs [283.971505ms]
  Apr 15 06:33:00.123: INFO: Created: latency-svc-lv8ls
  Apr 15 06:33:00.130: INFO: Got endpoints: latency-svc-2mwmx [516.740883ms]
  Apr 15 06:33:00.130: INFO: Got endpoints: latency-svc-sm8sn [765.343031ms]
  Apr 15 06:33:00.157: INFO: Got endpoints: latency-svc-4692v [478.815415ms]
  Apr 15 06:33:00.160: INFO: Got endpoints: latency-svc-46ntn [656.755382ms]
  Apr 15 06:33:00.186: INFO: Got endpoints: latency-svc-7jsw8 [723.968495ms]
  Apr 15 06:33:00.187: INFO: Got endpoints: latency-svc-27w4j [456.17671ms]
  Apr 15 06:33:00.203: INFO: Got endpoints: latency-svc-mmvf7 [758.58486ms]
  Apr 15 06:33:00.257: INFO: Got endpoints: latency-svc-g9gmw [424.077647ms]
  Apr 15 06:33:00.258: INFO: Created: latency-svc-955bb
  Apr 15 06:33:00.274: INFO: Got endpoints: latency-svc-ggm64 [736.059164ms]
  Apr 15 06:33:00.275: INFO: Got endpoints: latency-svc-sqwsx [613.418871ms]
  Apr 15 06:33:00.275: INFO: Got endpoints: latency-svc-rh7vq [454.255997ms]
  Apr 15 06:33:00.373: INFO: Got endpoints: latency-svc-mb2x2 [972.653686ms]
  Apr 15 06:33:00.424: INFO: Created: latency-svc-5xptt
  Apr 15 06:33:00.425: INFO: Got endpoints: latency-svc-lv8ls [398.625534ms]
  Apr 15 06:33:00.426: INFO: Got endpoints: latency-svc-955bb [360.275375ms]
  Apr 15 06:33:00.442: INFO: Created: latency-svc-6cthk
  Apr 15 06:33:00.446: INFO: Got endpoints: latency-svc-5xptt [380.312808ms]
  Apr 15 06:33:00.475: INFO: Got endpoints: latency-svc-6cthk [344.715075ms]
  Apr 15 06:33:00.482: INFO: Created: latency-svc-99fkt
  Apr 15 06:33:00.498: INFO: Got endpoints: latency-svc-99fkt [367.848585ms]
  Apr 15 06:33:00.508: INFO: Created: latency-svc-c7qpp
  Apr 15 06:33:00.541: INFO: Got endpoints: latency-svc-c7qpp [65.4953ms]
  Apr 15 06:33:00.554: INFO: Created: latency-svc-n5lpq
  Apr 15 06:33:00.567: INFO: Got endpoints: latency-svc-n5lpq [379.075618ms]
  Apr 15 06:33:00.592: INFO: Created: latency-svc-9qwck
  Apr 15 06:33:00.596: INFO: Created: latency-svc-sdx4z
  Apr 15 06:33:00.613: INFO: Got endpoints: latency-svc-sdx4z [409.295702ms]
  Apr 15 06:33:00.623: INFO: Got endpoints: latency-svc-9qwck [365.149793ms]
  Apr 15 06:33:00.624: INFO: Created: latency-svc-xhsxp
  Apr 15 06:33:00.659: INFO: Got endpoints: latency-svc-xhsxp [383.837703ms]
  Apr 15 06:33:00.664: INFO: Created: latency-svc-j6w59
  Apr 15 06:33:00.664: INFO: Created: latency-svc-rwphg
  Apr 15 06:33:00.674: INFO: Got endpoints: latency-svc-rwphg [400.533334ms]
  Apr 15 06:33:00.692: INFO: Created: latency-svc-v2n6j
  Apr 15 06:33:00.715: INFO: Got endpoints: latency-svc-j6w59 [439.664025ms]
  Apr 15 06:33:00.732: INFO: Got endpoints: latency-svc-v2n6j [358.153321ms]
  Apr 15 06:33:00.738: INFO: Created: latency-svc-qphcp
  Apr 15 06:33:00.756: INFO: Created: latency-svc-bhmbr
  Apr 15 06:33:00.763: INFO: Got endpoints: latency-svc-qphcp [337.651759ms]
  Apr 15 06:33:00.782: INFO: Created: latency-svc-754fb
  Apr 15 06:33:00.785: INFO: Got endpoints: latency-svc-bhmbr [359.205001ms]
  Apr 15 06:33:00.787: INFO: Created: latency-svc-5fgfq
  Apr 15 06:33:00.805: INFO: Created: latency-svc-bqsbn
  Apr 15 06:33:00.824: INFO: Got endpoints: latency-svc-754fb [377.385791ms]
  Apr 15 06:33:00.826: INFO: Created: latency-svc-8zzxg
  Apr 15 06:33:00.856: INFO: Got endpoints: latency-svc-5fgfq [697.967775ms]
  Apr 15 06:33:00.857: INFO: Got endpoints: latency-svc-8zzxg [696.383593ms]
  Apr 15 06:33:00.858: INFO: Got endpoints: latency-svc-bqsbn [671.006485ms]
  Apr 15 06:33:00.862: INFO: Created: latency-svc-pwjzr
  Apr 15 06:33:00.873: INFO: Created: latency-svc-zxqks
  Apr 15 06:33:00.905: INFO: Got endpoints: latency-svc-pwjzr [406.344723ms]
  Apr 15 06:33:00.914: INFO: Created: latency-svc-9l85k
  Apr 15 06:33:00.923: INFO: Got endpoints: latency-svc-zxqks [381.031473ms]
  Apr 15 06:33:00.936: INFO: Got endpoints: latency-svc-9l85k [369.297639ms]
  Apr 15 06:33:00.937: INFO: Created: latency-svc-cqtw4
  Apr 15 06:33:00.966: INFO: Created: latency-svc-zzqjb
  Apr 15 06:33:00.985: INFO: Got endpoints: latency-svc-cqtw4 [372.597937ms]
  Apr 15 06:33:01.004: INFO: Got endpoints: latency-svc-zzqjb [380.745857ms]
  Apr 15 06:33:01.159: INFO: Created: latency-svc-wgzjn
  Apr 15 06:33:01.171: INFO: Created: latency-svc-5p2lm
  Apr 15 06:33:01.171: INFO: Created: latency-svc-2nzk9
  Apr 15 06:33:01.171: INFO: Created: latency-svc-xs87d
  Apr 15 06:33:01.172: INFO: Created: latency-svc-7z8hv
  Apr 15 06:33:01.218: INFO: Created: latency-svc-f5d92
  Apr 15 06:33:01.220: INFO: Created: latency-svc-cpm9d
  Apr 15 06:33:01.222: INFO: Created: latency-svc-pr6l6
  Apr 15 06:33:01.229: INFO: Got endpoints: latency-svc-wgzjn [404.465545ms]
  Apr 15 06:33:01.230: INFO: Created: latency-svc-m8jbh
  Apr 15 06:33:01.230: INFO: Created: latency-svc-vkfdc
  Apr 15 06:33:01.231: INFO: Created: latency-svc-g75jh
  Apr 15 06:33:01.231: INFO: Created: latency-svc-h46cr
  Apr 15 06:33:01.232: INFO: Created: latency-svc-sptpl
  Apr 15 06:33:01.232: INFO: Created: latency-svc-v46fm
  Apr 15 06:33:01.232: INFO: Created: latency-svc-lkcxh
  Apr 15 06:33:01.256: INFO: Got endpoints: latency-svc-xs87d [398.275731ms]
  Apr 15 06:33:01.295: INFO: Got endpoints: latency-svc-7z8hv [580.077202ms]
  Apr 15 06:33:01.296: INFO: Got endpoints: latency-svc-2nzk9 [564.370851ms]
  Apr 15 06:33:01.297: INFO: Got endpoints: latency-svc-5p2lm [360.895176ms]
  Apr 15 06:33:01.327: INFO: Got endpoints: latency-svc-pr6l6 [322.873121ms]
  Apr 15 06:33:01.328: INFO: Got endpoints: latency-svc-vkfdc [342.447743ms]
  Apr 15 06:33:01.329: INFO: Got endpoints: latency-svc-m8jbh [543.190695ms]
  Apr 15 06:33:01.345: INFO: Got endpoints: latency-svc-f5d92 [439.490812ms]
  Apr 15 06:33:01.347: INFO: Created: latency-svc-ccfd6
  Apr 15 06:33:01.357: INFO: Created: latency-svc-thjfq
  Apr 15 06:33:01.376: INFO: Got endpoints: latency-svc-sptpl [611.994095ms]
  Apr 15 06:33:01.376: INFO: Got endpoints: latency-svc-h46cr [518.7163ms]
  Apr 15 06:33:01.387: INFO: Got endpoints: latency-svc-lkcxh [463.478559ms]
  Apr 15 06:33:01.387: INFO: Got endpoints: latency-svc-cpm9d [530.882053ms]
  Apr 15 06:33:01.405: INFO: Got endpoints: latency-svc-g75jh [745.281626ms]
  Apr 15 06:33:01.405: INFO: Got endpoints: latency-svc-v46fm [729.785855ms]
  Apr 15 06:33:01.407: INFO: Created: latency-svc-svzql
  Apr 15 06:33:01.414: INFO: Got endpoints: latency-svc-ccfd6 [185.136266ms]
  Apr 15 06:33:01.447: INFO: Created: latency-svc-rk7nd
  Apr 15 06:33:01.456: INFO: Got endpoints: latency-svc-thjfq [199.191552ms]
  Apr 15 06:33:01.466: INFO: Created: latency-svc-n5hmq
  Apr 15 06:33:01.474: INFO: Created: latency-svc-k5hl5
  Apr 15 06:33:01.505: INFO: Created: latency-svc-m5dzd
  Apr 15 06:33:01.508: INFO: Got endpoints: latency-svc-svzql [211.545866ms]
  Apr 15 06:33:01.516: INFO: Created: latency-svc-szj6d
  Apr 15 06:33:01.539: INFO: Got endpoints: latency-svc-rk7nd [242.595093ms]
  Apr 15 06:33:01.556: INFO: Created: latency-svc-w2trq
  Apr 15 06:33:01.563: INFO: Created: latency-svc-n7tj5
  Apr 15 06:33:01.575: INFO: Created: latency-svc-lqrmh
  Apr 15 06:33:01.609: INFO: Got endpoints: latency-svc-n5hmq [311.457692ms]
  Apr 15 06:33:01.613: INFO: Created: latency-svc-gjrd5
  Apr 15 06:33:01.627: INFO: Created: latency-svc-k4qvj
  Apr 15 06:33:01.651: INFO: Created: latency-svc-9zzvf
  Apr 15 06:33:01.667: INFO: Got endpoints: latency-svc-k5hl5 [339.021648ms]
  Apr 15 06:33:01.674: INFO: Created: latency-svc-6mrgz
  Apr 15 06:33:01.689: INFO: Created: latency-svc-2qjdq
  Apr 15 06:33:01.698: INFO: Got endpoints: latency-svc-m5dzd [369.081175ms]
  Apr 15 06:33:01.714: INFO: Created: latency-svc-wqm26
  Apr 15 06:33:01.756: INFO: Got endpoints: latency-svc-szj6d [427.848397ms]
  Apr 15 06:33:01.756: INFO: Created: latency-svc-x2tkn
  Apr 15 06:33:01.764: INFO: Created: latency-svc-bbhsk
  Apr 15 06:33:01.792: INFO: Created: latency-svc-qscjr
  Apr 15 06:33:01.799: INFO: Got endpoints: latency-svc-n7tj5 [454.261647ms]
  Apr 15 06:33:01.823: INFO: Created: latency-svc-c8gg9
  Apr 15 06:33:01.847: INFO: Got endpoints: latency-svc-w2trq [470.943794ms]
  Apr 15 06:33:01.848: INFO: Created: latency-svc-b2mkx
  Apr 15 06:33:01.893: INFO: Created: latency-svc-6h4p5
  Apr 15 06:33:01.906: INFO: Got endpoints: latency-svc-lqrmh [529.251665ms]
  Apr 15 06:33:01.916: INFO: Created: latency-svc-gwl67
  Apr 15 06:33:01.928: INFO: Created: latency-svc-7klkc
  Apr 15 06:33:01.943: INFO: Got endpoints: latency-svc-gjrd5 [556.15301ms]
  Apr 15 06:33:01.951: INFO: Created: latency-svc-7l4kz
  Apr 15 06:33:01.970: INFO: Created: latency-svc-9vktk
  Apr 15 06:33:01.991: INFO: Got endpoints: latency-svc-k4qvj [604.186762ms]
  Apr 15 06:33:02.018: INFO: Created: latency-svc-7w5tn
  Apr 15 06:33:02.051: INFO: Got endpoints: latency-svc-9zzvf [645.639758ms]
  Apr 15 06:33:02.121: INFO: Got endpoints: latency-svc-6mrgz [715.292511ms]
  Apr 15 06:33:02.121: INFO: Created: latency-svc-rgzfv
  Apr 15 06:33:02.141: INFO: Got endpoints: latency-svc-2qjdq [726.515544ms]
  Apr 15 06:33:02.174: INFO: Created: latency-svc-4d4hk
  Apr 15 06:33:02.185: INFO: Created: latency-svc-b8zpm
  Apr 15 06:33:02.196: INFO: Got endpoints: latency-svc-wqm26 [739.635355ms]
  Apr 15 06:33:02.240: INFO: Got endpoints: latency-svc-x2tkn [731.734837ms]
  Apr 15 06:33:02.270: INFO: Created: latency-svc-sdklv
  Apr 15 06:33:02.272: INFO: Created: latency-svc-xz4d7
  Apr 15 06:33:02.291: INFO: Got endpoints: latency-svc-bbhsk [751.941471ms]
  Apr 15 06:33:02.321: INFO: Created: latency-svc-fdk5m
  Apr 15 06:33:02.342: INFO: Got endpoints: latency-svc-qscjr [732.24995ms]
  Apr 15 06:33:02.383: INFO: Created: latency-svc-jk28b
  Apr 15 06:33:02.397: INFO: Got endpoints: latency-svc-c8gg9 [729.517249ms]
  Apr 15 06:33:02.424: INFO: Created: latency-svc-k4cxt
  Apr 15 06:33:02.440: INFO: Got endpoints: latency-svc-b2mkx [740.645508ms]
  Apr 15 06:33:02.459: INFO: Created: latency-svc-ztrlk
  Apr 15 06:33:02.488: INFO: Got endpoints: latency-svc-6h4p5 [731.598296ms]
  Apr 15 06:33:02.514: INFO: Created: latency-svc-dbdtt
  Apr 15 06:33:02.539: INFO: Got endpoints: latency-svc-gwl67 [739.208216ms]
  Apr 15 06:33:02.559: INFO: Created: latency-svc-nvmtz
  Apr 15 06:33:02.588: INFO: Got endpoints: latency-svc-7klkc [741.19867ms]
  Apr 15 06:33:02.618: INFO: Created: latency-svc-ckb4h
  Apr 15 06:33:02.636: INFO: Got endpoints: latency-svc-7l4kz [730.167993ms]
  Apr 15 06:33:02.659: INFO: Created: latency-svc-bl8m4
  Apr 15 06:33:02.690: INFO: Got endpoints: latency-svc-9vktk [747.279269ms]
  Apr 15 06:33:02.713: INFO: Created: latency-svc-p62d5
  Apr 15 06:33:02.741: INFO: Got endpoints: latency-svc-7w5tn [748.647191ms]
  Apr 15 06:33:02.764: INFO: Created: latency-svc-dvzmw
  Apr 15 06:33:02.796: INFO: Got endpoints: latency-svc-rgzfv [744.820897ms]
  Apr 15 06:33:02.819: INFO: Created: latency-svc-crw46
  Apr 15 06:33:02.833: INFO: Got endpoints: latency-svc-4d4hk [712.649107ms]
  Apr 15 06:33:02.853: INFO: Created: latency-svc-njjrz
  Apr 15 06:33:02.887: INFO: Got endpoints: latency-svc-b8zpm [746.37763ms]
  Apr 15 06:33:02.907: INFO: Created: latency-svc-6zsjb
  Apr 15 06:33:02.937: INFO: Got endpoints: latency-svc-xz4d7 [736.837133ms]
  Apr 15 06:33:02.956: INFO: Created: latency-svc-nh879
  Apr 15 06:33:02.986: INFO: Got endpoints: latency-svc-sdklv [746.050357ms]
  Apr 15 06:33:03.010: INFO: Created: latency-svc-ww2wf
  Apr 15 06:33:03.046: INFO: Got endpoints: latency-svc-fdk5m [753.057704ms]
  Apr 15 06:33:03.066: INFO: Created: latency-svc-zsgf6
  Apr 15 06:33:03.089: INFO: Got endpoints: latency-svc-jk28b [747.554511ms]
  Apr 15 06:33:03.113: INFO: Created: latency-svc-fcwcs
  Apr 15 06:33:03.138: INFO: Got endpoints: latency-svc-k4cxt [741.533323ms]
  Apr 15 06:33:03.159: INFO: Created: latency-svc-tdptk
  Apr 15 06:33:03.187: INFO: Got endpoints: latency-svc-ztrlk [746.589583ms]
  Apr 15 06:33:03.205: INFO: Created: latency-svc-snwk8
  Apr 15 06:33:03.242: INFO: Got endpoints: latency-svc-dbdtt [754.22373ms]
  Apr 15 06:33:03.260: INFO: Created: latency-svc-kncvf
  Apr 15 06:33:03.291: INFO: Got endpoints: latency-svc-nvmtz [751.048273ms]
  Apr 15 06:33:03.325: INFO: Created: latency-svc-g55lt
  Apr 15 06:33:03.370: INFO: Got endpoints: latency-svc-ckb4h [781.34676ms]
  Apr 15 06:33:03.401: INFO: Got endpoints: latency-svc-bl8m4 [765.349167ms]
  Apr 15 06:33:03.416: INFO: Created: latency-svc-h6fl6
  Apr 15 06:33:03.449: INFO: Got endpoints: latency-svc-p62d5 [758.626243ms]
  Apr 15 06:33:03.451: INFO: Created: latency-svc-l2wj7
  Apr 15 06:33:03.479: INFO: Created: latency-svc-l4hhj
  Apr 15 06:33:03.493: INFO: Got endpoints: latency-svc-dvzmw [752.28176ms]
  Apr 15 06:33:03.531: INFO: Created: latency-svc-z92hx
  Apr 15 06:33:03.550: INFO: Got endpoints: latency-svc-crw46 [754.521682ms]
  Apr 15 06:33:03.581: INFO: Created: latency-svc-pbtln
  Apr 15 06:33:03.603: INFO: Got endpoints: latency-svc-njjrz [769.188105ms]
  Apr 15 06:33:03.628: INFO: Created: latency-svc-b9nfr
  Apr 15 06:33:03.663: INFO: Got endpoints: latency-svc-6zsjb [774.977933ms]
  Apr 15 06:33:03.704: INFO: Got endpoints: latency-svc-nh879 [766.538575ms]
  Apr 15 06:33:03.722: INFO: Created: latency-svc-56g2j
  Apr 15 06:33:03.743: INFO: Got endpoints: latency-svc-ww2wf [756.825903ms]
  Apr 15 06:33:03.752: INFO: Created: latency-svc-lkggb
  Apr 15 06:33:03.779: INFO: Created: latency-svc-wfzrq
  Apr 15 06:33:03.786: INFO: Got endpoints: latency-svc-zsgf6 [740.05336ms]
  Apr 15 06:33:03.809: INFO: Created: latency-svc-pc5j6
  Apr 15 06:33:03.838: INFO: Got endpoints: latency-svc-fcwcs [748.580445ms]
  Apr 15 06:33:03.858: INFO: Created: latency-svc-cclpj
  Apr 15 06:33:03.890: INFO: Got endpoints: latency-svc-tdptk [751.090305ms]
  Apr 15 06:33:03.916: INFO: Created: latency-svc-mpv48
  Apr 15 06:33:03.939: INFO: Got endpoints: latency-svc-snwk8 [752.551169ms]
  Apr 15 06:33:03.959: INFO: Created: latency-svc-kbjbg
  Apr 15 06:33:03.987: INFO: Got endpoints: latency-svc-kncvf [744.457285ms]
  Apr 15 06:33:04.012: INFO: Created: latency-svc-ghfqz
  Apr 15 06:33:04.043: INFO: Got endpoints: latency-svc-g55lt [751.898716ms]
  Apr 15 06:33:04.067: INFO: Created: latency-svc-kvr65
  Apr 15 06:33:04.093: INFO: Got endpoints: latency-svc-h6fl6 [722.637732ms]
  Apr 15 06:33:04.112: INFO: Created: latency-svc-gxchl
  Apr 15 06:33:04.139: INFO: Got endpoints: latency-svc-l2wj7 [737.228057ms]
  Apr 15 06:33:04.173: INFO: Created: latency-svc-9gx9f
  Apr 15 06:33:04.194: INFO: Got endpoints: latency-svc-l4hhj [744.680003ms]
  Apr 15 06:33:04.236: INFO: Got endpoints: latency-svc-z92hx [743.150728ms]
  Apr 15 06:33:04.243: INFO: Created: latency-svc-msd7d
  Apr 15 06:33:04.299: INFO: Got endpoints: latency-svc-pbtln [749.158226ms]
  Apr 15 06:33:04.301: INFO: Created: latency-svc-6mxfz
  Apr 15 06:33:04.324: INFO: Created: latency-svc-gvtrj
  Apr 15 06:33:04.338: INFO: Got endpoints: latency-svc-b9nfr [735.175684ms]
  Apr 15 06:33:04.370: INFO: Created: latency-svc-vmkn6
  Apr 15 06:33:04.387: INFO: Got endpoints: latency-svc-56g2j [724.050016ms]
  Apr 15 06:33:04.407: INFO: Created: latency-svc-nbvxp
  Apr 15 06:33:04.436: INFO: Got endpoints: latency-svc-lkggb [732.006758ms]
  Apr 15 06:33:04.455: INFO: Created: latency-svc-qjfhw
  Apr 15 06:33:04.485: INFO: Got endpoints: latency-svc-wfzrq [741.642848ms]
  Apr 15 06:33:04.512: INFO: Created: latency-svc-4dgjh
  Apr 15 06:33:04.539: INFO: Got endpoints: latency-svc-pc5j6 [752.684174ms]
  Apr 15 06:33:04.561: INFO: Created: latency-svc-wthzm
  Apr 15 06:33:04.591: INFO: Got endpoints: latency-svc-cclpj [752.057296ms]
  Apr 15 06:33:04.611: INFO: Created: latency-svc-gm4c7
  Apr 15 06:33:04.644: INFO: Got endpoints: latency-svc-mpv48 [753.966939ms]
  Apr 15 06:33:04.666: INFO: Created: latency-svc-5h6jr
  Apr 15 06:33:04.687: INFO: Got endpoints: latency-svc-kbjbg [746.97059ms]
  Apr 15 06:33:04.709: INFO: Created: latency-svc-nhvnv
  Apr 15 06:33:04.738: INFO: Got endpoints: latency-svc-ghfqz [751.360818ms]
  Apr 15 06:33:04.765: INFO: Created: latency-svc-7l8kd
  Apr 15 06:33:04.787: INFO: Got endpoints: latency-svc-kvr65 [744.117518ms]
  Apr 15 06:33:04.814: INFO: Created: latency-svc-xbgmd
  Apr 15 06:33:04.843: INFO: Got endpoints: latency-svc-gxchl [748.957586ms]
  Apr 15 06:33:04.862: INFO: Created: latency-svc-m5d77
  Apr 15 06:33:04.887: INFO: Got endpoints: latency-svc-9gx9f [748.296528ms]
  Apr 15 06:33:04.907: INFO: Created: latency-svc-ndnqb
  Apr 15 06:33:04.941: INFO: Got endpoints: latency-svc-msd7d [746.726131ms]
  Apr 15 06:33:04.975: INFO: Created: latency-svc-2t7wd
  Apr 15 06:33:04.989: INFO: Got endpoints: latency-svc-6mxfz [750.874382ms]
  Apr 15 06:33:05.022: INFO: Created: latency-svc-nnmpd
  Apr 15 06:33:05.047: INFO: Got endpoints: latency-svc-gvtrj [747.327705ms]
  Apr 15 06:33:05.073: INFO: Created: latency-svc-d4jrh
  Apr 15 06:33:05.104: INFO: Got endpoints: latency-svc-vmkn6 [764.755895ms]
  Apr 15 06:33:05.129: INFO: Created: latency-svc-6v9s4
  Apr 15 06:33:05.137: INFO: Got endpoints: latency-svc-nbvxp [750.502451ms]
  Apr 15 06:33:05.159: INFO: Created: latency-svc-7mnkn
  Apr 15 06:33:05.190: INFO: Got endpoints: latency-svc-qjfhw [753.938027ms]
  Apr 15 06:33:05.214: INFO: Created: latency-svc-z99gt
  Apr 15 06:33:05.242: INFO: Got endpoints: latency-svc-4dgjh [756.876982ms]
  Apr 15 06:33:05.269: INFO: Created: latency-svc-cvftf
  Apr 15 06:33:05.289: INFO: Got endpoints: latency-svc-wthzm [750.141269ms]
  Apr 15 06:33:05.315: INFO: Created: latency-svc-s86td
  Apr 15 06:33:05.347: INFO: Got endpoints: latency-svc-gm4c7 [756.341374ms]
  Apr 15 06:33:05.374: INFO: Created: latency-svc-rv26v
  Apr 15 06:33:05.388: INFO: Got endpoints: latency-svc-5h6jr [742.479809ms]
  Apr 15 06:33:05.409: INFO: Created: latency-svc-v7pt7
  Apr 15 06:33:05.438: INFO: Got endpoints: latency-svc-nhvnv [750.578249ms]
  Apr 15 06:33:05.461: INFO: Created: latency-svc-zbs86
  Apr 15 06:33:05.492: INFO: Got endpoints: latency-svc-7l8kd [752.866231ms]
  Apr 15 06:33:05.512: INFO: Created: latency-svc-5xjbp
  Apr 15 06:33:05.537: INFO: Got endpoints: latency-svc-xbgmd [748.951459ms]
  Apr 15 06:33:05.559: INFO: Created: latency-svc-74jcn
  Apr 15 06:33:05.589: INFO: Got endpoints: latency-svc-m5d77 [745.532973ms]
  Apr 15 06:33:05.606: INFO: Created: latency-svc-5dxcq
  Apr 15 06:33:05.639: INFO: Got endpoints: latency-svc-ndnqb [751.398742ms]
  Apr 15 06:33:05.657: INFO: Created: latency-svc-v6rhj
  Apr 15 06:33:05.688: INFO: Got endpoints: latency-svc-2t7wd [746.67834ms]
  Apr 15 06:33:05.713: INFO: Created: latency-svc-mpsjb
  Apr 15 06:33:05.736: INFO: Got endpoints: latency-svc-nnmpd [746.855066ms]
  Apr 15 06:33:05.758: INFO: Created: latency-svc-kx2p8
  Apr 15 06:33:05.786: INFO: Got endpoints: latency-svc-d4jrh [739.232463ms]
  Apr 15 06:33:05.805: INFO: Created: latency-svc-mxm6w
  Apr 15 06:33:05.838: INFO: Got endpoints: latency-svc-6v9s4 [734.53567ms]
  Apr 15 06:33:05.861: INFO: Created: latency-svc-wpfmb
  Apr 15 06:33:05.887: INFO: Got endpoints: latency-svc-7mnkn [748.160745ms]
  Apr 15 06:33:05.908: INFO: Created: latency-svc-486b2
  Apr 15 06:33:05.938: INFO: Got endpoints: latency-svc-z99gt [747.656564ms]
  Apr 15 06:33:05.968: INFO: Created: latency-svc-pp6k7
  Apr 15 06:33:05.984: INFO: Got endpoints: latency-svc-cvftf [742.386528ms]
  Apr 15 06:33:06.008: INFO: Created: latency-svc-p7m5d
  Apr 15 06:33:06.040: INFO: Got endpoints: latency-svc-s86td [750.276888ms]
  Apr 15 06:33:06.060: INFO: Created: latency-svc-fw2ck
  Apr 15 06:33:06.086: INFO: Got endpoints: latency-svc-rv26v [738.456121ms]
  Apr 15 06:33:06.109: INFO: Created: latency-svc-q475w
  Apr 15 06:33:06.137: INFO: Got endpoints: latency-svc-v7pt7 [749.439293ms]
  Apr 15 06:33:06.161: INFO: Created: latency-svc-s7lkf
  Apr 15 06:33:06.191: INFO: Got endpoints: latency-svc-zbs86 [752.820188ms]
  Apr 15 06:33:06.211: INFO: Created: latency-svc-sjwg2
  Apr 15 06:33:06.236: INFO: Got endpoints: latency-svc-5xjbp [743.988905ms]
  Apr 15 06:33:06.263: INFO: Created: latency-svc-b9x7v
  Apr 15 06:33:06.298: INFO: Got endpoints: latency-svc-74jcn [760.058791ms]
  Apr 15 06:33:06.324: INFO: Created: latency-svc-zm5mr
  Apr 15 06:33:06.346: INFO: Got endpoints: latency-svc-5dxcq [756.127227ms]
  Apr 15 06:33:06.367: INFO: Created: latency-svc-mmfl8
  Apr 15 06:33:06.394: INFO: Got endpoints: latency-svc-v6rhj [754.431659ms]
  Apr 15 06:33:06.424: INFO: Created: latency-svc-vvjs6
  Apr 15 06:33:06.444: INFO: Got endpoints: latency-svc-mpsjb [755.093964ms]
  Apr 15 06:33:06.477: INFO: Created: latency-svc-h6xm9
  Apr 15 06:33:06.494: INFO: Got endpoints: latency-svc-kx2p8 [758.458253ms]
  Apr 15 06:33:06.525: INFO: Created: latency-svc-k7qgb
  Apr 15 06:33:06.543: INFO: Got endpoints: latency-svc-mxm6w [755.963318ms]
  Apr 15 06:33:06.572: INFO: Created: latency-svc-qndtg
  Apr 15 06:33:06.604: INFO: Got endpoints: latency-svc-wpfmb [765.021626ms]
  Apr 15 06:33:06.638: INFO: Created: latency-svc-ljjxk
  Apr 15 06:33:06.657: INFO: Got endpoints: latency-svc-486b2 [769.502418ms]
  Apr 15 06:33:06.681: INFO: Created: latency-svc-2tvqg
  Apr 15 06:33:06.688: INFO: Got endpoints: latency-svc-pp6k7 [749.638435ms]
  Apr 15 06:33:06.725: INFO: Created: latency-svc-bc6mg
  Apr 15 06:33:06.763: INFO: Got endpoints: latency-svc-p7m5d [779.054532ms]
  Apr 15 06:33:06.789: INFO: Created: latency-svc-gljss
  Apr 15 06:33:06.798: INFO: Got endpoints: latency-svc-fw2ck [757.148239ms]
  Apr 15 06:33:06.829: INFO: Created: latency-svc-dwjgb
  Apr 15 06:33:06.840: INFO: Got endpoints: latency-svc-q475w [753.348248ms]
  Apr 15 06:33:06.872: INFO: Created: latency-svc-gvjgh
  Apr 15 06:33:06.888: INFO: Got endpoints: latency-svc-s7lkf [749.606945ms]
  Apr 15 06:33:06.920: INFO: Created: latency-svc-kzfj6
  Apr 15 06:33:06.938: INFO: Got endpoints: latency-svc-sjwg2 [747.049236ms]
  Apr 15 06:33:06.960: INFO: Created: latency-svc-5d8g5
  Apr 15 06:33:06.987: INFO: Got endpoints: latency-svc-b9x7v [750.326233ms]
  Apr 15 06:33:07.010: INFO: Created: latency-svc-h29bf
  Apr 15 06:33:07.044: INFO: Got endpoints: latency-svc-zm5mr [744.76073ms]
  Apr 15 06:33:07.063: INFO: Created: latency-svc-v62rp
  Apr 15 06:33:07.094: INFO: Got endpoints: latency-svc-mmfl8 [747.396036ms]
  Apr 15 06:33:07.140: INFO: Got endpoints: latency-svc-vvjs6 [746.241204ms]
  Apr 15 06:33:07.191: INFO: Got endpoints: latency-svc-h6xm9 [746.681023ms]
  Apr 15 06:33:07.239: INFO: Got endpoints: latency-svc-k7qgb [745.019927ms]
  Apr 15 06:33:07.291: INFO: Got endpoints: latency-svc-qndtg [748.470815ms]
  Apr 15 06:33:07.342: INFO: Got endpoints: latency-svc-ljjxk [738.578147ms]
  Apr 15 06:33:07.410: INFO: Got endpoints: latency-svc-2tvqg [752.630413ms]
  Apr 15 06:33:07.441: INFO: Got endpoints: latency-svc-bc6mg [753.276628ms]
  Apr 15 06:33:07.490: INFO: Got endpoints: latency-svc-gljss [726.570387ms]
  Apr 15 06:33:07.536: INFO: Got endpoints: latency-svc-dwjgb [737.969234ms]
  Apr 15 06:33:07.588: INFO: Got endpoints: latency-svc-gvjgh [747.625153ms]
  Apr 15 06:33:07.666: INFO: Got endpoints: latency-svc-kzfj6 [775.923625ms]
  Apr 15 06:33:07.685: INFO: Got endpoints: latency-svc-5d8g5 [746.645131ms]
  Apr 15 06:33:07.737: INFO: Got endpoints: latency-svc-h29bf [750.517191ms]
  Apr 15 06:33:07.789: INFO: Got endpoints: latency-svc-v62rp [745.112067ms]
  Apr 15 06:33:07.789: INFO: Latencies: [52.952695ms 65.4953ms 77.254434ms 99.342651ms 111.023615ms 134.86543ms 173.65356ms 185.136266ms 199.191552ms 202.347013ms 211.545866ms 241.6915ms 242.595093ms 264.498973ms 278.456323ms 283.971505ms 311.457692ms 322.873121ms 337.651759ms 339.021648ms 340.254032ms 342.447743ms 344.715075ms 358.153321ms 359.205001ms 360.275375ms 360.895176ms 365.149793ms 367.848585ms 369.081175ms 369.297639ms 372.597937ms 377.385791ms 379.075618ms 380.312808ms 380.745857ms 381.031473ms 383.837703ms 387.964874ms 398.275731ms 398.625534ms 400.533334ms 403.691622ms 404.465545ms 406.344723ms 409.295702ms 424.077647ms 427.848397ms 439.490812ms 439.664025ms 454.255997ms 454.261647ms 454.873567ms 456.17671ms 463.478559ms 470.943794ms 474.397088ms 478.815415ms 501.961342ms 505.360297ms 516.098006ms 516.740883ms 518.7163ms 529.251665ms 530.882053ms 543.190695ms 556.15301ms 564.370851ms 580.077202ms 604.186762ms 611.994095ms 613.418871ms 645.639758ms 656.755382ms 671.006485ms 696.383593ms 697.967775ms 712.649107ms 713.677425ms 715.292511ms 722.637732ms 723.968495ms 724.050016ms 726.515544ms 726.570387ms 729.517249ms 729.785855ms 730.167993ms 731.598296ms 731.734837ms 732.006758ms 732.24995ms 734.53567ms 735.175684ms 736.059164ms 736.837133ms 737.228057ms 737.969234ms 738.456121ms 738.578147ms 739.208216ms 739.232463ms 739.635355ms 740.05336ms 740.645508ms 741.19867ms 741.533323ms 741.642848ms 742.386528ms 742.479809ms 743.150728ms 743.988905ms 744.117518ms 744.457285ms 744.680003ms 744.76073ms 744.820897ms 745.019927ms 745.112067ms 745.281626ms 745.532973ms 746.050357ms 746.241204ms 746.37763ms 746.589583ms 746.645131ms 746.67834ms 746.681023ms 746.726131ms 746.855066ms 746.97059ms 747.049236ms 747.279269ms 747.327705ms 747.396036ms 747.554511ms 747.625153ms 747.656564ms 748.160745ms 748.296528ms 748.470815ms 748.580445ms 748.647191ms 748.951459ms 748.957586ms 749.158226ms 749.439293ms 749.606945ms 749.638435ms 750.141269ms 750.276888ms 750.326233ms 750.502451ms 750.517191ms 750.578249ms 750.874382ms 751.048273ms 751.090305ms 751.360818ms 751.398742ms 751.898716ms 751.941471ms 752.057296ms 752.28176ms 752.551169ms 752.630413ms 752.684174ms 752.820188ms 752.866231ms 753.057704ms 753.276628ms 753.348248ms 753.938027ms 753.966939ms 754.22373ms 754.431659ms 754.521682ms 755.093964ms 755.963318ms 756.127227ms 756.341374ms 756.825903ms 756.876982ms 757.148239ms 758.458253ms 758.58486ms 758.626243ms 760.058791ms 764.755895ms 765.021626ms 765.343031ms 765.349167ms 766.538575ms 769.188105ms 769.502418ms 774.977933ms 775.923625ms 779.054532ms 781.34676ms 972.653686ms]
  Apr 15 06:33:07.789: INFO: 50 %ile: 739.208216ms
  Apr 15 06:33:07.789: INFO: 90 %ile: 756.341374ms
  Apr 15 06:33:07.789: INFO: 99 %ile: 781.34676ms
  Apr 15 06:33:07.789: INFO: Total sample count: 200
  Apr 15 06:33:07.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-5393" for this suite. @ 04/15/24 06:33:07.803
• [10.854 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 04/15/24 06:33:07.818
  Apr 15 06:33:07.819: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename discovery @ 04/15/24 06:33:07.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:33:07.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:33:07.86
  STEP: Setting up server cert @ 04/15/24 06:33:07.868
  Apr 15 06:33:09.012: INFO: Checking APIGroup: apiregistration.k8s.io
  Apr 15 06:33:09.014: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Apr 15 06:33:09.014: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Apr 15 06:33:09.014: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Apr 15 06:33:09.014: INFO: Checking APIGroup: apps
  Apr 15 06:33:09.016: INFO: PreferredVersion.GroupVersion: apps/v1
  Apr 15 06:33:09.016: INFO: Versions found [{apps/v1 v1}]
  Apr 15 06:33:09.016: INFO: apps/v1 matches apps/v1
  Apr 15 06:33:09.016: INFO: Checking APIGroup: events.k8s.io
  Apr 15 06:33:09.018: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Apr 15 06:33:09.018: INFO: Versions found [{events.k8s.io/v1 v1}]
  Apr 15 06:33:09.018: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Apr 15 06:33:09.019: INFO: Checking APIGroup: authentication.k8s.io
  Apr 15 06:33:09.021: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Apr 15 06:33:09.021: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Apr 15 06:33:09.022: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Apr 15 06:33:09.022: INFO: Checking APIGroup: authorization.k8s.io
  Apr 15 06:33:09.024: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Apr 15 06:33:09.024: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Apr 15 06:33:09.024: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Apr 15 06:33:09.024: INFO: Checking APIGroup: autoscaling
  Apr 15 06:33:09.025: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Apr 15 06:33:09.026: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Apr 15 06:33:09.026: INFO: autoscaling/v2 matches autoscaling/v2
  Apr 15 06:33:09.027: INFO: Checking APIGroup: batch
  Apr 15 06:33:09.028: INFO: PreferredVersion.GroupVersion: batch/v1
  Apr 15 06:33:09.028: INFO: Versions found [{batch/v1 v1}]
  Apr 15 06:33:09.028: INFO: batch/v1 matches batch/v1
  Apr 15 06:33:09.028: INFO: Checking APIGroup: certificates.k8s.io
  Apr 15 06:33:09.031: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Apr 15 06:33:09.031: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Apr 15 06:33:09.032: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Apr 15 06:33:09.032: INFO: Checking APIGroup: networking.k8s.io
  Apr 15 06:33:09.040: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Apr 15 06:33:09.040: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Apr 15 06:33:09.040: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Apr 15 06:33:09.040: INFO: Checking APIGroup: policy
  Apr 15 06:33:09.043: INFO: PreferredVersion.GroupVersion: policy/v1
  Apr 15 06:33:09.043: INFO: Versions found [{policy/v1 v1}]
  Apr 15 06:33:09.043: INFO: policy/v1 matches policy/v1
  Apr 15 06:33:09.043: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Apr 15 06:33:09.044: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Apr 15 06:33:09.044: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Apr 15 06:33:09.044: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Apr 15 06:33:09.044: INFO: Checking APIGroup: storage.k8s.io
  Apr 15 06:33:09.047: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Apr 15 06:33:09.047: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Apr 15 06:33:09.047: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Apr 15 06:33:09.047: INFO: Checking APIGroup: admissionregistration.k8s.io
  Apr 15 06:33:09.049: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Apr 15 06:33:09.049: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Apr 15 06:33:09.049: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Apr 15 06:33:09.050: INFO: Checking APIGroup: apiextensions.k8s.io
  Apr 15 06:33:09.052: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Apr 15 06:33:09.053: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Apr 15 06:33:09.053: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Apr 15 06:33:09.053: INFO: Checking APIGroup: scheduling.k8s.io
  Apr 15 06:33:09.055: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Apr 15 06:33:09.055: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Apr 15 06:33:09.055: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Apr 15 06:33:09.055: INFO: Checking APIGroup: coordination.k8s.io
  Apr 15 06:33:09.057: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Apr 15 06:33:09.057: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Apr 15 06:33:09.058: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Apr 15 06:33:09.058: INFO: Checking APIGroup: node.k8s.io
  Apr 15 06:33:09.060: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Apr 15 06:33:09.060: INFO: Versions found [{node.k8s.io/v1 v1}]
  Apr 15 06:33:09.061: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Apr 15 06:33:09.061: INFO: Checking APIGroup: discovery.k8s.io
  Apr 15 06:33:09.063: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Apr 15 06:33:09.064: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Apr 15 06:33:09.064: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Apr 15 06:33:09.065: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Apr 15 06:33:09.067: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Apr 15 06:33:09.067: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Apr 15 06:33:09.067: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Apr 15 06:33:09.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8112" for this suite. @ 04/15/24 06:33:09.08
• [1.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 04/15/24 06:33:09.118
  Apr 15 06:33:09.118: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 06:33:09.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:33:09.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:33:09.162
  STEP: creating a ServiceAccount @ 04/15/24 06:33:09.167
  STEP: watching for the ServiceAccount to be added @ 04/15/24 06:33:09.185
  STEP: patching the ServiceAccount @ 04/15/24 06:33:09.194
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/15/24 06:33:09.208
  STEP: deleting the ServiceAccount @ 04/15/24 06:33:09.215
  Apr 15 06:33:09.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6017" for this suite. @ 04/15/24 06:33:09.246
• [0.139 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 04/15/24 06:33:09.261
  Apr 15 06:33:09.261: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename dns @ 04/15/24 06:33:09.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:33:09.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:33:09.345
  STEP: Creating a test headless service @ 04/15/24 06:33:09.351
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3476.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-3476.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 04/15/24 06:33:09.362
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3476.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3476.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/15/24 06:33:09.363
  STEP: creating a pod to probe DNS @ 04/15/24 06:33:09.363
  STEP: submitting the pod to kubernetes @ 04/15/24 06:33:09.364
  STEP: retrieving the pod @ 04/15/24 06:33:11.411
  STEP: looking for the results for each expected name from probers @ 04/15/24 06:33:11.418
  Apr 15 06:33:11.457: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-3476/dns-test-24170ac9-0fd3-4f3e-919c-fc57cc42d4a7: the server could not find the requested resource (get pods dns-test-24170ac9-0fd3-4f3e-919c-fc57cc42d4a7)
  Apr 15 06:33:11.458: INFO: Lookups using dns-3476/dns-test-24170ac9-0fd3-4f3e-919c-fc57cc42d4a7 failed for: [jessie_hosts@dns-querier-2]

  Apr 15 06:33:11.480: INFO: Pod client logs for webserver: 
  Apr 15 06:33:11.493: INFO: Pod client logs for querier: 
  Apr 15 06:33:11.504: INFO: Pod client logs for jessie-querier: 
  Apr 15 06:33:16.559: INFO: DNS probes using dns-3476/dns-test-24170ac9-0fd3-4f3e-919c-fc57cc42d4a7 succeeded

  Apr 15 06:33:16.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/15/24 06:33:16.567
  STEP: deleting the test headless service @ 04/15/24 06:33:16.643
  STEP: Destroying namespace "dns-3476" for this suite. @ 04/15/24 06:33:16.739
• [7.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 04/15/24 06:33:16.782
  Apr 15 06:33:16.782: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 06:33:16.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:33:16.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:33:16.979
  STEP: Creating ServiceAccount "e2e-sa-bftgh"  @ 04/15/24 06:33:16.996
  Apr 15 06:33:17.017: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-bftgh"  @ 04/15/24 06:33:17.018
  Apr 15 06:33:17.124: INFO: AutomountServiceAccountToken: true
  Apr 15 06:33:17.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1525" for this suite. @ 04/15/24 06:33:17.148
• [0.387 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 04/15/24 06:33:17.17
  Apr 15 06:33:17.170: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 06:33:17.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:33:17.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:33:17.338
  STEP: Creating resourceQuota "e2e-rq-status-8f9kh" @ 04/15/24 06:33:17.387
  Apr 15 06:33:17.449: INFO: Resource quota "e2e-rq-status-8f9kh" reports spec: hard cpu limit of 500m
  Apr 15 06:33:17.450: INFO: Resource quota "e2e-rq-status-8f9kh" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-8f9kh" /status @ 04/15/24 06:33:17.451
  STEP: Confirm /status for "e2e-rq-status-8f9kh" resourceQuota via watch @ 04/15/24 06:33:17.592
  Apr 15 06:33:17.610: INFO: observed resourceQuota "e2e-rq-status-8f9kh" in namespace "resourcequota-1393" with hard status: v1.ResourceList(nil)
  Apr 15 06:33:17.616: INFO: Found resourceQuota "e2e-rq-status-8f9kh" in namespace "resourcequota-1393" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 15 06:33:17.617: INFO: ResourceQuota "e2e-rq-status-8f9kh" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/15/24 06:33:17.631
  Apr 15 06:33:17.723: INFO: Resource quota "e2e-rq-status-8f9kh" reports spec: hard cpu limit of 1
  Apr 15 06:33:17.723: INFO: Resource quota "e2e-rq-status-8f9kh" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-8f9kh" /status @ 04/15/24 06:33:17.724
  STEP: Confirm /status for "e2e-rq-status-8f9kh" resourceQuota via watch @ 04/15/24 06:33:17.734
  Apr 15 06:33:17.738: INFO: observed resourceQuota "e2e-rq-status-8f9kh" in namespace "resourcequota-1393" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 15 06:33:17.738: INFO: Found resourceQuota "e2e-rq-status-8f9kh" in namespace "resourcequota-1393" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Apr 15 06:33:17.738: INFO: ResourceQuota "e2e-rq-status-8f9kh" /status was patched
  STEP: Get "e2e-rq-status-8f9kh" /status @ 04/15/24 06:33:17.738
  Apr 15 06:33:17.750: INFO: Resourcequota "e2e-rq-status-8f9kh" reports status: hard cpu of 1
  Apr 15 06:33:17.750: INFO: Resourcequota "e2e-rq-status-8f9kh" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-8f9kh" /status before checking Spec is unchanged @ 04/15/24 06:33:17.766
  Apr 15 06:33:17.779: INFO: Resourcequota "e2e-rq-status-8f9kh" reports status: hard cpu of 2
  Apr 15 06:33:17.780: INFO: Resourcequota "e2e-rq-status-8f9kh" reports status: hard memory of 2Gi
  Apr 15 06:33:17.785: INFO: Found resourceQuota "e2e-rq-status-8f9kh" in namespace "resourcequota-1393" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Apr 15 06:35:47.822: INFO: ResourceQuota "e2e-rq-status-8f9kh" Spec was unchanged and /status reset
  Apr 15 06:35:47.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1393" for this suite. @ 04/15/24 06:35:47.842
• [150.698 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 04/15/24 06:35:47.888
  Apr 15 06:35:47.889: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 06:35:47.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:35:47.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:35:47.944
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/15/24 06:35:47.95
  STEP: Saw pod success @ 04/15/24 06:35:52.006
  Apr 15 06:35:52.013: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-8abc2b18-eca8-499e-9b70-82dcfcc1566a container test-container: <nil>
  STEP: delete the pod @ 04/15/24 06:35:52.062
  Apr 15 06:35:52.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1975" for this suite. @ 04/15/24 06:35:52.119
• [4.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:320
  STEP: Creating a kubernetes client @ 04/15/24 06:35:52.158
  Apr 15 06:35:52.158: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 06:35:52.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:35:52.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:35:52.253
  STEP: Creating service test in namespace statefulset-269 @ 04/15/24 06:35:52.261
  STEP: Creating a new StatefulSet @ 04/15/24 06:35:52.275
  Apr 15 06:35:52.339: INFO: Found 0 stateful pods, waiting for 3
  Apr 15 06:36:02.358: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 06:36:02.359: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 06:36:02.359: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 06:36:02.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-269 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 06:36:02.768: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 06:36:02.768: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 06:36:02.768: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/15/24 06:36:12.806
  Apr 15 06:36:12.846: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/15/24 06:36:12.846
  STEP: Updating Pods in reverse ordinal order @ 04/15/24 06:36:22.903
  Apr 15 06:36:22.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-269 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 06:36:23.246: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 06:36:23.246: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 06:36:23.246: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 04/15/24 06:36:33.298
  Apr 15 06:36:33.298: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-269 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 06:36:33.654: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 06:36:33.654: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 06:36:33.655: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 06:36:43.742: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 04/15/24 06:36:53.787
  Apr 15 06:36:53.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-269 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 06:36:54.133: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 06:36:54.133: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 06:36:54.133: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 06:37:04.255: INFO: Deleting all statefulset in ns statefulset-269
  Apr 15 06:37:04.263: INFO: Scaling statefulset ss2 to 0
  Apr 15 06:37:14.305: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 06:37:14.310: INFO: Deleting statefulset ss2
  Apr 15 06:37:14.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-269" for this suite. @ 04/15/24 06:37:14.353
• [82.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/15/24 06:37:14.378
  Apr 15 06:37:14.378: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 06:37:14.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:37:14.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:37:14.415
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/15/24 06:37:14.463
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 06:37:14.474
  Apr 15 06:37:14.495: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 06:37:14.495: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  Apr 15 06:37:15.514: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 06:37:15.514: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  Apr 15 06:37:16.526: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 06:37:16.527: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/15/24 06:37:16.537
  Apr 15 06:37:16.609: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 06:37:16.609: INFO: Node thuchow3cah4-2 is running 0 daemon pod, expected 1
  Apr 15 06:37:17.626: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 06:37:17.627: INFO: Node thuchow3cah4-2 is running 0 daemon pod, expected 1
  Apr 15 06:37:18.631: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 06:37:18.631: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/15/24 06:37:18.632
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 06:37:18.646
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2528, will wait for the garbage collector to delete the pods @ 04/15/24 06:37:18.647
  Apr 15 06:37:18.723: INFO: Deleting DaemonSet.extensions daemon-set took: 18.443131ms
  Apr 15 06:37:18.826: INFO: Terminating DaemonSet.extensions daemon-set pods took: 103.26171ms
  Apr 15 06:37:20.240: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 06:37:20.241: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 06:37:20.251: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"151261"},"items":null}

  Apr 15 06:37:20.262: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"151261"},"items":null}

  Apr 15 06:37:20.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2528" for this suite. @ 04/15/24 06:37:20.308
• [5.945 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 04/15/24 06:37:20.324
  Apr 15 06:37:20.324: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename discovery @ 04/15/24 06:37:20.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:37:20.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:37:20.376
  STEP: Setting up server cert @ 04/15/24 06:37:20.394
  STEP: Requesting APIResourceList from "/api/v1" @ 04/15/24 06:37:21.68
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/15/24 06:37:21.684
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/15/24 06:37:21.686
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/15/24 06:37:21.688
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/15/24 06:37:21.69
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/15/24 06:37:21.692
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/15/24 06:37:21.694
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/15/24 06:37:21.696
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/15/24 06:37:21.698
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/15/24 06:37:21.7
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/15/24 06:37:21.704
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/15/24 06:37:21.708
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/15/24 06:37:21.71
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/15/24 06:37:21.712
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/15/24 06:37:21.714
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/15/24 06:37:21.718
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/15/24 06:37:21.722
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/15/24 06:37:21.725
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/15/24 06:37:21.73
  Apr 15 06:37:21.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7007" for this suite. @ 04/15/24 06:37:21.743
• [1.434 seconds]
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 04/15/24 06:37:21.76
  Apr 15 06:37:21.760: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename taint-single-pod @ 04/15/24 06:37:21.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:37:21.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:37:21.802
  Apr 15 06:37:21.807: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 15 06:38:21.850: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 06:38:21.858: INFO: Starting informer...
  STEP: Starting pod... @ 04/15/24 06:38:21.859
  Apr 15 06:38:22.099: INFO: Pod is running on thuchow3cah4-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/15/24 06:38:22.099
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/15/24 06:38:22.145
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/15/24 06:38:22.172
  Apr 15 06:38:22.173: INFO: Pod wasn't evicted. Proceeding
  Apr 15 06:38:22.173: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/15/24 06:38:22.247
  STEP: Waiting some time to make sure that toleration time passed. @ 04/15/24 06:38:22.377
  Apr 15 06:39:37.379: INFO: Pod wasn't evicted. Test successful
  Apr 15 06:39:37.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-380" for this suite. @ 04/15/24 06:39:37.407
• [135.668 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/15/24 06:39:37.44
  Apr 15 06:39:37.441: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pods @ 04/15/24 06:39:37.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:39:37.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:39:37.521
  STEP: creating the pod @ 04/15/24 06:39:37.529
  STEP: submitting the pod to kubernetes @ 04/15/24 06:39:37.53
  STEP: verifying the pod is in kubernetes @ 04/15/24 06:39:39.595
  STEP: updating the pod @ 04/15/24 06:39:39.61
  Apr 15 06:39:40.158: INFO: Successfully updated pod "pod-update-4be7cc2a-d33f-44d8-9685-316b2644926b"
  STEP: verifying the updated pod is in kubernetes @ 04/15/24 06:39:40.178
  Apr 15 06:39:40.185: INFO: Pod update OK
  Apr 15 06:39:40.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1174" for this suite. @ 04/15/24 06:39:40.197
• [2.776 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 04/15/24 06:39:40.231
  Apr 15 06:39:40.231: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename podtemplate @ 04/15/24 06:39:40.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:39:40.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:39:40.271
  STEP: Create a pod template @ 04/15/24 06:39:40.315
  STEP: Replace a pod template @ 04/15/24 06:39:40.326
  Apr 15 06:39:40.343: INFO: Found updated podtemplate annotation: "true"

  Apr 15 06:39:40.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8892" for this suite. @ 04/15/24 06:39:40.353
• [0.135 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 04/15/24 06:39:40.368
  Apr 15 06:39:40.368: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 06:39:40.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:39:40.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:39:40.406
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8746 @ 04/15/24 06:39:40.414
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/15/24 06:39:40.44
  STEP: creating service externalsvc in namespace services-8746 @ 04/15/24 06:39:40.44
  STEP: creating replication controller externalsvc in namespace services-8746 @ 04/15/24 06:39:40.48
  I0415 06:39:40.502057      15 runners.go:197] Created replication controller with name: externalsvc, namespace: services-8746, replica count: 2
  I0415 06:39:43.555871      15 runners.go:197] externalsvc Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0415 06:39:46.557392      15 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/15/24 06:39:46.57
  Apr 15 06:39:46.611: INFO: Creating new exec pod
  Apr 15 06:39:48.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-8746 exec execpodz7csh -- /bin/sh -x -c nslookup clusterip-service.services-8746.svc.cluster.local'
  Apr 15 06:39:49.181: INFO: stderr: "+ nslookup clusterip-service.services-8746.svc.cluster.local\n"
  Apr 15 06:39:49.181: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-8746.svc.cluster.local\tcanonical name = externalsvc.services-8746.svc.cluster.local.\nName:\texternalsvc.services-8746.svc.cluster.local\nAddress: 10.233.55.129\n\n"
  Apr 15 06:39:49.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-8746, will wait for the garbage collector to delete the pods @ 04/15/24 06:39:49.194
  Apr 15 06:39:49.266: INFO: Deleting ReplicationController externalsvc took: 14.016732ms
  Apr 15 06:39:49.368: INFO: Terminating ReplicationController externalsvc pods took: 101.515611ms
  Apr 15 06:39:52.117: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-8746" for this suite. @ 04/15/24 06:39:52.146
• [11.804 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 04/15/24 06:39:52.181
  Apr 15 06:39:52.186: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 06:39:52.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:39:52.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:39:52.25
  STEP: creating service in namespace services-4592 @ 04/15/24 06:39:52.257
  STEP: creating service affinity-nodeport in namespace services-4592 @ 04/15/24 06:39:52.257
  STEP: creating replication controller affinity-nodeport in namespace services-4592 @ 04/15/24 06:39:52.288
  I0415 06:39:52.332037      15 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-4592, replica count: 3
  I0415 06:39:55.385200      15 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 06:39:55.414: INFO: Creating new exec pod
  Apr 15 06:39:58.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-4592 exec execpod-affinityjgd4p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Apr 15 06:39:58.790: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Apr 15 06:39:58.790: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:39:58.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-4592 exec execpod-affinityjgd4p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.12.6 80'
  Apr 15 06:39:59.085: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.12.6 80\nConnection to 10.233.12.6 80 port [tcp/http] succeeded!\n"
  Apr 15 06:39:59.086: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:39:59.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-4592 exec execpod-affinityjgd4p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.227 32168'
  Apr 15 06:39:59.380: INFO: stderr: "+ nc -v -t -w 2 192.168.121.227 32168\n+ echo hostName\nConnection to 192.168.121.227 32168 port [tcp/*] succeeded!\n"
  Apr 15 06:39:59.380: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:39:59.381: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-4592 exec execpod-affinityjgd4p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.252 32168'
  Apr 15 06:39:59.752: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.252 32168\nConnection to 192.168.121.252 32168 port [tcp/*] succeeded!\n"
  Apr 15 06:39:59.753: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:39:59.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-4592 exec execpod-affinityjgd4p -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.227:32168/ ; done'
  Apr 15 06:40:00.348: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:32168/\n"
  Apr 15 06:40:00.348: INFO: stdout: "\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q\naffinity-nodeport-6597q"
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Received response from host: affinity-nodeport-6597q
  Apr 15 06:40:00.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 15 06:40:00.358: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-4592, will wait for the garbage collector to delete the pods @ 04/15/24 06:40:00.394
  Apr 15 06:40:00.469: INFO: Deleting ReplicationController affinity-nodeport took: 15.883463ms
  Apr 15 06:40:00.570: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.80831ms
  STEP: Destroying namespace "services-4592" for this suite. @ 04/15/24 06:40:03.934
• [11.768 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 04/15/24 06:40:03.97
  Apr 15 06:40:03.970: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/15/24 06:40:03.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:40:04.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:40:04.013
  Apr 15 06:40:04.022: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 15 06:41:04.067: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 06:41:04.075: INFO: Starting informer...
  STEP: Starting pods... @ 04/15/24 06:41:04.075
  Apr 15 06:41:04.324: INFO: Pod1 is running on thuchow3cah4-3. Tainting Node
  Apr 15 06:41:06.580: INFO: Pod2 is running on thuchow3cah4-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/15/24 06:41:06.581
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/15/24 06:41:06.635
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/15/24 06:41:06.671
  Apr 15 06:41:12.303: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Apr 15 06:41:32.382: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Apr 15 06:41:32.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/15/24 06:41:32.425
  STEP: Destroying namespace "taint-multiple-pods-5778" for this suite. @ 04/15/24 06:41:32.44
• [88.489 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 04/15/24 06:41:32.46
  Apr 15 06:41:32.461: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 06:41:32.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:41:32.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:41:32.537
  STEP: Creating configMap with name configmap-test-upd-153bae5a-45f9-4efe-99c3-76d992f19d78 @ 04/15/24 06:41:32.557
  STEP: Creating the pod @ 04/15/24 06:41:32.574
  STEP: Updating configmap configmap-test-upd-153bae5a-45f9-4efe-99c3-76d992f19d78 @ 04/15/24 06:41:34.652
  STEP: waiting to observe update in volume @ 04/15/24 06:41:34.663
  Apr 15 06:42:49.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4128" for this suite. @ 04/15/24 06:42:49.534
• [77.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 04/15/24 06:42:49.601
  Apr 15 06:42:49.602: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 06:42:49.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:42:49.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:42:49.653
  STEP: Setting up server cert @ 04/15/24 06:42:49.728
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 06:42:50.719
  STEP: Deploying the webhook pod @ 04/15/24 06:42:50.739
  STEP: Wait for the deployment to be ready @ 04/15/24 06:42:50.77
  Apr 15 06:42:50.812: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/15/24 06:42:52.872
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 06:42:52.902
  Apr 15 06:42:53.903: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/15/24 06:42:54.13
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 06:42:54.218
  STEP: Deleting the collection of validation webhooks @ 04/15/24 06:42:54.289
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 06:42:54.439
  Apr 15 06:42:54.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7400" for this suite. @ 04/15/24 06:42:54.668
  STEP: Destroying namespace "webhook-markers-7061" for this suite. @ 04/15/24 06:42:54.682
• [5.105 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 04/15/24 06:42:54.713
  Apr 15 06:42:54.714: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 06:42:54.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:42:54.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:42:54.767
  STEP: creating service in namespace services-9457 @ 04/15/24 06:42:54.776
  STEP: creating service affinity-nodeport-transition in namespace services-9457 @ 04/15/24 06:42:54.777
  STEP: creating replication controller affinity-nodeport-transition in namespace services-9457 @ 04/15/24 06:42:54.814
  I0415 06:42:54.836327      15 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-9457, replica count: 3
  I0415 06:42:57.890232      15 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 06:42:57.910: INFO: Creating new exec pod
  Apr 15 06:43:00.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-9457 exec execpod-affinity2n748 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Apr 15 06:43:01.331: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Apr 15 06:43:01.331: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:43:01.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-9457 exec execpod-affinity2n748 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.86 80'
  Apr 15 06:43:01.624: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.44.86 80\nConnection to 10.233.44.86 80 port [tcp/http] succeeded!\n"
  Apr 15 06:43:01.624: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:43:01.625: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-9457 exec execpod-affinity2n748 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.227 31105'
  Apr 15 06:43:01.842: INFO: stderr: "+ nc -v -t -w 2 192.168.121.227 31105\n+ echo hostName\nConnection to 192.168.121.227 31105 port [tcp/*] succeeded!\n"
  Apr 15 06:43:01.842: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:43:01.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-9457 exec execpod-affinity2n748 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.252 31105'
  Apr 15 06:43:02.117: INFO: stderr: "+ + echonc -v -t hostName -w\n 2 192.168.121.252 31105\nConnection to 192.168.121.252 31105 port [tcp/*] succeeded!\n"
  Apr 15 06:43:02.117: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:43:02.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-9457 exec execpod-affinity2n748 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.227:31105/ ; done'
  Apr 15 06:43:02.645: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n"
  Apr 15 06:43:02.646: INFO: stdout: "\naffinity-nodeport-transition-f6k4p\naffinity-nodeport-transition-f6k4p\naffinity-nodeport-transition-f6k4p\naffinity-nodeport-transition-f6k4p\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-f6k4p\naffinity-nodeport-transition-f6k4p\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-f6k4p\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-f6k4p\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-f6k4p\naffinity-nodeport-transition-dw8mp\naffinity-nodeport-transition-t65d7"
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-f6k4p
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-f6k4p
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-f6k4p
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-f6k4p
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-f6k4p
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-f6k4p
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-f6k4p
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-f6k4p
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-f6k4p
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-dw8mp
  Apr 15 06:43:02.646: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:02.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-9457 exec execpod-affinity2n748 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.227:31105/ ; done'
  Apr 15 06:43:03.158: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.227:31105/\n"
  Apr 15 06:43:03.158: INFO: stdout: "\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7\naffinity-nodeport-transition-t65d7"
  Apr 15 06:43:03.158: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.158: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.159: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.159: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.159: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.159: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.159: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.159: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.159: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.159: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.160: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.160: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.160: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.160: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.160: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.160: INFO: Received response from host: affinity-nodeport-transition-t65d7
  Apr 15 06:43:03.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 15 06:43:03.172: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-9457, will wait for the garbage collector to delete the pods @ 04/15/24 06:43:03.194
  Apr 15 06:43:03.263: INFO: Deleting ReplicationController affinity-nodeport-transition took: 12.149608ms
  Apr 15 06:43:03.463: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 200.679033ms
  STEP: Destroying namespace "services-9457" for this suite. @ 04/15/24 06:43:06.935
• [12.238 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 04/15/24 06:43:06.954
  Apr 15 06:43:06.954: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 06:43:06.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:43:07.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:43:07.03
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 06:43:07.039
  STEP: Saw pod success @ 04/15/24 06:43:11.112
  Apr 15 06:43:11.129: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-df0953f2-b9ad-415e-9a73-ef3011933497 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 06:43:11.15
  Apr 15 06:43:11.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1850" for this suite. @ 04/15/24 06:43:11.199
• [4.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 04/15/24 06:43:11.233
  Apr 15 06:43:11.234: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 06:43:11.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:43:11.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:43:11.293
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/15/24 06:43:11.299
  Apr 15 06:43:11.330: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 15 06:43:16.343: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 06:43:16.343
  STEP: getting scale subresource @ 04/15/24 06:43:16.344
  STEP: updating a scale subresource @ 04/15/24 06:43:16.354
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/15/24 06:43:16.37
  STEP: Patch a scale subresource @ 04/15/24 06:43:16.379
  Apr 15 06:43:16.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3444" for this suite. @ 04/15/24 06:43:16.477
• [5.265 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 04/15/24 06:43:16.501
  Apr 15 06:43:16.501: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 06:43:16.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:43:16.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:43:16.582
  STEP: Setting up server cert @ 04/15/24 06:43:16.662
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 06:43:17.728
  STEP: Deploying the webhook pod @ 04/15/24 06:43:17.739
  STEP: Wait for the deployment to be ready @ 04/15/24 06:43:17.771
  Apr 15 06:43:17.801: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/15/24 06:43:19.826
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 06:43:19.849
  Apr 15 06:43:20.850: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/15/24 06:43:20.864
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/15/24 06:43:20.864
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/15/24 06:43:20.902
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/15/24 06:43:21.937
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/15/24 06:43:21.937
  STEP: Having no error when timeout is longer than webhook latency @ 04/15/24 06:43:22.998
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/15/24 06:43:22.998
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/15/24 06:43:28.073
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/15/24 06:43:28.074
  Apr 15 06:43:33.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3259" for this suite. @ 04/15/24 06:43:33.336
  STEP: Destroying namespace "webhook-markers-1324" for this suite. @ 04/15/24 06:43:33.367
• [16.880 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 04/15/24 06:43:33.397
  Apr 15 06:43:33.397: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 06:43:33.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:43:33.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:43:33.438
  STEP: Creating configMap with name configmap-test-volume-map-bd6979b9-d86a-4ef2-97d0-18d38b36bb00 @ 04/15/24 06:43:33.443
  STEP: Creating a pod to test consume configMaps @ 04/15/24 06:43:33.457
  STEP: Saw pod success @ 04/15/24 06:43:37.51
  Apr 15 06:43:37.523: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-configmaps-90b2b964-6fb3-4a44-a3d9-ffd6a7f46854 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 06:43:37.549
  Apr 15 06:43:37.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5886" for this suite. @ 04/15/24 06:43:37.617
• [4.248 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 04/15/24 06:43:37.65
  Apr 15 06:43:37.651: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 06:43:37.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:43:37.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:43:37.71
  STEP: creating service multi-endpoint-test in namespace services-5861 @ 04/15/24 06:43:37.717
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5861 to expose endpoints map[] @ 04/15/24 06:43:37.742
  Apr 15 06:43:37.758: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Apr 15 06:43:38.780: INFO: successfully validated that service multi-endpoint-test in namespace services-5861 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5861 @ 04/15/24 06:43:38.782
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5861 to expose endpoints map[pod1:[100]] @ 04/15/24 06:43:40.84
  Apr 15 06:43:40.886: INFO: successfully validated that service multi-endpoint-test in namespace services-5861 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5861 @ 04/15/24 06:43:40.887
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5861 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/15/24 06:43:42.937
  Apr 15 06:43:42.969: INFO: successfully validated that service multi-endpoint-test in namespace services-5861 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/15/24 06:43:42.969
  Apr 15 06:43:42.970: INFO: Creating new exec pod
  Apr 15 06:43:46.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-5861 exec execpod4btjx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Apr 15 06:43:46.450: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Apr 15 06:43:46.451: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:43:46.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-5861 exec execpod4btjx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.12.185 80'
  Apr 15 06:43:46.744: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.12.185 80\nConnection to 10.233.12.185 80 port [tcp/http] succeeded!\n"
  Apr 15 06:43:46.744: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:43:46.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-5861 exec execpod4btjx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Apr 15 06:43:47.069: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Apr 15 06:43:47.069: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:43:47.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-5861 exec execpod4btjx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.12.185 81'
  Apr 15 06:43:47.364: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.12.185 81\nConnection to 10.233.12.185 81 port [tcp/*] succeeded!\n"
  Apr 15 06:43:47.364: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5861 @ 04/15/24 06:43:47.365
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5861 to expose endpoints map[pod2:[101]] @ 04/15/24 06:43:47.443
  Apr 15 06:43:48.503: INFO: successfully validated that service multi-endpoint-test in namespace services-5861 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5861 @ 04/15/24 06:43:48.503
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5861 to expose endpoints map[] @ 04/15/24 06:43:48.538
  Apr 15 06:43:48.586: INFO: successfully validated that service multi-endpoint-test in namespace services-5861 exposes endpoints map[]
  Apr 15 06:43:48.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5861" for this suite. @ 04/15/24 06:43:48.668
• [11.034 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 04/15/24 06:43:48.689
  Apr 15 06:43:48.689: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename gc @ 04/15/24 06:43:48.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:43:48.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:43:48.73
  STEP: create the rc @ 04/15/24 06:43:48.735
  W0415 06:43:48.751581      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/15/24 06:43:53.77
  STEP: wait for all pods to be garbage collected @ 04/15/24 06:43:53.802
  STEP: Gathering metrics @ 04/15/24 06:43:58.822
  Apr 15 06:43:59.083: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 06:43:59.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-284" for this suite. @ 04/15/24 06:43:59.095
• [10.422 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 04/15/24 06:43:59.116
  Apr 15 06:43:59.116: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 06:43:59.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:43:59.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:43:59.162
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/15/24 06:43:59.168
  Apr 15 06:43:59.170: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 06:44:01.705: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 06:44:09.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6405" for this suite. @ 04/15/24 06:44:09.24
• [10.136 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 04/15/24 06:44:09.256
  Apr 15 06:44:09.256: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 06:44:09.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:44:09.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:44:09.293
  STEP: apply creating a deployment @ 04/15/24 06:44:09.298
  Apr 15 06:44:09.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5743" for this suite. @ 04/15/24 06:44:09.335
• [0.094 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 04/15/24 06:44:09.352
  Apr 15 06:44:09.352: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 06:44:09.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:44:09.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:44:09.396
  STEP: Read namespace status @ 04/15/24 06:44:09.401
  Apr 15 06:44:09.415: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/15/24 06:44:09.415
  Apr 15 06:44:09.426: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/15/24 06:44:09.427
  Apr 15 06:44:09.455: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Apr 15 06:44:09.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5638" for this suite. @ 04/15/24 06:44:09.47
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 04/15/24 06:44:09.49
  Apr 15 06:44:09.490: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 06:44:09.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:44:09.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:44:09.525
  STEP: starting the proxy server @ 04/15/24 06:44:09.535
  Apr 15 06:44:09.536: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-3993 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/15/24 06:44:09.68
  Apr 15 06:44:09.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3993" for this suite. @ 04/15/24 06:44:09.711
• [0.234 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 04/15/24 06:44:09.724
  Apr 15 06:44:09.724: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 06:44:09.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:44:09.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:44:09.758
  STEP: creating an Endpoint @ 04/15/24 06:44:09.769
  STEP: waiting for available Endpoint @ 04/15/24 06:44:09.778
  STEP: listing all Endpoints @ 04/15/24 06:44:09.78
  STEP: updating the Endpoint @ 04/15/24 06:44:09.787
  STEP: fetching the Endpoint @ 04/15/24 06:44:09.798
  STEP: patching the Endpoint @ 04/15/24 06:44:09.805
  STEP: fetching the Endpoint @ 04/15/24 06:44:09.822
  STEP: deleting the Endpoint by Collection @ 04/15/24 06:44:09.827
  STEP: waiting for Endpoint deletion @ 04/15/24 06:44:09.851
  STEP: fetching the Endpoint @ 04/15/24 06:44:09.857
  Apr 15 06:44:09.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3435" for this suite. @ 04/15/24 06:44:09.879
• [0.168 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/15/24 06:44:09.893
  Apr 15 06:44:09.893: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename secrets @ 04/15/24 06:44:09.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:44:09.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:44:09.927
  STEP: Creating secret with name secret-test-map-40cf52c9-0c9a-4ebd-908f-3af606bc0f19 @ 04/15/24 06:44:09.933
  STEP: Creating a pod to test consume secrets @ 04/15/24 06:44:09.943
  STEP: Saw pod success @ 04/15/24 06:44:13.985
  Apr 15 06:44:13.991: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-secrets-f34d933d-a789-42f5-b1b5-cf7a3fef381f container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 06:44:14.006
  Apr 15 06:44:14.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7649" for this suite. @ 04/15/24 06:44:14.047
• [4.171 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 04/15/24 06:44:14.067
  Apr 15 06:44:14.067: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename endpointslice @ 04/15/24 06:44:14.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:44:14.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:44:14.099
  STEP: getting /apis @ 04/15/24 06:44:14.107
  STEP: getting /apis/discovery.k8s.io @ 04/15/24 06:44:14.123
  STEP: getting /apis/discovery.k8s.iov1 @ 04/15/24 06:44:14.126
  STEP: creating @ 04/15/24 06:44:14.13
  STEP: getting @ 04/15/24 06:44:14.171
  STEP: listing @ 04/15/24 06:44:14.176
  STEP: watching @ 04/15/24 06:44:14.184
  Apr 15 06:44:14.185: INFO: starting watch
  STEP: cluster-wide listing @ 04/15/24 06:44:14.188
  STEP: cluster-wide watching @ 04/15/24 06:44:14.198
  Apr 15 06:44:14.198: INFO: starting watch
  STEP: patching @ 04/15/24 06:44:14.199
  STEP: updating @ 04/15/24 06:44:14.21
  Apr 15 06:44:14.230: INFO: waiting for watch events with expected annotations
  Apr 15 06:44:14.230: INFO: saw patched and updated annotations
  STEP: deleting @ 04/15/24 06:44:14.23
  STEP: deleting a collection @ 04/15/24 06:44:14.268
  Apr 15 06:44:14.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9807" for this suite. @ 04/15/24 06:44:14.319
• [0.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 04/15/24 06:44:14.334
  Apr 15 06:44:14.334: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 06:44:14.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:44:14.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:44:14.378
  Apr 15 06:44:14.442: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 15 06:44:19.453: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 06:44:19.454
  STEP: Scaling up "test-rs" replicaset  @ 04/15/24 06:44:19.454
  Apr 15 06:44:19.482: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/15/24 06:44:19.482
  Apr 15 06:44:19.549: INFO: observed ReplicaSet test-rs in namespace replicaset-2876 with ReadyReplicas 1, AvailableReplicas 1
  Apr 15 06:44:19.661: INFO: observed ReplicaSet test-rs in namespace replicaset-2876 with ReadyReplicas 1, AvailableReplicas 1
  Apr 15 06:44:19.766: INFO: observed ReplicaSet test-rs in namespace replicaset-2876 with ReadyReplicas 1, AvailableReplicas 1
  Apr 15 06:44:19.852: INFO: observed ReplicaSet test-rs in namespace replicaset-2876 with ReadyReplicas 1, AvailableReplicas 1
  Apr 15 06:44:21.072: INFO: observed ReplicaSet test-rs in namespace replicaset-2876 with ReadyReplicas 2, AvailableReplicas 2
  Apr 15 06:44:21.126: INFO: observed Replicaset test-rs in namespace replicaset-2876 with ReadyReplicas 3 found true
  Apr 15 06:44:21.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2876" for this suite. @ 04/15/24 06:44:21.145
• [6.824 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 04/15/24 06:44:21.166
  Apr 15 06:44:21.166: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 06:44:21.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:44:21.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:44:21.212
  STEP: Creating configMap configmap-6889/configmap-test-32b80bd1-93b4-4e50-b273-226d3f66a46b @ 04/15/24 06:44:21.221
  STEP: Creating a pod to test consume configMaps @ 04/15/24 06:44:21.232
  STEP: Saw pod success @ 04/15/24 06:44:25.284
  Apr 15 06:44:25.292: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-configmaps-0477be52-4c68-41ce-b369-fd426ae8985e container env-test: <nil>
  STEP: delete the pod @ 04/15/24 06:44:25.312
  Apr 15 06:44:25.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6889" for this suite. @ 04/15/24 06:44:25.354
• [4.209 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 04/15/24 06:44:25.378
  Apr 15 06:44:25.378: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename dns @ 04/15/24 06:44:25.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:44:25.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:44:25.434
  STEP: Creating a test headless service @ 04/15/24 06:44:25.442
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4007.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4007.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4007.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4007.svc.cluster.local;sleep 1; done
   @ 04/15/24 06:44:25.455
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4007.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4007.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4007.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4007.svc.cluster.local;sleep 1; done
   @ 04/15/24 06:44:25.455
  STEP: creating a pod to probe DNS @ 04/15/24 06:44:25.455
  STEP: submitting the pod to kubernetes @ 04/15/24 06:44:25.456
  STEP: retrieving the pod @ 04/15/24 06:44:27.53
  STEP: looking for the results for each expected name from probers @ 04/15/24 06:44:27.539
  Apr 15 06:44:27.553: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local from pod dns-4007/dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1: the server could not find the requested resource (get pods dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1)
  Apr 15 06:44:27.562: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local from pod dns-4007/dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1: the server could not find the requested resource (get pods dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1)
  Apr 15 06:44:27.571: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4007.svc.cluster.local from pod dns-4007/dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1: the server could not find the requested resource (get pods dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1)
  Apr 15 06:44:27.581: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4007.svc.cluster.local from pod dns-4007/dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1: the server could not find the requested resource (get pods dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1)
  Apr 15 06:44:27.588: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local from pod dns-4007/dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1: the server could not find the requested resource (get pods dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1)
  Apr 15 06:44:27.597: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local from pod dns-4007/dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1: the server could not find the requested resource (get pods dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1)
  Apr 15 06:44:27.610: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4007.svc.cluster.local from pod dns-4007/dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1: the server could not find the requested resource (get pods dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1)
  Apr 15 06:44:27.618: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4007.svc.cluster.local from pod dns-4007/dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1: the server could not find the requested resource (get pods dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1)
  Apr 15 06:44:27.618: INFO: Lookups using dns-4007/dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4007.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4007.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4007.svc.cluster.local jessie_udp@dns-test-service-2.dns-4007.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4007.svc.cluster.local]

  Apr 15 06:44:27.633: INFO: Pod client logs for webserver: 
  Apr 15 06:44:27.669: INFO: Pod client logs for querier: 
  Apr 15 06:44:27.692: INFO: Pod client logs for jessie-querier: 
  Apr 15 06:44:32.766: INFO: DNS probes using dns-4007/dns-test-e28a6e07-e787-4e96-b70f-afa22235c2a1 succeeded

  Apr 15 06:44:32.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/15/24 06:44:32.78
  STEP: deleting the test headless service @ 04/15/24 06:44:32.823
  STEP: Destroying namespace "dns-4007" for this suite. @ 04/15/24 06:44:32.915
• [7.569 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/15/24 06:44:32.954
  Apr 15 06:44:32.954: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename deployment @ 04/15/24 06:44:32.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:44:33.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:44:33.023
  Apr 15 06:44:33.027: INFO: Creating simple deployment test-new-deployment
  Apr 15 06:44:33.060: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 04/15/24 06:44:35.093
  STEP: updating a scale subresource @ 04/15/24 06:44:35.1
  STEP: verifying the deployment Spec.Replicas was modified @ 04/15/24 06:44:35.115
  STEP: Patch a scale subresource @ 04/15/24 06:44:35.126
  Apr 15 06:44:35.199: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-168",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ec5cfb0-0f5c-4754-8076-4f2420596d59",
      ResourceVersion: (string) (len=6) "153294",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 06:44:35.236: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-168",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c88820fa-e7f4-4b25-a961-8c91f153cee3",
      ResourceVersion: (string) (len=6) "153298",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "7ec5cfb0-0f5c-4754-8076-4f2420596d59",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 65 63 35 63 66  62 30 2d 30 66 35 63 2d  |\"7ec5cfb0-0f5c-|
              00000120  34 37 35 34 2d 38 30 37  36 2d 34 66 32 34 32 30  |4754-8076-4f2420|
              00000130  35 39 36 64 35 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |596d59\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 06:44:35.270: INFO: Pod "test-new-deployment-557759b7c7-46vlt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-46vlt",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-168",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a0e090a-2142-4f95-9846-439f1b595034",
      ResourceVersion: (string) (len=6) "153301",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c88820fa-e7f4-4b25-a961-8c91f153cee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  38 38 32 30 66 61 2d 65  |d\":\"c88820fa-e|
              00000090  37 66 34 2d 34 62 32 35  2d 61 39 36 31 2d 38 63  |7f4-4b25-a961-8c|
              000000a0  39 31 66 31 35 33 63 65  65 33 5c 22 7d 22 3a 7b  |91f153cee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tn567",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tn567",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.227",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:44:35.296: INFO: Pod "test-new-deployment-557759b7c7-mhgmb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-mhgmb",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=14) "deployment-168",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4abf02f-a0ec-44cf-a248-77c830fc45a7",
      ResourceVersion: (string) (len=6) "153287",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c88820fa-e7f4-4b25-a961-8c91f153cee3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 38  38 38 32 30 66 61 2d 65  |d\":\"c88820fa-e|
              00000090  37 66 34 2d 34 62 32 35  2d 61 39 36 31 2d 38 63  |7f4-4b25-a961-8c|
              000000a0  39 31 66 31 35 33 63 65  65 33 5c 22 7d 22 3a 7b  |91f153cee3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 32 35 5c 22 7d 22  |10.233.66.25\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w2tc8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w2tc8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760274,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.252",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760273,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848760273,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://345e7bc37de8cbbe1ca5b30d118100a3601c9cfd2ab14c19e3cda4420141569a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:44:35.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-168" for this suite. @ 04/15/24 06:44:35.337
• [2.432 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 04/15/24 06:44:35.4
  Apr 15 06:44:35.400: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 06:44:35.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:44:35.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:44:35.478
  STEP: Creating a pod to test downward api env vars @ 04/15/24 06:44:35.483
  STEP: Saw pod success @ 04/15/24 06:44:39.535
  Apr 15 06:44:39.542: INFO: Trying to get logs from node thuchow3cah4-3 pod downward-api-b47b9490-e21f-447b-b57d-0141229e9c05 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 06:44:39.558
  Apr 15 06:44:39.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9651" for this suite. @ 04/15/24 06:44:39.613
• [4.228 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 04/15/24 06:44:39.631
  Apr 15 06:44:39.631: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename events @ 04/15/24 06:44:39.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:44:39.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:44:39.703
  STEP: Create set of events @ 04/15/24 06:44:39.708
  Apr 15 06:44:39.716: INFO: created test-event-1
  Apr 15 06:44:39.725: INFO: created test-event-2
  Apr 15 06:44:39.735: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/15/24 06:44:39.735
  STEP: delete collection of events @ 04/15/24 06:44:39.743
  Apr 15 06:44:39.743: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/15/24 06:44:39.794
  Apr 15 06:44:39.794: INFO: requesting list of events to confirm quantity
  Apr 15 06:44:39.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1170" for this suite. @ 04/15/24 06:44:39.821
• [0.211 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 04/15/24 06:44:39.846
  Apr 15 06:44:39.847: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 06:44:39.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:44:39.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:44:39.894
  STEP: Creating pod liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f in namespace container-probe-4498 @ 04/15/24 06:44:39.899
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 06:44:41.938
  Apr 15 06:44:41.944: INFO: Initial restart count of pod liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f is 0
  Apr 15 06:44:41.951: INFO: Get pod liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f in namespace container-probe-4498
  Apr 15 06:44:43.960: INFO: Get pod liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f in namespace container-probe-4498
  Apr 15 06:44:45.969: INFO: Get pod liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f in namespace container-probe-4498
  Apr 15 06:44:47.979: INFO: Get pod liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f in namespace container-probe-4498
  Apr 15 06:44:49.984: INFO: Get pod liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f in namespace container-probe-4498
  Apr 15 06:44:51.992: INFO: Get pod liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f in namespace container-probe-4498
  Apr 15 06:44:53.998: INFO: Get pod liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f in namespace container-probe-4498
  Apr 15 06:44:56.011: INFO: Get pod liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f in namespace container-probe-4498
  Apr 15 06:44:58.018: INFO: Get pod liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f in namespace container-probe-4498
  Apr 15 06:45:00.025: INFO: Get pod liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f in namespace container-probe-4498
  Apr 15 06:45:02.034: INFO: Get pod liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f in namespace container-probe-4498
  Apr 15 06:45:02.035: INFO: Restart count of pod container-probe-4498/liveness-b42fabdc-da67-4ed3-97ce-12cda5b2292f is now 1 (20.089853821s elapsed)
  Apr 15 06:45:02.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/15/24 06:45:02.045
  STEP: Destroying namespace "container-probe-4498" for this suite. @ 04/15/24 06:45:02.079
• [22.255 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 04/15/24 06:45:02.106
  Apr 15 06:45:02.106: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename security-context @ 04/15/24 06:45:02.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:45:02.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:45:02.169
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/15/24 06:45:02.179
  STEP: Saw pod success @ 04/15/24 06:45:06.23
  Apr 15 06:45:06.237: INFO: Trying to get logs from node thuchow3cah4-3 pod security-context-e5623b86-0a9f-40ec-931a-6f30c3e05fc3 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 06:45:06.256
  Apr 15 06:45:06.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1260" for this suite. @ 04/15/24 06:45:06.307
• [4.224 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/15/24 06:45:06.332
  Apr 15 06:45:06.332: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/15/24 06:45:06.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:45:06.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:45:06.386
  STEP: Creating two CSIDrivers @ 04/15/24 06:45:06.393
  STEP: Getting "inline-driver-e2f7116b-58c1-41c8-94bc-d913ffe23b56" & "inline-driver-5bcf61ec-0a4d-4bf0-9e3e-f705767e0c9f" @ 04/15/24 06:45:06.438
  STEP: Patching the CSIDriver "inline-driver-5bcf61ec-0a4d-4bf0-9e3e-f705767e0c9f" @ 04/15/24 06:45:06.452
  STEP: Updating the CSIDriver "inline-driver-5bcf61ec-0a4d-4bf0-9e3e-f705767e0c9f" @ 04/15/24 06:45:06.471
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-8091" @ 04/15/24 06:45:06.501
  STEP: Deleting CSIDriver "inline-driver-e2f7116b-58c1-41c8-94bc-d913ffe23b56" @ 04/15/24 06:45:06.51
  STEP: Confirm deletion of CSIDriver "inline-driver-e2f7116b-58c1-41c8-94bc-d913ffe23b56" @ 04/15/24 06:45:06.527
  STEP: Deleting CSIDriver "inline-driver-5bcf61ec-0a4d-4bf0-9e3e-f705767e0c9f" via DeleteCollection @ 04/15/24 06:45:06.545
  STEP: Confirm deletion of CSIDriver "inline-driver-5bcf61ec-0a4d-4bf0-9e3e-f705767e0c9f" @ 04/15/24 06:45:06.57
  Apr 15 06:45:06.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8091" for this suite. @ 04/15/24 06:45:06.599
• [0.290 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/15/24 06:45:06.624
  Apr 15 06:45:06.624: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 06:45:06.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:45:06.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:45:06.69
  STEP: Creating secret with name projected-secret-test-4a0f2082-f606-4d30-88f4-49ef0406f02c @ 04/15/24 06:45:06.696
  STEP: Creating a pod to test consume secrets @ 04/15/24 06:45:06.706
  STEP: Saw pod success @ 04/15/24 06:45:10.752
  Apr 15 06:45:10.759: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-projected-secrets-c18fe08f-a03d-4405-99be-3b782c778f39 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 06:45:10.779
  Apr 15 06:45:10.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1775" for this suite. @ 04/15/24 06:45:10.839
• [4.232 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 04/15/24 06:45:10.86
  Apr 15 06:45:10.860: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename lease-test @ 04/15/24 06:45:10.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:45:10.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:45:10.909
  Apr 15 06:45:11.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8417" for this suite. @ 04/15/24 06:45:11.075
• [0.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 04/15/24 06:45:11.099
  Apr 15 06:45:11.099: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 06:45:11.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:45:11.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:45:11.15
  STEP: creating the pod with failed condition @ 04/15/24 06:45:11.157
  STEP: updating the pod @ 04/15/24 06:47:11.183
  Apr 15 06:47:11.714: INFO: Successfully updated pod "var-expansion-da19def4-953f-4a0a-ac54-6d2c2d5f6b69"
  STEP: waiting for pod running @ 04/15/24 06:47:11.714
  STEP: deleting the pod gracefully @ 04/15/24 06:47:13.738
  Apr 15 06:47:13.738: INFO: Deleting pod "var-expansion-da19def4-953f-4a0a-ac54-6d2c2d5f6b69" in namespace "var-expansion-1112"
  Apr 15 06:47:13.760: INFO: Wait up to 5m0s for pod "var-expansion-da19def4-953f-4a0a-ac54-6d2c2d5f6b69" to be fully deleted
  Apr 15 06:47:45.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1112" for this suite. @ 04/15/24 06:47:45.964
• [154.882 seconds]
------------------------------
SSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 04/15/24 06:47:45.983
  Apr 15 06:47:45.983: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename ingressclass @ 04/15/24 06:47:45.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:47:46.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:47:46.031
  STEP: getting /apis @ 04/15/24 06:47:46.037
  STEP: getting /apis/networking.k8s.io @ 04/15/24 06:47:46.047
  STEP: getting /apis/networking.k8s.iov1 @ 04/15/24 06:47:46.049
  STEP: creating @ 04/15/24 06:47:46.052
  STEP: getting @ 04/15/24 06:47:46.082
  STEP: listing @ 04/15/24 06:47:46.088
  STEP: watching @ 04/15/24 06:47:46.096
  Apr 15 06:47:46.097: INFO: starting watch
  STEP: patching @ 04/15/24 06:47:46.101
  STEP: updating @ 04/15/24 06:47:46.114
  Apr 15 06:47:46.124: INFO: waiting for watch events with expected annotations
  Apr 15 06:47:46.124: INFO: saw patched and updated annotations
  STEP: deleting @ 04/15/24 06:47:46.124
  STEP: deleting a collection @ 04/15/24 06:47:46.146
  Apr 15 06:47:46.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5441" for this suite. @ 04/15/24 06:47:46.183
• [0.211 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 04/15/24 06:47:46.195
  Apr 15 06:47:46.195: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 06:47:46.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:47:46.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:47:46.241
  Apr 15 06:47:46.248: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/15/24 06:47:47.28
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/15/24 06:47:47.292
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/15/24 06:47:48.305
  Apr 15 06:47:48.326: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/15/24 06:47:48.326
  Apr 15 06:47:49.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-183" for this suite. @ 04/15/24 06:47:49.371
• [3.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 04/15/24 06:47:49.407
  Apr 15 06:47:49.407: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 06:47:49.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:47:49.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:47:49.515
  STEP: creating service in namespace services-7204 @ 04/15/24 06:47:49.533
  STEP: creating service affinity-clusterip-transition in namespace services-7204 @ 04/15/24 06:47:49.533
  STEP: creating replication controller affinity-clusterip-transition in namespace services-7204 @ 04/15/24 06:47:49.571
  I0415 06:47:49.587572      15 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-7204, replica count: 3
  I0415 06:47:52.640878      15 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 06:47:52.655: INFO: Creating new exec pod
  Apr 15 06:47:55.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7204 exec execpod-affinityqrg56 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Apr 15 06:47:56.115: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Apr 15 06:47:56.115: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:47:56.116: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7204 exec execpod-affinityqrg56 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.55.79 80'
  Apr 15 06:47:56.435: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.55.79 80\nConnection to 10.233.55.79 80 port [tcp/http] succeeded!\n"
  Apr 15 06:47:56.435: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:47:56.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7204 exec execpod-affinityqrg56 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.55.79:80/ ; done'
  Apr 15 06:47:56.986: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n"
  Apr 15 06:47:56.986: INFO: stdout: "\naffinity-clusterip-transition-f6bn9\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-7t9tq\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-7t9tq\naffinity-clusterip-transition-7t9tq\naffinity-clusterip-transition-f6bn9\naffinity-clusterip-transition-f6bn9\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-f6bn9\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-7t9tq\naffinity-clusterip-transition-7t9tq\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-f6bn9"
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-f6bn9
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-7t9tq
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-7t9tq
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-7t9tq
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-f6bn9
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-f6bn9
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-f6bn9
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-7t9tq
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-7t9tq
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:56.986: INFO: Received response from host: affinity-clusterip-transition-f6bn9
  Apr 15 06:47:57.005: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7204 exec execpod-affinityqrg56 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.55.79:80/ ; done'
  Apr 15 06:47:57.519: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.55.79:80/\n"
  Apr 15 06:47:57.519: INFO: stdout: "\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj\naffinity-clusterip-transition-lslnj"
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.519: INFO: Received response from host: affinity-clusterip-transition-lslnj
  Apr 15 06:47:57.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 15 06:47:57.532: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7204, will wait for the garbage collector to delete the pods @ 04/15/24 06:47:57.564
  Apr 15 06:47:57.638: INFO: Deleting ReplicationController affinity-clusterip-transition took: 15.581815ms
  Apr 15 06:47:57.739: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.858591ms
  STEP: Destroying namespace "services-7204" for this suite. @ 04/15/24 06:48:00.588
• [11.206 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 04/15/24 06:48:00.62
  Apr 15 06:48:00.620: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 06:48:00.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:48:00.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:48:00.665
  STEP: Setting up server cert @ 04/15/24 06:48:00.706
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 06:48:01.954
  STEP: Deploying the webhook pod @ 04/15/24 06:48:01.97
  STEP: Wait for the deployment to be ready @ 04/15/24 06:48:01.991
  Apr 15 06:48:02.005: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/15/24 06:48:04.028
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 06:48:04.06
  Apr 15 06:48:05.060: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/15/24 06:48:05.074
  STEP: create a pod that should be denied by the webhook @ 04/15/24 06:48:05.119
  STEP: create a pod that causes the webhook to hang @ 04/15/24 06:48:05.156
  STEP: create a configmap that should be denied by the webhook @ 04/15/24 06:48:15.172
  STEP: create a configmap that should be admitted by the webhook @ 04/15/24 06:48:15.259
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/15/24 06:48:15.284
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/15/24 06:48:15.311
  STEP: create a namespace that bypass the webhook @ 04/15/24 06:48:15.326
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/15/24 06:48:15.422
  Apr 15 06:48:15.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9256" for this suite. @ 04/15/24 06:48:15.771
  STEP: Destroying namespace "webhook-markers-3153" for this suite. @ 04/15/24 06:48:15.795
  STEP: Destroying namespace "exempted-namespace-7613" for this suite. @ 04/15/24 06:48:15.858
• [15.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/15/24 06:48:15.897
  Apr 15 06:48:15.898: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename proxy @ 04/15/24 06:48:15.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:48:15.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:48:15.946
  Apr 15 06:48:15.956: INFO: Creating pod...
  Apr 15 06:48:18.004: INFO: Creating service...
  Apr 15 06:48:18.031: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/pods/agnhost/proxy/some/path/with/DELETE
  Apr 15 06:48:18.055: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 15 06:48:18.056: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/pods/agnhost/proxy/some/path/with/GET
  Apr 15 06:48:18.075: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 15 06:48:18.076: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/pods/agnhost/proxy/some/path/with/HEAD
  Apr 15 06:48:18.090: INFO: http.Client request:HEAD | StatusCode:200
  Apr 15 06:48:18.090: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/pods/agnhost/proxy/some/path/with/OPTIONS
  Apr 15 06:48:18.107: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 15 06:48:18.107: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/pods/agnhost/proxy/some/path/with/PATCH
  Apr 15 06:48:18.126: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 15 06:48:18.127: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/pods/agnhost/proxy/some/path/with/POST
  Apr 15 06:48:18.143: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 15 06:48:18.143: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/pods/agnhost/proxy/some/path/with/PUT
  Apr 15 06:48:18.157: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 15 06:48:18.158: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/services/test-service/proxy/some/path/with/DELETE
  Apr 15 06:48:18.172: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 15 06:48:18.173: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/services/test-service/proxy/some/path/with/GET
  Apr 15 06:48:18.191: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 15 06:48:18.191: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/services/test-service/proxy/some/path/with/HEAD
  Apr 15 06:48:18.215: INFO: http.Client request:HEAD | StatusCode:200
  Apr 15 06:48:18.215: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/services/test-service/proxy/some/path/with/OPTIONS
  Apr 15 06:48:18.224: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 15 06:48:18.225: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/services/test-service/proxy/some/path/with/PATCH
  Apr 15 06:48:18.238: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 15 06:48:18.238: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/services/test-service/proxy/some/path/with/POST
  Apr 15 06:48:18.251: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 15 06:48:18.251: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4809/services/test-service/proxy/some/path/with/PUT
  Apr 15 06:48:18.265: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 15 06:48:18.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4809" for this suite. @ 04/15/24 06:48:18.287
• [2.406 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 04/15/24 06:48:18.304
  Apr 15 06:48:18.304: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 06:48:18.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:48:18.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:48:18.391
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-6ef0aad6-e516-4144-8e0a-6045d3911ac6 @ 04/15/24 06:48:18.432
  STEP: Creating the pod @ 04/15/24 06:48:18.447
  STEP: Updating configmap projected-configmap-test-upd-6ef0aad6-e516-4144-8e0a-6045d3911ac6 @ 04/15/24 06:48:20.584
  STEP: waiting to observe update in volume @ 04/15/24 06:48:20.599
  Apr 15 06:48:22.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8784" for this suite. @ 04/15/24 06:48:22.653
• [4.363 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 04/15/24 06:48:22.669
  Apr 15 06:48:22.669: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename ingress @ 04/15/24 06:48:22.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:48:22.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:48:22.714
  STEP: getting /apis @ 04/15/24 06:48:22.731
  STEP: getting /apis/networking.k8s.io @ 04/15/24 06:48:22.745
  STEP: getting /apis/networking.k8s.iov1 @ 04/15/24 06:48:22.749
  STEP: creating @ 04/15/24 06:48:22.751
  STEP: getting @ 04/15/24 06:48:22.804
  STEP: listing @ 04/15/24 06:48:22.812
  STEP: watching @ 04/15/24 06:48:22.82
  Apr 15 06:48:22.820: INFO: starting watch
  STEP: cluster-wide listing @ 04/15/24 06:48:22.821
  STEP: cluster-wide watching @ 04/15/24 06:48:22.826
  Apr 15 06:48:22.826: INFO: starting watch
  STEP: patching @ 04/15/24 06:48:22.833
  STEP: updating @ 04/15/24 06:48:22.846
  Apr 15 06:48:22.861: INFO: waiting for watch events with expected annotations
  Apr 15 06:48:22.861: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/15/24 06:48:22.862
  STEP: updating /status @ 04/15/24 06:48:22.875
  STEP: get /status @ 04/15/24 06:48:22.893
  STEP: deleting @ 04/15/24 06:48:22.903
  STEP: deleting a collection @ 04/15/24 06:48:22.944
  Apr 15 06:48:22.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-8768" for this suite. @ 04/15/24 06:48:22.997
• [0.344 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 04/15/24 06:48:23.013
  Apr 15 06:48:23.013: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 06:48:23.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:48:23.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:48:23.046
  STEP: Creating pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561 @ 04/15/24 06:48:23.067
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 06:48:25.111
  Apr 15 06:48:25.122: INFO: Initial restart count of pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 is 0
  Apr 15 06:48:25.130: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:27.140: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:29.149: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:31.159: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:33.168: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:35.176: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:37.187: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:39.196: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:41.206: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:43.215: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:45.224: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:47.233: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:49.243: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:51.252: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:53.262: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:55.271: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:57.282: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:48:59.292: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:01.304: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:03.312: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:05.321: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:07.339: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:09.348: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:11.367: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:13.378: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:15.394: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:17.406: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:19.415: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:21.426: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:23.435: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:25.443: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:27.454: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:29.464: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:31.475: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:33.484: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:35.495: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:37.506: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:39.514: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:41.522: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:43.531: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:45.542: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:47.553: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:49.564: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:51.572: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:53.581: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:55.589: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:57.602: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:49:59.613: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:01.623: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:03.633: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:05.642: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:07.671: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:09.679: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:11.691: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:13.706: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:15.715: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:17.724: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:19.733: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:21.740: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:23.748: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:25.759: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:27.771: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:29.779: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:31.795: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:33.805: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:35.815: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:37.826: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:39.838: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:41.852: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:43.864: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:45.885: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:47.895: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:49.905: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:51.915: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:53.927: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:55.935: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:57.945: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:50:59.955: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:01.966: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:03.976: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:05.985: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:07.995: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:10.007: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:12.017: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:14.027: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:16.044: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:18.058: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:20.072: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:22.082: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:24.090: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:26.102: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:28.117: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:30.129: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:32.143: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:34.161: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:36.168: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:38.185: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:40.198: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:42.209: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:44.221: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:46.230: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:48.254: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:50.266: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:52.277: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:54.287: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:56.302: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:51:58.316: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:00.325: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:02.336: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:04.345: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:06.356: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:08.374: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:10.384: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:12.405: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:14.420: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:16.438: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:18.449: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:20.458: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:22.475: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:24.485: INFO: Get pod test-grpc-3544e80c-e4d4-4195-a670-f95eb142f079 in namespace container-probe-7561
  Apr 15 06:52:26.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/15/24 06:52:26.5
  STEP: Destroying namespace "container-probe-7561" for this suite. @ 04/15/24 06:52:26.535
• [243.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 04/15/24 06:52:26.558
  Apr 15 06:52:26.558: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 06:52:26.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:52:26.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:52:26.627
  STEP: creating a Namespace @ 04/15/24 06:52:26.636
  STEP: patching the Namespace @ 04/15/24 06:52:26.672
  STEP: get the Namespace and ensuring it has the label @ 04/15/24 06:52:26.688
  Apr 15 06:52:26.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3576" for this suite. @ 04/15/24 06:52:26.713
  STEP: Destroying namespace "nspatchtest-29334227-2fa7-4a9b-b3c1-80a1e3f5d959-4446" for this suite. @ 04/15/24 06:52:26.73
• [0.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 04/15/24 06:52:26.748
  Apr 15 06:52:26.748: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 06:52:26.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:52:26.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:52:26.795
  STEP: set up a multi version CRD @ 04/15/24 06:52:26.813
  Apr 15 06:52:26.825: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: rename a version @ 04/15/24 06:52:32.126
  STEP: check the new version name is served @ 04/15/24 06:52:32.194
  STEP: check the old version name is removed @ 04/15/24 06:52:33.787
  STEP: check the other version is not changed @ 04/15/24 06:52:34.715
  Apr 15 06:52:38.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9723" for this suite. @ 04/15/24 06:52:38.725
• [11.994 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 04/15/24 06:52:38.743
  Apr 15 06:52:38.743: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 06:52:38.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:52:38.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:52:38.796
  STEP: creating service endpoint-test2 in namespace services-2308 @ 04/15/24 06:52:38.803
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2308 to expose endpoints map[] @ 04/15/24 06:52:38.833
  Apr 15 06:52:38.850: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Apr 15 06:52:39.883: INFO: successfully validated that service endpoint-test2 in namespace services-2308 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2308 @ 04/15/24 06:52:39.884
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2308 to expose endpoints map[pod1:[80]] @ 04/15/24 06:52:41.948
  Apr 15 06:52:41.971: INFO: successfully validated that service endpoint-test2 in namespace services-2308 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/15/24 06:52:41.971
  Apr 15 06:52:41.971: INFO: Creating new exec pod
  Apr 15 06:52:45.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-2308 exec execpodltwqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 15 06:52:45.466: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 15 06:52:45.466: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:52:45.466: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-2308 exec execpodltwqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.79 80'
  Apr 15 06:52:45.830: INFO: stderr: "+ nc -v -t -w 2 10.233.50.79 80\n+ echo hostName\nConnection to 10.233.50.79 80 port [tcp/http] succeeded!\n"
  Apr 15 06:52:45.830: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2308 @ 04/15/24 06:52:45.831
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2308 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/15/24 06:52:47.907
  Apr 15 06:52:47.941: INFO: successfully validated that service endpoint-test2 in namespace services-2308 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/15/24 06:52:47.942
  Apr 15 06:52:48.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-2308 exec execpodltwqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 15 06:52:49.212: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 15 06:52:49.212: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:52:49.213: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-2308 exec execpodltwqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.79 80'
  Apr 15 06:52:49.477: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.50.79 80\nConnection to 10.233.50.79 80 port [tcp/http] succeeded!\n"
  Apr 15 06:52:49.477: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2308 @ 04/15/24 06:52:49.478
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2308 to expose endpoints map[pod2:[80]] @ 04/15/24 06:52:49.528
  Apr 15 06:52:49.584: INFO: successfully validated that service endpoint-test2 in namespace services-2308 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/15/24 06:52:49.584
  Apr 15 06:52:50.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-2308 exec execpodltwqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 15 06:52:50.866: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 15 06:52:50.867: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 06:52:50.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-2308 exec execpodltwqq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.79 80'
  Apr 15 06:52:51.228: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.50.79 80\nConnection to 10.233.50.79 80 port [tcp/http] succeeded!\n"
  Apr 15 06:52:51.228: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2308 @ 04/15/24 06:52:51.228
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2308 to expose endpoints map[] @ 04/15/24 06:52:51.299
  Apr 15 06:52:51.340: INFO: successfully validated that service endpoint-test2 in namespace services-2308 exposes endpoints map[]
  Apr 15 06:52:51.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2308" for this suite. @ 04/15/24 06:52:51.434
• [12.717 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 04/15/24 06:52:51.471
  Apr 15 06:52:51.471: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 06:52:51.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:52:51.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:52:51.521
  Apr 15 06:52:51.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6255" for this suite. @ 04/15/24 06:52:51.548
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 04/15/24 06:52:51.572
  Apr 15 06:52:51.572: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename containers @ 04/15/24 06:52:51.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:52:51.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:52:51.63
  STEP: Creating a pod to test override arguments @ 04/15/24 06:52:51.637
  STEP: Saw pod success @ 04/15/24 06:52:55.715
  Apr 15 06:52:55.724: INFO: Trying to get logs from node thuchow3cah4-3 pod client-containers-ea5def8b-3c2d-4edf-ab57-36e71aece48a container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 06:52:55.761
  Apr 15 06:52:55.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-454" for this suite. @ 04/15/24 06:52:55.819
• [4.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 04/15/24 06:52:55.875
  Apr 15 06:52:55.875: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename sched-preemption @ 04/15/24 06:52:55.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:52:55.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:52:55.919
  Apr 15 06:52:55.961: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 15 06:53:56.040: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/15/24 06:53:56.052
  Apr 15 06:53:56.145: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 15 06:53:56.171: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 15 06:53:56.271: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 15 06:53:56.290: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 15 06:53:56.418: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 15 06:53:56.458: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/15/24 06:53:56.458
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/15/24 06:53:58.531
  Apr 15 06:54:02.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5111" for this suite. @ 04/15/24 06:54:02.782
• [66.921 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/15/24 06:54:02.824
  Apr 15 06:54:02.824: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename deployment @ 04/15/24 06:54:02.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:54:02.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:54:02.868
  Apr 15 06:54:02.873: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Apr 15 06:54:02.895: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 15 06:54:07.912: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 06:54:07.913
  Apr 15 06:54:07.913: INFO: Creating deployment "test-rolling-update-deployment"
  Apr 15 06:54:07.928: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Apr 15 06:54:07.950: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Apr 15 06:54:10.062: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Apr 15 06:54:10.149: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 6, 54, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 6, 54, 8, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 6, 54, 9, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 6, 54, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 15 06:54:12.168: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Apr 15 06:54:12.225: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cefbc7db-c5ed-4c8a-b8c5-6c201a59b26d",
      ResourceVersion: (string) (len=6) "155236",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760850,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760850,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 06:54:12.245: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8276c379-93cb-473f-811d-9f4b8bace528",
      ResourceVersion: (string) (len=6) "155214",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "cefbc7db-c5ed-4c8a-b8c5-6c201a59b26d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 65 66 62 63 37  64 62 2d 63 35 65 64 2d  |\"cefbc7db-c5ed-|
              00000120  34 63 38 61 2d 62 38 63  35 2d 36 63 32 30 31 61  |4c8a-b8c5-6c201a|
              00000130  35 39 62 32 36 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |59b26d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 06:54:12.250: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Apr 15 06:54:12.251: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2118b9b5-0640-47c4-92aa-37e8bfa0bf26",
      ResourceVersion: (string) (len=6) "155234",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760842,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "cefbc7db-c5ed-4c8a-b8c5-6c201a59b26d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 63 65 66 62 63 37 64  |"uid\":\"cefbc7d|
              000000b0  62 2d 63 35 65 64 2d 34  63 38 61 2d 62 38 63 35  |b-c5ed-4c8a-b8c5|
              000000c0  2d 36 63 32 30 31 61 35  39 62 32 36 64 5c 22 7d  |-6c201a59b26d\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760850,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 06:54:12.266: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-qwsd9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-qwsd9",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-8898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "39520726-2c1b-4ade-9bfd-098ea72c148c",
      ResourceVersion: (string) (len=6) "155212",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "8276c379-93cb-473f-811d-9f4b8bace528",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 32  37 36 63 33 37 39 2d 39  |d\":\"8276c379-9|
              00000090  33 63 62 2d 34 37 33 66  2d 38 31 31 64 2d 39 66  |3cb-473f-811d-9f|
              000000a0  34 62 38 62 61 63 65 35  32 38 5c 22 7d 22 3a 7b  |4b8bace528\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 34 34 5c 22 7d 22  |10.233.66.44\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dpfgd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dpfgd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.252",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760848,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848760848,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://31df2485a5f97d5ed9e6a72447ab8388c9f76aafecd6f2bbfd10496eb248d25e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:54:12.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8898" for this suite. @ 04/15/24 06:54:12.285
• [9.474 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 04/15/24 06:54:12.299
  Apr 15 06:54:12.299: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 06:54:12.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:54:12.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:54:12.334
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 06:54:12.34
  STEP: Saw pod success @ 04/15/24 06:54:16.387
  Apr 15 06:54:16.393: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-6bf6f110-c3e6-4042-b12d-c79ffa708926 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 06:54:16.415
  Apr 15 06:54:16.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6622" for this suite. @ 04/15/24 06:54:16.465
• [4.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 04/15/24 06:54:16.491
  Apr 15 06:54:16.491: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 06:54:16.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:54:16.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:54:16.541
  STEP: Counting existing ResourceQuota @ 04/15/24 06:54:16.551
  STEP: Creating a ResourceQuota @ 04/15/24 06:54:21.564
  STEP: Ensuring resource quota status is calculated @ 04/15/24 06:54:21.58
  STEP: Creating a Service @ 04/15/24 06:54:23.588
  STEP: Creating a NodePort Service @ 04/15/24 06:54:23.618
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/15/24 06:54:23.743
  STEP: Ensuring resource quota status captures service creation @ 04/15/24 06:54:23.779
  STEP: Deleting Services @ 04/15/24 06:54:25.789
  STEP: Ensuring resource quota status released usage @ 04/15/24 06:54:25.879
  Apr 15 06:54:27.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6688" for this suite. @ 04/15/24 06:54:27.902
• [11.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 04/15/24 06:54:27.92
  Apr 15 06:54:27.920: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename sched-preemption @ 04/15/24 06:54:27.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:54:27.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:54:27.959
  Apr 15 06:54:27.991: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 15 06:55:28.098: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/15/24 06:55:28.116
  Apr 15 06:55:28.116: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/15/24 06:55:28.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:55:28.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:55:28.197
  STEP: Finding an available node @ 04/15/24 06:55:28.205
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/15/24 06:55:28.206
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/15/24 06:55:30.28
  Apr 15 06:55:30.316: INFO: found a healthy node: thuchow3cah4-3
  Apr 15 06:55:36.493: INFO: pods created so far: [1 1 1]
  Apr 15 06:55:36.494: INFO: length of pods created so far: 3
  Apr 15 06:55:38.527: INFO: pods created so far: [2 2 1]
  Apr 15 06:55:45.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 15 06:55:45.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4925" for this suite. @ 04/15/24 06:55:45.76
  STEP: Destroying namespace "sched-preemption-4023" for this suite. @ 04/15/24 06:55:45.774
• [77.871 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 04/15/24 06:55:45.803
  Apr 15 06:55:45.803: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename secrets @ 04/15/24 06:55:45.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:55:45.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:55:45.849
  STEP: creating a secret @ 04/15/24 06:55:45.857
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/15/24 06:55:45.868
  STEP: patching the secret @ 04/15/24 06:55:45.875
  STEP: deleting the secret using a LabelSelector @ 04/15/24 06:55:45.891
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/15/24 06:55:45.905
  Apr 15 06:55:45.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2838" for this suite. @ 04/15/24 06:55:45.92
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 04/15/24 06:55:45.937
  Apr 15 06:55:45.937: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 06:55:45.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:55:45.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:55:45.974
  Apr 15 06:55:45.980: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 06:55:46.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7517" for this suite. @ 04/15/24 06:55:46.608
• [0.687 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 04/15/24 06:55:46.626
  Apr 15 06:55:46.626: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 06:55:46.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:55:46.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:55:46.694
  STEP: Creating configMap that has name configmap-test-emptyKey-9919b7f7-bd3a-4c26-bdb4-87e35fecaea8 @ 04/15/24 06:55:46.705
  Apr 15 06:55:46.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8568" for this suite. @ 04/15/24 06:55:46.724
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 04/15/24 06:55:46.753
  Apr 15 06:55:46.754: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 06:55:46.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:55:46.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:55:46.795
  Apr 15 06:55:46.810: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/15/24 06:55:49.035
  Apr 15 06:55:49.036: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-8532 --namespace=crd-publish-openapi-8532 create -f -'
  Apr 15 06:55:50.386: INFO: stderr: ""
  Apr 15 06:55:50.386: INFO: stdout: "e2e-test-crd-publish-openapi-1471-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 15 06:55:50.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-8532 --namespace=crd-publish-openapi-8532 delete e2e-test-crd-publish-openapi-1471-crds test-cr'
  Apr 15 06:55:50.578: INFO: stderr: ""
  Apr 15 06:55:50.578: INFO: stdout: "e2e-test-crd-publish-openapi-1471-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Apr 15 06:55:50.578: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-8532 --namespace=crd-publish-openapi-8532 apply -f -'
  Apr 15 06:55:51.016: INFO: stderr: ""
  Apr 15 06:55:51.016: INFO: stdout: "e2e-test-crd-publish-openapi-1471-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 15 06:55:51.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-8532 --namespace=crd-publish-openapi-8532 delete e2e-test-crd-publish-openapi-1471-crds test-cr'
  Apr 15 06:55:51.250: INFO: stderr: ""
  Apr 15 06:55:51.250: INFO: stdout: "e2e-test-crd-publish-openapi-1471-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/15/24 06:55:51.25
  Apr 15 06:55:51.250: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-8532 explain e2e-test-crd-publish-openapi-1471-crds'
  Apr 15 06:55:53.232: INFO: stderr: ""
  Apr 15 06:55:53.232: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1471-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Apr 15 06:55:55.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8532" for this suite. @ 04/15/24 06:55:55.449
• [8.711 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 04/15/24 06:55:55.472
  Apr 15 06:55:55.472: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 06:55:55.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:55:55.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:55:55.518
  Apr 15 06:55:57.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8211" for this suite. @ 04/15/24 06:55:57.649
• [2.196 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 04/15/24 06:55:57.672
  Apr 15 06:55:57.672: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 06:55:57.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:55:57.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:55:57.732
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/15/24 06:55:57.749
  Apr 15 06:55:57.750: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5899 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Apr 15 06:55:57.951: INFO: stderr: ""
  Apr 15 06:55:57.951: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/15/24 06:55:57.951
  Apr 15 06:55:57.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5899 delete pods e2e-test-httpd-pod'
  Apr 15 06:55:59.446: INFO: stderr: ""
  Apr 15 06:55:59.447: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 15 06:55:59.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5899" for this suite. @ 04/15/24 06:55:59.46
• [1.804 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/15/24 06:55:59.48
  Apr 15 06:55:59.480: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename deployment @ 04/15/24 06:55:59.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:55:59.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:55:59.523
  Apr 15 06:55:59.529: INFO: Creating deployment "webserver-deployment"
  Apr 15 06:55:59.545: INFO: Waiting for observed generation 1
  Apr 15 06:56:01.594: INFO: Waiting for all required pods to come up
  Apr 15 06:56:01.656: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/15/24 06:56:01.656
  Apr 15 06:56:03.769: INFO: Waiting for deployment "webserver-deployment" to complete
  Apr 15 06:56:03.784: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Apr 15 06:56:03.814: INFO: Updating deployment webserver-deployment
  Apr 15 06:56:03.814: INFO: Waiting for observed generation 2
  Apr 15 06:56:05.835: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Apr 15 06:56:05.844: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Apr 15 06:56:05.851: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 15 06:56:05.878: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Apr 15 06:56:05.878: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Apr 15 06:56:05.885: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 15 06:56:05.903: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Apr 15 06:56:05.904: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Apr 15 06:56:05.925: INFO: Updating deployment webserver-deployment
  Apr 15 06:56:05.925: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Apr 15 06:56:05.943: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Apr 15 06:56:05.961: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Apr 15 06:56:06.038: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d108f780-01e2-4fad-a2c0-d7ee16efeaa4",
      ResourceVersion: (string) (len=6) "155979",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 06:56:06.140: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52ac832c-091d-42e2-b018-b7c020aec46d",
      ResourceVersion: (string) (len=6) "155972",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d108f780-01e2-4fad-a2c0-d7ee16efeaa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 31 30 38 66 37  38 30 2d 30 31 65 32 2d  |\"d108f780-01e2-|
              00000120  34 66 61 64 2d 61 32 63  30 2d 64 37 65 65 31 36  |4fad-a2c0-d7ee16|
              00000130  65 66 65 61 61 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |efeaa4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 06:56:06.155: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Apr 15 06:56:06.156: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
      ResourceVersion: (string) (len=6) "155969",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d108f780-01e2-4fad-a2c0-d7ee16efeaa4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 31 30 38 66 37  38 30 2d 30 31 65 32 2d  |\"d108f780-01e2-|
              00000120  34 66 61 64 2d 61 32 63  30 2d 64 37 65 65 31 36  |4fad-a2c0-d7ee16|
              00000130  65 66 65 61 61 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |efeaa4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 06:56:06.272: INFO: Pod "webserver-deployment-557759b7c7-2wzkb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2wzkb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "256d1fb5-a7b2-4f00-8186-c863916dd5f0",
      ResourceVersion: (string) (len=6) "155988",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ffzsz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ffzsz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.281: INFO: Pod "webserver-deployment-557759b7c7-6b5gm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6b5gm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92a431f6-aed9-4c94-8645-101cf404639c",
      ResourceVersion: (string) (len=6) "156007",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rbrxj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rbrxj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.308: INFO: Pod "webserver-deployment-557759b7c7-79cvn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-79cvn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d342c28-7b6f-42e8-b52b-f6454dddaff1",
      ResourceVersion: (string) (len=6) "156004",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-94hss",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-94hss",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.331: INFO: Pod "webserver-deployment-557759b7c7-7jfg5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7jfg5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ef37c83-9cd9-4343-ba2e-f8d5a8549e95",
      ResourceVersion: (string) (len=6) "155995",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-747vm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-747vm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.217",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.344: INFO: Pod "webserver-deployment-557759b7c7-97v6w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-97v6w",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "686669d1-2c51-43cc-a36b-5a678fe3c4ef",
      ResourceVersion: (string) (len=6) "156012",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l8m4p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l8m4p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.350: INFO: Pod "webserver-deployment-557759b7c7-bct66" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bct66",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dbe8fca3-1cf9-4ab4-b175-a9bf6c39378c",
      ResourceVersion: (string) (len=6) "155856",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 30 36 5c 22 7d  |10.233.65.106\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2s2fp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2s2fp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.217",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.65.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848760961,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://f04f10c2e42e7b3ef6819b9f45a758ebb05b3683d1ceef4991398f1e930b08e2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.361: INFO: Pod "webserver-deployment-557759b7c7-chtgg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-chtgg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "24f9b742-a60c-4947-853b-e2dcddf9b128",
      ResourceVersion: (string) (len=6) "155989",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fg8kc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fg8kc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.252",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.366: INFO: Pod "webserver-deployment-557759b7c7-drfwt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-drfwt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a8a6c9d-b3b0-49d1-8730-cc8ecdbd2e7c",
      ResourceVersion: (string) (len=6) "156015",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fhltd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fhltd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.217",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.371: INFO: Pod "webserver-deployment-557759b7c7-fr4zx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fr4zx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99d0bae9-8074-4c71-ae8b-25f8323bf51a",
      ResourceVersion: (string) (len=6) "156008",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-czts2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-czts2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.377: INFO: Pod "webserver-deployment-557759b7c7-hsgn9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hsgn9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97bf5894-026c-438d-aa41-f80506a34c10",
      ResourceVersion: (string) (len=6) "155986",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kmqfk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kmqfk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.384: INFO: Pod "webserver-deployment-557759b7c7-jd52f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jd52f",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d56601e-85e3-4521-8e66-b66cec4d5944",
      ResourceVersion: (string) (len=6) "155880",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 30 37 5c 22 7d  |10.233.65.107\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kbstx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kbstx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.217",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.65.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848760961,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://c4e01eadf8818ae81f67dcd017601fdb6d011eaf427b67c99018305e808ba664",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.390: INFO: Pod "webserver-deployment-557759b7c7-khgxc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-khgxc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c82b5558-3e7d-4911-abe1-d813da0d4f60",
      ResourceVersion: (string) (len=6) "156006",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vp2rv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vp2rv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.393: INFO: Pod "webserver-deployment-557759b7c7-lczbw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lczbw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c12a6c5-bdeb-4a3b-a8bb-dec8e7fd9fde",
      ResourceVersion: (string) (len=6) "155847",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 35 32 5c 22 7d 22  |10.233.66.52\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6cq6m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6cq6m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.252",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848760960,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://869e785d2aba84c69141f206b49a67f8647e2ccd8073f861e8a81f0aceaf9ebb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.411: INFO: Pod "webserver-deployment-557759b7c7-mxcfq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mxcfq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11759c27-192f-48a8-a92b-6a86215ca08f",
      ResourceVersion: (string) (len=6) "155854",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 35 34 5c 22 7d 22  |10.233.66.54\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lrw9b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lrw9b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.252",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.54",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.54"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848760961,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://7a7540f6890702ce3ca7bde33723e8d4a80f2372f62b5496473798726f93b315",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.415: INFO: Pod "webserver-deployment-557759b7c7-mzdxx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mzdxx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef2241f9-e4fa-4470-a8e9-c10bf11d3886",
      ResourceVersion: (string) (len=6) "155874",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 30 33 5c 22 7d  |10.233.64.103\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d7g8j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d7g8j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.227",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.103",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.103"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848760962,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://66975fc5ec870da94b2aa1cbd432eb7ee7377c6106358f89e6f594f8709fc005",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.423: INFO: Pod "webserver-deployment-557759b7c7-qnt2l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qnt2l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db9c8f69-c3bf-44a1-9f85-c9abf398b5ef",
      ResourceVersion: (string) (len=6) "155900",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 30 32 5c 22 7d  |10.233.64.102\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rjhv9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rjhv9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.227",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848760962,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://94bb1a86faa1f109d33e8a38dadef5cade98a30b55b79e87beee93ee6aded97e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.430: INFO: Pod "webserver-deployment-557759b7c7-spxph" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-spxph",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b5b685d-a8c1-4035-8f64-6e70e7a74ef2",
      ResourceVersion: (string) (len=6) "155873",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 30 31 5c 22 7d  |10.233.64.101\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z252f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z252f",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.227",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.64.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848760962,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://2e9d76f5bc531ad8d0932475e9c7e607bc7736f1bbcf1df5e6a0cbd2140b4390",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.435: INFO: Pod "webserver-deployment-557759b7c7-tzw9r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tzw9r",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e817cd66-ccfa-4b0b-b3a9-f808a579d0c5",
      ResourceVersion: (string) (len=6) "156011",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4f5sj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4f5sj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.252",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.439: INFO: Pod "webserver-deployment-557759b7c7-wlwnz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wlwnz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b6df869-9acd-40cc-aae4-c24775945fa4",
      ResourceVersion: (string) (len=6) "155886",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 30 38 5c 22 7d  |10.233.65.108\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nzm5q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nzm5q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760959,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.217",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.65.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760959,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848760961,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://61ae3c28f284a4e149ded284bc111ba422399afaac356acf75cd262bfd55a4e6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.456: INFO: Pod "webserver-deployment-557759b7c7-wvtvj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wvtvj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f5cdb0c-2697-478c-9f72-ebcc072fffd7",
      ResourceVersion: (string) (len=6) "156005",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "fb72127a-2bac-4510-affc-6b33efafb97b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 62  37 32 31 32 37 61 2d 32  |d\":\"fb72127a-2|
              00000090  62 61 63 2d 34 35 31 30  2d 61 66 66 63 2d 36 62  |bac-4510-affc-6b|
              000000a0  33 33 65 66 61 66 62 39  37 62 5c 22 7d 22 3a 7b  |33efafb97b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dm6g9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dm6g9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.459: INFO: Pod "webserver-deployment-9b4f5bf69-2cn2q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2cn2q",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f92d25f-68f7-4df9-952e-eea45eb78f9c",
      ResourceVersion: (string) (len=6) "155946",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760964,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "52ac832c-091d-42e2-b018-b7c020aec46d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  61 63 38 33 32 63 2d 30  |d\":\"52ac832c-0|
              00000090  39 31 64 2d 34 32 65 32  2d 62 30 31 38 2d 62 37  |91d-42e2-b018-b7|
              000000a0  63 30 32 30 61 65 63 34  36 64 5c 22 7d 22 3a 7b  |c020aec46d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vghgd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vghgd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.252",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760964,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.463: INFO: Pod "webserver-deployment-9b4f5bf69-4wbqf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4wbqf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fc1b315-045e-4bab-bae9-60b09c329fd3",
      ResourceVersion: (string) (len=6) "155998",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "52ac832c-091d-42e2-b018-b7c020aec46d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  61 63 38 33 32 63 2d 30  |d\":\"52ac832c-0|
              00000090  39 31 64 2d 34 32 65 32  2d 62 30 31 38 2d 62 37  |91d-42e2-b018-b7|
              000000a0  63 30 32 30 61 65 63 34  36 64 5c 22 7d 22 3a 7b  |c020aec46d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lv9wh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lv9wh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.470: INFO: Pod "webserver-deployment-9b4f5bf69-5hdlg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5hdlg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "301b8586-d7f0-4ee1-a7c1-16cc7f1eebb6",
      ResourceVersion: (string) (len=6) "155951",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760964,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "52ac832c-091d-42e2-b018-b7c020aec46d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  61 63 38 33 32 63 2d 30  |d\":\"52ac832c-0|
              00000090  39 31 64 2d 34 32 65 32  2d 62 30 31 38 2d 62 37  |91d-42e2-b018-b7|
              000000a0  63 30 32 30 61 65 63 34  36 64 5c 22 7d 22 3a 7b  |c020aec46d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c6xgb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c6xgb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.227",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760964,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.478: INFO: Pod "webserver-deployment-9b4f5bf69-6w56l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-6w56l",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d5d68936-a472-4f93-8aca-e6d3429180d6",
      ResourceVersion: (string) (len=6) "155918",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "52ac832c-091d-42e2-b018-b7c020aec46d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  61 63 38 33 32 63 2d 30  |d\":\"52ac832c-0|
              00000090  39 31 64 2d 34 32 65 32  2d 62 30 31 38 2d 62 37  |91d-42e2-b018-b7|
              000000a0  63 30 32 30 61 65 63 34  36 64 5c 22 7d 22 3a 7b  |c020aec46d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nl8cb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nl8cb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.252",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.488: INFO: Pod "webserver-deployment-9b4f5bf69-cjcj7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cjcj7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37b68060-6510-4cbf-be4a-6b991da0503b",
      ResourceVersion: (string) (len=6) "156010",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "52ac832c-091d-42e2-b018-b7c020aec46d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  61 63 38 33 32 63 2d 30  |d\":\"52ac832c-0|
              00000090  39 31 64 2d 34 32 65 32  2d 62 30 31 38 2d 62 37  |91d-42e2-b018-b7|
              000000a0  63 30 32 30 61 65 63 34  36 64 5c 22 7d 22 3a 7b  |c020aec46d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t926r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t926r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.217",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.493: INFO: Pod "webserver-deployment-9b4f5bf69-ghdw6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ghdw6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d8cc087-a1cf-45ad-b2a2-c6e865e691fa",
      ResourceVersion: (string) (len=6) "156009",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "52ac832c-091d-42e2-b018-b7c020aec46d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  61 63 38 33 32 63 2d 30  |d\":\"52ac832c-0|
              00000090  39 31 64 2d 34 32 65 32  2d 62 30 31 38 2d 62 37  |91d-42e2-b018-b7|
              000000a0  63 30 32 30 61 65 63 34  36 64 5c 22 7d 22 3a 7b  |c020aec46d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fm4wm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fm4wm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.504: INFO: Pod "webserver-deployment-9b4f5bf69-j2x2z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-j2x2z",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "418c4be8-0d9e-4843-b2c3-7c53650ed464",
      ResourceVersion: (string) (len=6) "155934",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "52ac832c-091d-42e2-b018-b7c020aec46d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  61 63 38 33 32 63 2d 30  |d\":\"52ac832c-0|
              00000090  39 31 64 2d 34 32 65 32  2d 62 30 31 38 2d 62 37  |91d-42e2-b018-b7|
              000000a0  63 30 32 30 61 65 63 34  36 64 5c 22 7d 22 3a 7b  |c020aec46d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-468jr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-468jr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.217",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.530: INFO: Pod "webserver-deployment-9b4f5bf69-msf54" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-msf54",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60c3e4b1-7def-47c9-936a-78c77b0cc51b",
      ResourceVersion: (string) (len=6) "155999",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "52ac832c-091d-42e2-b018-b7c020aec46d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  61 63 38 33 32 63 2d 30  |d\":\"52ac832c-0|
              00000090  39 31 64 2d 34 32 65 32  2d 62 30 31 38 2d 62 37  |91d-42e2-b018-b7|
              000000a0  63 30 32 30 61 65 63 34  36 64 5c 22 7d 22 3a 7b  |c020aec46d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tcnq5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tcnq5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.533: INFO: Pod "webserver-deployment-9b4f5bf69-qpf6p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qpf6p",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21ce84be-c623-4b28-abd5-9cd169f1dca1",
      ResourceVersion: (string) (len=6) "156003",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "52ac832c-091d-42e2-b018-b7c020aec46d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  61 63 38 33 32 63 2d 30  |d\":\"52ac832c-0|
              00000090  39 31 64 2d 34 32 65 32  2d 62 30 31 38 2d 62 37  |91d-42e2-b018-b7|
              000000a0  63 30 32 30 61 65 63 34  36 64 5c 22 7d 22 3a 7b  |c020aec46d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x4bjb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x4bjb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.536: INFO: Pod "webserver-deployment-9b4f5bf69-txp6b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-txp6b",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7482c29-b5c8-489e-bafa-84db8026f741",
      ResourceVersion: (string) (len=6) "156013",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760965,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "52ac832c-091d-42e2-b018-b7c020aec46d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760965,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  61 63 38 33 32 63 2d 30  |d\":\"52ac832c-0|
              00000090  39 31 64 2d 34 32 65 32  2d 62 30 31 38 2d 62 37  |91d-42e2-b018-b7|
              000000a0  63 30 32 30 61 65 63 34  36 64 5c 22 7d 22 3a 7b  |c020aec46d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7rv89",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7rv89",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.252",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.540: INFO: Pod "webserver-deployment-9b4f5bf69-xmpbl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xmpbl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ccad5908-916a-4637-b7de-92d9db35c101",
      ResourceVersion: (string) (len=6) "156001",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "52ac832c-091d-42e2-b018-b7c020aec46d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  61 63 38 33 32 63 2d 30  |d\":\"52ac832c-0|
              00000090  39 31 64 2d 34 32 65 32  2d 62 30 31 38 2d 62 37  |91d-42e2-b018-b7|
              000000a0  63 30 32 30 61 65 63 34  36 64 5c 22 7d 22 3a 7b  |c020aec46d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z79fd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z79fd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.557: INFO: Pod "webserver-deployment-9b4f5bf69-zjswc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zjswc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6121",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "639449c7-7635-41d1-9e5b-d0b23256d1cd",
      ResourceVersion: (string) (len=6) "155928",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "52ac832c-091d-42e2-b018-b7c020aec46d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  61 63 38 33 32 63 2d 30  |d\":\"52ac832c-0|
              00000090  39 31 64 2d 34 32 65 32  2d 62 30 31 38 2d 62 37  |91d-42e2-b018-b7|
              000000a0  63 30 32 30 61 65 63 34  36 64 5c 22 7d 22 3a 7b  |c020aec46d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xdq7v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xdq7v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848760963,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.227",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848760963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 06:56:06.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6121" for this suite. @ 04/15/24 06:56:06.75
• [7.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 04/15/24 06:56:06.9
  Apr 15 06:56:06.900: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 06:56:06.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:56:07.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:56:07.073
  Apr 15 06:56:07.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7014" for this suite. @ 04/15/24 06:56:07.399
• [0.590 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 04/15/24 06:56:07.492
  Apr 15 06:56:07.492: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 06:56:07.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:56:07.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:56:07.614
  Apr 15 06:56:09.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7146" for this suite. @ 04/15/24 06:56:09.956
• [2.486 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 04/15/24 06:56:09.978
  Apr 15 06:56:09.979: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 06:56:09.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:56:10.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:56:10.03
  Apr 15 06:56:10.035: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 06:56:11.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6626" for this suite. @ 04/15/24 06:56:11.095
• [1.131 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 04/15/24 06:56:11.11
  Apr 15 06:56:11.110: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename secrets @ 04/15/24 06:56:11.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:56:11.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:56:11.143
  STEP: creating secret secrets-964/secret-test-f43addf9-2c85-4610-8b9a-ec7b61cd1f31 @ 04/15/24 06:56:11.149
  STEP: Creating a pod to test consume secrets @ 04/15/24 06:56:11.157
  STEP: Saw pod success @ 04/15/24 06:56:15.245
  Apr 15 06:56:15.279: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-configmaps-27d68113-1543-44e2-ab52-010cb7942a27 container env-test: <nil>
  STEP: delete the pod @ 04/15/24 06:56:15.366
  Apr 15 06:56:15.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-964" for this suite. @ 04/15/24 06:56:15.591
• [4.624 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 04/15/24 06:56:15.74
  Apr 15 06:56:15.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename controllerrevisions @ 04/15/24 06:56:15.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:56:15.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:56:15.963
  STEP: Creating DaemonSet "e2e-pndrc-daemon-set" @ 04/15/24 06:56:16.195
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 06:56:16.248
  Apr 15 06:56:16.385: INFO: Number of nodes with available pods controlled by daemonset e2e-pndrc-daemon-set: 0
  Apr 15 06:56:16.385: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  Apr 15 06:56:17.509: INFO: Number of nodes with available pods controlled by daemonset e2e-pndrc-daemon-set: 0
  Apr 15 06:56:17.509: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  Apr 15 06:56:18.431: INFO: Number of nodes with available pods controlled by daemonset e2e-pndrc-daemon-set: 3
  Apr 15 06:56:18.431: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-pndrc-daemon-set
  STEP: Confirm DaemonSet "e2e-pndrc-daemon-set" successfully created with "daemonset-name=e2e-pndrc-daemon-set" label @ 04/15/24 06:56:18.444
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-pndrc-daemon-set" @ 04/15/24 06:56:18.49
  Apr 15 06:56:18.502: INFO: Located ControllerRevision: "e2e-pndrc-daemon-set-b8df98c94"
  STEP: Patching ControllerRevision "e2e-pndrc-daemon-set-b8df98c94" @ 04/15/24 06:56:18.523
  Apr 15 06:56:18.543: INFO: e2e-pndrc-daemon-set-b8df98c94 has been patched
  STEP: Create a new ControllerRevision @ 04/15/24 06:56:18.544
  Apr 15 06:56:18.556: INFO: Created ControllerRevision: e2e-pndrc-daemon-set-7d698ddbb4
  STEP: Confirm that there are two ControllerRevisions @ 04/15/24 06:56:18.556
  Apr 15 06:56:18.557: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 06:56:18.565: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-pndrc-daemon-set-b8df98c94" @ 04/15/24 06:56:18.566
  STEP: Confirm that there is only one ControllerRevision @ 04/15/24 06:56:18.579
  Apr 15 06:56:18.579: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 06:56:18.588: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-pndrc-daemon-set-7d698ddbb4" @ 04/15/24 06:56:18.607
  Apr 15 06:56:18.633: INFO: e2e-pndrc-daemon-set-7d698ddbb4 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/15/24 06:56:18.633
  W0415 06:56:18.659016      15 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/15/24 06:56:18.659
  Apr 15 06:56:18.659: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 06:56:19.672: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 06:56:19.716: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-pndrc-daemon-set-7d698ddbb4=updated" @ 04/15/24 06:56:19.717
  STEP: Confirm that there is only one ControllerRevision @ 04/15/24 06:56:19.826
  Apr 15 06:56:19.826: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 15 06:56:19.838: INFO: Found 1 ControllerRevisions
  Apr 15 06:56:19.845: INFO: ControllerRevision "e2e-pndrc-daemon-set-89dcd8f8f" has revision 3
  STEP: Deleting DaemonSet "e2e-pndrc-daemon-set" @ 04/15/24 06:56:19.858
  STEP: deleting DaemonSet.extensions e2e-pndrc-daemon-set in namespace controllerrevisions-6190, will wait for the garbage collector to delete the pods @ 04/15/24 06:56:19.858
  Apr 15 06:56:19.938: INFO: Deleting DaemonSet.extensions e2e-pndrc-daemon-set took: 18.061306ms
  Apr 15 06:56:20.040: INFO: Terminating DaemonSet.extensions e2e-pndrc-daemon-set pods took: 101.176698ms
  Apr 15 06:56:22.646: INFO: Number of nodes with available pods controlled by daemonset e2e-pndrc-daemon-set: 0
  Apr 15 06:56:22.646: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-pndrc-daemon-set
  Apr 15 06:56:22.653: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"156534"},"items":null}

  Apr 15 06:56:22.662: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"156534"},"items":null}

  Apr 15 06:56:22.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6190" for this suite. @ 04/15/24 06:56:22.715
• [7.000 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 04/15/24 06:56:22.74
  Apr 15 06:56:22.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 06:56:22.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:56:22.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:56:22.784
  Apr 15 06:56:22.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9802" for this suite. @ 04/15/24 06:56:22.896
• [0.173 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/15/24 06:56:22.918
  Apr 15 06:56:22.918: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename deployment @ 04/15/24 06:56:22.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:56:22.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:56:22.975
  STEP: creating a Deployment @ 04/15/24 06:56:22.998
  STEP: waiting for Deployment to be created @ 04/15/24 06:56:23.017
  STEP: waiting for all Replicas to be Ready @ 04/15/24 06:56:23.021
  Apr 15 06:56:23.023: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 06:56:23.023: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 06:56:23.064: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 06:56:23.064: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 06:56:23.147: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 06:56:23.147: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 06:56:23.309: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 06:56:23.309: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 15 06:56:24.298: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 15 06:56:24.298: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 15 06:56:24.552: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/15/24 06:56:24.553
  Apr 15 06:56:24.568: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/15/24 06:56:24.568
  Apr 15 06:56:24.572: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0
  Apr 15 06:56:24.572: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0
  Apr 15 06:56:24.573: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0
  Apr 15 06:56:24.573: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0
  Apr 15 06:56:24.573: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0
  Apr 15 06:56:24.573: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0
  Apr 15 06:56:24.573: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0
  Apr 15 06:56:24.573: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 0
  Apr 15 06:56:24.573: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1
  Apr 15 06:56:24.574: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1
  Apr 15 06:56:24.574: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2
  Apr 15 06:56:24.574: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2
  Apr 15 06:56:24.574: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2
  Apr 15 06:56:24.574: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2
  Apr 15 06:56:24.606: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2
  Apr 15 06:56:24.607: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2
  Apr 15 06:56:24.665: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2
  Apr 15 06:56:24.665: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2
  Apr 15 06:56:24.750: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1
  Apr 15 06:56:24.750: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1
  Apr 15 06:56:24.773: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1
  Apr 15 06:56:24.774: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1
  Apr 15 06:56:26.324: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2
  Apr 15 06:56:26.324: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2
  Apr 15 06:56:26.431: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1
  STEP: listing Deployments @ 04/15/24 06:56:26.432
  Apr 15 06:56:26.442: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/15/24 06:56:26.442
  Apr 15 06:56:26.474: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/15/24 06:56:26.474
  Apr 15 06:56:26.492: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 06:56:26.565: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 06:56:26.694: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 06:56:26.737: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 06:56:26.773: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 06:56:28.326: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 06:56:28.362: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 06:56:28.493: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 06:56:28.570: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 15 06:56:30.614: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/15/24 06:56:30.734
  STEP: fetching the DeploymentStatus @ 04/15/24 06:56:30.763
  Apr 15 06:56:30.781: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1
  Apr 15 06:56:30.782: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1
  Apr 15 06:56:30.783: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1
  Apr 15 06:56:30.783: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1
  Apr 15 06:56:30.783: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 1
  Apr 15 06:56:30.784: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2
  Apr 15 06:56:30.785: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 3
  Apr 15 06:56:30.785: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2
  Apr 15 06:56:30.786: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 2
  Apr 15 06:56:30.786: INFO: observed Deployment test-deployment in namespace deployment-57 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/15/24 06:56:30.787
  Apr 15 06:56:30.822: INFO: observed event type MODIFIED
  Apr 15 06:56:30.822: INFO: observed event type MODIFIED
  Apr 15 06:56:30.822: INFO: observed event type MODIFIED
  Apr 15 06:56:30.823: INFO: observed event type MODIFIED
  Apr 15 06:56:30.823: INFO: observed event type MODIFIED
  Apr 15 06:56:30.833: INFO: observed event type MODIFIED
  Apr 15 06:56:30.833: INFO: observed event type MODIFIED
  Apr 15 06:56:30.833: INFO: observed event type MODIFIED
  Apr 15 06:56:30.833: INFO: observed event type MODIFIED
  Apr 15 06:56:30.833: INFO: observed event type MODIFIED
  Apr 15 06:56:30.834: INFO: observed event type MODIFIED
  Apr 15 06:56:30.835: INFO: observed event type MODIFIED
  Apr 15 06:56:30.836: INFO: observed event type MODIFIED
  Apr 15 06:56:30.845: INFO: Log out all the ReplicaSets if there is no deployment created
  Apr 15 06:56:30.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-57" for this suite. @ 04/15/24 06:56:30.873
• [7.981 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 04/15/24 06:56:30.915
  Apr 15 06:56:30.915: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pod-network-test @ 04/15/24 06:56:30.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:56:31.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:56:31.024
  STEP: Performing setup for networking test in namespace pod-network-test-2150 @ 04/15/24 06:56:31.035
  STEP: creating a selector @ 04/15/24 06:56:31.036
  STEP: Creating the service pods in kubernetes @ 04/15/24 06:56:31.036
  Apr 15 06:56:31.036: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/15/24 06:56:53.384
  Apr 15 06:56:55.458: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 15 06:56:55.458: INFO: Going to poll 10.233.64.114 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 06:56:55.467: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.114:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2150 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 06:56:55.468: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 06:56:55.470: INFO: ExecWithOptions: Clientset creation
  Apr 15 06:56:55.471: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2150/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.114%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 06:56:55.704: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 15 06:56:55.706: INFO: Going to poll 10.233.65.119 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 06:56:55.714: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.119:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2150 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 06:56:55.715: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 06:56:55.719: INFO: ExecWithOptions: Clientset creation
  Apr 15 06:56:55.719: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2150/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.119%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 06:56:55.881: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 15 06:56:55.881: INFO: Going to poll 10.233.66.73 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 06:56:55.891: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.73:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2150 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 06:56:55.892: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 06:56:55.894: INFO: ExecWithOptions: Clientset creation
  Apr 15 06:56:55.895: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2150/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.73%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 15 06:56:56.017: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 15 06:56:56.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2150" for this suite. @ 04/15/24 06:56:56.032
• [25.133 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 04/15/24 06:56:56.051
  Apr 15 06:56:56.051: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 06:56:56.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:56:56.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:56:56.114
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 06:56:56.122
  STEP: Saw pod success @ 04/15/24 06:57:00.215
  Apr 15 06:57:00.221: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-32868fe0-6b3b-4373-8c37-a94de62c4fc7 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 06:57:00.246
  Apr 15 06:57:00.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7184" for this suite. @ 04/15/24 06:57:00.305
• [4.281 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 04/15/24 06:57:00.34
  Apr 15 06:57:00.340: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename server-version @ 04/15/24 06:57:00.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:57:00.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:57:00.425
  STEP: Request ServerVersion @ 04/15/24 06:57:00.433
  STEP: Confirm major version @ 04/15/24 06:57:00.44
  Apr 15 06:57:00.441: INFO: Major version: 1
  STEP: Confirm minor version @ 04/15/24 06:57:00.442
  Apr 15 06:57:00.443: INFO: cleanMinorVersion: 28
  Apr 15 06:57:00.443: INFO: Minor version: 28
  Apr 15 06:57:00.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-4142" for this suite. @ 04/15/24 06:57:00.457
• [0.133 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/15/24 06:57:00.475
  Apr 15 06:57:00.476: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename secrets @ 04/15/24 06:57:00.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:57:00.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:57:00.522
  Apr 15 06:57:00.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1644" for this suite. @ 04/15/24 06:57:00.664
• [0.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/15/24 06:57:00.719
  Apr 15 06:57:00.719: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename proxy @ 04/15/24 06:57:00.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:57:00.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:57:00.769
  Apr 15 06:57:00.775: INFO: Creating pod...
  Apr 15 06:57:02.836: INFO: Creating service...
  Apr 15 06:57:02.862: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/pods/agnhost/proxy?method=DELETE
  Apr 15 06:57:02.879: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 15 06:57:02.879: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/pods/agnhost/proxy?method=OPTIONS
  Apr 15 06:57:02.889: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 15 06:57:02.889: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/pods/agnhost/proxy?method=PATCH
  Apr 15 06:57:02.900: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 15 06:57:02.901: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/pods/agnhost/proxy?method=POST
  Apr 15 06:57:02.911: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 15 06:57:02.913: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/pods/agnhost/proxy?method=PUT
  Apr 15 06:57:02.922: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 15 06:57:02.923: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/services/e2e-proxy-test-service/proxy?method=DELETE
  Apr 15 06:57:02.935: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 15 06:57:02.936: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Apr 15 06:57:02.947: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 15 06:57:02.948: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/services/e2e-proxy-test-service/proxy?method=PATCH
  Apr 15 06:57:02.960: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 15 06:57:02.960: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/services/e2e-proxy-test-service/proxy?method=POST
  Apr 15 06:57:02.974: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 15 06:57:02.975: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/services/e2e-proxy-test-service/proxy?method=PUT
  Apr 15 06:57:02.989: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 15 06:57:02.990: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/pods/agnhost/proxy?method=GET
  Apr 15 06:57:02.995: INFO: http.Client request:GET StatusCode:301
  Apr 15 06:57:02.995: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/services/e2e-proxy-test-service/proxy?method=GET
  Apr 15 06:57:03.004: INFO: http.Client request:GET StatusCode:301
  Apr 15 06:57:03.004: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/pods/agnhost/proxy?method=HEAD
  Apr 15 06:57:03.012: INFO: http.Client request:HEAD StatusCode:301
  Apr 15 06:57:03.012: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-9503/services/e2e-proxy-test-service/proxy?method=HEAD
  Apr 15 06:57:03.022: INFO: http.Client request:HEAD StatusCode:301
  Apr 15 06:57:03.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9503" for this suite. @ 04/15/24 06:57:03.033
• [2.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/15/24 06:57:03.066
  Apr 15 06:57:03.066: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename events @ 04/15/24 06:57:03.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:57:03.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:57:03.108
  STEP: Create set of events @ 04/15/24 06:57:03.118
  STEP: get a list of Events with a label in the current namespace @ 04/15/24 06:57:03.144
  STEP: delete a list of events @ 04/15/24 06:57:03.152
  Apr 15 06:57:03.152: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/15/24 06:57:03.197
  Apr 15 06:57:03.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5265" for this suite. @ 04/15/24 06:57:03.212
• [0.158 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 04/15/24 06:57:03.227
  Apr 15 06:57:03.227: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename secrets @ 04/15/24 06:57:03.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:57:03.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:57:03.26
  STEP: Creating secret with name secret-test-73a5a4c0-669b-49a6-bdd8-51f7ddd97b44 @ 04/15/24 06:57:03.265
  STEP: Creating a pod to test consume secrets @ 04/15/24 06:57:03.274
  STEP: Saw pod success @ 04/15/24 06:57:07.319
  Apr 15 06:57:07.335: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-secrets-d5918160-f773-4b1f-9981-644959034d1d container secret-env-test: <nil>
  STEP: delete the pod @ 04/15/24 06:57:07.355
  Apr 15 06:57:07.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6384" for this suite. @ 04/15/24 06:57:07.427
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 04/15/24 06:57:07.451
  Apr 15 06:57:07.451: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 06:57:07.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:57:07.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:57:07.501
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7226 @ 04/15/24 06:57:07.516
  STEP: changing the ExternalName service to type=NodePort @ 04/15/24 06:57:07.527
  STEP: creating replication controller externalname-service in namespace services-7226 @ 04/15/24 06:57:07.577
  I0415 06:57:07.609821      15 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7226, replica count: 2
  I0415 06:57:10.661707      15 runners.go:197] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0415 06:57:13.662479      15 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 06:57:13.662: INFO: Creating new exec pod
  Apr 15 06:57:16.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7226 exec execpodl2jqn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 15 06:57:17.129: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 15 06:57:17.129: INFO: stdout: "externalname-service-4z6w7"
  Apr 15 06:57:17.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7226 exec execpodl2jqn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.39.48 80'
  Apr 15 06:57:17.400: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.39.48 80\nConnection to 10.233.39.48 80 port [tcp/http] succeeded!\n"
  Apr 15 06:57:17.400: INFO: stdout: ""
  Apr 15 06:57:18.402: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7226 exec execpodl2jqn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.39.48 80'
  Apr 15 06:57:18.678: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.39.48 80\nConnection to 10.233.39.48 80 port [tcp/http] succeeded!\n"
  Apr 15 06:57:18.678: INFO: stdout: "externalname-service-4z6w7"
  Apr 15 06:57:18.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7226 exec execpodl2jqn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.227 32655'
  Apr 15 06:57:18.952: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.227 32655\nConnection to 192.168.121.227 32655 port [tcp/*] succeeded!\n"
  Apr 15 06:57:18.952: INFO: stdout: "externalname-service-4z6w7"
  Apr 15 06:57:18.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7226 exec execpodl2jqn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.217 32655'
  Apr 15 06:57:19.257: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.217 32655\nConnection to 192.168.121.217 32655 port [tcp/*] succeeded!\n"
  Apr 15 06:57:19.257: INFO: stdout: "externalname-service-4z6w7"
  Apr 15 06:57:19.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 15 06:57:19.266: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-7226" for this suite. @ 04/15/24 06:57:19.369
• [11.936 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:640
  STEP: Creating a kubernetes client @ 04/15/24 06:57:19.401
  Apr 15 06:57:19.401: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 06:57:19.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:57:19.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:57:19.468
  STEP: Creating service test in namespace statefulset-9494 @ 04/15/24 06:57:19.474
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/15/24 06:57:19.483
  STEP: Creating stateful set ss in namespace statefulset-9494 @ 04/15/24 06:57:19.502
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9494 @ 04/15/24 06:57:19.531
  Apr 15 06:57:19.546: INFO: Found 0 stateful pods, waiting for 1
  Apr 15 06:57:29.556: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/15/24 06:57:29.556
  Apr 15 06:57:29.566: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-9494 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 06:57:29.853: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 06:57:29.853: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 06:57:29.853: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 06:57:29.859: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Apr 15 06:57:39.871: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 06:57:39.871: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 15 06:57:39.923: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999908s
  Apr 15 06:57:40.932: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.991609199s
  Apr 15 06:57:41.943: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.982294455s
  Apr 15 06:57:42.954: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.971514875s
  Apr 15 06:57:43.973: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.961037202s
  Apr 15 06:57:44.984: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.942133898s
  Apr 15 06:57:45.995: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.930930476s
  Apr 15 06:57:47.005: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.919174667s
  Apr 15 06:57:48.014: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.909848548s
  Apr 15 06:57:49.022: INFO: Verifying statefulset ss doesn't scale past 1 for another 901.652198ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9494 @ 04/15/24 06:57:50.023
  Apr 15 06:57:50.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-9494 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 06:57:50.313: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 06:57:50.313: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 06:57:50.313: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 06:57:50.321: INFO: Found 1 stateful pods, waiting for 3
  Apr 15 06:58:00.341: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 06:58:00.341: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 06:58:00.342: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/15/24 06:58:00.342
  STEP: Scale down will halt with unhealthy stateful pod @ 04/15/24 06:58:00.342
  Apr 15 06:58:00.364: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-9494 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 06:58:00.710: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 06:58:00.710: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 06:58:00.710: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 06:58:00.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-9494 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 06:58:01.093: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 06:58:01.093: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 06:58:01.093: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 06:58:01.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-9494 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 15 06:58:01.395: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 15 06:58:01.395: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 15 06:58:01.396: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 15 06:58:01.396: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 15 06:58:01.403: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Apr 15 06:58:11.425: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 06:58:11.426: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 06:58:11.426: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 15 06:58:11.455: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.99999944s
  Apr 15 06:58:12.465: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.9890764s
  Apr 15 06:58:13.476: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.979080729s
  Apr 15 06:58:14.485: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.968318953s
  Apr 15 06:58:15.493: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.958899677s
  Apr 15 06:58:16.517: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.9496786s
  Apr 15 06:58:17.532: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.926926536s
  Apr 15 06:58:18.544: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.911571884s
  Apr 15 06:58:19.556: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.899925093s
  Apr 15 06:58:20.568: INFO: Verifying statefulset ss doesn't scale past 3 for another 887.638952ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9494 @ 04/15/24 06:58:21.569
  Apr 15 06:58:21.580: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-9494 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 06:58:21.999: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 06:58:21.999: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 06:58:21.999: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 06:58:21.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-9494 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 06:58:22.320: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 06:58:22.320: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 06:58:22.320: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 06:58:22.320: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=statefulset-9494 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 15 06:58:22.674: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 15 06:58:22.674: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 15 06:58:22.674: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 15 06:58:22.674: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/15/24 06:58:32.708
  Apr 15 06:58:32.709: INFO: Deleting all statefulset in ns statefulset-9494
  Apr 15 06:58:32.715: INFO: Scaling statefulset ss to 0
  Apr 15 06:58:32.741: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 06:58:32.752: INFO: Deleting statefulset ss
  Apr 15 06:58:32.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9494" for this suite. @ 04/15/24 06:58:32.807
• [73.424 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 04/15/24 06:58:32.828
  Apr 15 06:58:32.828: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename events @ 04/15/24 06:58:32.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:58:32.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:58:32.875
  STEP: creating a test event @ 04/15/24 06:58:32.881
  STEP: listing all events in all namespaces @ 04/15/24 06:58:32.893
  STEP: patching the test event @ 04/15/24 06:58:32.938
  STEP: fetching the test event @ 04/15/24 06:58:32.953
  STEP: updating the test event @ 04/15/24 06:58:32.961
  STEP: getting the test event @ 04/15/24 06:58:32.98
  STEP: deleting the test event @ 04/15/24 06:58:32.989
  STEP: listing all events in all namespaces @ 04/15/24 06:58:33.005
  Apr 15 06:58:33.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1048" for this suite. @ 04/15/24 06:58:33.054
• [0.243 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 04/15/24 06:58:33.074
  Apr 15 06:58:33.074: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 06:58:33.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:58:33.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:58:33.125
  Apr 15 06:58:33.162: INFO: created pod pod-service-account-defaultsa
  Apr 15 06:58:33.163: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Apr 15 06:58:33.182: INFO: created pod pod-service-account-mountsa
  Apr 15 06:58:33.182: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Apr 15 06:58:33.216: INFO: created pod pod-service-account-nomountsa
  Apr 15 06:58:33.217: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Apr 15 06:58:33.241: INFO: created pod pod-service-account-defaultsa-mountspec
  Apr 15 06:58:33.241: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Apr 15 06:58:33.256: INFO: created pod pod-service-account-mountsa-mountspec
  Apr 15 06:58:33.256: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Apr 15 06:58:33.284: INFO: created pod pod-service-account-nomountsa-mountspec
  Apr 15 06:58:33.284: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Apr 15 06:58:33.299: INFO: created pod pod-service-account-defaultsa-nomountspec
  Apr 15 06:58:33.299: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Apr 15 06:58:33.322: INFO: created pod pod-service-account-mountsa-nomountspec
  Apr 15 06:58:33.322: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Apr 15 06:58:33.366: INFO: created pod pod-service-account-nomountsa-nomountspec
  Apr 15 06:58:33.367: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Apr 15 06:58:33.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-43" for this suite. @ 04/15/24 06:58:33.403
• [0.386 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 04/15/24 06:58:33.466
  Apr 15 06:58:33.467: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 06:58:33.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:58:33.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:58:33.555
  Apr 15 06:58:33.559: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  W0415 06:58:36.325211      15 warnings.go:70] unknown field "alpha"
  W0415 06:58:36.325274      15 warnings.go:70] unknown field "beta"
  W0415 06:58:36.325288      15 warnings.go:70] unknown field "delta"
  W0415 06:58:36.325298      15 warnings.go:70] unknown field "epsilon"
  W0415 06:58:36.325308      15 warnings.go:70] unknown field "gamma"
  Apr 15 06:58:36.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8815" for this suite. @ 04/15/24 06:58:36.928
• [3.484 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 04/15/24 06:58:36.952
  Apr 15 06:58:36.952: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 06:58:36.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:58:36.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:58:36.984
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 06:58:36.99
  STEP: Saw pod success @ 04/15/24 06:58:41.039
  Apr 15 06:58:41.058: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-1028beca-19ec-4768-887c-4bda3ed4a6b0 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 06:58:41.092
  Apr 15 06:58:41.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5609" for this suite. @ 04/15/24 06:58:41.138
• [4.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 04/15/24 06:58:41.16
  Apr 15 06:58:41.160: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename gc @ 04/15/24 06:58:41.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:58:41.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:58:41.202
  STEP: create the rc1 @ 04/15/24 06:58:41.217
  STEP: create the rc2 @ 04/15/24 06:58:41.228
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/15/24 06:58:47.269
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/15/24 06:58:51.728
  STEP: wait for the rc to be deleted @ 04/15/24 06:58:51.837
  Apr 15 06:58:56.953: INFO: 68 pods remaining
  Apr 15 06:58:56.953: INFO: 68 pods has nil DeletionTimestamp
  Apr 15 06:58:56.953: INFO: 
  STEP: Gathering metrics @ 04/15/24 06:59:01.873
  Apr 15 06:59:02.178: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 06:59:02.183: INFO: Deleting pod "simpletest-rc-to-be-deleted-24f4m" in namespace "gc-6661"
  Apr 15 06:59:02.230: INFO: Deleting pod "simpletest-rc-to-be-deleted-2d2mt" in namespace "gc-6661"
  Apr 15 06:59:02.290: INFO: Deleting pod "simpletest-rc-to-be-deleted-2dxn2" in namespace "gc-6661"
  Apr 15 06:59:02.333: INFO: Deleting pod "simpletest-rc-to-be-deleted-2g8wm" in namespace "gc-6661"
  Apr 15 06:59:02.388: INFO: Deleting pod "simpletest-rc-to-be-deleted-2jvsj" in namespace "gc-6661"
  Apr 15 06:59:02.423: INFO: Deleting pod "simpletest-rc-to-be-deleted-2mk54" in namespace "gc-6661"
  Apr 15 06:59:02.502: INFO: Deleting pod "simpletest-rc-to-be-deleted-2vv7w" in namespace "gc-6661"
  Apr 15 06:59:02.564: INFO: Deleting pod "simpletest-rc-to-be-deleted-46fz6" in namespace "gc-6661"
  Apr 15 06:59:02.621: INFO: Deleting pod "simpletest-rc-to-be-deleted-46j6z" in namespace "gc-6661"
  Apr 15 06:59:02.690: INFO: Deleting pod "simpletest-rc-to-be-deleted-4d8sx" in namespace "gc-6661"
  Apr 15 06:59:02.827: INFO: Deleting pod "simpletest-rc-to-be-deleted-4swhc" in namespace "gc-6661"
  Apr 15 06:59:03.044: INFO: Deleting pod "simpletest-rc-to-be-deleted-4t4v4" in namespace "gc-6661"
  Apr 15 06:59:03.135: INFO: Deleting pod "simpletest-rc-to-be-deleted-4vl48" in namespace "gc-6661"
  Apr 15 06:59:03.180: INFO: Deleting pod "simpletest-rc-to-be-deleted-4zv8f" in namespace "gc-6661"
  Apr 15 06:59:03.242: INFO: Deleting pod "simpletest-rc-to-be-deleted-599vz" in namespace "gc-6661"
  Apr 15 06:59:03.301: INFO: Deleting pod "simpletest-rc-to-be-deleted-5kd95" in namespace "gc-6661"
  Apr 15 06:59:03.352: INFO: Deleting pod "simpletest-rc-to-be-deleted-5xmh5" in namespace "gc-6661"
  Apr 15 06:59:03.569: INFO: Deleting pod "simpletest-rc-to-be-deleted-5zlqj" in namespace "gc-6661"
  Apr 15 06:59:03.748: INFO: Deleting pod "simpletest-rc-to-be-deleted-6xwcw" in namespace "gc-6661"
  Apr 15 06:59:03.903: INFO: Deleting pod "simpletest-rc-to-be-deleted-797z7" in namespace "gc-6661"
  Apr 15 06:59:04.057: INFO: Deleting pod "simpletest-rc-to-be-deleted-7c52m" in namespace "gc-6661"
  Apr 15 06:59:04.167: INFO: Deleting pod "simpletest-rc-to-be-deleted-7kjxn" in namespace "gc-6661"
  Apr 15 06:59:04.271: INFO: Deleting pod "simpletest-rc-to-be-deleted-7vzdc" in namespace "gc-6661"
  Apr 15 06:59:04.437: INFO: Deleting pod "simpletest-rc-to-be-deleted-85xxw" in namespace "gc-6661"
  Apr 15 06:59:04.633: INFO: Deleting pod "simpletest-rc-to-be-deleted-888mj" in namespace "gc-6661"
  Apr 15 06:59:04.704: INFO: Deleting pod "simpletest-rc-to-be-deleted-8b9d6" in namespace "gc-6661"
  Apr 15 06:59:04.796: INFO: Deleting pod "simpletest-rc-to-be-deleted-8gdq8" in namespace "gc-6661"
  Apr 15 06:59:04.900: INFO: Deleting pod "simpletest-rc-to-be-deleted-8hg44" in namespace "gc-6661"
  Apr 15 06:59:05.007: INFO: Deleting pod "simpletest-rc-to-be-deleted-8nlmx" in namespace "gc-6661"
  Apr 15 06:59:05.067: INFO: Deleting pod "simpletest-rc-to-be-deleted-8ws4z" in namespace "gc-6661"
  Apr 15 06:59:05.183: INFO: Deleting pod "simpletest-rc-to-be-deleted-94rs9" in namespace "gc-6661"
  Apr 15 06:59:05.264: INFO: Deleting pod "simpletest-rc-to-be-deleted-97p5k" in namespace "gc-6661"
  Apr 15 06:59:05.313: INFO: Deleting pod "simpletest-rc-to-be-deleted-99plk" in namespace "gc-6661"
  Apr 15 06:59:05.379: INFO: Deleting pod "simpletest-rc-to-be-deleted-9l7xx" in namespace "gc-6661"
  Apr 15 06:59:05.435: INFO: Deleting pod "simpletest-rc-to-be-deleted-9mmbs" in namespace "gc-6661"
  Apr 15 06:59:05.484: INFO: Deleting pod "simpletest-rc-to-be-deleted-bmvmh" in namespace "gc-6661"
  Apr 15 06:59:05.568: INFO: Deleting pod "simpletest-rc-to-be-deleted-bspgc" in namespace "gc-6661"
  Apr 15 06:59:05.660: INFO: Deleting pod "simpletest-rc-to-be-deleted-c66nt" in namespace "gc-6661"
  Apr 15 06:59:05.757: INFO: Deleting pod "simpletest-rc-to-be-deleted-c96b9" in namespace "gc-6661"
  Apr 15 06:59:05.792: INFO: Deleting pod "simpletest-rc-to-be-deleted-ccmgs" in namespace "gc-6661"
  Apr 15 06:59:05.878: INFO: Deleting pod "simpletest-rc-to-be-deleted-cfw57" in namespace "gc-6661"
  Apr 15 06:59:06.064: INFO: Deleting pod "simpletest-rc-to-be-deleted-clv65" in namespace "gc-6661"
  Apr 15 06:59:06.166: INFO: Deleting pod "simpletest-rc-to-be-deleted-cr5s5" in namespace "gc-6661"
  Apr 15 06:59:06.272: INFO: Deleting pod "simpletest-rc-to-be-deleted-crt46" in namespace "gc-6661"
  Apr 15 06:59:06.438: INFO: Deleting pod "simpletest-rc-to-be-deleted-ct8qs" in namespace "gc-6661"
  Apr 15 06:59:06.529: INFO: Deleting pod "simpletest-rc-to-be-deleted-d5cht" in namespace "gc-6661"
  Apr 15 06:59:06.630: INFO: Deleting pod "simpletest-rc-to-be-deleted-dklsv" in namespace "gc-6661"
  Apr 15 06:59:06.732: INFO: Deleting pod "simpletest-rc-to-be-deleted-dlfxb" in namespace "gc-6661"
  Apr 15 06:59:06.797: INFO: Deleting pod "simpletest-rc-to-be-deleted-dmbg2" in namespace "gc-6661"
  Apr 15 06:59:06.853: INFO: Deleting pod "simpletest-rc-to-be-deleted-dq5sn" in namespace "gc-6661"
  Apr 15 06:59:06.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6661" for this suite. @ 04/15/24 06:59:06.907
• [25.766 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 04/15/24 06:59:06.93
  Apr 15 06:59:06.930: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename crd-webhook @ 04/15/24 06:59:06.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:59:06.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:59:07.002
  STEP: Setting up server cert @ 04/15/24 06:59:07.012
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/15/24 06:59:08.587
  STEP: Deploying the custom resource conversion webhook pod @ 04/15/24 06:59:08.616
  STEP: Wait for the deployment to be ready @ 04/15/24 06:59:08.642
  Apr 15 06:59:08.679: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/15/24 06:59:10.703
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 06:59:10.737
  Apr 15 06:59:11.738: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 15 06:59:11.753: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Creating a v1 custom resource @ 04/15/24 06:59:14.648
  STEP: Create a v2 custom resource @ 04/15/24 06:59:14.685
  STEP: List CRs in v1 @ 04/15/24 06:59:14.982
  STEP: List CRs in v2 @ 04/15/24 06:59:15.019
  Apr 15 06:59:15.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9706" for this suite. @ 04/15/24 06:59:15.997
• [9.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 04/15/24 06:59:16.036
  Apr 15 06:59:16.036: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 06:59:16.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:59:16.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:59:16.198
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 06:59:16.204
  STEP: Saw pod success @ 04/15/24 06:59:20.265
  Apr 15 06:59:20.271: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-a2483937-8e31-42d9-b281-eed5ee556523 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 06:59:20.288
  Apr 15 06:59:20.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9160" for this suite. @ 04/15/24 06:59:20.335
• [4.320 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/15/24 06:59:20.357
  Apr 15 06:59:20.357: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 06:59:20.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:59:20.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:59:20.402
  Apr 15 06:59:20.460: INFO: Create a RollingUpdate DaemonSet
  Apr 15 06:59:20.470: INFO: Check that daemon pods launch on every node of the cluster
  Apr 15 06:59:20.522: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 06:59:20.522: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  Apr 15 06:59:21.548: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 06:59:21.548: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  Apr 15 06:59:22.540: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 06:59:22.541: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Apr 15 06:59:22.541: INFO: Update the DaemonSet to trigger a rollout
  Apr 15 06:59:22.559: INFO: Updating DaemonSet daemon-set
  Apr 15 06:59:25.603: INFO: Roll back the DaemonSet before rollout is complete
  Apr 15 06:59:25.632: INFO: Updating DaemonSet daemon-set
  Apr 15 06:59:25.633: INFO: Make sure DaemonSet rollback is complete
  Apr 15 06:59:25.644: INFO: Wrong image for pod: daemon-set-tsc2h. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Apr 15 06:59:25.644: INFO: Pod daemon-set-tsc2h is not available
  Apr 15 06:59:30.670: INFO: Pod daemon-set-8sf6t is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 06:59:30.702
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9971, will wait for the garbage collector to delete the pods @ 04/15/24 06:59:30.702
  Apr 15 06:59:30.793: INFO: Deleting DaemonSet.extensions daemon-set took: 20.558629ms
  Apr 15 06:59:30.996: INFO: Terminating DaemonSet.extensions daemon-set pods took: 202.96779ms
  Apr 15 06:59:33.505: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 06:59:33.505: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 06:59:33.512: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"159725"},"items":null}

  Apr 15 06:59:33.525: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"159725"},"items":null}

  Apr 15 06:59:33.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9971" for this suite. @ 04/15/24 06:59:33.574
• [13.235 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:1030
  STEP: Creating a kubernetes client @ 04/15/24 06:59:33.594
  Apr 15 06:59:33.595: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 06:59:33.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:59:33.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:59:33.631
  STEP: Creating service test in namespace statefulset-6530 @ 04/15/24 06:59:33.636
  STEP: Creating statefulset ss in namespace statefulset-6530 @ 04/15/24 06:59:33.654
  Apr 15 06:59:33.675: INFO: Found 0 stateful pods, waiting for 1
  Apr 15 06:59:43.681: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/15/24 06:59:43.69
  STEP: Getting /status @ 04/15/24 06:59:43.708
  Apr 15 06:59:43.715: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/15/24 06:59:43.716
  Apr 15 06:59:43.752: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/15/24 06:59:43.752
  Apr 15 06:59:43.756: INFO: Observed &StatefulSet event: ADDED
  Apr 15 06:59:43.756: INFO: Found Statefulset ss in namespace statefulset-6530 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 06:59:43.757: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/15/24 06:59:43.762
  Apr 15 06:59:43.762: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 15 06:59:43.781: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/15/24 06:59:43.781
  Apr 15 06:59:43.784: INFO: Observed &StatefulSet event: ADDED
  Apr 15 06:59:43.784: INFO: Observed Statefulset ss in namespace statefulset-6530 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 06:59:43.785: INFO: Observed &StatefulSet event: MODIFIED
  Apr 15 06:59:43.786: INFO: Deleting all statefulset in ns statefulset-6530
  Apr 15 06:59:43.800: INFO: Scaling statefulset ss to 0
  Apr 15 06:59:53.851: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 06:59:53.859: INFO: Deleting statefulset ss
  Apr 15 06:59:53.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6530" for this suite. @ 04/15/24 06:59:53.9
• [20.325 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 04/15/24 06:59:53.921
  Apr 15 06:59:53.921: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 06:59:53.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:59:53.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:59:53.959
  STEP: validating api versions @ 04/15/24 06:59:53.963
  Apr 15 06:59:53.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-6351 api-versions'
  Apr 15 06:59:54.115: INFO: stderr: ""
  Apr 15 06:59:54.115: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Apr 15 06:59:54.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6351" for this suite. @ 04/15/24 06:59:54.127
• [0.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 04/15/24 06:59:54.149
  Apr 15 06:59:54.149: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubelet-test @ 04/15/24 06:59:54.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:59:54.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:59:54.186
  STEP: Waiting for pod completion @ 04/15/24 06:59:54.209
  Apr 15 06:59:58.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3444" for this suite. @ 04/15/24 06:59:58.278
• [4.144 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 04/15/24 06:59:58.299
  Apr 15 06:59:58.299: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 06:59:58.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 06:59:58.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 06:59:58.34
  Apr 15 06:59:58.347: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  W0415 07:00:01.147118      15 warnings.go:70] unknown field "alpha"
  W0415 07:00:01.147222      15 warnings.go:70] unknown field "beta"
  W0415 07:00:01.147248      15 warnings.go:70] unknown field "delta"
  W0415 07:00:01.147274      15 warnings.go:70] unknown field "epsilon"
  W0415 07:00:01.147332      15 warnings.go:70] unknown field "gamma"
  Apr 15 07:00:01.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6145" for this suite. @ 04/15/24 07:00:01.772
• [3.487 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 04/15/24 07:00:01.79
  Apr 15 07:00:01.791: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:00:01.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:00:01.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:00:01.833
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:00:01.838
  STEP: Saw pod success @ 04/15/24 07:00:05.884
  Apr 15 07:00:05.891: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-078d5110-3b33-4a2c-b820-350afd92cc19 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:00:05.905
  Apr 15 07:00:05.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4789" for this suite. @ 04/15/24 07:00:05.952
• [4.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:901
  STEP: Creating a kubernetes client @ 04/15/24 07:00:05.998
  Apr 15 07:00:05.998: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 07:00:06.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:00:06.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:00:06.049
  STEP: Creating service test in namespace statefulset-9475 @ 04/15/24 07:00:06.056
  STEP: Creating statefulset ss in namespace statefulset-9475 @ 04/15/24 07:00:06.069
  Apr 15 07:00:06.098: INFO: Found 0 stateful pods, waiting for 1
  Apr 15 07:00:16.112: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/15/24 07:00:16.126
  STEP: updating a scale subresource @ 04/15/24 07:00:16.133
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/15/24 07:00:16.15
  STEP: Patch a scale subresource @ 04/15/24 07:00:16.171
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/15/24 07:00:16.204
  Apr 15 07:00:16.274: INFO: Deleting all statefulset in ns statefulset-9475
  Apr 15 07:00:16.286: INFO: Scaling statefulset ss to 0
  Apr 15 07:00:26.326: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 07:00:26.333: INFO: Deleting statefulset ss
  Apr 15 07:00:26.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9475" for this suite. @ 04/15/24 07:00:26.373
• [20.392 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 04/15/24 07:00:26.404
  Apr 15 07:00:26.404: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:00:26.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:00:26.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:00:26.448
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/15/24 07:00:26.453
  STEP: Saw pod success @ 04/15/24 07:00:30.492
  Apr 15 07:00:30.500: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-1f9abef5-9016-4196-9c2d-a946213bb377 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:00:30.517
  Apr 15 07:00:30.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2529" for this suite. @ 04/15/24 07:00:30.557
• [4.169 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/15/24 07:00:30.574
  Apr 15 07:00:30.575: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 07:00:30.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:00:30.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:00:30.61
  Apr 15 07:00:30.656: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 07:00:30.667
  Apr 15 07:00:30.698: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 07:00:30.698: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  Apr 15 07:00:31.759: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 07:00:31.759: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  Apr 15 07:00:32.719: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 07:00:32.720: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/15/24 07:00:32.748
  STEP: Check that daemon pods images are updated. @ 04/15/24 07:00:32.784
  Apr 15 07:00:32.811: INFO: Wrong image for pod: daemon-set-dbr7h. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:00:32.811: INFO: Wrong image for pod: daemon-set-s6jjm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:00:32.811: INFO: Wrong image for pod: daemon-set-thsfz. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:00:33.837: INFO: Pod daemon-set-4zk5t is not available
  Apr 15 07:00:33.838: INFO: Wrong image for pod: daemon-set-dbr7h. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:00:33.838: INFO: Wrong image for pod: daemon-set-s6jjm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:00:34.836: INFO: Wrong image for pod: daemon-set-s6jjm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:00:35.845: INFO: Pod daemon-set-b76j5 is not available
  Apr 15 07:00:35.846: INFO: Wrong image for pod: daemon-set-s6jjm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 15 07:00:37.839: INFO: Pod daemon-set-qdgvg is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/15/24 07:00:37.848
  Apr 15 07:00:37.864: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 07:00:37.865: INFO: Node thuchow3cah4-2 is running 0 daemon pod, expected 1
  Apr 15 07:00:38.891: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 07:00:38.891: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 07:00:38.93
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5010, will wait for the garbage collector to delete the pods @ 04/15/24 07:00:38.93
  Apr 15 07:00:39.001: INFO: Deleting DaemonSet.extensions daemon-set took: 12.553194ms
  Apr 15 07:00:39.102: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.120661ms
  Apr 15 07:00:41.918: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 07:00:41.918: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 07:00:41.932: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"160232"},"items":null}

  Apr 15 07:00:41.938: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"160232"},"items":null}

  Apr 15 07:00:41.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5010" for this suite. @ 04/15/24 07:00:41.994
• [11.432 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/15/24 07:00:42.008
  Apr 15 07:00:42.008: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename watch @ 04/15/24 07:00:42.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:00:42.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:00:42.052
  STEP: creating a watch on configmaps with a certain label @ 04/15/24 07:00:42.059
  STEP: creating a new configmap @ 04/15/24 07:00:42.061
  STEP: modifying the configmap once @ 04/15/24 07:00:42.072
  STEP: changing the label value of the configmap @ 04/15/24 07:00:42.086
  STEP: Expecting to observe a delete notification for the watched object @ 04/15/24 07:00:42.1
  Apr 15 07:00:42.101: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6967  0d084524-fd83-4ee4-abd9-9d58f3803d41 160238 0 2024-04-15 07:00:42 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 07:00:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:00:42.102: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6967  0d084524-fd83-4ee4-abd9-9d58f3803d41 160239 0 2024-04-15 07:00:42 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 07:00:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:00:42.103: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6967  0d084524-fd83-4ee4-abd9-9d58f3803d41 160240 0 2024-04-15 07:00:42 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 07:00:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/15/24 07:00:42.104
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/15/24 07:00:42.121
  STEP: changing the label value of the configmap back @ 04/15/24 07:00:52.121
  STEP: modifying the configmap a third time @ 04/15/24 07:00:52.158
  STEP: deleting the configmap @ 04/15/24 07:00:52.198
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/15/24 07:00:52.242
  Apr 15 07:00:52.243: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6967  0d084524-fd83-4ee4-abd9-9d58f3803d41 160301 0 2024-04-15 07:00:42 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 07:00:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:00:52.243: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6967  0d084524-fd83-4ee4-abd9-9d58f3803d41 160303 0 2024-04-15 07:00:42 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 07:00:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:00:52.244: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6967  0d084524-fd83-4ee4-abd9-9d58f3803d41 160304 0 2024-04-15 07:00:42 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-15 07:00:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:00:52.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6967" for this suite. @ 04/15/24 07:00:52.261
• [10.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 04/15/24 07:00:52.284
  Apr 15 07:00:52.284: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 07:00:52.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:00:52.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:00:52.328
  STEP: Creating pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199 @ 04/15/24 07:00:52.337
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 07:00:54.404
  Apr 15 07:00:54.411: INFO: Initial restart count of pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 is 0
  Apr 15 07:00:54.417: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:00:56.425: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:00:58.434: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:00.446: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:02.455: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:04.469: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:06.476: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:08.483: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:10.492: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:12.513: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:14.523: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:16.534: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:18.543: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:20.556: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:22.568: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:24.576: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:26.585: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:28.596: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:30.604: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:32.621: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:34.629: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:36.639: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:38.647: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:40.655: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:42.666: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:44.679: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:46.690: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:48.700: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:50.710: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:52.720: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:54.731: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:56.739: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:01:58.753: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:00.760: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:02.775: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:04.786: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:06.795: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:08.809: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:10.816: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:12.826: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:14.835: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:16.846: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:18.853: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:20.861: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:22.873: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:24.883: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:26.892: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:28.901: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:30.922: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:32.935: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:34.942: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:36.953: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:38.962: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:40.973: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:42.984: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:44.993: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:47.003: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:49.012: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:51.022: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:53.036: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:55.045: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:57.055: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:02:59.064: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:01.074: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:03.084: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:05.102: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:07.111: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:09.120: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:11.131: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:13.142: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:15.152: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:17.164: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:19.172: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:21.180: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:23.192: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:25.202: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:27.212: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:29.226: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:31.239: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:33.251: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:35.263: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:37.270: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:39.278: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:41.287: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:43.295: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:45.311: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:47.319: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:49.327: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:51.339: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:53.348: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:55.390: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:57.403: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:03:59.416: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:01.428: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:03.441: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:05.451: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:07.461: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:09.473: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:11.490: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:13.502: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:15.517: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:17.530: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:19.539: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:21.548: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:23.561: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:25.574: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:27.585: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:29.595: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:31.603: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:33.617: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:35.667: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:37.676: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:39.684: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:41.695: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:43.704: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:45.713: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:47.726: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:49.738: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:51.746: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:53.758: INFO: Get pod liveness-0098a788-7986-421c-aae4-b0a081a398c6 in namespace container-probe-8199
  Apr 15 07:04:55.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/15/24 07:04:55.776
  STEP: Destroying namespace "container-probe-8199" for this suite. @ 04/15/24 07:04:55.806
• [243.564 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 04/15/24 07:04:55.868
  Apr 15 07:04:55.869: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:04:55.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:04:55.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:04:55.946
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/15/24 07:04:55.963
  STEP: Saw pod success @ 04/15/24 07:05:00.018
  Apr 15 07:05:00.024: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-0c4725e1-6040-4d7b-a6e6-ec83a03e41a1 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:05:00.066
  Apr 15 07:05:00.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6528" for this suite. @ 04/15/24 07:05:00.117
• [4.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 04/15/24 07:05:00.138
  Apr 15 07:05:00.138: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename podtemplate @ 04/15/24 07:05:00.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:00.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:00.197
  STEP: Create set of pod templates @ 04/15/24 07:05:00.207
  Apr 15 07:05:00.255: INFO: created test-podtemplate-1
  Apr 15 07:05:00.268: INFO: created test-podtemplate-2
  Apr 15 07:05:00.279: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/15/24 07:05:00.279
  STEP: delete collection of pod templates @ 04/15/24 07:05:00.291
  Apr 15 07:05:00.292: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/15/24 07:05:00.332
  Apr 15 07:05:00.332: INFO: requesting list of pod templates to confirm quantity
  Apr 15 07:05:00.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8919" for this suite. @ 04/15/24 07:05:00.352
• [0.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 04/15/24 07:05:00.375
  Apr 15 07:05:00.375: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename endpointslice @ 04/15/24 07:05:00.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:00.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:00.426
  Apr 15 07:05:00.474: INFO: Endpoints addresses: [192.168.121.217 192.168.121.227] , ports: [6443]
  Apr 15 07:05:00.474: INFO: EndpointSlices addresses: [192.168.121.217 192.168.121.227] , ports: [6443]
  Apr 15 07:05:00.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3669" for this suite. @ 04/15/24 07:05:00.486
• [0.128 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 04/15/24 07:05:00.505
  Apr 15 07:05:00.505: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 07:05:00.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:00.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:00.548
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2636 @ 04/15/24 07:05:00.554
  STEP: changing the ExternalName service to type=ClusterIP @ 04/15/24 07:05:00.569
  STEP: creating replication controller externalname-service in namespace services-2636 @ 04/15/24 07:05:00.621
  I0415 07:05:00.648193      15 runners.go:197] Created replication controller with name: externalname-service, namespace: services-2636, replica count: 2
  I0415 07:05:03.702890      15 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 07:05:03.703: INFO: Creating new exec pod
  Apr 15 07:05:06.743: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-2636 exec execpodwzb8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 15 07:05:07.169: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 15 07:05:07.169: INFO: stdout: ""
  Apr 15 07:05:08.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-2636 exec execpodwzb8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 15 07:05:08.468: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 15 07:05:08.468: INFO: stdout: ""
  Apr 15 07:05:09.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-2636 exec execpodwzb8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 15 07:05:09.462: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 15 07:05:09.462: INFO: stdout: ""
  Apr 15 07:05:10.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-2636 exec execpodwzb8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 15 07:05:10.478: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 15 07:05:10.479: INFO: stdout: ""
  Apr 15 07:05:11.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-2636 exec execpodwzb8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 15 07:05:11.485: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 15 07:05:11.485: INFO: stdout: ""
  Apr 15 07:05:12.176: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-2636 exec execpodwzb8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 15 07:05:12.486: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 15 07:05:12.486: INFO: stdout: "externalname-service-pj9sl"
  Apr 15 07:05:12.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-2636 exec execpodwzb8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.17.22 80'
  Apr 15 07:05:12.761: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.17.22 80\nConnection to 10.233.17.22 80 port [tcp/http] succeeded!\n"
  Apr 15 07:05:12.761: INFO: stdout: "externalname-service-pj9sl"
  Apr 15 07:05:12.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 15 07:05:12.787: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-2636" for this suite. @ 04/15/24 07:05:12.862
• [12.380 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 04/15/24 07:05:12.896
  Apr 15 07:05:12.897: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename sysctl @ 04/15/24 07:05:12.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:12.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:12.946
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/15/24 07:05:12.952
  STEP: Watching for error events or started pod @ 04/15/24 07:05:12.986
  STEP: Waiting for pod completion @ 04/15/24 07:05:14.994
  STEP: Checking that the pod succeeded @ 04/15/24 07:05:17.024
  STEP: Getting logs from the pod @ 04/15/24 07:05:17.024
  STEP: Checking that the sysctl is actually updated @ 04/15/24 07:05:17.051
  Apr 15 07:05:17.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1669" for this suite. @ 04/15/24 07:05:17.074
• [4.203 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 04/15/24 07:05:17.107
  Apr 15 07:05:17.107: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 07:05:17.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:17.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:17.181
  STEP: Creating replication controller my-hostname-basic-026ce344-1503-4a5f-abf9-431b5c40f719 @ 04/15/24 07:05:17.191
  Apr 15 07:05:17.220: INFO: Pod name my-hostname-basic-026ce344-1503-4a5f-abf9-431b5c40f719: Found 0 pods out of 1
  Apr 15 07:05:22.227: INFO: Pod name my-hostname-basic-026ce344-1503-4a5f-abf9-431b5c40f719: Found 1 pods out of 1
  Apr 15 07:05:22.227: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-026ce344-1503-4a5f-abf9-431b5c40f719" are running
  Apr 15 07:05:22.239: INFO: Pod "my-hostname-basic-026ce344-1503-4a5f-abf9-431b5c40f719-65w6m" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:05:17 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:05:18 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:05:18 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-15 07:05:17 +0000 UTC Reason: Message:}])
  Apr 15 07:05:22.239: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/15/24 07:05:22.239
  Apr 15 07:05:22.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-213" for this suite. @ 04/15/24 07:05:22.288
• [5.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 04/15/24 07:05:22.324
  Apr 15 07:05:22.324: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename gc @ 04/15/24 07:05:22.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:22.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:22.366
  STEP: create the deployment @ 04/15/24 07:05:22.375
  W0415 07:05:22.388098      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/15/24 07:05:22.389
  STEP: delete the deployment @ 04/15/24 07:05:22.931
  STEP: wait for all rs to be garbage collected @ 04/15/24 07:05:22.949
  STEP: expected 0 rs, got 1 rs @ 04/15/24 07:05:22.976
  STEP: expected 0 pods, got 2 pods @ 04/15/24 07:05:22.996
  STEP: Gathering metrics @ 04/15/24 07:05:23.518
  Apr 15 07:05:23.758: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 07:05:23.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2416" for this suite. @ 04/15/24 07:05:23.786
• [1.476 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/15/24 07:05:23.805
  Apr 15 07:05:23.805: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pods @ 04/15/24 07:05:23.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:23.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:23.849
  STEP: creating pod @ 04/15/24 07:05:23.856
  Apr 15 07:05:25.914: INFO: Pod pod-hostip-83355bd5-d260-4326-bf77-649f11b58c26 has hostIP: 192.168.121.252
  Apr 15 07:05:25.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5182" for this suite. @ 04/15/24 07:05:25.926
• [2.135 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/15/24 07:05:25.942
  Apr 15 07:05:25.942: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename secrets @ 04/15/24 07:05:25.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:25.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:25.986
  STEP: Creating secret with name secret-test-5e6c87fa-b7bc-4743-9ed9-15ba848598d5 @ 04/15/24 07:05:26
  STEP: Creating a pod to test consume secrets @ 04/15/24 07:05:26.016
  STEP: Saw pod success @ 04/15/24 07:05:30.074
  Apr 15 07:05:30.081: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-secrets-7a0566fb-4aa4-4857-84cb-0bb578b601db container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:05:30.097
  Apr 15 07:05:30.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1656" for this suite. @ 04/15/24 07:05:30.139
• [4.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 04/15/24 07:05:30.156
  Apr 15 07:05:30.156: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename dns @ 04/15/24 07:05:30.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:30.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:30.193
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/15/24 07:05:30.2
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/15/24 07:05:30.2
  STEP: creating a pod to probe DNS @ 04/15/24 07:05:30.2
  STEP: submitting the pod to kubernetes @ 04/15/24 07:05:30.2
  STEP: retrieving the pod @ 04/15/24 07:05:32.241
  STEP: looking for the results for each expected name from probers @ 04/15/24 07:05:32.249
  Apr 15 07:05:32.287: INFO: DNS probes using dns-6092/dns-test-6cdb2af1-f8cc-4eb4-850b-d1cb63397e11 succeeded

  Apr 15 07:05:32.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/15/24 07:05:32.3
  STEP: Destroying namespace "dns-6092" for this suite. @ 04/15/24 07:05:32.333
• [2.194 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 04/15/24 07:05:32.351
  Apr 15 07:05:32.351: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 07:05:32.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:32.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:32.394
  STEP: Counting existing ResourceQuota @ 04/15/24 07:05:32.401
  STEP: Creating a ResourceQuota @ 04/15/24 07:05:37.413
  STEP: Ensuring resource quota status is calculated @ 04/15/24 07:05:37.424
  STEP: Creating a Pod that fits quota @ 04/15/24 07:05:39.432
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/15/24 07:05:39.477
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/15/24 07:05:41.491
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/15/24 07:05:41.499
  STEP: Ensuring a pod cannot update its resource requirements @ 04/15/24 07:05:41.526
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/15/24 07:05:41.544
  STEP: Deleting the pod @ 04/15/24 07:05:43.556
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 07:05:43.586
  Apr 15 07:05:45.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-325" for this suite. @ 04/15/24 07:05:45.627
• [13.295 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/15/24 07:05:45.648
  Apr 15 07:05:45.648: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename watch @ 04/15/24 07:05:45.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:45.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:45.697
  STEP: creating a watch on configmaps @ 04/15/24 07:05:45.702
  STEP: creating a new configmap @ 04/15/24 07:05:45.707
  STEP: modifying the configmap once @ 04/15/24 07:05:45.73
  STEP: closing the watch once it receives two notifications @ 04/15/24 07:05:45.748
  Apr 15 07:05:45.748: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-74  7fb2377d-557b-4706-ac77-0dc27c1db6e4 161164 0 2024-04-15 07:05:45 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-15 07:05:45 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:05:45.751: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-74  7fb2377d-557b-4706-ac77-0dc27c1db6e4 161166 0 2024-04-15 07:05:45 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-15 07:05:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/15/24 07:05:45.751
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/15/24 07:05:45.769
  STEP: deleting the configmap @ 04/15/24 07:05:45.771
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/15/24 07:05:45.806
  Apr 15 07:05:45.806: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-74  7fb2377d-557b-4706-ac77-0dc27c1db6e4 161167 0 2024-04-15 07:05:45 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-15 07:05:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:05:45.807: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-74  7fb2377d-557b-4706-ac77-0dc27c1db6e4 161170 0 2024-04-15 07:05:45 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-15 07:05:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:05:45.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-74" for this suite. @ 04/15/24 07:05:45.82
• [0.199 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 04/15/24 07:05:45.848
  Apr 15 07:05:45.848: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 07:05:45.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:45.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:45.923
  STEP: creating a Service @ 04/15/24 07:05:45.943
  STEP: watching for the Service to be added @ 04/15/24 07:05:45.965
  Apr 15 07:05:45.974: INFO: Found Service test-service-vfgcx in namespace services-1097 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Apr 15 07:05:45.975: INFO: Service test-service-vfgcx created
  STEP: Getting /status @ 04/15/24 07:05:45.975
  Apr 15 07:05:45.991: INFO: Service test-service-vfgcx has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/15/24 07:05:45.992
  STEP: watching for the Service to be patched @ 04/15/24 07:05:46.01
  Apr 15 07:05:46.015: INFO: observed Service test-service-vfgcx in namespace services-1097 with annotations: map[] & LoadBalancer: {[]}
  Apr 15 07:05:46.015: INFO: Found Service test-service-vfgcx in namespace services-1097 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Apr 15 07:05:46.015: INFO: Service test-service-vfgcx has service status patched
  STEP: updating the ServiceStatus @ 04/15/24 07:05:46.016
  Apr 15 07:05:46.041: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/15/24 07:05:46.042
  Apr 15 07:05:46.046: INFO: Observed Service test-service-vfgcx in namespace services-1097 with annotations: map[] & Conditions: {[]}
  Apr 15 07:05:46.046: INFO: Observed event: &Service{ObjectMeta:{test-service-vfgcx  services-1097  a0c60b2e-84c1-4df2-a490-70eb2528f66c 161178 0 2024-04-15 07:05:45 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-04-15 07:05:45 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-04-15 07:05:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.35.108,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.35.108],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Apr 15 07:05:46.046: INFO: Found Service test-service-vfgcx in namespace services-1097 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 15 07:05:46.046: INFO: Service test-service-vfgcx has service status updated
  STEP: patching the service @ 04/15/24 07:05:46.046
  STEP: watching for the Service to be patched @ 04/15/24 07:05:46.087
  Apr 15 07:05:46.093: INFO: observed Service test-service-vfgcx in namespace services-1097 with labels: map[test-service-static:true]
  Apr 15 07:05:46.094: INFO: observed Service test-service-vfgcx in namespace services-1097 with labels: map[test-service-static:true]
  Apr 15 07:05:46.095: INFO: observed Service test-service-vfgcx in namespace services-1097 with labels: map[test-service-static:true]
  Apr 15 07:05:46.095: INFO: Found Service test-service-vfgcx in namespace services-1097 with labels: map[test-service:patched test-service-static:true]
  Apr 15 07:05:46.096: INFO: Service test-service-vfgcx patched
  STEP: deleting the service @ 04/15/24 07:05:46.097
  STEP: watching for the Service to be deleted @ 04/15/24 07:05:46.13
  Apr 15 07:05:46.134: INFO: Observed event: ADDED
  Apr 15 07:05:46.134: INFO: Observed event: MODIFIED
  Apr 15 07:05:46.134: INFO: Observed event: MODIFIED
  Apr 15 07:05:46.134: INFO: Observed event: MODIFIED
  Apr 15 07:05:46.135: INFO: Found Service test-service-vfgcx in namespace services-1097 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Apr 15 07:05:46.135: INFO: Service test-service-vfgcx deleted
  Apr 15 07:05:46.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1097" for this suite. @ 04/15/24 07:05:46.148
• [0.314 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 04/15/24 07:05:46.163
  Apr 15 07:05:46.163: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:05:46.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:46.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:46.202
  Apr 15 07:05:46.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-2783 version'
  Apr 15 07:05:46.381: INFO: stderr: ""
  Apr 15 07:05:46.381: INFO: stdout: "Client Version: v1.28.8\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.8\n"
  Apr 15 07:05:46.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2783" for this suite. @ 04/15/24 07:05:46.397
• [0.245 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/15/24 07:05:46.41
  Apr 15 07:05:46.410: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename secrets @ 04/15/24 07:05:46.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:46.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:46.448
  STEP: Creating secret with name secret-test-map-73588ae8-e133-4017-9f69-190ab3566fa5 @ 04/15/24 07:05:46.453
  STEP: Creating a pod to test consume secrets @ 04/15/24 07:05:46.462
  STEP: Saw pod success @ 04/15/24 07:05:50.508
  Apr 15 07:05:50.516: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-secrets-44a47d77-6119-476c-be66-4003ff7da954 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:05:50.536
  Apr 15 07:05:50.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8938" for this suite. @ 04/15/24 07:05:50.581
• [4.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 04/15/24 07:05:50.612
  Apr 15 07:05:50.612: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:05:50.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:50.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:50.711
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:05:50.718
  STEP: Saw pod success @ 04/15/24 07:05:54.776
  Apr 15 07:05:54.784: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-4bcb3ca1-87d9-4da3-9a10-f5ea47a323aa container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:05:54.81
  Apr 15 07:05:54.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9138" for this suite. @ 04/15/24 07:05:54.868
• [4.277 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 04/15/24 07:05:54.89
  Apr 15 07:05:54.891: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename podtemplate @ 04/15/24 07:05:54.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:54.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:54.937
  Apr 15 07:05:55.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1737" for this suite. @ 04/15/24 07:05:55.018
• [0.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/15/24 07:05:55.047
  Apr 15 07:05:55.047: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename watch @ 04/15/24 07:05:55.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:55.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:55.086
  STEP: getting a starting resourceVersion @ 04/15/24 07:05:55.096
  STEP: starting a background goroutine to produce watch events @ 04/15/24 07:05:55.103
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/15/24 07:05:55.103
  Apr 15 07:05:57.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5874" for this suite. @ 04/15/24 07:05:57.917
• [2.915 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 04/15/24 07:05:57.969
  Apr 15 07:05:57.969: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pod-network-test @ 04/15/24 07:05:57.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:05:57.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:05:58.003
  STEP: Performing setup for networking test in namespace pod-network-test-2803 @ 04/15/24 07:05:58.01
  STEP: creating a selector @ 04/15/24 07:05:58.01
  STEP: Creating the service pods in kubernetes @ 04/15/24 07:05:58.01
  Apr 15 07:05:58.010: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/15/24 07:06:12.265
  Apr 15 07:06:14.314: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 15 07:06:14.315: INFO: Breadth first check of 10.233.64.156 on host 192.168.121.227...
  Apr 15 07:06:14.323: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.147:9080/dial?request=hostname&protocol=http&host=10.233.64.156&port=8083&tries=1'] Namespace:pod-network-test-2803 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:06:14.323: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:06:14.326: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:06:14.326: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2803/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.147%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.156%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 07:06:14.501: INFO: Waiting for responses: map[]
  Apr 15 07:06:14.501: INFO: reached 10.233.64.156 after 0/1 tries
  Apr 15 07:06:14.501: INFO: Breadth first check of 10.233.65.159 on host 192.168.121.217...
  Apr 15 07:06:14.509: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.147:9080/dial?request=hostname&protocol=http&host=10.233.65.159&port=8083&tries=1'] Namespace:pod-network-test-2803 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:06:14.509: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:06:14.511: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:06:14.511: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2803/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.147%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.159%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 07:06:14.635: INFO: Waiting for responses: map[]
  Apr 15 07:06:14.635: INFO: reached 10.233.65.159 after 0/1 tries
  Apr 15 07:06:14.635: INFO: Breadth first check of 10.233.66.146 on host 192.168.121.252...
  Apr 15 07:06:14.644: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.147:9080/dial?request=hostname&protocol=http&host=10.233.66.146&port=8083&tries=1'] Namespace:pod-network-test-2803 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:06:14.644: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:06:14.647: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:06:14.648: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2803/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.147%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.146%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 07:06:14.758: INFO: Waiting for responses: map[]
  Apr 15 07:06:14.758: INFO: reached 10.233.66.146 after 0/1 tries
  Apr 15 07:06:14.758: INFO: Going to retry 0 out of 3 pods....
  Apr 15 07:06:14.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2803" for this suite. @ 04/15/24 07:06:14.769
• [16.811 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 04/15/24 07:06:14.782
  Apr 15 07:06:14.782: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/15/24 07:06:14.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:06:14.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:06:14.822
  STEP: create the container to handle the HTTPGet hook request. @ 04/15/24 07:06:14.844
  STEP: create the pod with lifecycle hook @ 04/15/24 07:06:16.889
  STEP: check poststart hook @ 04/15/24 07:06:18.93
  STEP: delete the pod with lifecycle hook @ 04/15/24 07:06:18.967
  Apr 15 07:06:21.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8398" for this suite. @ 04/15/24 07:06:21.015
• [6.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 04/15/24 07:06:21.036
  Apr 15 07:06:21.036: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename job @ 04/15/24 07:06:21.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:06:21.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:06:21.079
  STEP: Creating a job @ 04/15/24 07:06:21.086
  STEP: Ensuring active pods == parallelism @ 04/15/24 07:06:21.103
  STEP: delete a job @ 04/15/24 07:06:23.116
  STEP: deleting Job.batch foo in namespace job-4881, will wait for the garbage collector to delete the pods @ 04/15/24 07:06:23.116
  Apr 15 07:06:23.189: INFO: Deleting Job.batch foo took: 15.093037ms
  Apr 15 07:06:23.389: INFO: Terminating Job.batch foo pods took: 200.215262ms
  STEP: Ensuring job was deleted @ 04/15/24 07:06:55.99
  Apr 15 07:06:55.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4881" for this suite. @ 04/15/24 07:06:56.011
• [34.990 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 04/15/24 07:06:56.033
  Apr 15 07:06:56.033: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 07:06:56.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:06:56.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:06:56.075
  STEP: creating a ReplicationController @ 04/15/24 07:06:56.089
  STEP: waiting for RC to be added @ 04/15/24 07:06:56.117
  STEP: waiting for available Replicas @ 04/15/24 07:06:56.117
  STEP: patching ReplicationController @ 04/15/24 07:06:56.934
  STEP: waiting for RC to be modified @ 04/15/24 07:06:56.955
  STEP: patching ReplicationController status @ 04/15/24 07:06:56.955
  STEP: waiting for RC to be modified @ 04/15/24 07:06:56.966
  STEP: waiting for available Replicas @ 04/15/24 07:06:56.966
  STEP: fetching ReplicationController status @ 04/15/24 07:06:56.979
  STEP: patching ReplicationController scale @ 04/15/24 07:06:56.988
  STEP: waiting for RC to be modified @ 04/15/24 07:06:57.001
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/15/24 07:06:57.002
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/15/24 07:06:58.475
  STEP: updating ReplicationController status @ 04/15/24 07:06:58.482
  STEP: waiting for RC to be modified @ 04/15/24 07:06:58.497
  STEP: listing all ReplicationControllers @ 04/15/24 07:06:58.499
  STEP: checking that ReplicationController has expected values @ 04/15/24 07:06:58.511
  STEP: deleting ReplicationControllers by collection @ 04/15/24 07:06:58.511
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/15/24 07:06:58.541
  Apr 15 07:06:58.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 07:06:58.667129      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3758" for this suite. @ 04/15/24 07:06:58.676
• [2.658 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 04/15/24 07:06:58.694
  Apr 15 07:06:58.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 07:06:58.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:06:58.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:06:58.762
  STEP: Creating a ReplaceConcurrent cronjob @ 04/15/24 07:06:58.767
  STEP: Ensuring a job is scheduled @ 04/15/24 07:06:58.778
  E0415 07:06:59.667862      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:00.668199      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/15/24 07:07:00.798
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/15/24 07:07:00.806
  STEP: Ensuring the job is replaced with a new one @ 04/15/24 07:07:00.814
  E0415 07:07:01.668285      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:02.669296      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:03.669612      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:04.670138      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:05.670486      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:06.671772      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:07.671498      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:08.671901      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:09.672007      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:10.672020      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:11.672415      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:12.672515      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:13.672982      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:14.673205      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:15.673661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:16.673397      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:17.673545      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:18.674000      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:19.674151      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:20.674876      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:21.676191      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:22.677374      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:23.677537      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:24.677812      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:25.678896      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:26.679108      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:27.680434      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:28.680794      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:29.682025      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:30.682148      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:31.682467      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:32.682760      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:33.682791      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:34.683054      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:35.683272      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:36.684961      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:37.686420      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:38.686933      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:39.687219      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:40.687527      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:41.688558      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:42.689229      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:43.689443      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:44.690001      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:45.690353      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:46.690662      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:47.690340      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:48.690999      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:49.691277      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:50.692725      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:51.693187      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:52.693123      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:53.693872      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:54.694010      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:55.694179      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:56.695343      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:57.695569      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:58.695915      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:07:59.696034      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:00.696431      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/15/24 07:08:00.832
  Apr 15 07:08:00.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2967" for this suite. @ 04/15/24 07:08:00.875
• [62.216 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 04/15/24 07:08:00.913
  Apr 15 07:08:00.913: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 07:08:00.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:08:00.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:08:01.002
  STEP: Deleting RuntimeClass runtimeclass-2384-delete-me @ 04/15/24 07:08:01.063
  STEP: Waiting for the RuntimeClass to disappear @ 04/15/24 07:08:01.086
  Apr 15 07:08:01.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2384" for this suite. @ 04/15/24 07:08:01.159
• [0.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 04/15/24 07:08:01.197
  Apr 15 07:08:01.197: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename sched-pred @ 04/15/24 07:08:01.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:08:01.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:08:01.248
  Apr 15 07:08:01.256: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 15 07:08:01.283: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 07:08:01.294: INFO: 
  Logging pods the apiserver thinks is on node thuchow3cah4-1 before test
  Apr 15 07:08:01.318: INFO: coredns-5dd5756b68-zq94h from kube-system started at 2024-04-15 06:18:48 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.319: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 07:08:01.319: INFO: kube-addon-manager-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.319: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 15 07:08:01.320: INFO: kube-apiserver-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.320: INFO: 	Container kube-apiserver ready: true, restart count 5
  Apr 15 07:08:01.320: INFO: kube-controller-manager-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.320: INFO: 	Container kube-controller-manager ready: true, restart count 5
  Apr 15 07:08:01.320: INFO: kube-flannel-ds-df2kc from kube-system started at 2024-04-15 06:18:51 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.320: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:08:01.320: INFO: kube-proxy-kr9dm from kube-system started at 2024-04-15 06:18:50 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.320: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:08:01.320: INFO: kube-scheduler-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.320: INFO: 	Container kube-scheduler ready: true, restart count 5
  Apr 15 07:08:01.320: INFO: sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-8qkc9 from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:08:01.320: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:08:01.320: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 07:08:01.320: INFO: 
  Logging pods the apiserver thinks is on node thuchow3cah4-2 before test
  Apr 15 07:08:01.344: INFO: coredns-5dd5756b68-jrmfx from kube-system started at 2024-04-15 06:38:22 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.346: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 07:08:01.346: INFO: kube-addon-manager-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.346: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 15 07:08:01.346: INFO: kube-apiserver-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.346: INFO: 	Container kube-apiserver ready: true, restart count 5
  Apr 15 07:08:01.346: INFO: kube-controller-manager-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.346: INFO: 	Container kube-controller-manager ready: true, restart count 5
  Apr 15 07:08:01.346: INFO: kube-flannel-ds-whj7b from kube-system started at 2024-04-15 06:18:51 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.346: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:08:01.346: INFO: kube-proxy-h8dk7 from kube-system started at 2024-04-15 06:18:50 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.346: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:08:01.346: INFO: kube-scheduler-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.346: INFO: 	Container kube-scheduler ready: true, restart count 5
  Apr 15 07:08:01.346: INFO: sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-jrrgx from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:08:01.346: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:08:01.346: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 07:08:01.346: INFO: 
  Logging pods the apiserver thinks is on node thuchow3cah4-3 before test
  Apr 15 07:08:01.364: INFO: replace-28552747-pcm74 from cronjob-2967 started at 2024-04-15 07:07:00 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.365: INFO: 	Container c ready: true, restart count 0
  Apr 15 07:08:01.365: INFO: replace-28552748-t6vp5 from cronjob-2967 started at 2024-04-15 07:08:00 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.365: INFO: 	Container c ready: true, restart count 0
  Apr 15 07:08:01.365: INFO: kube-flannel-ds-7gx8r from kube-system started at 2024-04-15 06:41:32 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.365: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:08:01.365: INFO: kube-proxy-l7lmp from kube-system started at 2024-04-15 06:18:50 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.365: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:08:01.365: INFO: sonobuoy from sonobuoy started at 2024-04-15 06:18:57 +0000 UTC (1 container statuses recorded)
  Apr 15 07:08:01.365: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 15 07:08:01.365: INFO: sonobuoy-e2e-job-b98cfe9b3400449e from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:08:01.365: INFO: 	Container e2e ready: true, restart count 0
  Apr 15 07:08:01.366: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:08:01.366: INFO: sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-7g2gt from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:08:01.366: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:08:01.366: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/15/24 07:08:01.366
  E0415 07:08:01.697474      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:02.698260      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/15/24 07:08:03.436
  STEP: Trying to apply a random label on the found node. @ 04/15/24 07:08:03.497
  STEP: verifying the node has the label kubernetes.io/e2e-7796a1f6-da98-477b-ba75-60e415e9cc30 95 @ 04/15/24 07:08:03.542
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/15/24 07:08:03.559
  E0415 07:08:03.698303      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:04.699541      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.252 on the node which pod4 resides and expect not scheduled @ 04/15/24 07:08:05.602
  E0415 07:08:05.700209      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:06.700444      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:07.700963      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:08.701437      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:09.701530      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:10.701987      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:11.702591      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:12.702584      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:13.702577      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:14.702967      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:15.703078      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:16.704329      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:17.704777      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:18.705703      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:19.705764      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:20.706356      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:21.709092      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:22.710287      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:23.710263      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:24.710313      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:25.710815      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:26.711198      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:27.711375      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:28.711916      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:29.712554      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:30.712314      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:31.712593      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:32.713144      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:33.713383      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:34.713666      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:35.714431      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:36.714876      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:37.715661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:38.716083      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:39.716550      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:40.716809      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:41.717495      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:42.717648      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:43.717847      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:44.718155      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:45.718270      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:46.718572      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:47.719491      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:48.720200      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:49.721128      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:50.721835      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:51.722721      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:52.723027      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:53.723257      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:54.723731      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:55.724106      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:56.725238      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:57.725545      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:58.725804      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:08:59.725978      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:00.726384      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:01.727395      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:02.727580      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:03.727847      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:04.727948      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:05.728537      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:06.729460      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:07.731078      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:08.730644      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:09.731238      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:10.731182      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:11.731452      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:12.733369      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:13.732289      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:14.732993      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:15.733176      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:16.733476      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:17.733694      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:18.734949      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:19.735607      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:20.735741      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:21.736338      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:22.736962      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:23.738318      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:24.738816      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:25.739437      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:26.739077      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:27.739167      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:28.739299      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:29.740148      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:30.740593      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:31.740527      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:32.741443      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:33.742673      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:34.742720      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:35.743711      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:36.744263      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:37.745001      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:38.745260      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:39.745520      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:40.746143      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:41.746195      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:42.746746      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:43.747152      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:44.748201      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:45.749679      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:46.750332      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:47.750721      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:48.750665      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:49.751648      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:50.752440      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:51.752536      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:52.752856      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:53.755052      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:54.753808      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:55.754276      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:56.754597      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:57.755425      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:58.756042      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:09:59.756988      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:00.757016      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:01.756799      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:02.757363      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:03.757885      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:04.757709      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:05.758374      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:06.758987      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:07.758960      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:08.759069      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:09.759163      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:10.760413      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:11.761128      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:12.762170      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:13.763115      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:14.764290      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:15.764750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:16.764905      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:17.765569      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:18.765838      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:19.765965      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:20.766271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:21.767358      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:22.768993      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:23.770058      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:24.770255      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:25.770607      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:26.770838      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:27.772136      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:28.772164      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:29.772453      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:30.773118      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:31.773357      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:32.774335      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:33.775083      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:34.775861      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:35.776690      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:36.777553      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:37.778188      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:38.779030      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:39.779886      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:40.780116      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:41.780128      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:42.780343      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:43.780475      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:44.781399      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:45.782434      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:46.783184      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:47.783390      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:48.783713      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:49.784025      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:50.784981      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:51.785167      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:52.785223      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:53.785432      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:54.786958      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:55.786779      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:56.787495      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:57.788178      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:58.788774      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:10:59.789135      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:00.789434      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:01.790277      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:02.792481      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:03.792819      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:04.792999      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:05.793850      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:06.793776      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:07.794268      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:08.794673      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:09.795087      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:10.795540      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:11.796254      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:12.796842      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:13.796993      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:14.797626      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:15.797758      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:16.798687      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:17.799282      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:18.800320      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:19.800541      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:20.801845      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:21.801173      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:22.805195      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:23.803762      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:24.805251      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:25.805630      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:26.806588      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:27.806231      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:28.806907      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:29.807049      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:30.807892      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:31.808564      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:32.809299      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:33.809736      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:34.810332      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:35.810572      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:36.811234      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:37.812350      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:38.812295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:39.813029      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:40.813258      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:41.814123      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:42.814797      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:43.815405      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:44.815750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:45.816067      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:46.816095      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:47.816526      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:48.817519      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:49.817174      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:50.817523      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:51.818677      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:52.819433      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:53.819551      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:54.819715      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:55.820836      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:56.821320      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:57.821465      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:58.822312      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:11:59.823186      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:00.823644      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:01.823712      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:02.823870      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:03.824336      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:04.824608      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:05.825233      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:06.825056      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:07.825325      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:08.825428      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:09.825535      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:10.826555      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:11.827050      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:12.827531      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:13.827241      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:14.827567      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:15.827442      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:16.828966      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:17.829427      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:18.829579      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:19.829510      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:20.830768      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:21.831353      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:22.831544      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:23.831843      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:24.832055      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:25.832346      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:26.833309      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:27.833312      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:28.834115      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:29.834289      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:30.834752      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:31.835666      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:32.835828      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:33.836105      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:34.836319      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:35.836800      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:36.837606      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:37.838330      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:38.838469      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:39.838804      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:40.839547      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:41.839638      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:42.839823      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:43.840211      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:44.840968      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:45.841387      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:46.841340      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:47.842073      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:48.842380      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:49.842750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:50.843708      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:51.843823      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:52.844166      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:53.844281      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:54.844485      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:55.844618      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:56.844817      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:57.845043      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:58.845267      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:12:59.845560      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:00.845775      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:01.846707      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:02.847647      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:03.848205      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:04.848345      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-7796a1f6-da98-477b-ba75-60e415e9cc30 off the node thuchow3cah4-3 @ 04/15/24 07:13:05.626
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-7796a1f6-da98-477b-ba75-60e415e9cc30 @ 04/15/24 07:13:05.666
  Apr 15 07:13:05.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7888" for this suite. @ 04/15/24 07:13:05.696
• [304.524 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 04/15/24 07:13:05.726
  Apr 15 07:13:05.726: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 07:13:05.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:13:05.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:13:05.79
  STEP: Counting existing ResourceQuota @ 04/15/24 07:13:05.798
  E0415 07:13:05.849068      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:06.849751      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:07.850433      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:08.850696      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:09.851600      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/15/24 07:13:10.806
  STEP: Ensuring resource quota status is calculated @ 04/15/24 07:13:10.82
  E0415 07:13:10.852407      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:11.852568      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 04/15/24 07:13:12.83
  E0415 07:13:12.853628      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures replication controller creation @ 04/15/24 07:13:12.862
  E0415 07:13:13.854529      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:14.855143      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 04/15/24 07:13:14.869
  STEP: Ensuring resource quota status released usage @ 04/15/24 07:13:14.881
  E0415 07:13:15.855831      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:16.856068      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:13:16.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4101" for this suite. @ 04/15/24 07:13:16.912
• [11.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 04/15/24 07:13:16.95
  Apr 15 07:13:16.950: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:13:16.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:13:17.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:13:17.016
  STEP: Setting up server cert @ 04/15/24 07:13:17.088
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:13:17.721
  STEP: Deploying the webhook pod @ 04/15/24 07:13:17.738
  STEP: Wait for the deployment to be ready @ 04/15/24 07:13:17.764
  Apr 15 07:13:17.790: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 07:13:17.856244      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:18.856481      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:13:19.814
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:13:19.84
  E0415 07:13:19.858077      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:13:20.842: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0415 07:13:20.858206      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/15/24 07:13:20.868
  STEP: create a pod that should be updated by the webhook @ 04/15/24 07:13:20.915
  Apr 15 07:13:20.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2095" for this suite. @ 04/15/24 07:13:21.133
  STEP: Destroying namespace "webhook-markers-9367" for this suite. @ 04/15/24 07:13:21.148
• [4.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 04/15/24 07:13:21.18
  Apr 15 07:13:21.181: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 07:13:21.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:13:21.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:13:21.23
  Apr 15 07:13:21.251: INFO: Got root ca configmap in namespace "svcaccounts-2715"
  Apr 15 07:13:21.271: INFO: Deleted root ca configmap in namespace "svcaccounts-2715"
  STEP: waiting for a new root ca configmap created @ 04/15/24 07:13:21.773
  Apr 15 07:13:21.783: INFO: Recreated root ca configmap in namespace "svcaccounts-2715"
  Apr 15 07:13:21.794: INFO: Updated root ca configmap in namespace "svcaccounts-2715"
  E0415 07:13:21.858796      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 04/15/24 07:13:22.295
  Apr 15 07:13:22.301: INFO: Reconciled root ca configmap in namespace "svcaccounts-2715"
  Apr 15 07:13:22.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2715" for this suite. @ 04/15/24 07:13:22.319
• [1.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 04/15/24 07:13:22.343
  Apr 15 07:13:22.343: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename disruption @ 04/15/24 07:13:22.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:13:22.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:13:22.379
  STEP: creating the pdb @ 04/15/24 07:13:22.385
  STEP: Waiting for the pdb to be processed @ 04/15/24 07:13:22.402
  E0415 07:13:22.859494      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:23.859762      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 04/15/24 07:13:24.426
  STEP: Waiting for the pdb to be processed @ 04/15/24 07:13:24.45
  E0415 07:13:24.859770      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:25.860615      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 04/15/24 07:13:26.491
  STEP: Waiting for the pdb to be processed @ 04/15/24 07:13:26.533
  E0415 07:13:26.860816      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:27.861195      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 04/15/24 07:13:28.571
  Apr 15 07:13:28.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6118" for this suite. @ 04/15/24 07:13:28.591
• [6.259 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 04/15/24 07:13:28.604
  Apr 15 07:13:28.604: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename dns @ 04/15/24 07:13:28.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:13:28.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:13:28.652
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9231.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9231.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 04/15/24 07:13:28.66
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9231.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9231.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/15/24 07:13:28.66
  STEP: creating a pod to probe /etc/hosts @ 04/15/24 07:13:28.66
  STEP: submitting the pod to kubernetes @ 04/15/24 07:13:28.66
  E0415 07:13:28.861749      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:29.865972      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 07:13:30.708
  STEP: looking for the results for each expected name from probers @ 04/15/24 07:13:30.715
  Apr 15 07:13:30.758: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-9231/dns-test-b4bfbc32-5fe4-45c6-a0a8-51dfef3ad2a6: the server could not find the requested resource (get pods dns-test-b4bfbc32-5fe4-45c6-a0a8-51dfef3ad2a6)
  Apr 15 07:13:30.758: INFO: Lookups using dns-9231/dns-test-b4bfbc32-5fe4-45c6-a0a8-51dfef3ad2a6 failed for: [jessie_hosts@dns-querier-1]

  Apr 15 07:13:30.798: INFO: Pod client logs for webserver: 
  Apr 15 07:13:30.810: INFO: Pod client logs for querier: 
  Apr 15 07:13:30.822: INFO: Pod client logs for jessie-querier: 
  E0415 07:13:30.863327      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:31.863951      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:32.865169      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:33.865251      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:34.865443      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:13:35.854: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-9231/dns-test-b4bfbc32-5fe4-45c6-a0a8-51dfef3ad2a6: the server could not find the requested resource (get pods dns-test-b4bfbc32-5fe4-45c6-a0a8-51dfef3ad2a6)
  Apr 15 07:13:35.854: INFO: Lookups using dns-9231/dns-test-b4bfbc32-5fe4-45c6-a0a8-51dfef3ad2a6 failed for: [jessie_hosts@dns-querier-1]

  E0415 07:13:35.866133      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:13:35.868: INFO: Pod client logs for webserver: 
  Apr 15 07:13:35.881: INFO: Pod client logs for querier: 
  Apr 15 07:13:35.899: INFO: Pod client logs for jessie-querier: 
  E0415 07:13:36.866878      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:37.867406      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:38.868033      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:39.868566      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:13:40.861: INFO: DNS probes using dns-9231/dns-test-b4bfbc32-5fe4-45c6-a0a8-51dfef3ad2a6 succeeded

  Apr 15 07:13:40.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 07:13:40.868982      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/15/24 07:13:40.881
  STEP: Destroying namespace "dns-9231" for this suite. @ 04/15/24 07:13:40.92
• [12.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 04/15/24 07:13:40.959
  Apr 15 07:13:40.959: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:13:40.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:13:41.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:13:41.012
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:13:41.016
  E0415 07:13:41.869559      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:42.870182      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:43.870256      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:44.870589      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:13:45.074
  Apr 15 07:13:45.082: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-4c81d0c0-6d08-43f4-9465-e979aaff2d33 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:13:45.098
  Apr 15 07:13:45.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3147" for this suite. @ 04/15/24 07:13:45.142
• [4.198 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 04/15/24 07:13:45.162
  Apr 15 07:13:45.162: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 07:13:45.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:13:45.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:13:45.2
  Apr 15 07:13:45.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1836" for this suite. @ 04/15/24 07:13:45.234
• [0.088 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 04/15/24 07:13:45.251
  Apr 15 07:13:45.251: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:13:45.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:13:45.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:13:45.295
  STEP: creating all guestbook components @ 04/15/24 07:13:45.301
  Apr 15 07:13:45.302: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Apr 15 07:13:45.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-875 create -f -'
  E0415 07:13:45.870689      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:13:46.090: INFO: stderr: ""
  Apr 15 07:13:46.090: INFO: stdout: "service/agnhost-replica created\n"
  Apr 15 07:13:46.090: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Apr 15 07:13:46.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-875 create -f -'
  Apr 15 07:13:46.676: INFO: stderr: ""
  Apr 15 07:13:46.676: INFO: stdout: "service/agnhost-primary created\n"
  Apr 15 07:13:46.676: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Apr 15 07:13:46.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-875 create -f -'
  E0415 07:13:46.870825      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:13:47.192: INFO: stderr: ""
  Apr 15 07:13:47.192: INFO: stdout: "service/frontend created\n"
  Apr 15 07:13:47.194: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Apr 15 07:13:47.195: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-875 create -f -'
  E0415 07:13:47.871911      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:13:48.241: INFO: stderr: ""
  Apr 15 07:13:48.241: INFO: stdout: "deployment.apps/frontend created\n"
  Apr 15 07:13:48.241: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 15 07:13:48.244: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-875 create -f -'
  E0415 07:13:48.872135      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:13:48.919: INFO: stderr: ""
  Apr 15 07:13:48.919: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Apr 15 07:13:48.919: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 15 07:13:48.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-875 create -f -'
  Apr 15 07:13:49.738: INFO: stderr: ""
  Apr 15 07:13:49.738: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/15/24 07:13:49.738
  Apr 15 07:13:49.738: INFO: Waiting for all frontend pods to be Running.
  E0415 07:13:49.872311      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:50.872328      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:51.873068      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:52.873204      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:53.873493      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:13:54.790: INFO: Waiting for frontend to serve content.
  Apr 15 07:13:54.838: INFO: Trying to add a new entry to the guestbook.
  Apr 15 07:13:54.866: INFO: Verifying that added entry can be retrieved.
  E0415 07:13:54.874061      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: using delete to clean up resources @ 04/15/24 07:13:54.899
  Apr 15 07:13:54.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-875 delete --grace-period=0 --force -f -'
  Apr 15 07:13:55.137: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 07:13:55.137: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 07:13:55.137
  Apr 15 07:13:55.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-875 delete --grace-period=0 --force -f -'
  Apr 15 07:13:55.413: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 07:13:55.413: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 07:13:55.413
  Apr 15 07:13:55.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-875 delete --grace-period=0 --force -f -'
  Apr 15 07:13:55.709: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 07:13:55.710: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 07:13:55.71
  Apr 15 07:13:55.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-875 delete --grace-period=0 --force -f -'
  E0415 07:13:55.874398      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:13:55.891: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 07:13:55.891: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 07:13:55.891
  Apr 15 07:13:55.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-875 delete --grace-period=0 --force -f -'
  Apr 15 07:13:56.164: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 07:13:56.164: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/15/24 07:13:56.164
  Apr 15 07:13:56.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-875 delete --grace-period=0 --force -f -'
  Apr 15 07:13:56.467: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 07:13:56.467: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Apr 15 07:13:56.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-875" for this suite. @ 04/15/24 07:13:56.479
• [11.303 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 04/15/24 07:13:56.555
  Apr 15 07:13:56.555: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 07:13:56.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:13:56.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:13:56.625
  STEP: Creating configMap with name configmap-test-volume-e6fe0638-0598-4506-9f04-219fda5437db @ 04/15/24 07:13:56.635
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:13:56.702
  E0415 07:13:56.875250      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:57.875655      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:58.875711      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:13:59.875950      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:14:00.778
  Apr 15 07:14:00.784: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-configmaps-780d7da6-25f1-4a5a-b5df-d0eb6e308dab container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:14:00.803
  Apr 15 07:14:00.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-100" for this suite. @ 04/15/24 07:14:00.855
• [4.319 seconds]
------------------------------
SSS  E0415 07:14:00.876098      15 retrywatcher.go:129] "Watch failed" err="context canceled"
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 04/15/24 07:14:00.884
  Apr 15 07:14:00.884: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:14:00.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:14:00.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:14:00.924
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/15/24 07:14:00.929
  E0415 07:14:01.877064      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:02.877039      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:03.877876      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:04.878485      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:14:04.98
  Apr 15 07:14:04.988: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-1b489182-7f9d-455d-b6ea-91c8e50bb601 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:14:05.009
  Apr 15 07:14:05.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7509" for this suite. @ 04/15/24 07:14:05.068
• [4.204 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 04/15/24 07:14:05.091
  Apr 15 07:14:05.092: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:14:05.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:14:05.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:14:05.144
  STEP: Creating the pod @ 04/15/24 07:14:05.152
  E0415 07:14:05.878581      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:06.880068      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:14:07.745: INFO: Successfully updated pod "labelsupdate30048276-1e2b-4b9d-bc81-df706ec334b3"
  E0415 07:14:07.880047      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:08.880501      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:14:09.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4543" for this suite. @ 04/15/24 07:14:09.788
• [4.714 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/15/24 07:14:09.808
  Apr 15 07:14:09.809: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pods @ 04/15/24 07:14:09.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:14:09.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:14:09.85
  STEP: creating the pod @ 04/15/24 07:14:09.857
  STEP: submitting the pod to kubernetes @ 04/15/24 07:14:09.857
  STEP: verifying QOS class is set on the pod @ 04/15/24 07:14:09.875
  E0415 07:14:09.881285      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:14:09.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1934" for this suite. @ 04/15/24 07:14:09.917
• [0.129 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 04/15/24 07:14:09.944
  Apr 15 07:14:09.944: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 07:14:09.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:14:09.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:14:09.989
  STEP: Creating ReplicationController "e2e-rc-z84sp" @ 04/15/24 07:14:09.994
  Apr 15 07:14:10.004: INFO: Get Replication Controller "e2e-rc-z84sp" to confirm replicas
  E0415 07:14:10.881449      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:14:11.016: INFO: Get Replication Controller "e2e-rc-z84sp" to confirm replicas
  Apr 15 07:14:11.033: INFO: Found 1 replicas for "e2e-rc-z84sp" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-z84sp" @ 04/15/24 07:14:11.033
  STEP: Updating a scale subresource @ 04/15/24 07:14:11.046
  STEP: Verifying replicas where modified for replication controller "e2e-rc-z84sp" @ 04/15/24 07:14:11.056
  Apr 15 07:14:11.056: INFO: Get Replication Controller "e2e-rc-z84sp" to confirm replicas
  E0415 07:14:11.882587      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:14:12.082: INFO: Get Replication Controller "e2e-rc-z84sp" to confirm replicas
  Apr 15 07:14:12.090: INFO: Found 2 replicas for "e2e-rc-z84sp" replication controller
  Apr 15 07:14:12.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4850" for this suite. @ 04/15/24 07:14:12.116
• [2.194 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 04/15/24 07:14:12.142
  Apr 15 07:14:12.142: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 07:14:12.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:14:12.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:14:12.204
  STEP: Creating a test namespace @ 04/15/24 07:14:12.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:14:12.235
  STEP: Creating a service in the namespace @ 04/15/24 07:14:12.243
  STEP: Deleting the namespace @ 04/15/24 07:14:12.277
  STEP: Waiting for the namespace to be removed. @ 04/15/24 07:14:12.313
  E0415 07:14:12.883404      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:13.884091      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:14.884669      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:15.884912      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:16.885524      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:17.885711      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:18.885996      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/15/24 07:14:19.329
  STEP: Verifying there is no service in the namespace @ 04/15/24 07:14:19.364
  Apr 15 07:14:19.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1611" for this suite. @ 04/15/24 07:14:19.398
  STEP: Destroying namespace "nsdeletetest-2360" for this suite. @ 04/15/24 07:14:19.41
  Apr 15 07:14:19.418: INFO: Namespace nsdeletetest-2360 was already deleted
  STEP: Destroying namespace "nsdeletetest-2858" for this suite. @ 04/15/24 07:14:19.418
• [7.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 04/15/24 07:14:19.461
  Apr 15 07:14:19.461: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename security-context-test @ 04/15/24 07:14:19.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:14:19.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:14:19.525
  E0415 07:14:19.886655      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:20.886407      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:21.886922      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:22.887108      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:14:23.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4545" for this suite. @ 04/15/24 07:14:23.632
• [4.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/15/24 07:14:23.686
  Apr 15 07:14:23.687: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename deployment @ 04/15/24 07:14:23.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:14:23.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:14:23.732
  Apr 15 07:14:23.738: INFO: Creating deployment "test-recreate-deployment"
  Apr 15 07:14:23.749: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Apr 15 07:14:23.773: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0415 07:14:23.887544      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:24.887570      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:14:25.789: INFO: Waiting deployment "test-recreate-deployment" to complete
  Apr 15 07:14:25.794: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Apr 15 07:14:25.818: INFO: Updating deployment test-recreate-deployment
  Apr 15 07:14:25.818: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  E0415 07:14:25.890405      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:14:26.095: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8712",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11d2da26-d962-448b-97da-9e006ccfb74c",
      ResourceVersion: (string) (len=6) "163282",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848762063,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762066,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762066,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762063,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 07:14:26.129: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8712",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05a687bf-b4e3-494e-a0bd-f049f76297b2",
      ResourceVersion: (string) (len=6) "163280",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848762065,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "11d2da26-d962-448b-97da-9e006ccfb74c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 31 64 32 64 61  32 36 2d 64 39 36 32 2d  |\"11d2da26-d962-|
              00000120  34 34 38 62 2d 39 37 64  61 2d 39 65 30 30 36 63  |448b-97da-9e006c|
              00000130  63 66 62 37 34 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cfb74c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762066,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:14:26.142: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Apr 15 07:14:26.143: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8712",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e9d3317-1442-4bdf-90d3-3c583c13cb8d",
      ResourceVersion: (string) (len=6) "163269",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848762063,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "11d2da26-d962-448b-97da-9e006ccfb74c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 31 64 32 64 61  32 36 2d 64 39 36 32 2d  |\"11d2da26-d962-|
              00000120  34 34 38 62 2d 39 37 64  61 2d 39 65 30 30 36 63  |448b-97da-9e006c|
              00000130  63 66 62 37 34 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cfb74c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:14:26.158: INFO: Pod "test-recreate-deployment-76fb77d45-zsn89" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-zsn89",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-8712",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01a3e192-f543-4df7-9d2a-28b2afbdc9a6",
      ResourceVersion: (string) (len=6) "163281",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848762065,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "05a687bf-b4e3-494e-a0bd-f049f76297b2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  61 36 38 37 62 66 2d 62  |d\":\"05a687bf-b|
              00000090  34 65 33 2d 34 39 34 65  2d 61 30 62 64 2d 66 30  |4e3-494e-a0bd-f0|
              000000a0  34 39 66 37 36 32 39 37  62 32 5c 22 7d 22 3a 7b  |49f76297b2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762066,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t55sn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t55sn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848762065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.252",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848762065,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 07:14:26.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8712" for this suite. @ 04/15/24 07:14:26.172
• [2.514 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:331
  STEP: Creating a kubernetes client @ 04/15/24 07:14:26.232
  Apr 15 07:14:26.233: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 07:14:26.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:14:26.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:14:26.294
  STEP: Creating service test in namespace statefulset-1632 @ 04/15/24 07:14:26.301
  STEP: Creating a new StatefulSet @ 04/15/24 07:14:26.313
  Apr 15 07:14:26.343: INFO: Found 0 stateful pods, waiting for 3
  E0415 07:14:26.889744      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:27.890182      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:28.890938      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:29.891417      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:30.891744      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:31.892760      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:32.892618      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:33.892802      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:34.893001      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:35.893169      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:14:36.366: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 07:14:36.367: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 07:14:36.367: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/15/24 07:14:36.399
  Apr 15 07:14:36.443: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/15/24 07:14:36.443
  E0415 07:14:36.894017      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:37.894128      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:38.894428      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:39.894725      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:40.894971      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:41.895157      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:42.896149      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:43.897223      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:44.897555      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:45.898529      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/15/24 07:14:46.493
  STEP: Performing a canary update @ 04/15/24 07:14:46.493
  Apr 15 07:14:46.549: INFO: Updating stateful set ss2
  Apr 15 07:14:46.570: INFO: Waiting for Pod statefulset-1632/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0415 07:14:46.898574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:47.898767      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:48.898766      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:49.899197      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:50.899916      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:51.900093      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:52.900326      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:53.900644      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:54.901174      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:55.901704      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/15/24 07:14:56.593
  Apr 15 07:14:56.881: INFO: Found 1 stateful pods, waiting for 3
  E0415 07:14:56.902216      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:57.902433      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:58.902452      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:14:59.903255      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:00.903592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:01.903798      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:02.904022      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:03.904305      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:04.904730      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:05.905343      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:15:06.891: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 07:15:06.891: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 07:15:06.891: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  E0415 07:15:06.905869      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Performing a phased rolling update @ 04/15/24 07:15:06.911
  Apr 15 07:15:06.942: INFO: Updating stateful set ss2
  Apr 15 07:15:06.959: INFO: Waiting for Pod statefulset-1632/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0415 07:15:07.906350      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:08.906736      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:09.907827      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:10.907882      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:11.908720      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:12.908613      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:13.909078      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:14.909166      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:15.909689      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:16.910775      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:15:17.019: INFO: Updating stateful set ss2
  Apr 15 07:15:17.063: INFO: Waiting for StatefulSet statefulset-1632/ss2 to complete update
  Apr 15 07:15:17.063: INFO: Waiting for Pod statefulset-1632/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0415 07:15:17.911450      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:18.912525      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:19.912903      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:20.913765      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:21.914016      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:22.914799      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:23.915081      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:24.915285      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:25.916280      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:26.916542      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:15:27.083: INFO: Deleting all statefulset in ns statefulset-1632
  Apr 15 07:15:27.091: INFO: Scaling statefulset ss2 to 0
  E0415 07:15:27.917833      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:28.918740      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:29.918392      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:30.918891      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:31.919211      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:32.919498      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:33.919722      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:34.920172      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:35.921244      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:36.921427      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:15:37.134: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 15 07:15:37.142: INFO: Deleting statefulset ss2
  Apr 15 07:15:37.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1632" for this suite. @ 04/15/24 07:15:37.194
• [70.986 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 04/15/24 07:15:37.221
  Apr 15 07:15:37.222: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 07:15:37.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:15:37.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:15:37.278
  STEP: Counting existing ResourceQuota @ 04/15/24 07:15:37.283
  E0415 07:15:37.921469      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:38.921574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:39.921958      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:40.922973      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:41.923608      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/15/24 07:15:42.291
  STEP: Ensuring resource quota status is calculated @ 04/15/24 07:15:42.305
  E0415 07:15:42.924951      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:43.924369      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:15:44.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2999" for this suite. @ 04/15/24 07:15:44.32
• [7.113 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 04/15/24 07:15:44.338
  Apr 15 07:15:44.338: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:15:44.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:15:44.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:15:44.38
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/15/24 07:15:44.387
  Apr 15 07:15:44.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-7248 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 15 07:15:44.625: INFO: stderr: ""
  Apr 15 07:15:44.625: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/15/24 07:15:44.625
  E0415 07:15:44.924794      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:45.925545      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:46.925727      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:47.926210      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:48.934332      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/15/24 07:15:49.676
  Apr 15 07:15:49.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-7248 get pod e2e-test-httpd-pod -o json'
  Apr 15 07:15:49.886: INFO: stderr: ""
  Apr 15 07:15:49.886: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-04-15T07:15:44Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7248\",\n        \"resourceVersion\": \"163815\",\n        \"uid\": \"10f42a95-a609-487d-ace6-731abb067613\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-zdxgd\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"thuchow3cah4-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-zdxgd\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T07:15:44Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T07:15:45Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T07:15:45Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-15T07:15:44Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://54613032f375e44898034518794d2be1a5e3608a020de0687b6c82d942c6730e\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-04-15T07:15:45Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.121.252\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.66.170\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.66.170\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-04-15T07:15:44Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/15/24 07:15:49.886
  Apr 15 07:15:49.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-7248 replace -f -'
  E0415 07:15:49.931089      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:15:50.467: INFO: stderr: ""
  Apr 15 07:15:50.467: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 04/15/24 07:15:50.467
  Apr 15 07:15:50.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-7248 delete pods e2e-test-httpd-pod'
  E0415 07:15:50.932109      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:51.932496      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:15:52.616: INFO: stderr: ""
  Apr 15 07:15:52.616: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 15 07:15:52.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7248" for this suite. @ 04/15/24 07:15:52.637
• [8.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/15/24 07:15:52.666
  Apr 15 07:15:52.666: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename subpath @ 04/15/24 07:15:52.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:15:52.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:15:52.711
  STEP: Setting up data @ 04/15/24 07:15:52.716
  STEP: Creating pod pod-subpath-test-configmap-z5mp @ 04/15/24 07:15:52.736
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 07:15:52.736
  E0415 07:15:52.932473      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:53.933128      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:54.933813      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:55.934430      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:56.935336      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:57.935750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:58.935867      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:15:59.935944      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:00.936953      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:01.937184      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:02.938384      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:03.938574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:04.939647      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:05.940044      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:06.941536      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:07.941731      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:08.942532      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:09.943543      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:10.944375      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:11.944521      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:12.945793      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:13.946015      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:16:14.867
  Apr 15 07:16:14.876: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-subpath-test-configmap-z5mp container test-container-subpath-configmap-z5mp: <nil>
  STEP: delete the pod @ 04/15/24 07:16:14.919
  E0415 07:16:14.946991      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pod pod-subpath-test-configmap-z5mp @ 04/15/24 07:16:14.96
  Apr 15 07:16:14.960: INFO: Deleting pod "pod-subpath-test-configmap-z5mp" in namespace "subpath-2773"
  Apr 15 07:16:14.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2773" for this suite. @ 04/15/24 07:16:14.982
• [22.332 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 04/15/24 07:16:15.005
  Apr 15 07:16:15.005: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 07:16:15.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:16:15.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:16:15.062
  STEP: Creating a pod to test substitution in container's command @ 04/15/24 07:16:15.069
  E0415 07:16:15.947206      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:16.947469      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:17.948157      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:18.949064      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:16:19.121
  Apr 15 07:16:19.132: INFO: Trying to get logs from node thuchow3cah4-3 pod var-expansion-f02a34cf-9e57-4a51-888a-a550f0347737 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 07:16:19.154
  Apr 15 07:16:19.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1877" for this suite. @ 04/15/24 07:16:19.208
• [4.229 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 04/15/24 07:16:19.24
  Apr 15 07:16:19.241: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 07:16:19.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:16:19.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:16:19.298
  E0415 07:16:19.950235      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:20.950307      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:16:21.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-215" for this suite. @ 04/15/24 07:16:21.429
• [2.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 04/15/24 07:16:21.465
  Apr 15 07:16:21.465: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename job @ 04/15/24 07:16:21.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:16:21.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:16:21.517
  STEP: Creating a suspended job @ 04/15/24 07:16:21.536
  STEP: Patching the Job @ 04/15/24 07:16:21.554
  STEP: Watching for Job to be patched @ 04/15/24 07:16:21.603
  Apr 15 07:16:21.608: INFO: Event ADDED observed for Job e2e-q8tbq in namespace job-8407 with labels: map[e2e-job-label:e2e-q8tbq] and annotations: map[]
  Apr 15 07:16:21.609: INFO: Event MODIFIED observed for Job e2e-q8tbq in namespace job-8407 with labels: map[e2e-job-label:e2e-q8tbq] and annotations: map[]
  Apr 15 07:16:21.610: INFO: Event MODIFIED found for Job e2e-q8tbq in namespace job-8407 with labels: map[e2e-job-label:e2e-q8tbq e2e-q8tbq:patched] and annotations: map[]
  STEP: Updating the job @ 04/15/24 07:16:21.611
  STEP: Watching for Job to be updated @ 04/15/24 07:16:21.639
  Apr 15 07:16:21.645: INFO: Event MODIFIED found for Job e2e-q8tbq in namespace job-8407 with labels: map[e2e-job-label:e2e-q8tbq e2e-q8tbq:patched] and annotations: map[updated:true]
  Apr 15 07:16:21.646: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/15/24 07:16:21.646
  Apr 15 07:16:21.653: INFO: Job: e2e-q8tbq as labels: map[e2e-job-label:e2e-q8tbq e2e-q8tbq:patched]
  STEP: Waiting for job to complete @ 04/15/24 07:16:21.653
  E0415 07:16:21.950637      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:22.951060      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:23.952211      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:24.953490      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:25.954502      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:26.955455      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:27.956168      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:28.957380      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 04/15/24 07:16:29.661
  STEP: Watching for Job to be deleted @ 04/15/24 07:16:29.677
  Apr 15 07:16:29.681: INFO: Event MODIFIED observed for Job e2e-q8tbq in namespace job-8407 with labels: map[e2e-job-label:e2e-q8tbq e2e-q8tbq:patched] and annotations: map[updated:true]
  Apr 15 07:16:29.682: INFO: Event MODIFIED observed for Job e2e-q8tbq in namespace job-8407 with labels: map[e2e-job-label:e2e-q8tbq e2e-q8tbq:patched] and annotations: map[updated:true]
  Apr 15 07:16:29.682: INFO: Event MODIFIED observed for Job e2e-q8tbq in namespace job-8407 with labels: map[e2e-job-label:e2e-q8tbq e2e-q8tbq:patched] and annotations: map[updated:true]
  Apr 15 07:16:29.683: INFO: Event MODIFIED observed for Job e2e-q8tbq in namespace job-8407 with labels: map[e2e-job-label:e2e-q8tbq e2e-q8tbq:patched] and annotations: map[updated:true]
  Apr 15 07:16:29.684: INFO: Event MODIFIED observed for Job e2e-q8tbq in namespace job-8407 with labels: map[e2e-job-label:e2e-q8tbq e2e-q8tbq:patched] and annotations: map[updated:true]
  Apr 15 07:16:29.684: INFO: Event DELETED found for Job e2e-q8tbq in namespace job-8407 with labels: map[e2e-job-label:e2e-q8tbq e2e-q8tbq:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/15/24 07:16:29.684
  Apr 15 07:16:29.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8407" for this suite. @ 04/15/24 07:16:29.711
• [8.282 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 04/15/24 07:16:29.748
  Apr 15 07:16:29.748: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 07:16:29.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:16:29.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:16:29.832
  STEP: Creating configMap with name configmap-test-volume-map-cfdc0daa-1ec5-4da1-85c4-c9136bf77ef7 @ 04/15/24 07:16:29.837
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:16:29.847
  E0415 07:16:29.958249      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:30.958487      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:31.959418      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:32.960036      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:16:33.905
  Apr 15 07:16:33.914: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-configmaps-f55a2ddd-596e-43d6-8570-b4205d4a6ea1 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:16:33.935
  E0415 07:16:33.960429      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:16:33.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3162" for this suite. @ 04/15/24 07:16:33.981
• [4.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/15/24 07:16:34.002
  Apr 15 07:16:34.002: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename init-container @ 04/15/24 07:16:34.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:16:34.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:16:34.091
  STEP: creating the pod @ 04/15/24 07:16:34.099
  Apr 15 07:16:34.099: INFO: PodSpec: initContainers in spec.initContainers
  E0415 07:16:34.960693      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:35.960860      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:36.961406      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:16:37.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6609" for this suite. @ 04/15/24 07:16:37.895
• [3.910 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 04/15/24 07:16:37.922
  Apr 15 07:16:37.922: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename sysctl @ 04/15/24 07:16:37.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:16:37.959
  E0415 07:16:37.962143      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:16:37.964
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/15/24 07:16:37.972
  Apr 15 07:16:37.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8437" for this suite. @ 04/15/24 07:16:37.996
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 04/15/24 07:16:38.019
  Apr 15 07:16:38.019: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename security-context-test @ 04/15/24 07:16:38.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:16:38.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:16:38.054
  E0415 07:16:38.962857      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:39.962846      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:40.963541      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:41.963761      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:16:42.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7329" for this suite. @ 04/15/24 07:16:42.119
• [4.114 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/15/24 07:16:42.135
  Apr 15 07:16:42.135: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 07:16:42.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:16:42.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:16:42.181
  STEP: Creating a cronjob @ 04/15/24 07:16:42.188
  STEP: Ensuring more than one job is running at a time @ 04/15/24 07:16:42.201
  E0415 07:16:42.963812      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:43.964129      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:44.965131      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:45.964769      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:46.965323      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:47.965635      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:48.965812      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:49.966490      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:50.967308      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:51.967592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:52.968094      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:53.968134      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:54.968510      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:55.968907      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:56.968982      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:57.969362      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:58.969398      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:16:59.969995      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:00.970608      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:01.970758      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:02.971405      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:03.971611      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:04.971807      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:05.973344      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:06.972509      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:07.972639      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:08.972765      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:09.973059      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:10.973762      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:11.974614      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:12.975616      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:13.976733      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:14.976897      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:15.977107      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:16.977535      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:17.977764      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:18.978014      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:19.978153      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:20.978306      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:21.978466      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:22.978828      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:23.979041      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:24.980076      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:25.980732      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:26.980959      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:27.981038      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:28.981435      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:29.981764      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:30.982024      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:31.982000      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:32.982306      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:33.982451      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:34.982585      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:35.983578      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:36.983888      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:37.983992      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:38.984170      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:39.984375      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:40.984479      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:41.984674      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:42.986423      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:43.986566      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:44.986681      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:45.987059      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:46.987422      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:47.987557      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:48.987748      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:49.989750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:50.990652      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:51.989416      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:52.990000      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:53.990211      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:54.990575      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:55.991109      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:56.991557      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:57.992303      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:58.993873      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:17:59.993580      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/15/24 07:18:00.25
  STEP: Removing cronjob @ 04/15/24 07:18:00.258
  Apr 15 07:18:00.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9608" for this suite. @ 04/15/24 07:18:00.311
• [78.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 04/15/24 07:18:00.351
  Apr 15 07:18:00.351: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pod-network-test @ 04/15/24 07:18:00.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:18:00.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:18:00.452
  STEP: Performing setup for networking test in namespace pod-network-test-9286 @ 04/15/24 07:18:00.458
  STEP: creating a selector @ 04/15/24 07:18:00.458
  STEP: Creating the service pods in kubernetes @ 04/15/24 07:18:00.459
  Apr 15 07:18:00.459: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0415 07:18:00.993819      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:01.994801      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:02.995054      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:03.995372      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:04.996375      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:05.996647      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:06.996472      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:07.996741      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:08.996981      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:09.997976      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:10.998193      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:11.999425      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:13.000021      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:13.999908      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:15.000632      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:16.001603      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:17.002878      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:18.003250      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:19.004013      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:20.004317      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:21.004599      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:22.004919      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/15/24 07:18:22.764
  E0415 07:18:23.004810      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:24.005100      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:18:24.850: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 15 07:18:24.851: INFO: Going to poll 10.233.64.165 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 07:18:24.858: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.165 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9286 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:18:24.858: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:18:24.860: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:18:24.860: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9286/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.165+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0415 07:18:25.005732      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:26.006065      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:18:26.037: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 15 07:18:26.037: INFO: Going to poll 10.233.65.164 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 07:18:26.046: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.164 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9286 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:18:26.046: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:18:26.048: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:18:26.048: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9286/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.164+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0415 07:18:27.006317      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:18:27.186: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 15 07:18:27.186: INFO: Going to poll 10.233.66.181 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 15 07:18:27.194: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.181 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9286 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:18:27.194: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:18:27.195: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:18:27.195: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9286/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.181+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0415 07:18:28.006592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:18:28.305: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 15 07:18:28.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9286" for this suite. @ 04/15/24 07:18:28.319
• [27.986 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 04/15/24 07:18:28.339
  Apr 15 07:18:28.339: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 07:18:28.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:18:28.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:18:28.394
  Apr 15 07:18:28.400: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:18:29.006931      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:30.007254      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:31.007616      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:18:31.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8161" for this suite. @ 04/15/24 07:18:31.887
• [3.564 seconds]
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/15/24 07:18:31.903
  Apr 15 07:18:31.903: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pods @ 04/15/24 07:18:31.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:18:31.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:18:31.941
  Apr 15 07:18:31.947: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: creating the pod @ 04/15/24 07:18:31.949
  STEP: submitting the pod to kubernetes @ 04/15/24 07:18:31.949
  E0415 07:18:32.007756      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:33.008461      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:34.008622      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:18:34.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4721" for this suite. @ 04/15/24 07:18:34.246
• [2.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/15/24 07:18:34.278
  Apr 15 07:18:34.278: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename secrets @ 04/15/24 07:18:34.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:18:34.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:18:34.334
  STEP: Creating secret with name secret-test-bb4ea6e5-18da-46e6-b4d5-9b10d5dd644f @ 04/15/24 07:18:34.339
  STEP: Creating a pod to test consume secrets @ 04/15/24 07:18:34.352
  E0415 07:18:35.008950      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:36.010008      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:37.010368      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:38.010443      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:18:38.416
  Apr 15 07:18:38.425: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-secrets-694af21d-d451-4c44-841c-506a5241dc56 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:18:38.457
  Apr 15 07:18:38.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2723" for this suite. @ 04/15/24 07:18:38.5
• [4.237 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 04/15/24 07:18:38.518
  Apr 15 07:18:38.518: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 07:18:38.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:18:38.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:18:38.561
  STEP: Creating a ResourceQuota @ 04/15/24 07:18:38.566
  STEP: Getting a ResourceQuota @ 04/15/24 07:18:38.578
  STEP: Updating a ResourceQuota @ 04/15/24 07:18:38.589
  STEP: Verifying a ResourceQuota was modified @ 04/15/24 07:18:38.606
  STEP: Deleting a ResourceQuota @ 04/15/24 07:18:38.618
  STEP: Verifying the deleted ResourceQuota @ 04/15/24 07:18:38.633
  Apr 15 07:18:38.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3990" for this suite. @ 04/15/24 07:18:38.653
• [0.152 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/15/24 07:18:38.676
  Apr 15 07:18:38.676: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/15/24 07:18:38.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:18:38.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:18:38.714
  E0415 07:18:39.011126      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:40.011881      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:18:40.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 04/15/24 07:18:40.807
  STEP: Cleaning up the configmap @ 04/15/24 07:18:40.819
  STEP: Cleaning up the pod @ 04/15/24 07:18:40.83
  STEP: Destroying namespace "emptydir-wrapper-8546" for this suite. @ 04/15/24 07:18:40.858
• [2.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/15/24 07:18:40.874
  Apr 15 07:18:40.874: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/15/24 07:18:40.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:18:40.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:18:40.928
  STEP: creating @ 04/15/24 07:18:40.935
  STEP: getting @ 04/15/24 07:18:40.994
  STEP: listing in namespace @ 04/15/24 07:18:41.003
  STEP: patching @ 04/15/24 07:18:41.013
  E0415 07:18:41.014199      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting @ 04/15/24 07:18:41.037
  Apr 15 07:18:41.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2306" for this suite. @ 04/15/24 07:18:41.084
• [0.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 04/15/24 07:18:41.115
  Apr 15 07:18:41.115: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 07:18:41.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:18:41.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:18:41.16
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/15/24 07:18:41.164
  Apr 15 07:18:41.165: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:18:42.012883      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:43.014041      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:44.027661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:45.027622      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:46.028131      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:47.028948      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:48.029028      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:49.029960      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/15/24 07:18:49.348
  Apr 15 07:18:49.350: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:18:50.031378      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:51.031633      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:18:51.350: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:18:52.032512      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:53.032403      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:54.034301      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:55.034520      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:56.034844      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:57.035271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:58.036149      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:18:59.036759      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:18:59.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2340" for this suite. @ 04/15/24 07:18:59.227
• [18.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 04/15/24 07:18:59.251
  Apr 15 07:18:59.251: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename dns @ 04/15/24 07:18:59.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:18:59.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:18:59.292
  STEP: Creating a test headless service @ 04/15/24 07:18:59.297
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5693.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5693.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5693.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5693.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5693.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5693.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5693.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5693.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5693.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5693.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5693.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5693.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 209.3.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.3.209_udp@PTR;check="$$(dig +tcp +noall +answer +search 209.3.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.3.209_tcp@PTR;sleep 1; done
   @ 04/15/24 07:18:59.377
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5693.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5693.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5693.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5693.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5693.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5693.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5693.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5693.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5693.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5693.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5693.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5693.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 209.3.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.3.209_udp@PTR;check="$$(dig +tcp +noall +answer +search 209.3.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.3.209_tcp@PTR;sleep 1; done
   @ 04/15/24 07:18:59.377
  STEP: creating a pod to probe DNS @ 04/15/24 07:18:59.378
  STEP: submitting the pod to kubernetes @ 04/15/24 07:18:59.378
  E0415 07:19:00.038129      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:01.038637      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:02.038780      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:03.038917      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 07:19:03.464
  STEP: looking for the results for each expected name from probers @ 04/15/24 07:19:03.483
  Apr 15 07:19:03.504: INFO: Unable to read wheezy_udp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:03.518: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:03.553: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:03.606: INFO: Unable to read jessie_udp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:03.613: INFO: Unable to read jessie_tcp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:03.711: INFO: Lookups using dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c failed for: [wheezy_udp@dns-test-service.dns-5693.svc.cluster.local wheezy_tcp@dns-test-service.dns-5693.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5693.svc.cluster.local jessie_udp@dns-test-service.dns-5693.svc.cluster.local jessie_tcp@dns-test-service.dns-5693.svc.cluster.local]

  Apr 15 07:19:03.731: INFO: Pod client logs for webserver: 
  Apr 15 07:19:03.753: INFO: Pod client logs for querier: 
  Apr 15 07:19:03.770: INFO: Pod client logs for jessie-querier: 
  E0415 07:19:04.039775      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:05.039866      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:06.040757      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:07.040907      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:08.041107      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:19:08.778: INFO: Unable to read wheezy_udp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:08.787: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:08.846: INFO: Unable to read jessie_udp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:08.853: INFO: Unable to read jessie_tcp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:08.912: INFO: Lookups using dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c failed for: [wheezy_udp@dns-test-service.dns-5693.svc.cluster.local wheezy_tcp@dns-test-service.dns-5693.svc.cluster.local jessie_udp@dns-test-service.dns-5693.svc.cluster.local jessie_tcp@dns-test-service.dns-5693.svc.cluster.local]

  Apr 15 07:19:08.927: INFO: Pod client logs for webserver: 
  Apr 15 07:19:08.950: INFO: Pod client logs for querier: 
  Apr 15 07:19:08.976: INFO: Pod client logs for jessie-querier: 
  E0415 07:19:09.041838      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:10.042531      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:11.042976      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:12.043072      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:13.043933      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:19:13.781: INFO: Unable to read wheezy_udp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:13.795: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:13.889: INFO: Unable to read jessie_udp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:13.902: INFO: Unable to read jessie_tcp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:13.956: INFO: Lookups using dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c failed for: [wheezy_udp@dns-test-service.dns-5693.svc.cluster.local wheezy_tcp@dns-test-service.dns-5693.svc.cluster.local jessie_udp@dns-test-service.dns-5693.svc.cluster.local jessie_tcp@dns-test-service.dns-5693.svc.cluster.local]

  Apr 15 07:19:13.971: INFO: Pod client logs for webserver: 
  Apr 15 07:19:13.987: INFO: Pod client logs for querier: 
  Apr 15 07:19:14.009: INFO: Pod client logs for jessie-querier: 
  E0415 07:19:14.044565      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:15.045819      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:16.045788      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:17.046180      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:18.047229      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:19:18.778: INFO: Unable to read wheezy_udp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:18.787: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:18.844: INFO: Unable to read jessie_udp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:18.851: INFO: Unable to read jessie_tcp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:18.926: INFO: Lookups using dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c failed for: [wheezy_udp@dns-test-service.dns-5693.svc.cluster.local wheezy_tcp@dns-test-service.dns-5693.svc.cluster.local jessie_udp@dns-test-service.dns-5693.svc.cluster.local jessie_tcp@dns-test-service.dns-5693.svc.cluster.local]

  Apr 15 07:19:18.945: INFO: Pod client logs for webserver: 
  Apr 15 07:19:18.967: INFO: Pod client logs for querier: 
  Apr 15 07:19:18.991: INFO: Pod client logs for jessie-querier: 
  E0415 07:19:19.047253      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:20.047828      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:21.047748      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:22.047913      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:23.048149      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:19:23.779: INFO: Unable to read wheezy_udp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:23.788: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:23.856: INFO: Unable to read jessie_udp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:23.864: INFO: Unable to read jessie_tcp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:23.931: INFO: Lookups using dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c failed for: [wheezy_udp@dns-test-service.dns-5693.svc.cluster.local wheezy_tcp@dns-test-service.dns-5693.svc.cluster.local jessie_udp@dns-test-service.dns-5693.svc.cluster.local jessie_tcp@dns-test-service.dns-5693.svc.cluster.local]

  Apr 15 07:19:23.947: INFO: Pod client logs for webserver: 
  Apr 15 07:19:23.971: INFO: Pod client logs for querier: 
  Apr 15 07:19:23.997: INFO: Pod client logs for jessie-querier: 
  E0415 07:19:24.049347      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:25.049482      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:26.050073      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:27.050428      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:28.050957      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:19:28.785: INFO: Unable to read wheezy_udp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:28.792: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:28.854: INFO: Unable to read jessie_udp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:28.863: INFO: Unable to read jessie_tcp@dns-test-service.dns-5693.svc.cluster.local from pod dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c: the server could not find the requested resource (get pods dns-test-9f316b09-6a4a-4890-84e1-082839884d4c)
  Apr 15 07:19:28.921: INFO: Lookups using dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c failed for: [wheezy_udp@dns-test-service.dns-5693.svc.cluster.local wheezy_tcp@dns-test-service.dns-5693.svc.cluster.local jessie_udp@dns-test-service.dns-5693.svc.cluster.local jessie_tcp@dns-test-service.dns-5693.svc.cluster.local]

  Apr 15 07:19:28.942: INFO: Pod client logs for webserver: 
  Apr 15 07:19:28.962: INFO: Pod client logs for querier: 
  Apr 15 07:19:28.982: INFO: Pod client logs for jessie-querier: 
  E0415 07:19:29.050898      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:30.051293      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:31.052047      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:32.052305      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:33.052701      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:19:33.946: INFO: DNS probes using dns-5693/dns-test-9f316b09-6a4a-4890-84e1-082839884d4c succeeded

  Apr 15 07:19:33.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/15/24 07:19:33.959
  STEP: deleting the test service @ 04/15/24 07:19:33.994
  E0415 07:19:34.052863      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the test headless service @ 04/15/24 07:19:34.113
  STEP: Destroying namespace "dns-5693" for this suite. @ 04/15/24 07:19:34.161
• [34.934 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 04/15/24 07:19:34.194
  Apr 15 07:19:34.195: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename job @ 04/15/24 07:19:34.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:19:34.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:19:34.249
  STEP: Creating a job @ 04/15/24 07:19:34.256
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/15/24 07:19:34.269
  E0415 07:19:35.053334      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:36.053373      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/15/24 07:19:36.28
  STEP: updating /status @ 04/15/24 07:19:36.3
  STEP: get /status @ 04/15/24 07:19:36.327
  Apr 15 07:19:36.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7894" for this suite. @ 04/15/24 07:19:36.354
• [2.182 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 04/15/24 07:19:36.377
  Apr 15 07:19:36.377: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 07:19:36.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:19:36.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:19:36.437
  STEP: apply creating a deployment @ 04/15/24 07:19:36.449
  Apr 15 07:19:36.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8566" for this suite. @ 04/15/24 07:19:36.506
• [0.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/15/24 07:19:36.537
  Apr 15 07:19:36.537: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename secrets @ 04/15/24 07:19:36.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:19:36.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:19:36.577
  STEP: Creating secret with name secret-test-80ec8c7e-a081-45ca-8380-9366bd5e7ec2 @ 04/15/24 07:19:36.583
  STEP: Creating a pod to test consume secrets @ 04/15/24 07:19:36.603
  E0415 07:19:37.054871      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:38.054868      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:39.055165      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:40.055880      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:19:40.654
  Apr 15 07:19:40.662: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-secrets-bdeddc0f-0e5d-464b-8f47-3f7a6901e8d7 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:19:40.69
  Apr 15 07:19:40.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7575" for this suite. @ 04/15/24 07:19:40.744
• [4.224 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 04/15/24 07:19:40.764
  Apr 15 07:19:40.764: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 07:19:40.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:19:40.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:19:40.809
  STEP: Creating a pod to test substitution in container's args @ 04/15/24 07:19:40.815
  E0415 07:19:41.059018      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:42.057156      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:43.058065      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:44.058556      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:19:44.863
  Apr 15 07:19:44.872: INFO: Trying to get logs from node thuchow3cah4-3 pod var-expansion-bc477180-cb64-4267-ba65-b8663c792ae6 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 07:19:44.889
  Apr 15 07:19:44.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7361" for this suite. @ 04/15/24 07:19:44.935
• [4.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/15/24 07:19:44.952
  Apr 15 07:19:44.952: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename subpath @ 04/15/24 07:19:44.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:19:44.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:19:44.992
  STEP: Setting up data @ 04/15/24 07:19:44.998
  STEP: Creating pod pod-subpath-test-projected-jtqr @ 04/15/24 07:19:45.018
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 07:19:45.018
  E0415 07:19:45.058714      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:46.059532      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:47.059508      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:48.060331      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:49.060048      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:50.060452      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:51.061651      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:52.062466      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:53.062287      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:54.062613      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:55.062957      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:56.063022      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:57.063574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:58.063698      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:19:59.063853      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:00.063967      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:01.065009      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:02.065241      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:03.066067      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:04.066467      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:05.066484      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:06.067365      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:07.068053      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:08.068488      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:09.068579      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:20:09.178
  Apr 15 07:20:09.189: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-subpath-test-projected-jtqr container test-container-subpath-projected-jtqr: <nil>
  STEP: delete the pod @ 04/15/24 07:20:09.214
  STEP: Deleting pod pod-subpath-test-projected-jtqr @ 04/15/24 07:20:09.255
  Apr 15 07:20:09.256: INFO: Deleting pod "pod-subpath-test-projected-jtqr" in namespace "subpath-4009"
  Apr 15 07:20:09.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4009" for this suite. @ 04/15/24 07:20:09.281
• [24.344 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 04/15/24 07:20:09.299
  Apr 15 07:20:09.299: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename sched-pred @ 04/15/24 07:20:09.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:20:09.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:20:09.361
  Apr 15 07:20:09.373: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 15 07:20:09.405: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 07:20:09.418: INFO: 
  Logging pods the apiserver thinks is on node thuchow3cah4-1 before test
  Apr 15 07:20:09.443: INFO: coredns-5dd5756b68-zq94h from kube-system started at 2024-04-15 06:18:48 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.443: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 07:20:09.443: INFO: kube-addon-manager-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.443: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 15 07:20:09.443: INFO: kube-apiserver-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.443: INFO: 	Container kube-apiserver ready: true, restart count 5
  Apr 15 07:20:09.443: INFO: kube-controller-manager-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.443: INFO: 	Container kube-controller-manager ready: true, restart count 5
  Apr 15 07:20:09.443: INFO: kube-flannel-ds-df2kc from kube-system started at 2024-04-15 06:18:51 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.443: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:20:09.443: INFO: kube-proxy-kr9dm from kube-system started at 2024-04-15 06:18:50 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.443: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:20:09.443: INFO: kube-scheduler-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.443: INFO: 	Container kube-scheduler ready: true, restart count 5
  Apr 15 07:20:09.443: INFO: sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-8qkc9 from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:20:09.443: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:20:09.443: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 07:20:09.443: INFO: 
  Logging pods the apiserver thinks is on node thuchow3cah4-2 before test
  Apr 15 07:20:09.464: INFO: coredns-5dd5756b68-jrmfx from kube-system started at 2024-04-15 06:38:22 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.465: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 07:20:09.465: INFO: kube-addon-manager-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.466: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 15 07:20:09.466: INFO: kube-apiserver-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.467: INFO: 	Container kube-apiserver ready: true, restart count 5
  Apr 15 07:20:09.467: INFO: kube-controller-manager-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.467: INFO: 	Container kube-controller-manager ready: true, restart count 5
  Apr 15 07:20:09.468: INFO: kube-flannel-ds-whj7b from kube-system started at 2024-04-15 06:18:51 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.468: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:20:09.468: INFO: kube-proxy-h8dk7 from kube-system started at 2024-04-15 06:18:50 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.469: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:20:09.469: INFO: kube-scheduler-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.469: INFO: 	Container kube-scheduler ready: true, restart count 5
  Apr 15 07:20:09.470: INFO: sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-jrrgx from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:20:09.470: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:20:09.471: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 07:20:09.471: INFO: 
  Logging pods the apiserver thinks is on node thuchow3cah4-3 before test
  Apr 15 07:20:09.507: INFO: suspend-false-to-true-w6ts6 from job-7894 started at 2024-04-15 07:19:34 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.508: INFO: 	Container c ready: true, restart count 0
  Apr 15 07:20:09.508: INFO: suspend-false-to-true-x9tsx from job-7894 started at 2024-04-15 07:19:34 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.509: INFO: 	Container c ready: true, restart count 0
  Apr 15 07:20:09.509: INFO: kube-flannel-ds-7gx8r from kube-system started at 2024-04-15 06:41:32 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.510: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:20:09.511: INFO: kube-proxy-l7lmp from kube-system started at 2024-04-15 06:18:50 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.512: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:20:09.512: INFO: sonobuoy from sonobuoy started at 2024-04-15 06:18:57 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:09.513: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 15 07:20:09.514: INFO: sonobuoy-e2e-job-b98cfe9b3400449e from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:20:09.514: INFO: 	Container e2e ready: true, restart count 0
  Apr 15 07:20:09.515: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:20:09.515: INFO: sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-7g2gt from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:20:09.515: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:20:09.516: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/15/24 07:20:09.516
  E0415 07:20:10.068431      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:11.068629      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/15/24 07:20:11.607
  STEP: Trying to apply a random label on the found node. @ 04/15/24 07:20:11.691
  STEP: verifying the node has the label kubernetes.io/e2e-32a13c16-5d14-4573-8648-1c506b74f534 42 @ 04/15/24 07:20:11.751
  STEP: Trying to relaunch the pod, now with labels. @ 04/15/24 07:20:11.765
  E0415 07:20:12.070512      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:13.071298      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-32a13c16-5d14-4573-8648-1c506b74f534 off the node thuchow3cah4-3 @ 04/15/24 07:20:13.821
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-32a13c16-5d14-4573-8648-1c506b74f534 @ 04/15/24 07:20:13.855
  Apr 15 07:20:13.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1556" for this suite. @ 04/15/24 07:20:13.882
• [4.598 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 04/15/24 07:20:13.908
  Apr 15 07:20:13.908: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename limitrange @ 04/15/24 07:20:13.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:20:13.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:20:13.954
  STEP: Creating LimitRange "e2e-limitrange-56pmv" in namespace "limitrange-5058" @ 04/15/24 07:20:13.964
  STEP: Creating another limitRange in another namespace @ 04/15/24 07:20:13.981
  Apr 15 07:20:14.022: INFO: Namespace "e2e-limitrange-56pmv-3390" created
  Apr 15 07:20:14.022: INFO: Creating LimitRange "e2e-limitrange-56pmv" in namespace "e2e-limitrange-56pmv-3390"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-56pmv" @ 04/15/24 07:20:14.036
  Apr 15 07:20:14.043: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-56pmv" in "limitrange-5058" namespace @ 04/15/24 07:20:14.044
  Apr 15 07:20:14.065: INFO: LimitRange "e2e-limitrange-56pmv" has been patched
  STEP: Delete LimitRange "e2e-limitrange-56pmv" by Collection with labelSelector: "e2e-limitrange-56pmv=patched" @ 04/15/24 07:20:14.065
  E0415 07:20:14.071234      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Confirm that the limitRange "e2e-limitrange-56pmv" has been deleted @ 04/15/24 07:20:14.096
  Apr 15 07:20:14.097: INFO: Requesting list of LimitRange to confirm quantity
  Apr 15 07:20:14.116: INFO: Found 0 LimitRange with label "e2e-limitrange-56pmv=patched"
  Apr 15 07:20:14.117: INFO: LimitRange "e2e-limitrange-56pmv" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-56pmv" @ 04/15/24 07:20:14.117
  Apr 15 07:20:14.130: INFO: Found 1 limitRange
  Apr 15 07:20:14.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5058" for this suite. @ 04/15/24 07:20:14.16
  STEP: Destroying namespace "e2e-limitrange-56pmv-3390" for this suite. @ 04/15/24 07:20:14.176
• [0.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/15/24 07:20:14.229
  Apr 15 07:20:14.233: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:20:14.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:20:14.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:20:14.3
  STEP: Creating projection with secret that has name projected-secret-test-map-4131085a-e246-416a-9dd3-8c10d00aca3c @ 04/15/24 07:20:14.313
  STEP: Creating a pod to test consume secrets @ 04/15/24 07:20:14.343
  E0415 07:20:15.074412      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:16.075900      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:17.075953      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:18.076481      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:20:18.418
  Apr 15 07:20:18.427: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-projected-secrets-5d868aeb-b705-4361-8eb8-ab0fcc23bd26 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:20:18.445
  Apr 15 07:20:18.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1708" for this suite. @ 04/15/24 07:20:18.492
• [4.280 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 04/15/24 07:20:18.511
  Apr 15 07:20:18.512: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename sched-pred @ 04/15/24 07:20:18.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:20:18.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:20:18.555
  Apr 15 07:20:18.566: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 15 07:20:18.595: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 07:20:18.608: INFO: 
  Logging pods the apiserver thinks is on node thuchow3cah4-1 before test
  Apr 15 07:20:18.636: INFO: coredns-5dd5756b68-zq94h from kube-system started at 2024-04-15 06:18:48 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.637: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 07:20:18.638: INFO: kube-addon-manager-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.639: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 15 07:20:18.639: INFO: kube-apiserver-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.639: INFO: 	Container kube-apiserver ready: true, restart count 5
  Apr 15 07:20:18.639: INFO: kube-controller-manager-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.639: INFO: 	Container kube-controller-manager ready: true, restart count 5
  Apr 15 07:20:18.639: INFO: kube-flannel-ds-df2kc from kube-system started at 2024-04-15 06:18:51 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.639: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:20:18.639: INFO: kube-proxy-kr9dm from kube-system started at 2024-04-15 06:18:50 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.639: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:20:18.639: INFO: kube-scheduler-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.639: INFO: 	Container kube-scheduler ready: true, restart count 5
  Apr 15 07:20:18.639: INFO: sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-8qkc9 from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:20:18.639: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:20:18.639: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 07:20:18.639: INFO: 
  Logging pods the apiserver thinks is on node thuchow3cah4-2 before test
  Apr 15 07:20:18.674: INFO: coredns-5dd5756b68-jrmfx from kube-system started at 2024-04-15 06:38:22 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.674: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 07:20:18.675: INFO: kube-addon-manager-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.675: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 15 07:20:18.676: INFO: kube-apiserver-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.676: INFO: 	Container kube-apiserver ready: true, restart count 5
  Apr 15 07:20:18.676: INFO: kube-controller-manager-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.677: INFO: 	Container kube-controller-manager ready: true, restart count 5
  Apr 15 07:20:18.677: INFO: kube-flannel-ds-whj7b from kube-system started at 2024-04-15 06:18:51 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.678: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:20:18.678: INFO: kube-proxy-h8dk7 from kube-system started at 2024-04-15 06:18:50 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.679: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:20:18.679: INFO: kube-scheduler-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.680: INFO: 	Container kube-scheduler ready: true, restart count 5
  Apr 15 07:20:18.681: INFO: sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-jrrgx from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:20:18.681: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:20:18.682: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 07:20:18.683: INFO: 
  Logging pods the apiserver thinks is on node thuchow3cah4-3 before test
  Apr 15 07:20:18.710: INFO: kube-flannel-ds-7gx8r from kube-system started at 2024-04-15 06:41:32 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.710: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:20:18.710: INFO: kube-proxy-l7lmp from kube-system started at 2024-04-15 06:18:50 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.710: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:20:18.710: INFO: with-labels from sched-pred-1556 started at 2024-04-15 07:20:11 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.710: INFO: 	Container with-labels ready: true, restart count 0
  Apr 15 07:20:18.710: INFO: sonobuoy from sonobuoy started at 2024-04-15 06:18:57 +0000 UTC (1 container statuses recorded)
  Apr 15 07:20:18.710: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 15 07:20:18.710: INFO: sonobuoy-e2e-job-b98cfe9b3400449e from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:20:18.710: INFO: 	Container e2e ready: true, restart count 0
  Apr 15 07:20:18.710: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:20:18.710: INFO: sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-7g2gt from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:20:18.710: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:20:18.710: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/15/24 07:20:18.711
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17c6630db71ecee2], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] @ 04/15/24 07:20:18.833
  E0415 07:20:19.076748      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:20:19.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7017" for this suite. @ 04/15/24 07:20:19.836
• [1.354 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/15/24 07:20:19.869
  Apr 15 07:20:19.869: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename watch @ 04/15/24 07:20:19.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:20:19.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:20:19.952
  STEP: creating a new configmap @ 04/15/24 07:20:19.964
  STEP: modifying the configmap once @ 04/15/24 07:20:19.978
  STEP: modifying the configmap a second time @ 04/15/24 07:20:20.008
  STEP: deleting the configmap @ 04/15/24 07:20:20.033
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/15/24 07:20:20.049
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/15/24 07:20:20.051
  Apr 15 07:20:20.052: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8431  edfc7275-f99c-4ecd-a78a-8f13564de7df 165194 0 2024-04-15 07:20:19 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-15 07:20:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:20:20.053: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8431  edfc7275-f99c-4ecd-a78a-8f13564de7df 165195 0 2024-04-15 07:20:19 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-15 07:20:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 15 07:20:20.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8431" for this suite. @ 04/15/24 07:20:20.071
  E0415 07:20:20.077823      15 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 04/15/24 07:20:20.096
  Apr 15 07:20:20.096: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:20:20.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:20:20.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:20:20.171
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:20:20.183
  E0415 07:20:21.078847      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:22.078231      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:20:22.278
  Apr 15 07:20:22.286: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-9438bce5-a4bc-4a15-a7c8-9d36ab92ab99 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:20:22.298
  Apr 15 07:20:22.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8844" for this suite. @ 04/15/24 07:20:22.339
• [2.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 04/15/24 07:20:22.361
  Apr 15 07:20:22.362: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:20:22.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:20:22.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:20:22.402
  STEP: Setting up server cert @ 04/15/24 07:20:22.456
  E0415 07:20:23.078334      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:24.079183      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:20:24.293
  STEP: Deploying the webhook pod @ 04/15/24 07:20:24.311
  STEP: Wait for the deployment to be ready @ 04/15/24 07:20:24.346
  Apr 15 07:20:24.361: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0415 07:20:25.079069      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:26.079595      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:20:26.391
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:20:26.42
  E0415 07:20:27.080034      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:20:27.422: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 15 07:20:27.440: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9264-crds.webhook.example.com via the AdmissionRegistration API @ 04/15/24 07:20:27.97
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/15/24 07:20:28.006
  E0415 07:20:28.080704      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:29.081635      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:30.082129      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:20:30.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1399" for this suite. @ 04/15/24 07:20:30.814
  STEP: Destroying namespace "webhook-markers-2563" for this suite. @ 04/15/24 07:20:30.829
• [8.483 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 04/15/24 07:20:30.849
  Apr 15 07:20:30.850: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:20:30.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:20:30.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:20:30.906
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:20:30.914
  E0415 07:20:31.082933      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:32.083120      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:33.083429      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:34.083651      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:20:34.974
  Apr 15 07:20:34.980: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-50f764a2-c4cb-4653-91c9-35a0cf480236 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:20:34.996
  Apr 15 07:20:35.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9182" for this suite. @ 04/15/24 07:20:35.054
• [4.232 seconds]
------------------------------
SSSSSSS  E0415 07:20:35.084085      15 retrywatcher.go:129] "Watch failed" err="context canceled"
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/15/24 07:20:35.091
  Apr 15 07:20:35.091: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 07:20:35.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:20:35.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:20:35.152
  STEP: Creating simple DaemonSet "daemon-set" @ 04/15/24 07:20:35.207
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 07:20:35.219
  Apr 15 07:20:35.256: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 07:20:35.256: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  E0415 07:20:36.084084      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:20:36.361: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 07:20:36.362: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  E0415 07:20:37.084840      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:20:37.280: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 07:20:37.281: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  E0415 07:20:38.085806      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:20:38.275: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 07:20:38.275: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/15/24 07:20:38.281
  Apr 15 07:20:38.330: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 07:20:38.331: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  E0415 07:20:39.086195      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:20:39.350: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 07:20:39.350: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  E0415 07:20:40.086429      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:20:40.354: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 07:20:40.354: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  E0415 07:20:41.087574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:20:41.353: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 15 07:20:41.354: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  E0415 07:20:42.088272      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:20:42.355: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 07:20:42.356: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 07:20:42.371
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2505, will wait for the garbage collector to delete the pods @ 04/15/24 07:20:42.372
  Apr 15 07:20:42.450: INFO: Deleting DaemonSet.extensions daemon-set took: 19.81566ms
  Apr 15 07:20:42.551: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.522083ms
  E0415 07:20:43.088764      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:20:43.564: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 07:20:43.564: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 07:20:43.576: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"165460"},"items":null}

  Apr 15 07:20:43.585: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"165461"},"items":null}

  Apr 15 07:20:43.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2505" for this suite. @ 04/15/24 07:20:43.698
• [8.622 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 04/15/24 07:20:43.719
  Apr 15 07:20:43.719: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 07:20:43.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:20:43.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:20:43.757
  Apr 15 07:20:43.794: INFO: created pod
  E0415 07:20:44.089279      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:45.089704      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:46.090676      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:47.092327      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:20:47.825
  E0415 07:20:48.093493      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:49.092949      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:50.093727      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:51.093884      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:52.094285      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:53.095021      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:54.095399      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:55.095752      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:56.096414      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:57.096696      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:58.096888      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:20:59.097247      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:00.097579      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:01.097763      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:02.097984      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:03.098218      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:04.098434      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:05.099436      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:06.099919      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:07.100770      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:08.101245      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:09.102386      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:10.102841      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:11.103645      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:12.104592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:13.104981      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:14.105493      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:15.106311      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:16.106869      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:17.107779      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:21:17.825: INFO: polling logs
  Apr 15 07:21:17.850: INFO: Pod logs: 
  I0415 07:20:44.577698       1 log.go:245] OK: Got token
  I0415 07:20:44.579193       1 log.go:245] validating with in-cluster discovery
  I0415 07:20:44.581005       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0415 07:20:44.581060       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1176:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00022bcf0), NotBefore:(*jwt.NumericDate)(0xc00022bdd8), IssuedAt:(*jwt.NumericDate)(0xc00022bd00), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1176", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f6f2ad24-8d36-40bd-b156-a1791a3abcb5"}}}
  I0415 07:20:44.616344       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0415 07:20:44.633994       1 log.go:245] OK: Validated signature on JWT
  I0415 07:20:44.634436       1 log.go:245] OK: Got valid claims from token!
  I0415 07:20:44.634784       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1176:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000134b8), NotBefore:(*jwt.NumericDate)(0xc0000134e0), IssuedAt:(*jwt.NumericDate)(0xc0000134c0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1176", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f6f2ad24-8d36-40bd-b156-a1791a3abcb5"}}}

  Apr 15 07:21:17.850: INFO: completed pod
  Apr 15 07:21:17.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1176" for this suite. @ 04/15/24 07:21:17.892
• [34.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 04/15/24 07:21:17.915
  Apr 15 07:21:17.915: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:21:17.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:21:17.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:21:17.989
  STEP: Setting up server cert @ 04/15/24 07:21:18.061
  E0415 07:21:18.109383      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:21:18.859
  STEP: Deploying the webhook pod @ 04/15/24 07:21:18.898
  STEP: Wait for the deployment to be ready @ 04/15/24 07:21:18.968
  Apr 15 07:21:19.023: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 07:21:19.109590      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:20.110482      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:21:21.056
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:21:21.087
  E0415 07:21:21.111510      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:21:22.088: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 15 07:21:22.105: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:21:22.111657      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3065-crds.webhook.example.com via the AdmissionRegistration API @ 04/15/24 07:21:22.645
  STEP: Creating a custom resource while v1 is storage version @ 04/15/24 07:21:22.697
  E0415 07:21:23.114829      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:24.115334      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/15/24 07:21:25.026
  STEP: Patching the custom resource while v2 is storage version @ 04/15/24 07:21:25.077
  E0415 07:21:25.115692      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:21:25.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 07:21:26.117079      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-1920" for this suite. @ 04/15/24 07:21:26.262
  STEP: Destroying namespace "webhook-markers-8542" for this suite. @ 04/15/24 07:21:26.278
• [8.379 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 04/15/24 07:21:26.325
  Apr 15 07:21:26.325: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 07:21:26.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:21:26.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:21:26.381
  STEP: Creating a ResourceQuota with terminating scope @ 04/15/24 07:21:26.389
  STEP: Ensuring ResourceQuota status is calculated @ 04/15/24 07:21:26.402
  E0415 07:21:27.117354      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:28.117402      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 04/15/24 07:21:28.413
  STEP: Ensuring ResourceQuota status is calculated @ 04/15/24 07:21:28.426
  E0415 07:21:29.117462      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:30.118329      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 04/15/24 07:21:30.434
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/15/24 07:21:30.463
  E0415 07:21:31.118507      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:32.119951      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/15/24 07:21:32.472
  E0415 07:21:33.120503      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:34.120224      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/15/24 07:21:34.485
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 07:21:34.508
  E0415 07:21:35.120382      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:36.121286      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 04/15/24 07:21:36.519
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/15/24 07:21:36.543
  E0415 07:21:37.125465      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:38.126413      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/15/24 07:21:38.551
  E0415 07:21:39.126732      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:40.126760      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/15/24 07:21:40.562
  STEP: Ensuring resource quota status released the pod usage @ 04/15/24 07:21:40.618
  E0415 07:21:41.126832      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:42.127047      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:21:42.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9161" for this suite. @ 04/15/24 07:21:42.655
• [16.355 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/15/24 07:21:42.682
  Apr 15 07:21:42.682: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/15/24 07:21:42.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:21:42.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:21:42.73
  STEP: Creating 50 configmaps @ 04/15/24 07:21:42.736
  E0415 07:21:43.127895      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 04/15/24 07:21:43.426
  Apr 15 07:21:43.481: INFO: Pod name wrapped-volume-race-81e0ed77-aeba-4782-8127-2367f80baa0b: Found 0 pods out of 5
  E0415 07:21:44.128207      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:45.128368      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:46.129082      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:47.128685      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:48.128933      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:21:48.504: INFO: Pod name wrapped-volume-race-81e0ed77-aeba-4782-8127-2367f80baa0b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/15/24 07:21:48.505
  STEP: Creating RC which spawns configmap-volume pods @ 04/15/24 07:21:48.572
  Apr 15 07:21:48.622: INFO: Pod name wrapped-volume-race-61fced90-e25b-45a4-a559-df7db21cbeb9: Found 0 pods out of 5
  E0415 07:21:49.130142      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:50.130675      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:51.130900      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:52.131638      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:53.131721      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:21:53.647: INFO: Pod name wrapped-volume-race-61fced90-e25b-45a4-a559-df7db21cbeb9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/15/24 07:21:53.648
  STEP: Creating RC which spawns configmap-volume pods @ 04/15/24 07:21:53.706
  Apr 15 07:21:53.765: INFO: Pod name wrapped-volume-race-7ce0e0a9-39c2-4176-b582-19b657a54f50: Found 0 pods out of 5
  E0415 07:21:54.133016      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:55.133343      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:56.133983      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:57.134131      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:21:58.134285      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:21:58.788: INFO: Pod name wrapped-volume-race-7ce0e0a9-39c2-4176-b582-19b657a54f50: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/15/24 07:21:58.788
  Apr 15 07:21:58.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-7ce0e0a9-39c2-4176-b582-19b657a54f50 in namespace emptydir-wrapper-5049, will wait for the garbage collector to delete the pods @ 04/15/24 07:21:58.864
  Apr 15 07:21:58.941: INFO: Deleting ReplicationController wrapped-volume-race-7ce0e0a9-39c2-4176-b582-19b657a54f50 took: 17.801029ms
  E0415 07:21:59.134540      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:21:59.141: INFO: Terminating ReplicationController wrapped-volume-race-7ce0e0a9-39c2-4176-b582-19b657a54f50 pods took: 200.733157ms
  E0415 07:22:00.135059      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-61fced90-e25b-45a4-a559-df7db21cbeb9 in namespace emptydir-wrapper-5049, will wait for the garbage collector to delete the pods @ 04/15/24 07:22:01.043
  Apr 15 07:22:01.121: INFO: Deleting ReplicationController wrapped-volume-race-61fced90-e25b-45a4-a559-df7db21cbeb9 took: 20.01951ms
  E0415 07:22:01.135791      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:22:01.223: INFO: Terminating ReplicationController wrapped-volume-race-61fced90-e25b-45a4-a559-df7db21cbeb9 pods took: 101.862742ms
  E0415 07:22:02.136541      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:03.136883      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-81e0ed77-aeba-4782-8127-2367f80baa0b in namespace emptydir-wrapper-5049, will wait for the garbage collector to delete the pods @ 04/15/24 07:22:03.525
  Apr 15 07:22:03.604: INFO: Deleting ReplicationController wrapped-volume-race-81e0ed77-aeba-4782-8127-2367f80baa0b took: 11.74657ms
  Apr 15 07:22:03.905: INFO: Terminating ReplicationController wrapped-volume-race-81e0ed77-aeba-4782-8127-2367f80baa0b pods took: 300.764523ms
  E0415 07:22:04.137118      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:05.138329      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 04/15/24 07:22:06.106
  E0415 07:22:06.138828      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-wrapper-5049" for this suite. @ 04/15/24 07:22:06.811
• [24.154 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 04/15/24 07:22:06.838
  Apr 15 07:22:06.838: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:22:06.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:22:06.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:22:06.88
  STEP: creating Agnhost RC @ 04/15/24 07:22:06.885
  Apr 15 07:22:06.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-4936 create -f -'
  E0415 07:22:07.139085      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:22:07.681: INFO: stderr: ""
  Apr 15 07:22:07.681: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/15/24 07:22:07.681
  E0415 07:22:08.139355      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:22:08.691: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:22:08.691: INFO: Found 0 / 1
  E0415 07:22:09.139657      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:22:09.692: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:22:09.692: INFO: Found 1 / 1
  Apr 15 07:22:09.692: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/15/24 07:22:09.692
  Apr 15 07:22:09.698: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:22:09.699: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 15 07:22:09.700: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-4936 patch pod agnhost-primary-6q6nt -p {"metadata":{"annotations":{"x":"y"}}}'
  Apr 15 07:22:09.884: INFO: stderr: ""
  Apr 15 07:22:09.885: INFO: stdout: "pod/agnhost-primary-6q6nt patched\n"
  STEP: checking annotations @ 04/15/24 07:22:09.885
  Apr 15 07:22:09.891: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:22:09.891: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 15 07:22:09.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4936" for this suite. @ 04/15/24 07:22:09.9
• [3.085 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/15/24 07:22:09.924
  Apr 15 07:22:09.924: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename hostport @ 04/15/24 07:22:09.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:22:09.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:22:09.962
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/15/24 07:22:09.977
  E0415 07:22:10.140984      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:11.141605      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.217 on the node which pod1 resides and expect scheduled @ 04/15/24 07:22:12.014
  E0415 07:22:12.142457      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:13.149942      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.217 but use UDP protocol on the node which pod2 resides @ 04/15/24 07:22:14.065
  E0415 07:22:14.146846      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:15.147501      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:16.148511      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:17.149745      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:18.148808      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/15/24 07:22:18.156
  Apr 15 07:22:18.156: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.217 http://127.0.0.1:54323/hostname] Namespace:hostport-6507 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:22:18.157: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:22:18.165: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:22:18.166: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-6507/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.217+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.217, port: 54323 @ 04/15/24 07:22:18.411
  Apr 15 07:22:18.412: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.217:54323/hostname] Namespace:hostport-6507 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:22:18.412: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:22:18.415: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:22:18.415: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-6507/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.217%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.217, port: 54323 UDP @ 04/15/24 07:22:18.561
  Apr 15 07:22:18.562: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.217 54323] Namespace:hostport-6507 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:22:18.562: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:22:18.565: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:22:18.565: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-6507/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.217+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0415 07:22:19.149549      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:20.150067      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:21.149969      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:22.150239      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:23.151028      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:22:23.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6507" for this suite. @ 04/15/24 07:22:23.746
• [13.836 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 04/15/24 07:22:23.77
  Apr 15 07:22:23.771: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:22:23.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:22:23.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:22:23.816
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:22:23.822
  E0415 07:22:24.151884      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:25.152107      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:26.152871      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:27.154553      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:22:27.869
  Apr 15 07:22:27.876: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-fc0f0f0b-5d8c-4a78-8d0b-979d68ba31e2 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:22:27.9
  Apr 15 07:22:27.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4608" for this suite. @ 04/15/24 07:22:27.951
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 04/15/24 07:22:27.975
  Apr 15 07:22:27.975: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 07:22:27.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:22:28.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:22:28.051
  STEP: set up a multi version CRD @ 04/15/24 07:22:28.058
  Apr 15 07:22:28.061: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:22:28.155017      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:29.155219      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:30.155736      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:31.156903      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:32.157079      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:33.157680      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 04/15/24 07:22:33.589
  STEP: check the unserved version gets removed @ 04/15/24 07:22:33.631
  E0415 07:22:34.158227      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 04/15/24 07:22:34.966
  E0415 07:22:35.158624      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:36.159068      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:37.159041      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:38.160183      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:22:38.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3712" for this suite. @ 04/15/24 07:22:38.692
• [10.732 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 04/15/24 07:22:38.715
  Apr 15 07:22:38.715: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 07:22:38.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:22:38.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:22:38.75
  STEP: Creating a ResourceQuota @ 04/15/24 07:22:38.755
  STEP: Getting a ResourceQuota @ 04/15/24 07:22:38.766
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/15/24 07:22:38.774
  STEP: Patching the ResourceQuota @ 04/15/24 07:22:38.781
  STEP: Deleting a Collection of ResourceQuotas @ 04/15/24 07:22:38.795
  STEP: Verifying the deleted ResourceQuota @ 04/15/24 07:22:38.84
  Apr 15 07:22:38.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-595" for this suite. @ 04/15/24 07:22:38.856
• [0.154 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/15/24 07:22:38.873
  Apr 15 07:22:38.874: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:22:38.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:22:38.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:22:38.909
  STEP: Creating secret with name s-test-opt-del-93fd980d-408e-4cd6-91f6-5f0ee50c59b3 @ 04/15/24 07:22:38.93
  STEP: Creating secret with name s-test-opt-upd-00fc7136-656e-4ea5-966a-9e3ac0c2dbc4 @ 04/15/24 07:22:38.944
  STEP: Creating the pod @ 04/15/24 07:22:38.956
  E0415 07:22:39.160575      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:40.161338      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:41.162388      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:42.162663      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-93fd980d-408e-4cd6-91f6-5f0ee50c59b3 @ 04/15/24 07:22:43.069
  STEP: Updating secret s-test-opt-upd-00fc7136-656e-4ea5-966a-9e3ac0c2dbc4 @ 04/15/24 07:22:43.081
  STEP: Creating secret with name s-test-opt-create-c5de6e1c-e409-4fd2-a7e7-5cfc44f1f55c @ 04/15/24 07:22:43.092
  STEP: waiting to observe update in volume @ 04/15/24 07:22:43.1
  E0415 07:22:43.162515      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:44.162880      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:45.163221      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:46.164234      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:47.165193      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:48.165492      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:49.167304      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:50.166195      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:51.166926      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:52.167242      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:53.167597      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:54.167893      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:55.169169      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:56.169345      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:57.169972      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:58.169742      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:22:59.170206      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:00.171259      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:01.171628      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:02.171937      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:03.172625      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:04.173427      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:05.173564      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:06.173696      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:07.174012      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:08.174145      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:09.174322      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:10.181925      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:11.182892      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:12.183138      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:13.183263      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:14.184253      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:15.184589      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:16.185477      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:17.185928      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:18.186162      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:19.190240      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:20.186752      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:21.187132      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:22.187875      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:23.189009      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:24.189564      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:25.190397      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:26.190774      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:27.191516      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:28.191679      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:29.191890      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:30.193084      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:31.193853      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:32.195485      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:33.195403      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:34.196223      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:35.197114      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:36.199168      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:37.199289      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:38.199856      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:39.200152      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:40.201121      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:41.201803      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:42.202595      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:43.203024      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:44.203427      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:45.204315      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:46.204581      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:47.205687      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:48.206372      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:49.206579      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:50.207701      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:51.207870      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:52.208512      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:53.208780      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:54.210090      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:55.210386      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:56.210832      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:57.210950      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:58.211336      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:23:59.211578      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:00.212523      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:01.213078      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:02.213847      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:03.214588      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:04.214746      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:05.215641      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:06.216168      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:07.216305      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:08.217296      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:09.217410      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:10.217845      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:11.218836      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:12.219861      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:13.220660      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:24:14.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8190" for this suite. @ 04/15/24 07:24:14.131
• [95.278 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/15/24 07:24:14.158
  Apr 15 07:24:14.158: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 07:24:14.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:24:14.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:24:14.214
  E0415 07:24:14.220651      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/15/24 07:24:14.248
  E0415 07:24:15.221427      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:16.221774      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:17.222351      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:18.222662      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:19.223526      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:20.224997      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:21.225271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:22.225773      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:23.225860      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:24.225993      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:25.226580      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:26.226816      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:27.227152      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:28.227300      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:29.228201      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:30.228570      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:31.229095      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/15/24 07:24:31.44
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/15/24 07:24:31.447
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/15/24 07:24:31.473
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 04/15/24 07:24:31.474
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/15/24 07:24:31.534
  E0415 07:24:32.229482      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:33.230076      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:34.230577      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/15/24 07:24:34.574
  E0415 07:24:35.230644      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/15/24 07:24:35.596
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/15/24 07:24:35.616
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 04/15/24 07:24:35.617
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/15/24 07:24:35.702
  E0415 07:24:36.231633      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/15/24 07:24:36.723
  E0415 07:24:37.232640      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:38.233420      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/15/24 07:24:38.766
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/15/24 07:24:38.79
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 04/15/24 07:24:38.791
  Apr 15 07:24:38.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1322" for this suite. @ 04/15/24 07:24:38.883
• [24.737 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 04/15/24 07:24:38.898
  Apr 15 07:24:38.899: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:24:38.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:24:38.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:24:38.935
  STEP: Creating a pod to test downward api env vars @ 04/15/24 07:24:38.943
  E0415 07:24:39.234044      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:40.237458      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:41.236583      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:42.236636      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:24:42.997
  Apr 15 07:24:43.007: INFO: Trying to get logs from node thuchow3cah4-3 pod downward-api-bd4ee201-b842-4c26-a3db-ed922250fe87 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 07:24:43.036
  Apr 15 07:24:43.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8962" for this suite. @ 04/15/24 07:24:43.098
• [4.219 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 04/15/24 07:24:43.122
  Apr 15 07:24:43.122: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 07:24:43.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:24:43.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:24:43.173
  STEP: fetching services @ 04/15/24 07:24:43.18
  Apr 15 07:24:43.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-543" for this suite. @ 04/15/24 07:24:43.207
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/15/24 07:24:43.224
  Apr 15 07:24:43.224: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:24:43.227
  E0415 07:24:43.237240      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:24:43.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:24:43.266
  STEP: Creating projection with secret that has name projected-secret-test-b8082f2d-846a-403a-8b99-a9cd8b8c105a @ 04/15/24 07:24:43.271
  STEP: Creating a pod to test consume secrets @ 04/15/24 07:24:43.283
  E0415 07:24:44.237957      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:45.238744      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:46.239117      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:47.239993      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:24:47.342
  Apr 15 07:24:47.349: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-projected-secrets-5b9a1c1a-2872-4c70-ab9c-9de61a0d6fa0 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:24:47.397
  Apr 15 07:24:47.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6881" for this suite. @ 04/15/24 07:24:47.445
• [4.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 04/15/24 07:24:47.472
  Apr 15 07:24:47.473: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 07:24:47.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:24:47.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:24:47.511
  STEP: creating a collection of services @ 04/15/24 07:24:47.557
  Apr 15 07:24:47.557: INFO: Creating e2e-svc-a-cd84p
  Apr 15 07:24:47.589: INFO: Creating e2e-svc-b-lqwvw
  Apr 15 07:24:47.639: INFO: Creating e2e-svc-c-k8xz2
  STEP: deleting service collection @ 04/15/24 07:24:47.727
  Apr 15 07:24:47.805: INFO: Collection of services has been deleted
  Apr 15 07:24:47.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8891" for this suite. @ 04/15/24 07:24:47.821
• [0.375 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 04/15/24 07:24:47.848
  Apr 15 07:24:47.848: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 07:24:47.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:24:47.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:24:47.903
  STEP: Counting existing ResourceQuota @ 04/15/24 07:24:47.91
  E0415 07:24:48.240295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:49.241087      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:50.242181      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:51.242158      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:52.243172      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/15/24 07:24:52.923
  STEP: Ensuring resource quota status is calculated @ 04/15/24 07:24:52.942
  E0415 07:24:53.243888      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:54.243992      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 04/15/24 07:24:54.956
  STEP: Ensuring resource quota status captures replicaset creation @ 04/15/24 07:24:54.995
  E0415 07:24:55.244519      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:56.244828      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 04/15/24 07:24:57.005
  STEP: Ensuring resource quota status released usage @ 04/15/24 07:24:57.018
  E0415 07:24:57.244865      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:24:58.245055      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:24:59.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7473" for this suite. @ 04/15/24 07:24:59.046
• [11.215 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 04/15/24 07:24:59.07
  Apr 15 07:24:59.071: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename sched-preemption @ 04/15/24 07:24:59.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:24:59.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:24:59.144
  Apr 15 07:24:59.190: INFO: Waiting up to 1m0s for all nodes to be ready
  E0415 07:24:59.246076      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:00.246865      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:01.247295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:02.247550      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:03.248396      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:04.248661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:05.249218      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:06.250667      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:07.250488      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:08.250734      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:09.250853      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:10.251151      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:11.251444      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:12.251821      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:13.251926      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:14.252605      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:15.253789      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:16.254128      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:17.255129      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:18.255622      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:19.256012      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:20.256576      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:21.257306      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:22.258086      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:23.259118      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:24.259223      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:25.260062      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:26.260565      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:27.260887      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:28.262029      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:29.262808      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:30.262981      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:31.264042      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:32.264404      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:33.265299      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:34.265955      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:35.265959      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:36.266805      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:37.267599      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:38.268480      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:39.269599      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:40.269455      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:41.270538      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:42.270757      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:43.271706      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:44.272682      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:45.273644      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:46.275141      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:47.274885      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:48.276013      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:49.276482      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:50.276883      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:51.277441      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:52.278540      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:53.278866      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:54.279658      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:55.280655      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:56.282061      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:57.282701      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:25:58.283136      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:25:59.263: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/15/24 07:25:59.277
  Apr 15 07:25:59.278: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:25:59.284021      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/15/24 07:25:59.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:25:59.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:25:59.327
  Apr 15 07:25:59.415: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Apr 15 07:25:59.424: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Apr 15 07:25:59.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 15 07:25:59.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4663" for this suite. @ 04/15/24 07:25:59.686
  STEP: Destroying namespace "sched-preemption-334" for this suite. @ 04/15/24 07:25:59.7
• [60.644 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 04/15/24 07:25:59.717
  Apr 15 07:25:59.718: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename gc @ 04/15/24 07:25:59.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:25:59.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:25:59.764
  STEP: create the rc @ 04/15/24 07:25:59.781
  W0415 07:25:59.795131      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0415 07:26:00.285055      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:01.285263      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:02.285338      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:03.285716      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:04.285981      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:05.286602      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/15/24 07:26:05.819
  STEP: wait for the rc to be deleted @ 04/15/24 07:26:06.021
  E0415 07:26:06.286928      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:07.287553      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:08.287629      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:09.287586      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:10.287779      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/15/24 07:26:11.035
  E0415 07:26:11.287834      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:12.288348      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:13.288353      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:14.289155      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:15.289358      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:16.290040      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:17.290184      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:18.290943      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:19.291219      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:20.291485      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:21.292229      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:22.292856      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:23.293657      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:24.294102      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:25.294384      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:26.295194      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:27.295406      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:28.295609      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:29.295735      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:30.295937      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:31.297041      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:32.297504      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:33.297587      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:34.297773      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:35.299896      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:36.299272      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:37.299529      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:38.299784      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:39.299956      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:40.300073      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/15/24 07:26:41.113
  E0415 07:26:41.300346      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:26:41.402: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 07:26:41.404: INFO: Deleting pod "simpletest.rc-289qf" in namespace "gc-1487"
  Apr 15 07:26:41.435: INFO: Deleting pod "simpletest.rc-2c22p" in namespace "gc-1487"
  Apr 15 07:26:41.533: INFO: Deleting pod "simpletest.rc-2v2g2" in namespace "gc-1487"
  Apr 15 07:26:41.581: INFO: Deleting pod "simpletest.rc-4ftxr" in namespace "gc-1487"
  Apr 15 07:26:41.691: INFO: Deleting pod "simpletest.rc-5cdzw" in namespace "gc-1487"
  Apr 15 07:26:41.743: INFO: Deleting pod "simpletest.rc-5mztl" in namespace "gc-1487"
  Apr 15 07:26:41.785: INFO: Deleting pod "simpletest.rc-5n2jw" in namespace "gc-1487"
  Apr 15 07:26:41.856: INFO: Deleting pod "simpletest.rc-5wh44" in namespace "gc-1487"
  Apr 15 07:26:41.913: INFO: Deleting pod "simpletest.rc-67bg8" in namespace "gc-1487"
  Apr 15 07:26:41.997: INFO: Deleting pod "simpletest.rc-6hkf9" in namespace "gc-1487"
  Apr 15 07:26:42.069: INFO: Deleting pod "simpletest.rc-74s95" in namespace "gc-1487"
  Apr 15 07:26:42.134: INFO: Deleting pod "simpletest.rc-75m5h" in namespace "gc-1487"
  Apr 15 07:26:42.209: INFO: Deleting pod "simpletest.rc-7jqkj" in namespace "gc-1487"
  Apr 15 07:26:42.293: INFO: Deleting pod "simpletest.rc-7kvjw" in namespace "gc-1487"
  E0415 07:26:42.314026      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:26:42.376: INFO: Deleting pod "simpletest.rc-7rwr5" in namespace "gc-1487"
  Apr 15 07:26:42.414: INFO: Deleting pod "simpletest.rc-7zdtn" in namespace "gc-1487"
  Apr 15 07:26:42.502: INFO: Deleting pod "simpletest.rc-862m6" in namespace "gc-1487"
  Apr 15 07:26:42.637: INFO: Deleting pod "simpletest.rc-8jzdz" in namespace "gc-1487"
  Apr 15 07:26:42.748: INFO: Deleting pod "simpletest.rc-9qkcq" in namespace "gc-1487"
  Apr 15 07:26:42.851: INFO: Deleting pod "simpletest.rc-9zj7j" in namespace "gc-1487"
  Apr 15 07:26:42.931: INFO: Deleting pod "simpletest.rc-b4djb" in namespace "gc-1487"
  Apr 15 07:26:43.021: INFO: Deleting pod "simpletest.rc-bczq5" in namespace "gc-1487"
  Apr 15 07:26:43.221: INFO: Deleting pod "simpletest.rc-bg6ck" in namespace "gc-1487"
  E0415 07:26:43.310150      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:26:43.411: INFO: Deleting pod "simpletest.rc-bm46z" in namespace "gc-1487"
  Apr 15 07:26:43.584: INFO: Deleting pod "simpletest.rc-bv8xb" in namespace "gc-1487"
  Apr 15 07:26:43.929: INFO: Deleting pod "simpletest.rc-bwpxm" in namespace "gc-1487"
  Apr 15 07:26:44.024: INFO: Deleting pod "simpletest.rc-bwzms" in namespace "gc-1487"
  Apr 15 07:26:44.139: INFO: Deleting pod "simpletest.rc-bxlgs" in namespace "gc-1487"
  Apr 15 07:26:44.309: INFO: Deleting pod "simpletest.rc-bzkrh" in namespace "gc-1487"
  E0415 07:26:44.310025      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:26:44.604: INFO: Deleting pod "simpletest.rc-c2lph" in namespace "gc-1487"
  Apr 15 07:26:44.699: INFO: Deleting pod "simpletest.rc-c6vnj" in namespace "gc-1487"
  Apr 15 07:26:44.761: INFO: Deleting pod "simpletest.rc-cbxb5" in namespace "gc-1487"
  Apr 15 07:26:44.823: INFO: Deleting pod "simpletest.rc-chc8v" in namespace "gc-1487"
  Apr 15 07:26:44.916: INFO: Deleting pod "simpletest.rc-clxxj" in namespace "gc-1487"
  Apr 15 07:26:44.997: INFO: Deleting pod "simpletest.rc-cxm2v" in namespace "gc-1487"
  Apr 15 07:26:45.152: INFO: Deleting pod "simpletest.rc-d9tnv" in namespace "gc-1487"
  E0415 07:26:45.310207      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:26:45.317: INFO: Deleting pod "simpletest.rc-dgsq7" in namespace "gc-1487"
  Apr 15 07:26:45.412: INFO: Deleting pod "simpletest.rc-dv5g6" in namespace "gc-1487"
  Apr 15 07:26:45.580: INFO: Deleting pod "simpletest.rc-fwk7n" in namespace "gc-1487"
  Apr 15 07:26:45.671: INFO: Deleting pod "simpletest.rc-g5xdk" in namespace "gc-1487"
  Apr 15 07:26:45.822: INFO: Deleting pod "simpletest.rc-g7hjl" in namespace "gc-1487"
  Apr 15 07:26:45.891: INFO: Deleting pod "simpletest.rc-gls2k" in namespace "gc-1487"
  Apr 15 07:26:46.135: INFO: Deleting pod "simpletest.rc-gv7n7" in namespace "gc-1487"
  Apr 15 07:26:46.248: INFO: Deleting pod "simpletest.rc-hgcpn" in namespace "gc-1487"
  E0415 07:26:46.311906      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:26:46.331: INFO: Deleting pod "simpletest.rc-hjf8h" in namespace "gc-1487"
  Apr 15 07:26:46.392: INFO: Deleting pod "simpletest.rc-hzdms" in namespace "gc-1487"
  Apr 15 07:26:46.444: INFO: Deleting pod "simpletest.rc-jdn8h" in namespace "gc-1487"
  Apr 15 07:26:46.621: INFO: Deleting pod "simpletest.rc-jfznv" in namespace "gc-1487"
  Apr 15 07:26:46.691: INFO: Deleting pod "simpletest.rc-jggmt" in namespace "gc-1487"
  Apr 15 07:26:46.736: INFO: Deleting pod "simpletest.rc-jjg7m" in namespace "gc-1487"
  Apr 15 07:26:46.822: INFO: Deleting pod "simpletest.rc-jx6vt" in namespace "gc-1487"
  Apr 15 07:26:46.913: INFO: Deleting pod "simpletest.rc-kc78b" in namespace "gc-1487"
  Apr 15 07:26:46.980: INFO: Deleting pod "simpletest.rc-kkm65" in namespace "gc-1487"
  Apr 15 07:26:47.063: INFO: Deleting pod "simpletest.rc-klrw2" in namespace "gc-1487"
  Apr 15 07:26:47.216: INFO: Deleting pod "simpletest.rc-l7ctr" in namespace "gc-1487"
  E0415 07:26:47.311992      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:26:47.348: INFO: Deleting pod "simpletest.rc-lcjh2" in namespace "gc-1487"
  Apr 15 07:26:47.441: INFO: Deleting pod "simpletest.rc-lcz7g" in namespace "gc-1487"
  Apr 15 07:26:47.582: INFO: Deleting pod "simpletest.rc-lfjqw" in namespace "gc-1487"
  Apr 15 07:26:47.783: INFO: Deleting pod "simpletest.rc-llxnm" in namespace "gc-1487"
  Apr 15 07:26:47.900: INFO: Deleting pod "simpletest.rc-lqlpb" in namespace "gc-1487"
  Apr 15 07:26:48.011: INFO: Deleting pod "simpletest.rc-lzl4d" in namespace "gc-1487"
  Apr 15 07:26:48.138: INFO: Deleting pod "simpletest.rc-m95tz" in namespace "gc-1487"
  Apr 15 07:26:48.232: INFO: Deleting pod "simpletest.rc-mqt7f" in namespace "gc-1487"
  E0415 07:26:48.312875      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:26:48.383: INFO: Deleting pod "simpletest.rc-mwprw" in namespace "gc-1487"
  Apr 15 07:26:48.433: INFO: Deleting pod "simpletest.rc-n5wtv" in namespace "gc-1487"
  Apr 15 07:26:48.576: INFO: Deleting pod "simpletest.rc-nldn7" in namespace "gc-1487"
  Apr 15 07:26:48.681: INFO: Deleting pod "simpletest.rc-nqkss" in namespace "gc-1487"
  Apr 15 07:26:48.791: INFO: Deleting pod "simpletest.rc-nx2rb" in namespace "gc-1487"
  Apr 15 07:26:48.853: INFO: Deleting pod "simpletest.rc-qhpdl" in namespace "gc-1487"
  Apr 15 07:26:48.878: INFO: Deleting pod "simpletest.rc-qkc87" in namespace "gc-1487"
  Apr 15 07:26:48.934: INFO: Deleting pod "simpletest.rc-rd6g6" in namespace "gc-1487"
  Apr 15 07:26:49.071: INFO: Deleting pod "simpletest.rc-rf4wt" in namespace "gc-1487"
  Apr 15 07:26:49.148: INFO: Deleting pod "simpletest.rc-rkc76" in namespace "gc-1487"
  E0415 07:26:49.314397      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:26:49.324: INFO: Deleting pod "simpletest.rc-rmgpg" in namespace "gc-1487"
  Apr 15 07:26:49.729: INFO: Deleting pod "simpletest.rc-rxjlv" in namespace "gc-1487"
  Apr 15 07:26:49.920: INFO: Deleting pod "simpletest.rc-sftpr" in namespace "gc-1487"
  Apr 15 07:26:50.025: INFO: Deleting pod "simpletest.rc-shmn4" in namespace "gc-1487"
  Apr 15 07:26:50.105: INFO: Deleting pod "simpletest.rc-sqcn9" in namespace "gc-1487"
  Apr 15 07:26:50.198: INFO: Deleting pod "simpletest.rc-st7qk" in namespace "gc-1487"
  Apr 15 07:26:50.294: INFO: Deleting pod "simpletest.rc-sz5lh" in namespace "gc-1487"
  E0415 07:26:50.314715      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:26:50.397: INFO: Deleting pod "simpletest.rc-t59xv" in namespace "gc-1487"
  Apr 15 07:26:50.447: INFO: Deleting pod "simpletest.rc-tl2cp" in namespace "gc-1487"
  Apr 15 07:26:50.533: INFO: Deleting pod "simpletest.rc-tw49r" in namespace "gc-1487"
  Apr 15 07:26:50.579: INFO: Deleting pod "simpletest.rc-tx6nm" in namespace "gc-1487"
  Apr 15 07:26:50.631: INFO: Deleting pod "simpletest.rc-txwn9" in namespace "gc-1487"
  Apr 15 07:26:50.703: INFO: Deleting pod "simpletest.rc-vrc6f" in namespace "gc-1487"
  Apr 15 07:26:50.746: INFO: Deleting pod "simpletest.rc-vxw58" in namespace "gc-1487"
  Apr 15 07:26:50.814: INFO: Deleting pod "simpletest.rc-w4llk" in namespace "gc-1487"
  Apr 15 07:26:50.868: INFO: Deleting pod "simpletest.rc-w7kcq" in namespace "gc-1487"
  Apr 15 07:26:50.900: INFO: Deleting pod "simpletest.rc-w9mgz" in namespace "gc-1487"
  Apr 15 07:26:50.943: INFO: Deleting pod "simpletest.rc-wmpdg" in namespace "gc-1487"
  Apr 15 07:26:51.017: INFO: Deleting pod "simpletest.rc-wql29" in namespace "gc-1487"
  Apr 15 07:26:51.104: INFO: Deleting pod "simpletest.rc-x966t" in namespace "gc-1487"
  Apr 15 07:26:51.247: INFO: Deleting pod "simpletest.rc-xjl9s" in namespace "gc-1487"
  E0415 07:26:51.315463      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:26:51.362: INFO: Deleting pod "simpletest.rc-xvzmp" in namespace "gc-1487"
  Apr 15 07:26:51.687: INFO: Deleting pod "simpletest.rc-xzq59" in namespace "gc-1487"
  Apr 15 07:26:51.872: INFO: Deleting pod "simpletest.rc-zfwnf" in namespace "gc-1487"
  Apr 15 07:26:52.035: INFO: Deleting pod "simpletest.rc-zhxkz" in namespace "gc-1487"
  Apr 15 07:26:52.109: INFO: Deleting pod "simpletest.rc-zmcbr" in namespace "gc-1487"
  Apr 15 07:26:52.196: INFO: Deleting pod "simpletest.rc-zrlgx" in namespace "gc-1487"
  Apr 15 07:26:52.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1487" for this suite. @ 04/15/24 07:26:52.291
  E0415 07:26:52.316026      15 retrywatcher.go:129] "Watch failed" err="context canceled"
• [52.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/15/24 07:26:52.452
  Apr 15 07:26:52.452: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename tables @ 04/15/24 07:26:52.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:26:52.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:26:52.56
  Apr 15 07:26:52.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-7399" for this suite. @ 04/15/24 07:26:52.595
• [0.167 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/15/24 07:26:52.622
  Apr 15 07:26:52.622: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 07:26:52.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:26:52.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:26:52.684
  STEP: Creating a ForbidConcurrent cronjob @ 04/15/24 07:26:52.69
  STEP: Ensuring a job is scheduled @ 04/15/24 07:26:52.712
  E0415 07:26:53.317264      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:54.318504      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:55.326336      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:56.325774      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:57.326199      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:58.326738      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:26:59.327172      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:00.327627      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/15/24 07:27:00.735
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/15/24 07:27:00.741
  STEP: Ensuring no more jobs are scheduled @ 04/15/24 07:27:00.752
  E0415 07:27:01.328742      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:02.329512      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:03.330677      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:04.331121      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:05.331660      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:06.332267      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:07.332472      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:08.333456      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:09.333840      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:10.333828      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:11.334004      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:12.334247      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:13.334293      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:14.334886      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:15.335604      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:16.336490      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:17.336930      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:18.337484      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:19.337822      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:20.338034      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:21.339299      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:22.339234      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:23.339514      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:24.340385      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:25.340514      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:26.341648      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:27.344041      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:28.343495      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:29.344840      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:30.345433      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:31.345811      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:32.346453      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:33.346615      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:34.347724      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:35.348418      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:36.349508      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:37.350439      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:38.350579      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:39.350821      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:40.350985      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:41.353434      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:42.353403      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:43.354525      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:44.355239      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:45.356263      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:46.356873      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:47.357559      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:48.358744      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:49.358905      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:50.359212      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:51.360393      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:52.360577      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:53.361728      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:54.362022      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:55.362232      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:56.363450      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:57.363866      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:58.363907      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:27:59.364883      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:00.369116      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:01.370326      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:02.370328      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:03.370685      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:04.371264      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:05.372122      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:06.372242      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:07.372661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:08.373455      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:09.373771      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:10.373933      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:11.373992      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:12.374369      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:13.374842      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:14.376101      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:15.376505      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:16.377165      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:17.379733      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:18.379182      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:19.379614      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:20.381032      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:21.381027      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:22.381860      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:23.382707      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:24.382930      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:25.382987      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:26.383505      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:27.384336      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:28.384632      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:29.385419      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:30.385747      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:31.386039      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:32.386264      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:33.386672      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:34.387162      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:35.387720      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:36.388554      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:37.389472      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:38.389947      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:39.390826      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:40.391009      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:41.391318      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:42.391813      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:43.391905      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:44.392311      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:45.392575      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:46.393139      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:47.394059      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:48.394678      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:49.394766      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:50.395362      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:51.396032      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:52.396834      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:53.397717      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:54.397609      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:55.397698      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:56.398658      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:57.399526      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:58.400489      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:28:59.400602      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:00.400822      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:01.402040      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:02.402626      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:03.403835      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:04.403863      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:05.403895      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:06.404759      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:07.404879      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:08.405732      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:09.406224      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:10.406342      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:11.409027      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:12.415098      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:13.411222      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:14.411314      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:15.412427      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:16.413236      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:17.414801      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:18.415780      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:19.416085      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:20.417016      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:21.417492      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:22.418231      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:23.417880      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:24.418377      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:25.418455      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:26.419684      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:27.420255      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:28.420848      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:29.421292      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:30.421303      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:31.422310      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:32.422577      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:33.423496      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:34.424289      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:35.424784      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:36.425310      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:37.425784      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:38.425864      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:39.427001      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:40.427861      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:41.428147      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:42.428598      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:43.428891      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:44.429082      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:45.429790      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:46.430381      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:47.431294      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:48.432175      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:49.432860      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:50.433167      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:51.434204      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:52.434345      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:53.435451      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:54.436352      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:55.436060      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:56.437328      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:57.437683      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:58.438576      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:29:59.441513      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:00.443894      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:01.443554      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:02.443715      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:03.444523      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:04.444118      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:05.444515      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:06.444726      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:07.444895      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:08.445976      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:09.446915      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:10.447941      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:11.448170      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:12.448500      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:13.449636      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:14.449552      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:15.449734      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:16.450886      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:17.451488      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:18.451785      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:19.452472      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:20.452616      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:21.452919      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:22.453237      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:23.453406      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:24.453712      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:25.454385      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:26.454236      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:27.454495      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:28.455430      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:29.455776      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:30.456518      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:31.457343      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:32.457438      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:33.458269      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:34.458570      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:35.459671      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:36.459912      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:37.461187      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:38.460978      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:39.462884      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:40.462604      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:41.462421      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:42.462648      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:43.463767      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:44.464139      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:45.465944      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:46.466508      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:47.466656      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:48.467729      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:49.467804      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:50.468658      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:51.469519      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:52.469598      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:53.470305      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:54.471115      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:55.471169      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:56.471420      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:57.472142      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:58.476723      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:30:59.475414      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:00.475995      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:01.477170      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:02.477880      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:03.477307      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:04.479510      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:05.479039      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:06.479491      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:07.480814      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:08.480854      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:09.481412      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:10.481515      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:11.482820      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:12.483414      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:13.483355      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:14.483715      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:15.484005      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:16.484352      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:17.485983      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:18.486614      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:19.486696      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:20.487563      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:21.488571      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:22.489429      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:23.490099      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:24.491323      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:25.491250      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:26.491407      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:27.491475      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:28.491641      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:29.492461      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:30.492763      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:31.493300      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:32.493425      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:33.494452      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:34.495239      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:35.495624      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:36.502599      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:37.503027      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:38.503433      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:39.503540      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:40.503749      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:41.504394      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:42.505219      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:43.505865      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:44.506233      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:45.506987      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:46.507044      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:47.508149      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:48.508856      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:49.509247      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:50.510094      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:51.510883      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:52.511781      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:53.512210      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:54.512399      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:55.512724      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:56.512849      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:57.514271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:58.514252      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:31:59.515140      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:00.515539      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/15/24 07:32:00.771
  Apr 15 07:32:00.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2823" for this suite. @ 04/15/24 07:32:00.806
• [308.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 04/15/24 07:32:00.847
  Apr 15 07:32:00.847: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:32:00.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:32:00.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:32:00.948
  STEP: Creating configMap with name projected-configmap-test-volume-map-aab4b426-aaa8-4f72-a5c8-a44f0c42734d @ 04/15/24 07:32:00.956
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:32:00.976
  E0415 07:32:01.515878      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:02.515946      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:03.516957      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:04.517359      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:32:05.056
  Apr 15 07:32:05.062: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-projected-configmaps-dd7789c6-e36a-4ab0-9e41-cf6237b48be0 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:32:05.112
  Apr 15 07:32:05.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7823" for this suite. @ 04/15/24 07:32:05.153
• [4.324 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/15/24 07:32:05.171
  Apr 15 07:32:05.171: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename subpath @ 04/15/24 07:32:05.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:32:05.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:32:05.208
  STEP: Setting up data @ 04/15/24 07:32:05.212
  STEP: Creating pod pod-subpath-test-configmap-q5m8 @ 04/15/24 07:32:05.23
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 07:32:05.231
  E0415 07:32:05.517509      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:06.518239      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:07.518390      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:08.518851      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:09.519651      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:10.519808      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:11.520634      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:12.520766      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:13.521039      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:14.521382      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:15.521440      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:16.522280      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:17.524891      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:18.523582      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:19.524374      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:20.524841      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:21.526039      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:22.527336      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:23.528108      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:24.528629      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:25.528536      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:26.528733      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:27.529507      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:28.530378      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:32:29.375
  Apr 15 07:32:29.385: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-subpath-test-configmap-q5m8 container test-container-subpath-configmap-q5m8: <nil>
  STEP: delete the pod @ 04/15/24 07:32:29.407
  STEP: Deleting pod pod-subpath-test-configmap-q5m8 @ 04/15/24 07:32:29.439
  Apr 15 07:32:29.439: INFO: Deleting pod "pod-subpath-test-configmap-q5m8" in namespace "subpath-6442"
  Apr 15 07:32:29.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6442" for this suite. @ 04/15/24 07:32:29.467
• [24.315 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 04/15/24 07:32:29.491
  Apr 15 07:32:29.491: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:32:29.498
  E0415 07:32:29.529726      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:32:29.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:32:29.586
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:32:29.594
  E0415 07:32:30.530579      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:31.531375      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:32.531575      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:33.532019      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:32:33.678
  Apr 15 07:32:33.684: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-d34e9372-8764-44d0-b7ab-f4b2f91a5139 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:32:33.702
  Apr 15 07:32:33.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6563" for this suite. @ 04/15/24 07:32:33.748
• [4.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 04/15/24 07:32:33.769
  Apr 15 07:32:33.769: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename dns @ 04/15/24 07:32:33.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:32:33.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:32:33.818
  STEP: Creating a test externalName service @ 04/15/24 07:32:33.825
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3977.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3977.svc.cluster.local; sleep 1; done
   @ 04/15/24 07:32:33.836
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3977.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local; sleep 1; done
   @ 04/15/24 07:32:33.837
  STEP: creating a pod to probe DNS @ 04/15/24 07:32:33.838
  STEP: submitting the pod to kubernetes @ 04/15/24 07:32:33.839
  E0415 07:32:34.532632      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:35.533551      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:36.533636      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:37.533789      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 07:32:37.896
  STEP: looking for the results for each expected name from probers @ 04/15/24 07:32:37.903
  Apr 15 07:32:37.933: INFO: DNS probes using dns-test-0d747a19-d1a2-49ad-9af1-bedca0d39e90 succeeded

  STEP: changing the externalName to bar.example.com @ 04/15/24 07:32:37.934
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3977.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3977.svc.cluster.local; sleep 1; done
   @ 04/15/24 07:32:37.956
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3977.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local; sleep 1; done
   @ 04/15/24 07:32:37.956
  STEP: creating a second pod to probe DNS @ 04/15/24 07:32:37.956
  STEP: submitting the pod to kubernetes @ 04/15/24 07:32:37.956
  E0415 07:32:38.534697      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:39.535351      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:40.536026      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:41.537112      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 07:32:42.026
  STEP: looking for the results for each expected name from probers @ 04/15/24 07:32:42.034
  Apr 15 07:32:42.058: INFO: File wheezy_udp@dns-test-service-3.dns-3977.svc.cluster.local from pod  dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 07:32:42.069: INFO: File jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local from pod  dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 07:32:42.070: INFO: Lookups using dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c failed for: [wheezy_udp@dns-test-service-3.dns-3977.svc.cluster.local jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local]

  Apr 15 07:32:42.089: INFO: Pod client logs for webserver: 
  Apr 15 07:32:42.116: INFO: Pod client logs for querier: 
  Apr 15 07:32:42.136: INFO: Pod client logs for jessie-querier: 
  E0415 07:32:42.537645      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:43.538272      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:44.539627      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:45.539664      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:46.540305      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:32:47.146: INFO: File wheezy_udp@dns-test-service-3.dns-3977.svc.cluster.local from pod  dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 07:32:47.154: INFO: File jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local from pod  dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 07:32:47.154: INFO: Lookups using dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c failed for: [wheezy_udp@dns-test-service-3.dns-3977.svc.cluster.local jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local]

  Apr 15 07:32:47.166: INFO: Pod client logs for webserver: 
  Apr 15 07:32:47.179: INFO: Pod client logs for querier: 
  Apr 15 07:32:47.191: INFO: Pod client logs for jessie-querier: 
  E0415 07:32:47.541199      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:48.542486      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:49.543962      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:50.544895      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:51.544980      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:32:52.153: INFO: File wheezy_udp@dns-test-service-3.dns-3977.svc.cluster.local from pod  dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 07:32:52.176: INFO: File jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local from pod  dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 07:32:52.177: INFO: Lookups using dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c failed for: [wheezy_udp@dns-test-service-3.dns-3977.svc.cluster.local jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local]

  Apr 15 07:32:52.232: INFO: Pod client logs for webserver: 
  Apr 15 07:32:52.259: INFO: Pod client logs for querier: 
  Apr 15 07:32:52.277: INFO: Pod client logs for jessie-querier: 
  E0415 07:32:52.545152      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:53.545497      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:54.545590      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:55.546134      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:56.546589      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:32:57.159: INFO: File wheezy_udp@dns-test-service-3.dns-3977.svc.cluster.local from pod  dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 07:32:57.168: INFO: File jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local from pod  dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 07:32:57.169: INFO: Lookups using dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c failed for: [wheezy_udp@dns-test-service-3.dns-3977.svc.cluster.local jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local]

  Apr 15 07:32:57.185: INFO: Pod client logs for webserver: 
  Apr 15 07:32:57.210: INFO: Pod client logs for querier: 
  Apr 15 07:32:57.230: INFO: Pod client logs for jessie-querier: 
  E0415 07:32:57.547065      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:58.547391      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:32:59.547766      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:00.547827      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:01.548096      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:33:02.145: INFO: File wheezy_udp@dns-test-service-3.dns-3977.svc.cluster.local from pod  dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 07:33:02.154: INFO: File jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local from pod  dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 15 07:33:02.154: INFO: Lookups using dns-3977/dns-test-55c43c05-4539-4682-b891-2f59a1d9338c failed for: [wheezy_udp@dns-test-service-3.dns-3977.svc.cluster.local jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local]

  Apr 15 07:33:02.170: INFO: Pod client logs for webserver: 
  Apr 15 07:33:02.182: INFO: Pod client logs for querier: 
  Apr 15 07:33:02.194: INFO: Pod client logs for jessie-querier: 
  E0415 07:33:02.548413      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:03.548725      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:04.548895      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:05.549094      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:06.549800      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:33:07.156: INFO: DNS probes using dns-test-55c43c05-4539-4682-b891-2f59a1d9338c succeeded

  STEP: changing the service to type=ClusterIP @ 04/15/24 07:33:07.157
  W0415 07:33:07.195442      15 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3977.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-3977.svc.cluster.local; sleep 1; done
   @ 04/15/24 07:33:07.195
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3977.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local; sleep 1; done
   @ 04/15/24 07:33:07.195
  STEP: creating a third pod to probe DNS @ 04/15/24 07:33:07.195
  STEP: submitting the pod to kubernetes @ 04/15/24 07:33:07.215
  E0415 07:33:07.550992      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:08.552501      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:09.551829      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:10.552187      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 07:33:11.29
  STEP: looking for the results for each expected name from probers @ 04/15/24 07:33:11.302
  Apr 15 07:33:11.364: INFO: File jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local from pod  dns-3977/dns-test-e2931348-bda6-4024-9111-a2724b803c51 contains '' instead of '10.233.53.225'
  Apr 15 07:33:11.364: INFO: Lookups using dns-3977/dns-test-e2931348-bda6-4024-9111-a2724b803c51 failed for: [jessie_udp@dns-test-service-3.dns-3977.svc.cluster.local]

  Apr 15 07:33:11.443: INFO: Pod client logs for webserver: 
  Apr 15 07:33:11.504: INFO: Pod client logs for querier: 
  Apr 15 07:33:11.520: INFO: Pod client logs for jessie-querier: 
  E0415 07:33:11.553175      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:12.555067      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:13.555409      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:14.556203      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:15.556203      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:33:16.542: INFO: DNS probes using dns-test-e2931348-bda6-4024-9111-a2724b803c51 succeeded

  Apr 15 07:33:16.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 07:33:16.556452      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/15/24 07:33:16.56
  STEP: deleting the pod @ 04/15/24 07:33:16.635
  STEP: deleting the pod @ 04/15/24 07:33:16.696
  STEP: deleting the test externalName service @ 04/15/24 07:33:16.746
  STEP: Destroying namespace "dns-3977" for this suite. @ 04/15/24 07:33:16.805
• [43.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/15/24 07:33:16.845
  Apr 15 07:33:16.846: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename prestop @ 04/15/24 07:33:16.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:33:16.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:33:16.898
  STEP: Creating server pod server in namespace prestop-1278 @ 04/15/24 07:33:16.905
  STEP: Waiting for pods to come up. @ 04/15/24 07:33:16.927
  E0415 07:33:17.557807      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:18.558232      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-1278 @ 04/15/24 07:33:18.962
  E0415 07:33:19.559192      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:20.559800      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 04/15/24 07:33:20.992
  E0415 07:33:21.560561      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:22.561108      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:23.562062      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:24.563035      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:25.563845      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:33:26.021: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Apr 15 07:33:26.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 04/15/24 07:33:26.039
  STEP: Destroying namespace "prestop-1278" for this suite. @ 04/15/24 07:33:26.069
• [9.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 04/15/24 07:33:26.111
  Apr 15 07:33:26.111: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:33:26.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:33:26.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:33:26.151
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/15/24 07:33:26.156
  E0415 07:33:26.564277      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:27.565248      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:28.566309      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:29.567361      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:33:30.225
  Apr 15 07:33:30.239: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-8a700b2d-498d-4911-828f-fe32ef2a4c28 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:33:30.269
  Apr 15 07:33:30.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3172" for this suite. @ 04/15/24 07:33:30.336
• [4.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 04/15/24 07:33:30.377
  Apr 15 07:33:30.377: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:33:30.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:33:30.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:33:30.43
  STEP: Creating a pod to test downward api env vars @ 04/15/24 07:33:30.436
  E0415 07:33:30.568214      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:31.569319      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:32.569497      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:33.570066      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:33:34.486
  Apr 15 07:33:34.494: INFO: Trying to get logs from node thuchow3cah4-3 pod downward-api-2310d67a-dcd4-41aa-bea2-72dacb40d802 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 07:33:34.511
  Apr 15 07:33:34.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3190" for this suite. @ 04/15/24 07:33:34.563
  E0415 07:33:34.570721      15 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.206 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 04/15/24 07:33:34.584
  Apr 15 07:33:34.584: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:33:34.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:33:34.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:33:34.629
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:33:34.636
  E0415 07:33:35.570874      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:36.571201      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:37.571614      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:38.572042      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:33:38.69
  Apr 15 07:33:38.696: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-d6cdcff9-4de4-4668-9ba5-9154dd5e7fb8 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:33:38.711
  Apr 15 07:33:38.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6608" for this suite. @ 04/15/24 07:33:38.757
• [4.193 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 04/15/24 07:33:38.778
  Apr 15 07:33:38.778: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:33:38.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:33:38.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:33:38.825
  STEP: Setting up server cert @ 04/15/24 07:33:38.899
  E0415 07:33:39.571780      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:33:39.78
  STEP: Deploying the webhook pod @ 04/15/24 07:33:39.811
  STEP: Wait for the deployment to be ready @ 04/15/24 07:33:39.87
  Apr 15 07:33:39.969: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 07:33:40.572434      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:41.572574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:33:42.002
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:33:42.024
  E0415 07:33:42.572977      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:33:43.025: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 15 07:33:43.040: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2540-crds.webhook.example.com via the AdmissionRegistration API @ 04/15/24 07:33:43.566
  E0415 07:33:43.573774      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/15/24 07:33:43.609
  E0415 07:33:44.574064      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:45.574503      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:33:45.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 07:33:46.575494      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-7339" for this suite. @ 04/15/24 07:33:46.628
  STEP: Destroying namespace "webhook-markers-3304" for this suite. @ 04/15/24 07:33:46.641
• [7.879 seconds]
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 04/15/24 07:33:46.658
  Apr 15 07:33:46.658: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 07:33:46.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:33:46.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:33:46.705
  STEP: creating service in namespace services-4033 @ 04/15/24 07:33:46.711
  STEP: creating service affinity-clusterip in namespace services-4033 @ 04/15/24 07:33:46.711
  STEP: creating replication controller affinity-clusterip in namespace services-4033 @ 04/15/24 07:33:46.742
  I0415 07:33:46.768892      15 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-4033, replica count: 3
  E0415 07:33:47.575755      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:48.576573      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:49.576945      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 07:33:49.821077      15 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 07:33:49.837: INFO: Creating new exec pod
  E0415 07:33:50.577974      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:51.578123      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:52.578366      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:33:52.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-4033 exec execpod-affinitysvcb6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Apr 15 07:33:53.299: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Apr 15 07:33:53.299: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 07:33:53.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-4033 exec execpod-affinitysvcb6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.21.169 80'
  E0415 07:33:53.579314      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:33:53.626: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.21.169 80\nConnection to 10.233.21.169 80 port [tcp/http] succeeded!\n"
  Apr 15 07:33:53.626: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 15 07:33:53.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-4033 exec execpod-affinitysvcb6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.21.169:80/ ; done'
  Apr 15 07:33:54.269: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.21.169:80/\n"
  Apr 15 07:33:54.269: INFO: stdout: "\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b\naffinity-clusterip-xkb7b"
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Received response from host: affinity-clusterip-xkb7b
  Apr 15 07:33:54.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 15 07:33:54.279: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-4033, will wait for the garbage collector to delete the pods @ 04/15/24 07:33:54.306
  Apr 15 07:33:54.382: INFO: Deleting ReplicationController affinity-clusterip took: 13.794086ms
  Apr 15 07:33:54.483: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.861921ms
  E0415 07:33:54.581600      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:55.584029      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:56.583059      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-4033" for this suite. @ 04/15/24 07:33:57.542
• [10.900 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/15/24 07:33:57.561
  Apr 15 07:33:57.561: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename events @ 04/15/24 07:33:57.569
  E0415 07:33:57.583502      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:33:57.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:33:57.604
  STEP: creating a test event @ 04/15/24 07:33:57.61
  STEP: listing events in all namespaces @ 04/15/24 07:33:57.624
  STEP: listing events in test namespace @ 04/15/24 07:33:57.638
  STEP: listing events with field selection filtering on source @ 04/15/24 07:33:57.643
  STEP: listing events with field selection filtering on reportingController @ 04/15/24 07:33:57.649
  STEP: getting the test event @ 04/15/24 07:33:57.656
  STEP: patching the test event @ 04/15/24 07:33:57.662
  STEP: getting the test event @ 04/15/24 07:33:57.68
  STEP: updating the test event @ 04/15/24 07:33:57.685
  STEP: getting the test event @ 04/15/24 07:33:57.702
  STEP: deleting the test event @ 04/15/24 07:33:57.709
  STEP: listing events in all namespaces @ 04/15/24 07:33:57.725
  STEP: listing events in test namespace @ 04/15/24 07:33:57.735
  Apr 15 07:33:57.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1978" for this suite. @ 04/15/24 07:33:57.753
• [0.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 04/15/24 07:33:57.78
  Apr 15 07:33:57.780: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename resourcequota @ 04/15/24 07:33:57.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:33:57.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:33:57.819
  STEP: Discovering how many secrets are in namespace by default @ 04/15/24 07:33:57.825
  E0415 07:33:58.585185      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:33:59.585116      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:00.585310      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:01.585850      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:02.585731      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 04/15/24 07:34:02.834
  E0415 07:34:03.586585      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:04.586924      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:05.587408      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:06.588444      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:07.589419      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/15/24 07:34:07.841
  STEP: Ensuring resource quota status is calculated @ 04/15/24 07:34:07.856
  E0415 07:34:08.590742      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:09.590585      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 04/15/24 07:34:09.863
  STEP: Ensuring resource quota status captures secret creation @ 04/15/24 07:34:09.892
  E0415 07:34:10.590872      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:11.591385      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 04/15/24 07:34:11.9
  STEP: Ensuring resource quota status released usage @ 04/15/24 07:34:11.912
  E0415 07:34:12.592197      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:13.592432      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:13.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4573" for this suite. @ 04/15/24 07:34:13.938
• [16.173 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 04/15/24 07:34:13.957
  Apr 15 07:34:13.957: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:34:13.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:34:13.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:34:13.997
  STEP: creating a replication controller @ 04/15/24 07:34:14.003
  Apr 15 07:34:14.004: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9741 create -f -'
  E0415 07:34:14.592948      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:14.764: INFO: stderr: ""
  Apr 15 07:34:14.764: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/15/24 07:34:14.764
  Apr 15 07:34:14.765: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9741 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 07:34:15.018: INFO: stderr: ""
  Apr 15 07:34:15.018: INFO: stdout: "update-demo-nautilus-46qbb update-demo-nautilus-q78tt "
  Apr 15 07:34:15.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9741 get pods update-demo-nautilus-46qbb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 07:34:15.226: INFO: stderr: ""
  Apr 15 07:34:15.226: INFO: stdout: ""
  Apr 15 07:34:15.226: INFO: update-demo-nautilus-46qbb is created but not running
  E0415 07:34:15.593197      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:16.593335      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:17.593581      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:18.593837      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:19.594241      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:20.227: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9741 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 15 07:34:20.446: INFO: stderr: ""
  Apr 15 07:34:20.446: INFO: stdout: "update-demo-nautilus-46qbb update-demo-nautilus-q78tt "
  Apr 15 07:34:20.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9741 get pods update-demo-nautilus-46qbb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0415 07:34:20.594772      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:20.694: INFO: stderr: ""
  Apr 15 07:34:20.694: INFO: stdout: "true"
  Apr 15 07:34:20.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9741 get pods update-demo-nautilus-46qbb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 07:34:20.877: INFO: stderr: ""
  Apr 15 07:34:20.877: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 07:34:20.877: INFO: validating pod update-demo-nautilus-46qbb
  Apr 15 07:34:20.892: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 07:34:20.892: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 07:34:20.892: INFO: update-demo-nautilus-46qbb is verified up and running
  Apr 15 07:34:20.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9741 get pods update-demo-nautilus-q78tt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 15 07:34:21.087: INFO: stderr: ""
  Apr 15 07:34:21.087: INFO: stdout: "true"
  Apr 15 07:34:21.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9741 get pods update-demo-nautilus-q78tt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 15 07:34:21.264: INFO: stderr: ""
  Apr 15 07:34:21.265: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 15 07:34:21.265: INFO: validating pod update-demo-nautilus-q78tt
  Apr 15 07:34:21.286: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 15 07:34:21.286: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 15 07:34:21.286: INFO: update-demo-nautilus-q78tt is verified up and running
  STEP: using delete to clean up resources @ 04/15/24 07:34:21.286
  Apr 15 07:34:21.287: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9741 delete --grace-period=0 --force -f -'
  Apr 15 07:34:21.468: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 15 07:34:21.468: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 15 07:34:21.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9741 get rc,svc -l name=update-demo --no-headers'
  E0415 07:34:21.595741      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:21.705: INFO: stderr: "No resources found in kubectl-9741 namespace.\n"
  Apr 15 07:34:21.705: INFO: stdout: ""
  Apr 15 07:34:21.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-9741 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 15 07:34:21.931: INFO: stderr: ""
  Apr 15 07:34:21.931: INFO: stdout: ""
  Apr 15 07:34:21.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9741" for this suite. @ 04/15/24 07:34:21.966
• [8.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 04/15/24 07:34:22.008
  Apr 15 07:34:22.008: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 07:34:22.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:34:22.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:34:22.059
  Apr 15 07:34:22.066: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:34:22.596826      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:23.597085      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:24.597717      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:25.599180      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:25.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4069" for this suite. @ 04/15/24 07:34:25.704
• [3.717 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 04/15/24 07:34:25.738
  Apr 15 07:34:25.739: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 07:34:25.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:34:25.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:34:25.789
  STEP: Creating simple DaemonSet "daemon-set" @ 04/15/24 07:34:25.878
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 07:34:25.897
  Apr 15 07:34:25.928: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 07:34:25.928: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  E0415 07:34:26.599467      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:26.953: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 07:34:26.953: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  E0415 07:34:27.599631      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:27.955: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 07:34:27.955: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 04/15/24 07:34:27.964
  Apr 15 07:34:27.975: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/15/24 07:34:27.975
  Apr 15 07:34:28.002: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/15/24 07:34:28.002
  Apr 15 07:34:28.012: INFO: Observed &DaemonSet event: ADDED
  Apr 15 07:34:28.013: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 07:34:28.014: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 07:34:28.015: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 07:34:28.016: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 07:34:28.017: INFO: Found daemon set daemon-set in namespace daemonsets-5191 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 15 07:34:28.018: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/15/24 07:34:28.019
  STEP: watching for the daemon set status to be patched @ 04/15/24 07:34:28.045
  Apr 15 07:34:28.056: INFO: Observed &DaemonSet event: ADDED
  Apr 15 07:34:28.057: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 07:34:28.058: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 07:34:28.061: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 07:34:28.062: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 07:34:28.063: INFO: Observed daemon set daemon-set in namespace daemonsets-5191 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 15 07:34:28.064: INFO: Observed &DaemonSet event: MODIFIED
  Apr 15 07:34:28.064: INFO: Found daemon set daemon-set in namespace daemonsets-5191 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Apr 15 07:34:28.065: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 07:34:28.075
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5191, will wait for the garbage collector to delete the pods @ 04/15/24 07:34:28.075
  Apr 15 07:34:28.174: INFO: Deleting DaemonSet.extensions daemon-set took: 38.906969ms
  Apr 15 07:34:28.382: INFO: Terminating DaemonSet.extensions daemon-set pods took: 207.926512ms
  E0415 07:34:28.600757      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:29.601083      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:29.690: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 07:34:29.690: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 07:34:29.696: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"170360"},"items":null}

  Apr 15 07:34:29.704: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"170360"},"items":null}

  Apr 15 07:34:29.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5191" for this suite. @ 04/15/24 07:34:29.756
• [4.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 04/15/24 07:34:29.779
  Apr 15 07:34:29.779: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename gc @ 04/15/24 07:34:29.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:34:29.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:34:29.817
  STEP: create the rc @ 04/15/24 07:34:29.831
  W0415 07:34:29.844543      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0415 07:34:30.604687      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:31.604498      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:32.605199      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:33.605442      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:34.606544      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:35.611073      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/15/24 07:34:35.933
  STEP: wait for the rc to be deleted @ 04/15/24 07:34:36.073
  E0415 07:34:36.611911      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:37.352: INFO: 80 pods remaining
  Apr 15 07:34:37.353: INFO: 80 pods has nil DeletionTimestamp
  Apr 15 07:34:37.353: INFO: 
  E0415 07:34:37.612598      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:38.452: INFO: 71 pods remaining
  Apr 15 07:34:38.453: INFO: 68 pods has nil DeletionTimestamp
  Apr 15 07:34:38.453: INFO: 
  E0415 07:34:38.612845      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:39.260: INFO: 58 pods remaining
  Apr 15 07:34:39.260: INFO: 57 pods has nil DeletionTimestamp
  Apr 15 07:34:39.260: INFO: 
  E0415 07:34:39.614265      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:40.378: INFO: 43 pods remaining
  Apr 15 07:34:40.387: INFO: 41 pods has nil DeletionTimestamp
  Apr 15 07:34:40.387: INFO: 
  E0415 07:34:40.614103      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:41.483: INFO: 28 pods remaining
  Apr 15 07:34:41.484: INFO: 26 pods has nil DeletionTimestamp
  Apr 15 07:34:41.484: INFO: 
  E0415 07:34:41.614616      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:42.147: INFO: 17 pods remaining
  Apr 15 07:34:42.147: INFO: 16 pods has nil DeletionTimestamp
  Apr 15 07:34:42.148: INFO: 
  E0415 07:34:42.614984      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:43.192: INFO: 0 pods remaining
  Apr 15 07:34:43.192: INFO: 0 pods has nil DeletionTimestamp
  Apr 15 07:34:43.193: INFO: 
  E0415 07:34:43.615349      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/15/24 07:34:44.123
  E0415 07:34:44.616136      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:44.922: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 07:34:44.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9601" for this suite. @ 04/15/24 07:34:44.967
• [15.227 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 04/15/24 07:34:45.008
  Apr 15 07:34:45.008: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 07:34:45.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:34:45.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:34:45.083
  STEP: Creating pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350 @ 04/15/24 07:34:45.089
  E0415 07:34:45.616228      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:46.617062      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:47.617988      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:48.618190      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:49.618957      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:50.619109      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:51.620050      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:52.620986      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:53.621672      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:54.622642      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 07:34:55.331
  Apr 15 07:34:55.354: INFO: Initial restart count of pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 is 0
  Apr 15 07:34:55.368: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:34:55.623373      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:56.623794      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:57.386: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:34:57.623893      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:34:58.624497      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:34:59.395: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:34:59.625362      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:00.626183      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:01.409: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:01.627189      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:02.628058      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:03.458: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:03.628866      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:04.629590      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:05.465: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:05.629810      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:06.630061      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:07.475: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:07.631014      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:08.631488      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:09.482: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:09.631868      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:10.632085      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:11.495: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:11.632948      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:12.633141      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:13.505: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:13.633745      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:14.634843      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:15.514: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:15.635046      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:16.635124      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:17.523: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:17.635700      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:18.635813      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:19.531: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:19.636588      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:20.636996      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:21.542: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:21.638218      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:22.639286      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:23.551: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:23.639992      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:24.640760      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:25.559: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:25.641242      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:26.641456      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:27.567: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:27.642532      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:28.643119      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:29.580: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:29.643884      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:30.644189      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:31.595: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:31.644806      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:32.644583      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:33.603: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:33.645561      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:34.646512      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:35.611: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:35.647475      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:36.648292      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:37.619: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:37.649457      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:38.649713      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:39.650154      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:39.654: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:40.650357      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:41.650986      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:41.665: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:42.652765      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:43.652536      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:43.676: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:44.653165      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:45.654425      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:45.684: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:46.655133      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:47.656013      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:47.695: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:48.656177      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:49.656914      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:49.713: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:50.657074      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:51.658276      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:51.724: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:52.658446      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:53.660052      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:53.734: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:54.661135      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:55.661692      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:55.742: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:56.662264      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:57.662547      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:57.754: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:35:58.662581      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:35:59.663612      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:35:59.762: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:00.663757      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:01.663957      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:01.776: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:02.664388      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:03.664398      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:03.786: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:04.664913      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:05.665108      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:05.816: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:06.667331      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:07.667510      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:07.826: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:08.667602      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:09.668471      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:09.834: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:10.668703      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:11.668856      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:11.845: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:12.668972      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:13.669465      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:13.854: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:14.670345      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:15.671198      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:15.864: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:16.671524      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:17.671764      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:17.876: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:18.675597      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:19.673203      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:19.890: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:20.673651      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:21.674140      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:21.899: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:22.674307      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:23.674630      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:23.908: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:24.674833      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:25.675458      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:25.916: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:26.675690      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:27.676225      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:27.927: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:28.677285      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:29.678009      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:29.937: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:30.677869      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:31.678648      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:31.953: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:32.678878      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:33.679626      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:33.964: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:34.680827      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:35.681165      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:35.973: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:36.681399      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:37.682297      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:37.983: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:38.682456      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:39.682612      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:39.997: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:40.682994      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:41.684480      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:42.007: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:42.684838      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:43.684932      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:44.016: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:44.685479      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:45.685434      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:46.029: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:46.686189      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:47.686248      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:48.039: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:48.687364      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:49.688180      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:50.049: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:50.688329      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:51.689060      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:52.060: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:52.689628      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:53.690267      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:54.070: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:54.690517      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:55.690969      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:56.078: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:56.691026      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:57.691301      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:36:58.087: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:36:58.692398      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:36:59.692863      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:00.095: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:00.692782      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:01.693449      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:02.110: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:02.693382      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:03.694322      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:04.121: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:04.694969      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:05.695728      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:06.131: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:06.696683      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:07.697339      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:08.146: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:08.697674      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:09.698428      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:10.154: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:10.698493      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:11.699439      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:12.164: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:12.699674      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:13.700533      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:14.172: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:14.700574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:15.701703      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:16.184: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:16.701863      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:17.702076      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:18.194: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:18.702961      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:19.703545      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:20.223: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:20.704465      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:21.706174      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:22.239: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:22.705689      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:23.705965      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:24.248: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:24.706271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:25.706425      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:26.257: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:26.707162      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:27.707698      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:28.268: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:28.707941      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:29.708567      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:30.278: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:30.708764      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:31.709286      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:32.290: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:32.710165      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:33.710392      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:34.299: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:34.711294      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:35.711754      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:36.309: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:36.712013      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:37.712298      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:38.317: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:38.713011      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:39.713839      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:40.325: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:40.714573      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:41.715093      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:42.335: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:42.715252      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:43.715512      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:44.343: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:44.716367      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:45.716944      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:46.352: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:46.716941      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:47.717168      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:48.361: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:48.717473      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:49.718198      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:50.370: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:50.719413      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:51.720476      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:52.381: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:52.720658      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:53.721534      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:54.390: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:54.721549      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:55.722196      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:56.398: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:56.722858      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:57.723363      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:37:58.407: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:37:58.724454      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:37:59.724684      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:00.417: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:00.724812      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:01.725800      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:02.434: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:02.726261      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:03.727148      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:04.450: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:04.727834      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:05.728624      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:06.464: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:06.729372      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:07.730185      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:08.477: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:08.730850      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:09.730630      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:10.486: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:10.731575      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:11.732380      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:12.502: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:12.733415      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:13.732977      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:14.510: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:14.733192      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:15.733536      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:16.527: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:16.734281      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:17.734453      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:18.535: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:18.735332      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:19.735238      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:20.546: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:20.736463      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:21.736566      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:22.555: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:22.736779      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:23.737742      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:24.568: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:24.737841      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:25.738150      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:26.577: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:26.740650      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:27.740015      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:28.590: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:28.741184      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:29.741295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:30.597: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:30.742079      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:31.742802      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:32.610: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:32.743633      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:33.743869      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:34.620: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:34.744441      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:35.745788      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:36.628: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:36.746674      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:37.746363      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:38.642: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:38.746853      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:39.747373      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:40.652: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:40.747506      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:41.748102      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:42.662: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:42.748248      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:43.749029      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:44.671: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:44.749851      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:45.750222      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:46.682: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:46.751191      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:47.751683      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:48.696: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:48.752867      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:49.752947      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:50.703: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:50.754276      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:51.754331      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:52.714: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:52.755039      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:53.755387      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:54.726: INFO: Get pod test-webserver-22e929d6-d67d-45ac-8140-94246913ce23 in namespace container-probe-4350
  E0415 07:38:54.755400      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:55.755588      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:38:56.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/15/24 07:38:56.745
  E0415 07:38:56.755642      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-probe-4350" for this suite. @ 04/15/24 07:38:56.82
• [251.861 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 04/15/24 07:38:56.874
  Apr 15 07:38:56.874: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename field-validation @ 04/15/24 07:38:56.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:38:56.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:38:56.923
  Apr 15 07:38:56.930: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:38:57.756045      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:38:58.756158      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0415 07:38:59.695132      15 warnings.go:70] unknown field "alpha"
  W0415 07:38:59.695521      15 warnings.go:70] unknown field "beta"
  W0415 07:38:59.695797      15 warnings.go:70] unknown field "delta"
  W0415 07:38:59.696028      15 warnings.go:70] unknown field "epsilon"
  W0415 07:38:59.696257      15 warnings.go:70] unknown field "gamma"
  E0415 07:38:59.757071      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:00.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2079" for this suite. @ 04/15/24 07:39:00.338
• [3.479 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 04/15/24 07:39:00.358
  Apr 15 07:39:00.359: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename secrets @ 04/15/24 07:39:00.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:00.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:00.406
  STEP: Creating projection with secret that has name secret-emptykey-test-8ea7a286-41af-46cf-a4b1-ddcd7c0b2950 @ 04/15/24 07:39:00.413
  Apr 15 07:39:00.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3653" for this suite. @ 04/15/24 07:39:00.429
• [0.088 seconds]
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 04/15/24 07:39:00.447
  Apr 15 07:39:00.447: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename dns @ 04/15/24 07:39:00.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:00.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:00.487
  STEP: Creating a test headless service @ 04/15/24 07:39:00.493
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1163 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1163;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1163 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1163;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1163.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1163.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1163.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1163.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1163.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1163.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1163.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1163.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1163.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1163.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1163.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1163.svc;check="$$(dig +notcp +noall +answer +search 243.56.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.56.243_udp@PTR;check="$$(dig +tcp +noall +answer +search 243.56.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.56.243_tcp@PTR;sleep 1; done
   @ 04/15/24 07:39:00.527
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1163 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1163;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1163 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1163;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1163.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1163.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1163.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1163.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1163.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1163.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1163.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1163.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1163.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1163.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1163.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1163.svc;check="$$(dig +notcp +noall +answer +search 243.56.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.56.243_udp@PTR;check="$$(dig +tcp +noall +answer +search 243.56.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.56.243_tcp@PTR;sleep 1; done
   @ 04/15/24 07:39:00.528
  STEP: creating a pod to probe DNS @ 04/15/24 07:39:00.528
  STEP: submitting the pod to kubernetes @ 04/15/24 07:39:00.528
  E0415 07:39:00.758402      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:01.762080      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:02.762381      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:03.763684      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/15/24 07:39:04.604
  STEP: looking for the results for each expected name from probers @ 04/15/24 07:39:04.616
  Apr 15 07:39:04.629: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:04.637: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:04.644: INFO: Unable to read wheezy_udp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:04.651: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:04.658: INFO: Unable to read wheezy_udp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:04.666: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:04.727: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:04.733: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:04.740: INFO: Unable to read jessie_udp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:04.747: INFO: Unable to read jessie_tcp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:04.753: INFO: Unable to read jessie_udp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:04.762: INFO: Unable to read jessie_tcp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  E0415 07:39:04.764066      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:04.773: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:04.819: INFO: Lookups using dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1163 wheezy_tcp@dns-test-service.dns-1163 wheezy_udp@dns-test-service.dns-1163.svc wheezy_tcp@dns-test-service.dns-1163.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1163 jessie_tcp@dns-test-service.dns-1163 jessie_udp@dns-test-service.dns-1163.svc jessie_tcp@dns-test-service.dns-1163.svc jessie_udp@_http._tcp.dns-test-service.dns-1163.svc]

  Apr 15 07:39:04.859: INFO: Pod client logs for webserver: 
  Apr 15 07:39:04.876: INFO: Pod client logs for querier: 
  Apr 15 07:39:04.889: INFO: Pod client logs for jessie-querier: 
  E0415 07:39:05.764695      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:06.765865      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:07.766061      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:08.766204      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:09.766744      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:09.906: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:09.916: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:09.923: INFO: Unable to read wheezy_udp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:09.934: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:09.946: INFO: Unable to read wheezy_udp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:09.955: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:10.032: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:10.043: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:10.056: INFO: Unable to read jessie_udp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:10.066: INFO: Unable to read jessie_tcp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:10.078: INFO: Unable to read jessie_udp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:10.089: INFO: Unable to read jessie_tcp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:10.160: INFO: Lookups using dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1163 wheezy_tcp@dns-test-service.dns-1163 wheezy_udp@dns-test-service.dns-1163.svc wheezy_tcp@dns-test-service.dns-1163.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1163 jessie_tcp@dns-test-service.dns-1163 jessie_udp@dns-test-service.dns-1163.svc jessie_tcp@dns-test-service.dns-1163.svc]

  Apr 15 07:39:10.174: INFO: Pod client logs for webserver: 
  Apr 15 07:39:10.192: INFO: Pod client logs for querier: 
  Apr 15 07:39:10.230: INFO: Pod client logs for jessie-querier: 
  E0415 07:39:10.766417      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:11.767427      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:12.768108      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:13.769105      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:14.769563      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:14.900: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:14.907: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:14.914: INFO: Unable to read wheezy_udp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:14.921: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:14.930: INFO: Unable to read wheezy_udp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:14.937: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:14.987: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:14.996: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:15.003: INFO: Unable to read jessie_udp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:15.010: INFO: Unable to read jessie_tcp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:15.018: INFO: Unable to read jessie_udp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:15.024: INFO: Unable to read jessie_tcp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:15.064: INFO: Lookups using dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1163 wheezy_tcp@dns-test-service.dns-1163 wheezy_udp@dns-test-service.dns-1163.svc wheezy_tcp@dns-test-service.dns-1163.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1163 jessie_tcp@dns-test-service.dns-1163 jessie_udp@dns-test-service.dns-1163.svc jessie_tcp@dns-test-service.dns-1163.svc]

  Apr 15 07:39:15.083: INFO: Pod client logs for webserver: 
  Apr 15 07:39:15.101: INFO: Pod client logs for querier: 
  Apr 15 07:39:15.111: INFO: Pod client logs for jessie-querier: 
  E0415 07:39:15.769603      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:16.770721      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:17.771193      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:18.771575      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:19.772084      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:19.899: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:19.907: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:19.915: INFO: Unable to read wheezy_udp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:19.934: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:19.943: INFO: Unable to read wheezy_udp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:19.949: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:20.020: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:20.027: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:20.035: INFO: Unable to read jessie_udp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:20.045: INFO: Unable to read jessie_tcp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:20.053: INFO: Unable to read jessie_udp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:20.062: INFO: Unable to read jessie_tcp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:20.113: INFO: Lookups using dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1163 wheezy_tcp@dns-test-service.dns-1163 wheezy_udp@dns-test-service.dns-1163.svc wheezy_tcp@dns-test-service.dns-1163.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1163 jessie_tcp@dns-test-service.dns-1163 jessie_udp@dns-test-service.dns-1163.svc jessie_tcp@dns-test-service.dns-1163.svc]

  Apr 15 07:39:20.131: INFO: Pod client logs for webserver: 
  Apr 15 07:39:20.145: INFO: Pod client logs for querier: 
  Apr 15 07:39:20.170: INFO: Pod client logs for jessie-querier: 
  E0415 07:39:20.772787      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:21.772586      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:22.775495      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:23.776097      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:24.777478      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:24.900: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:24.910: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:24.919: INFO: Unable to read wheezy_udp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:24.927: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:24.935: INFO: Unable to read wheezy_udp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:24.942: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:25.001: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:25.012: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:25.019: INFO: Unable to read jessie_udp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:25.028: INFO: Unable to read jessie_tcp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:25.037: INFO: Unable to read jessie_udp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:25.052: INFO: Unable to read jessie_tcp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:25.118: INFO: Lookups using dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1163 wheezy_tcp@dns-test-service.dns-1163 wheezy_udp@dns-test-service.dns-1163.svc wheezy_tcp@dns-test-service.dns-1163.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1163 jessie_tcp@dns-test-service.dns-1163 jessie_udp@dns-test-service.dns-1163.svc jessie_tcp@dns-test-service.dns-1163.svc]

  Apr 15 07:39:25.132: INFO: Pod client logs for webserver: 
  Apr 15 07:39:25.147: INFO: Pod client logs for querier: 
  Apr 15 07:39:25.159: INFO: Pod client logs for jessie-querier: 
  E0415 07:39:25.777473      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:26.778542      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:27.779497      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:28.779011      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:29.779444      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:29.903: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:29.913: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:29.922: INFO: Unable to read wheezy_udp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:29.932: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:29.939: INFO: Unable to read wheezy_udp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:29.951: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:30.042: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:30.063: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:30.077: INFO: Unable to read jessie_udp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:30.088: INFO: Unable to read jessie_tcp@dns-test-service.dns-1163 from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:30.104: INFO: Unable to read jessie_udp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:30.123: INFO: Unable to read jessie_tcp@dns-test-service.dns-1163.svc from pod dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105: the server could not find the requested resource (get pods dns-test-4d4b270a-b535-4801-afc5-578d3eb40105)
  Apr 15 07:39:30.208: INFO: Lookups using dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1163 wheezy_tcp@dns-test-service.dns-1163 wheezy_udp@dns-test-service.dns-1163.svc wheezy_tcp@dns-test-service.dns-1163.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1163 jessie_tcp@dns-test-service.dns-1163 jessie_udp@dns-test-service.dns-1163.svc jessie_tcp@dns-test-service.dns-1163.svc]

  Apr 15 07:39:30.236: INFO: Pod client logs for webserver: 
  Apr 15 07:39:30.253: INFO: Pod client logs for querier: 
  Apr 15 07:39:30.285: INFO: Pod client logs for jessie-querier: 
  E0415 07:39:30.779730      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:31.779901      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:32.779957      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:33.780474      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:34.780722      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:35.174: INFO: DNS probes using dns-1163/dns-test-4d4b270a-b535-4801-afc5-578d3eb40105 succeeded

  Apr 15 07:39:35.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/15/24 07:39:35.185
  STEP: deleting the test service @ 04/15/24 07:39:35.242
  STEP: deleting the test headless service @ 04/15/24 07:39:35.335
  STEP: Destroying namespace "dns-1163" for this suite. @ 04/15/24 07:39:35.389
• [34.996 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 04/15/24 07:39:35.453
  Apr 15 07:39:35.454: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:39:35.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:35.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:35.55
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:39:35.557
  E0415 07:39:35.781161      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:36.781470      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:37.782436      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:38.783347      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:39:39.615
  Apr 15 07:39:39.656: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-e0c4b44b-f30f-428d-87ba-86eeb3c18076 container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:39:39.669
  Apr 15 07:39:39.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5486" for this suite. @ 04/15/24 07:39:39.71
• [4.272 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 04/15/24 07:39:39.726
  Apr 15 07:39:39.726: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:39:39.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:39.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:39.766
  E0415 07:39:39.783229      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 04/15/24 07:39:39.812
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:39:40.271
  STEP: Deploying the webhook pod @ 04/15/24 07:39:40.288
  STEP: Wait for the deployment to be ready @ 04/15/24 07:39:40.314
  Apr 15 07:39:40.347: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 07:39:40.784228      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:41.784916      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:42.368: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 7, 39, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 39, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 39, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 39, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:39:42.785347      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:43.785618      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:39:44.379
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:39:44.403
  E0415 07:39:44.786582      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:39:45.404: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/15/24 07:39:45.423
  STEP: create a configmap that should be updated by the webhook @ 04/15/24 07:39:45.472
  Apr 15 07:39:45.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4047" for this suite. @ 04/15/24 07:39:45.682
  STEP: Destroying namespace "webhook-markers-788" for this suite. @ 04/15/24 07:39:45.71
• [6.019 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/15/24 07:39:45.749
  Apr 15 07:39:45.749: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pods @ 04/15/24 07:39:45.763
  E0415 07:39:45.786796      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:45.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:45.81
  E0415 07:39:46.787592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:47.787605      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:48.788020      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:49.789224      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:50.789481      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:51.790233      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:39:51.949
  Apr 15 07:39:51.966: INFO: Trying to get logs from node thuchow3cah4-3 pod client-envvars-7692c271-63af-415f-9217-d69d476653eb container env3cont: <nil>
  STEP: delete the pod @ 04/15/24 07:39:51.986
  Apr 15 07:39:52.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6282" for this suite. @ 04/15/24 07:39:52.029
• [6.297 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 04/15/24 07:39:52.051
  Apr 15 07:39:52.052: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename job @ 04/15/24 07:39:52.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:39:52.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:39:52.092
  STEP: Creating a job @ 04/15/24 07:39:52.098
  STEP: Ensuring job reaches completions @ 04/15/24 07:39:52.11
  E0415 07:39:52.790286      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:53.791312      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:54.791775      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:55.792547      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:56.792340      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:57.792413      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:58.792615      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:39:59.792808      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:00.792935      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:01.793195      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:02.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7104" for this suite. @ 04/15/24 07:40:02.134
• [10.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 04/15/24 07:40:02.153
  Apr 15 07:40:02.153: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 07:40:02.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:40:02.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:40:02.192
  STEP: Creating configMap configmap-386/configmap-test-22ed152f-d47c-45a2-9be4-8a6d91074961 @ 04/15/24 07:40:02.201
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:40:02.212
  E0415 07:40:02.795740      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:03.793719      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:40:04.249
  Apr 15 07:40:04.257: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-configmaps-4b4b7157-ae1f-44ba-b3ae-c479e51474cd container env-test: <nil>
  STEP: delete the pod @ 04/15/24 07:40:04.272
  Apr 15 07:40:04.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-386" for this suite. @ 04/15/24 07:40:04.309
• [2.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 04/15/24 07:40:04.361
  Apr 15 07:40:04.361: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 07:40:04.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:40:04.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:40:04.401
  STEP: Creating pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875 @ 04/15/24 07:40:04.406
  E0415 07:40:04.794185      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:05.794794      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 07:40:06.458
  Apr 15 07:40:06.465: INFO: Initial restart count of pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 is 0
  Apr 15 07:40:06.476: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:06.796024      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:07.796078      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:08.483: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:08.796326      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:09.796396      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:10.496: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:10.797657      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:11.798126      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:12.505: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:12.798875      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:13.800918      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:14.516: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:14.799842      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:15.800166      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:16.528: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:16.801133      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:17.801298      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:18.535: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:18.804295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:19.804109      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:20.544: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:20.804056      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:21.804264      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:22.553: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:22.805402      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:23.805493      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:24.562: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:24.806203      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:25.807094      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:26.572: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:26.807441      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:27.807892      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:28.590: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:28.807951      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:29.808200      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:30.599: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:30.808838      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:31.809747      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:32.608: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:32.810726      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:33.810965      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:34.616: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:34.811225      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:35.811376      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:36.628: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:36.811905      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:37.812423      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:38.637: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:38.812852      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:39.813615      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:40.647: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:40.814645      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:41.815901      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:42.656: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:42.816194      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:43.816434      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:44.666: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:44.816828      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:45.817404      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:46.676: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:46.818104      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:47.818480      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:48.685: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:48.822028      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:49.819569      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:50.692: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:50.820444      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:51.820275      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:52.701: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:52.820663      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:53.820964      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:54.714: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:54.821255      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:55.821709      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:56.728: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:56.822057      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:57.823143      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:40:58.737: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:40:58.823742      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:40:59.825550      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:00.745: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:41:00.825370      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:01.826142      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:02.753: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:41:02.827105      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:03.827827      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:04.762: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:41:04.828324      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:05.829094      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:06.772: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:41:06.829979      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:07.830302      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:08.782: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:41:08.831037      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:09.831846      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:10.796: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:41:10.831897      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:11.832601      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:12.813: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:41:12.833790      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:13.834165      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:14.820: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:41:14.835073      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:15.835932      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:16.831: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:41:16.836154      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:17.836830      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:18.837709      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:18.847: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  E0415 07:41:19.838118      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:20.838910      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:20.856: INFO: Get pod test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 in namespace container-probe-5875
  Apr 15 07:41:20.856: INFO: Restart count of pod container-probe-5875/test-grpc-6e16e68e-92cc-4621-b217-5496390f6bf9 is now 1 (1m14.390433711s elapsed)
  Apr 15 07:41:20.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/15/24 07:41:20.879
  STEP: Destroying namespace "container-probe-5875" for this suite. @ 04/15/24 07:41:20.907
• [76.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 04/15/24 07:41:20.937
  Apr 15 07:41:20.937: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename containers @ 04/15/24 07:41:20.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:41:21.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:41:21.02
  STEP: Creating a pod to test override command @ 04/15/24 07:41:21.026
  E0415 07:41:21.839472      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:22.839800      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:23.839981      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:24.840132      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:41:25.085
  Apr 15 07:41:25.093: INFO: Trying to get logs from node thuchow3cah4-3 pod client-containers-bec521c4-c3a6-4f39-be08-bc9cddd10196 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:41:25.111
  Apr 15 07:41:25.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5643" for this suite. @ 04/15/24 07:41:25.155
• [4.236 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 04/15/24 07:41:25.174
  Apr 15 07:41:25.174: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename runtimeclass @ 04/15/24 07:41:25.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:41:25.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:41:25.223
  STEP: getting /apis @ 04/15/24 07:41:25.231
  STEP: getting /apis/node.k8s.io @ 04/15/24 07:41:25.245
  STEP: getting /apis/node.k8s.io/v1 @ 04/15/24 07:41:25.248
  STEP: creating @ 04/15/24 07:41:25.251
  STEP: watching @ 04/15/24 07:41:25.295
  Apr 15 07:41:25.296: INFO: starting watch
  STEP: getting @ 04/15/24 07:41:25.308
  STEP: listing @ 04/15/24 07:41:25.32
  STEP: patching @ 04/15/24 07:41:25.332
  STEP: updating @ 04/15/24 07:41:25.345
  Apr 15 07:41:25.365: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 04/15/24 07:41:25.366
  STEP: deleting a collection @ 04/15/24 07:41:25.396
  Apr 15 07:41:25.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8560" for this suite. @ 04/15/24 07:41:25.46
• [0.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 04/15/24 07:41:25.478
  Apr 15 07:41:25.478: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename deployment @ 04/15/24 07:41:25.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:41:25.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:41:25.521
  STEP: creating a Deployment @ 04/15/24 07:41:25.539
  Apr 15 07:41:25.540: INFO: Creating simple deployment test-deployment-f6l8h
  Apr 15 07:41:25.573: INFO: deployment "test-deployment-f6l8h" doesn't have the required revision set
  E0415 07:41:25.840507      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:26.840723      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 04/15/24 07:41:27.608
  Apr 15 07:41:27.617: INFO: Deployment test-deployment-f6l8h has Conditions: [{Available True 2024-04-15 07:41:26 +0000 UTC 2024-04-15 07:41:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-04-15 07:41:26 +0000 UTC 2024-04-15 07:41:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-f6l8h-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/15/24 07:41:27.617
  Apr 15 07:41:27.680: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 41, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 41, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 41, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 41, 25, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-f6l8h-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/15/24 07:41:27.68
  Apr 15 07:41:27.686: INFO: Observed &Deployment event: ADDED
  Apr 15 07:41:27.687: INFO: Observed Deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 07:41:25 +0000 UTC 2024-04-15 07:41:25 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-f6l8h-5d576bd769"}
  Apr 15 07:41:27.689: INFO: Observed &Deployment event: MODIFIED
  Apr 15 07:41:27.690: INFO: Observed Deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 07:41:25 +0000 UTC 2024-04-15 07:41:25 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-f6l8h-5d576bd769"}
  Apr 15 07:41:27.691: INFO: Observed Deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-15 07:41:25 +0000 UTC 2024-04-15 07:41:25 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 15 07:41:27.692: INFO: Observed &Deployment event: MODIFIED
  Apr 15 07:41:27.693: INFO: Observed Deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-15 07:41:25 +0000 UTC 2024-04-15 07:41:25 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 15 07:41:27.694: INFO: Observed Deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 07:41:25 +0000 UTC 2024-04-15 07:41:25 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-f6l8h-5d576bd769" is progressing.}
  Apr 15 07:41:27.695: INFO: Observed &Deployment event: MODIFIED
  Apr 15 07:41:27.695: INFO: Observed Deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-15 07:41:26 +0000 UTC 2024-04-15 07:41:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 15 07:41:27.696: INFO: Observed Deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 07:41:26 +0000 UTC 2024-04-15 07:41:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-f6l8h-5d576bd769" has successfully progressed.}
  Apr 15 07:41:27.697: INFO: Observed &Deployment event: MODIFIED
  Apr 15 07:41:27.698: INFO: Observed Deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-15 07:41:26 +0000 UTC 2024-04-15 07:41:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 15 07:41:27.698: INFO: Observed Deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 07:41:26 +0000 UTC 2024-04-15 07:41:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-f6l8h-5d576bd769" has successfully progressed.}
  Apr 15 07:41:27.698: INFO: Found Deployment test-deployment-f6l8h in namespace deployment-9176 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 07:41:27.698: INFO: Deployment test-deployment-f6l8h has an updated status
  STEP: patching the Statefulset Status @ 04/15/24 07:41:27.698
  Apr 15 07:41:27.698: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 15 07:41:27.714: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/15/24 07:41:27.715
  Apr 15 07:41:27.719: INFO: Observed &Deployment event: ADDED
  Apr 15 07:41:27.719: INFO: Observed deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 07:41:25 +0000 UTC 2024-04-15 07:41:25 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-f6l8h-5d576bd769"}
  Apr 15 07:41:27.719: INFO: Observed &Deployment event: MODIFIED
  Apr 15 07:41:27.719: INFO: Observed deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 07:41:25 +0000 UTC 2024-04-15 07:41:25 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-f6l8h-5d576bd769"}
  Apr 15 07:41:27.719: INFO: Observed deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-15 07:41:25 +0000 UTC 2024-04-15 07:41:25 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 15 07:41:27.719: INFO: Observed &Deployment event: MODIFIED
  Apr 15 07:41:27.719: INFO: Observed deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-15 07:41:25 +0000 UTC 2024-04-15 07:41:25 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 15 07:41:27.720: INFO: Observed deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 07:41:25 +0000 UTC 2024-04-15 07:41:25 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-f6l8h-5d576bd769" is progressing.}
  Apr 15 07:41:27.721: INFO: Observed &Deployment event: MODIFIED
  Apr 15 07:41:27.723: INFO: Observed deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-15 07:41:26 +0000 UTC 2024-04-15 07:41:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 15 07:41:27.725: INFO: Observed deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 07:41:26 +0000 UTC 2024-04-15 07:41:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-f6l8h-5d576bd769" has successfully progressed.}
  Apr 15 07:41:27.727: INFO: Observed &Deployment event: MODIFIED
  Apr 15 07:41:27.727: INFO: Observed deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-15 07:41:26 +0000 UTC 2024-04-15 07:41:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 15 07:41:27.728: INFO: Observed deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-15 07:41:26 +0000 UTC 2024-04-15 07:41:25 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-f6l8h-5d576bd769" has successfully progressed.}
  Apr 15 07:41:27.728: INFO: Observed deployment test-deployment-f6l8h in namespace deployment-9176 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 07:41:27.729: INFO: Observed &Deployment event: MODIFIED
  Apr 15 07:41:27.730: INFO: Found deployment test-deployment-f6l8h in namespace deployment-9176 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Apr 15 07:41:27.731: INFO: Deployment test-deployment-f6l8h has a patched status
  Apr 15 07:41:27.738: INFO: Deployment "test-deployment-f6l8h":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-f6l8h",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9176",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79fde01f-482f-40c1-8819-cc35c48c1f3b",
      ResourceVersion: (string) (len=6) "172762",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763685,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763687,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763687,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763687,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763687,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-f6l8h-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 07:41:27.752: INFO: New ReplicaSet "test-deployment-f6l8h-5d576bd769" of Deployment "test-deployment-f6l8h":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-f6l8h-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9176",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0cd1cd57-9a36-4481-bd10-4ef202ed710b",
      ResourceVersion: (string) (len=6) "172754",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763685,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-f6l8h",
          UID: (types.UID) (len=36) "79fde01f-482f-40c1-8819-cc35c48c1f3b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 37 39 66  |k:{\"uid\":\"79f|
              00000120  64 65 30 31 66 2d 34 38  32 66 2d 34 30 63 31 2d  |de01f-482f-40c1-|
              00000130  38 38 31 39 2d 63 63 33  35 63 34 38 63 31 66 33  |8819-cc35c48c1f3|
              00000140  62 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |b\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763686,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:41:27.768: INFO: Pod "test-deployment-f6l8h-5d576bd769-6z6c2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-f6l8h-5d576bd769-6z6c2",
      GenerateName: (string) (len=33) "test-deployment-f6l8h-5d576bd769-",
      Namespace: (string) (len=15) "deployment-9176",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f916479-1fa4-4c20-80d2-5ff7ba43fb27",
      ResourceVersion: (string) (len=6) "172752",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763685,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-f6l8h-5d576bd769",
          UID: (types.UID) (len=36) "0cd1cd57-9a36-4481-bd10-4ef202ed710b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 30 63 64 31 63 64 35  37 2d 39 61 33 36 2d 34  |"0cd1cd57-9a36-4|
              000000a0  34 38 31 2d 62 64 31 30  2d 34 65 66 32 30 32 65  |481-bd10-4ef202e|
              000000b0  64 37 31 30 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |d710b\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763686,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 36 34 5c 22 7d 22  |10.233.66.64\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wjr5p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wjr5p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763686,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763686,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848763685,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.252",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.64",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.64"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848763685,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848763686,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://a7cb775c352a3992f922cfd13c93a6b78eccae3e30dc055ced680757910bc191",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 07:41:27.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9176" for this suite. @ 04/15/24 07:41:27.787
• [2.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 04/15/24 07:41:27.805
  Apr 15 07:41:27.805: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 07:41:27.808
  E0415 07:41:27.841413      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:41:27.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:41:27.854
  Apr 15 07:41:27.858: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:41:28.842344      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/15/24 07:41:29.78
  Apr 15 07:41:29.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4759 --namespace=crd-publish-openapi-4759 create -f -'
  E0415 07:41:29.842602      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:30.843380      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:31.466: INFO: stderr: ""
  Apr 15 07:41:31.467: INFO: stdout: "e2e-test-crd-publish-openapi-6594-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 15 07:41:31.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4759 --namespace=crd-publish-openapi-4759 delete e2e-test-crd-publish-openapi-6594-crds test-cr'
  Apr 15 07:41:31.682: INFO: stderr: ""
  Apr 15 07:41:31.682: INFO: stdout: "e2e-test-crd-publish-openapi-6594-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Apr 15 07:41:31.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4759 --namespace=crd-publish-openapi-4759 apply -f -'
  E0415 07:41:31.844386      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:32.626: INFO: stderr: ""
  Apr 15 07:41:32.626: INFO: stdout: "e2e-test-crd-publish-openapi-6594-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 15 07:41:32.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4759 --namespace=crd-publish-openapi-4759 delete e2e-test-crd-publish-openapi-6594-crds test-cr'
  Apr 15 07:41:32.813: INFO: stderr: ""
  Apr 15 07:41:32.813: INFO: stdout: "e2e-test-crd-publish-openapi-6594-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/15/24 07:41:32.813
  Apr 15 07:41:32.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4759 explain e2e-test-crd-publish-openapi-6594-crds'
  E0415 07:41:32.845282      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:33.246: INFO: stderr: ""
  Apr 15 07:41:33.246: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-6594-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0415 07:41:33.845998      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:34.846207      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:35.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4759" for this suite. @ 04/15/24 07:41:35.164
• [7.372 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/15/24 07:41:35.184
  Apr 15 07:41:35.184: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:41:35.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:41:35.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:41:35.221
  STEP: Creating projection with secret that has name projected-secret-test-2329e6cc-0adf-4fec-af90-4e04c8b5dde8 @ 04/15/24 07:41:35.228
  STEP: Creating a pod to test consume secrets @ 04/15/24 07:41:35.242
  E0415 07:41:35.846228      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:36.846351      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:37.846719      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:38.847381      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:41:39.289
  Apr 15 07:41:39.299: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-projected-secrets-dc085796-055d-4b9d-bb59-376b108f57ed container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:41:39.337
  Apr 15 07:41:39.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7632" for this suite. @ 04/15/24 07:41:39.423
• [4.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/15/24 07:41:39.449
  Apr 15 07:41:39.449: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename certificates @ 04/15/24 07:41:39.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:41:39.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:41:39.493
  E0415 07:41:39.848090      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:40.848498      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 04/15/24 07:41:41.147
  STEP: getting /apis/certificates.k8s.io @ 04/15/24 07:41:41.155
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/15/24 07:41:41.157
  STEP: creating @ 04/15/24 07:41:41.159
  STEP: getting @ 04/15/24 07:41:41.195
  STEP: listing @ 04/15/24 07:41:41.202
  STEP: watching @ 04/15/24 07:41:41.21
  Apr 15 07:41:41.210: INFO: starting watch
  STEP: patching @ 04/15/24 07:41:41.213
  STEP: updating @ 04/15/24 07:41:41.23
  Apr 15 07:41:41.242: INFO: waiting for watch events with expected annotations
  Apr 15 07:41:41.242: INFO: saw patched and updated annotations
  STEP: getting /approval @ 04/15/24 07:41:41.242
  STEP: patching /approval @ 04/15/24 07:41:41.25
  STEP: updating /approval @ 04/15/24 07:41:41.263
  STEP: getting /status @ 04/15/24 07:41:41.279
  STEP: patching /status @ 04/15/24 07:41:41.29
  STEP: updating /status @ 04/15/24 07:41:41.305
  STEP: deleting @ 04/15/24 07:41:41.323
  STEP: deleting a collection @ 04/15/24 07:41:41.357
  Apr 15 07:41:41.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5646" for this suite. @ 04/15/24 07:41:41.403
• [1.972 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/15/24 07:41:41.427
  Apr 15 07:41:41.427: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pods @ 04/15/24 07:41:41.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:41:41.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:41:41.471
  STEP: Create set of pods @ 04/15/24 07:41:41.478
  Apr 15 07:41:41.499: INFO: created test-pod-1
  Apr 15 07:41:41.545: INFO: created test-pod-2
  Apr 15 07:41:41.560: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/15/24 07:41:41.56
  E0415 07:41:41.849745      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:42.850449      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 04/15/24 07:41:43.718
  Apr 15 07:41:43.745: INFO: Pod quantity 3 is different from expected quantity 0
  E0415 07:41:43.851382      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:44.755: INFO: Pod quantity 2 is different from expected quantity 0
  E0415 07:41:44.851429      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:45.775: INFO: Pod quantity 2 is different from expected quantity 0
  E0415 07:41:45.852050      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:46.754: INFO: Pod quantity 1 is different from expected quantity 0
  E0415 07:41:46.852503      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:41:47.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-416" for this suite. @ 04/15/24 07:41:47.764
• [6.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/15/24 07:41:47.793
  Apr 15 07:41:47.793: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename init-container @ 04/15/24 07:41:47.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:41:47.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:41:47.838
  STEP: creating the pod @ 04/15/24 07:41:47.843
  Apr 15 07:41:47.844: INFO: PodSpec: initContainers in spec.initContainers
  E0415 07:41:47.853091      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:48.853474      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:49.854074      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:50.854871      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:51.855751      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:52.856130      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:53.856114      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:54.856746      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:55.856509      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:56.857267      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:57.857488      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:58.857839      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:41:59.858547      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:00.858604      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:01.859845      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:02.860849      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:03.861708      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:04.862231      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:05.862981      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:06.863141      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:07.863662      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:08.864079      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:09.864766      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:10.865027      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:11.865561      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:12.865965      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:13.866731      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:14.867365      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:15.868087      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:16.868616      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:17.869278      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:18.870174      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:19.870532      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:20.871421      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:21.872073      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:22.873542      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:23.873722      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:24.874486      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:25.875139      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:26.875334      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:27.876032      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:28.876149      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:29.876847      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:30.877196      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:31.877833      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:32.877722      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:42:32.889: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-d9942f97-52cc-4a76-9a5e-ee230e37861a", GenerateName:"", Namespace:"init-container-3609", SelfLink:"", UID:"c3fdcedb-a7f4-41ef-b821-c46d20294468", ResourceVersion:"173063", Generation:0, CreationTimestamp:time.Date(2024, time.April, 15, 7, 41, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"844037851"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 7, 41, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f32bb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 15, 7, 42, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f32cf0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-mf7fc", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0045138e0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-mf7fc", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-mf7fc", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-mf7fc", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0031321b0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"thuchow3cah4-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0004aa380), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003132240)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003132260)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003132268), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00313226c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0013834a0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 7, 41, 47, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 7, 41, 47, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 7, 41, 47, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 15, 7, 41, 47, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.252", HostIPs:[]v1.HostIP(nil), PodIP:"10.233.66.69", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.66.69"}}, StartTime:time.Date(2024, time.April, 15, 7, 41, 47, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004aa4d0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004aa540)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"cri-o://fe9a0a89cdfdc11fc52a8fab7162b384d761c05f00d79557ee74c867fc686d2d", Started:(*bool)(0xc00313230a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004513960), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc00313231f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004513940), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0031322ef), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Apr 15 07:42:32.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3609" for this suite. @ 04/15/24 07:42:32.907
• [45.140 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/15/24 07:42:32.941
  Apr 15 07:42:32.941: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename subpath @ 04/15/24 07:42:32.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:42:32.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:42:33.007
  STEP: Setting up data @ 04/15/24 07:42:33.013
  STEP: Creating pod pod-subpath-test-secret-j9bd @ 04/15/24 07:42:33.052
  STEP: Creating a pod to test atomic-volume-subpath @ 04/15/24 07:42:33.053
  E0415 07:42:33.878412      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:34.878916      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:35.879223      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:36.880352      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:37.880971      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:38.881614      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:39.882215      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:40.882824      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:41.883619      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:42.883820      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:43.884174      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:44.884450      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:45.884779      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:46.885820      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:47.886114      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:48.886414      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:49.887055      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:50.887679      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:51.887735      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:52.888407      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:53.889046      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:54.889396      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:55.889546      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:56.890281      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:42:57.194
  Apr 15 07:42:57.214: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-subpath-test-secret-j9bd container test-container-subpath-secret-j9bd: <nil>
  STEP: delete the pod @ 04/15/24 07:42:57.237
  STEP: Deleting pod pod-subpath-test-secret-j9bd @ 04/15/24 07:42:57.275
  Apr 15 07:42:57.276: INFO: Deleting pod "pod-subpath-test-secret-j9bd" in namespace "subpath-4192"
  Apr 15 07:42:57.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4192" for this suite. @ 04/15/24 07:42:57.302
• [24.376 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 04/15/24 07:42:57.319
  Apr 15 07:42:57.320: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 07:42:57.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:42:57.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:42:57.376
  E0415 07:42:57.891269      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:42:58.891927      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:42:59.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 15 07:42:59.431: INFO: Deleting pod "var-expansion-e4688617-a512-488f-b86e-822917b14bc3" in namespace "var-expansion-728"
  Apr 15 07:42:59.447: INFO: Wait up to 5m0s for pod "var-expansion-e4688617-a512-488f-b86e-822917b14bc3" to be fully deleted
  E0415 07:42:59.892547      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:00.893806      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-728" for this suite. @ 04/15/24 07:43:01.471
• [4.168 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 04/15/24 07:43:01.493
  Apr 15 07:43:01.493: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename job @ 04/15/24 07:43:01.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:43:01.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:43:01.557
  STEP: Creating Indexed job @ 04/15/24 07:43:01.565
  STEP: Ensuring job reaches completions @ 04/15/24 07:43:01.593
  E0415 07:43:01.894335      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:02.894690      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:03.895389      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:04.895483      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:05.896041      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:06.899031      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:07.899416      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:08.900345      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 04/15/24 07:43:09.604
  Apr 15 07:43:09.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9632" for this suite. @ 04/15/24 07:43:09.636
• [8.163 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 04/15/24 07:43:09.656
  Apr 15 07:43:09.657: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:43:09.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:43:09.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:43:09.704
  STEP: Creating configMap with name cm-test-opt-del-02431785-b126-42e7-ac0d-83b9af6b61fe @ 04/15/24 07:43:09.724
  STEP: Creating configMap with name cm-test-opt-upd-c7686401-eb81-411a-9457-57ee6be101c0 @ 04/15/24 07:43:09.735
  STEP: Creating the pod @ 04/15/24 07:43:09.747
  E0415 07:43:09.901063      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:10.901341      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-02431785-b126-42e7-ac0d-83b9af6b61fe @ 04/15/24 07:43:11.869
  STEP: Updating configmap cm-test-opt-upd-c7686401-eb81-411a-9457-57ee6be101c0 @ 04/15/24 07:43:11.889
  E0415 07:43:11.901867      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating configMap with name cm-test-opt-create-534b9f09-1fe2-4dd2-b050-87f350993cff @ 04/15/24 07:43:11.906
  STEP: waiting to observe update in volume @ 04/15/24 07:43:11.919
  E0415 07:43:12.902571      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:13.903099      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:14.903203      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:15.903476      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:16.904153      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:17.906023      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:18.905290      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:19.905598      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:20.906627      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:21.908277      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:22.907755      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:23.908420      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:24.908513      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:25.908849      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:26.908847      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:27.909424      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:28.909819      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:29.910101      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:30.910693      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:31.912058      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:32.913240      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:33.913420      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:34.914088      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:35.915333      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:36.915399      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:37.915549      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:38.916616      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:39.916976      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:40.917205      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:41.924448      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:42.917788      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:43.918269      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:44.919254      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:45.919664      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:46.920067      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:47.920862      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:48.921665      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:49.922064      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:50.922855      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:51.923517      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:52.924130      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:53.924599      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:54.924879      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:55.925476      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:56.925738      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:57.925768      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:58.926007      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:43:59.926642      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:00.927281      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:01.927773      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:02.928027      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:03.929155      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:04.930040      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:05.930102      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:06.930508      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:07.930373      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:08.931766      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:09.931875      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:10.932842      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:11.932979      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:12.933790      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:13.933785      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:14.934599      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:15.934848      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:16.934953      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:17.935311      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:18.936261      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:19.936767      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:20.937630      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:21.938294      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:22.938582      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:23.939522      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:44:24.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4448" for this suite. @ 04/15/24 07:44:24.889
• [75.253 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 04/15/24 07:44:24.911
  Apr 15 07:44:24.912: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:44:24.917
  E0415 07:44:24.939900      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:44:24.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:44:24.978
  STEP: Setting up server cert @ 04/15/24 07:44:25.041
  E0415 07:44:25.941973      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:44:25.987
  STEP: Deploying the webhook pod @ 04/15/24 07:44:26.007
  STEP: Wait for the deployment to be ready @ 04/15/24 07:44:26.042
  Apr 15 07:44:26.073: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 07:44:26.943638      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:27.943768      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:44:28.109
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:44:28.148
  E0415 07:44:28.943390      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:44:29.150: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/15/24 07:44:29.176
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/15/24 07:44:29.182
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/15/24 07:44:29.182
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/15/24 07:44:29.183
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/15/24 07:44:29.185
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/15/24 07:44:29.185
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/15/24 07:44:29.188
  Apr 15 07:44:29.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7076" for this suite. @ 04/15/24 07:44:29.307
  STEP: Destroying namespace "webhook-markers-2005" for this suite. @ 04/15/24 07:44:29.325
• [4.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 04/15/24 07:44:29.355
  Apr 15 07:44:29.355: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:44:29.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:44:29.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:44:29.417
  STEP: Setting up server cert @ 04/15/24 07:44:29.492
  E0415 07:44:29.944057      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:30.944929      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:44:31.478
  STEP: Deploying the webhook pod @ 04/15/24 07:44:31.492
  STEP: Wait for the deployment to be ready @ 04/15/24 07:44:31.521
  Apr 15 07:44:31.563: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 07:44:31.946258      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:32.946715      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:44:33.594
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:44:33.615
  E0415 07:44:33.947315      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:44:34.616: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 15 07:44:34.630: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:44:34.948224      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/15/24 07:44:35.172
  STEP: Creating a custom resource that should be denied by the webhook @ 04/15/24 07:44:35.218
  E0415 07:44:35.948805      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:36.949341      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/15/24 07:44:37.388
  STEP: Updating the custom resource with disallowed data should be denied @ 04/15/24 07:44:37.401
  STEP: Deleting the custom resource should be denied @ 04/15/24 07:44:37.417
  STEP: Remove the offending key and value from the custom resource data @ 04/15/24 07:44:37.43
  STEP: Deleting the updated custom resource should be successful @ 04/15/24 07:44:37.452
  Apr 15 07:44:37.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 07:44:37.950214      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-1738" for this suite. @ 04/15/24 07:44:38.134
  STEP: Destroying namespace "webhook-markers-6344" for this suite. @ 04/15/24 07:44:38.147
• [8.810 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 04/15/24 07:44:38.166
  Apr 15 07:44:38.166: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename gc @ 04/15/24 07:44:38.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:44:38.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:44:38.225
  STEP: create the deployment @ 04/15/24 07:44:38.23
  W0415 07:44:38.242040      15 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/15/24 07:44:38.242
  STEP: delete the deployment @ 04/15/24 07:44:38.767
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/15/24 07:44:38.784
  E0415 07:44:38.951244      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/15/24 07:44:39.336
  Apr 15 07:44:39.512: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 15 07:44:39.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2276" for this suite. @ 04/15/24 07:44:39.523
• [1.374 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 04/15/24 07:44:39.545
  Apr 15 07:44:39.545: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename dns @ 04/15/24 07:44:39.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:44:39.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:44:39.657
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/15/24 07:44:39.663
  Apr 15 07:44:39.721: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-700  e6efbaa4-a3f8-49e9-b52d-59d7044a0643 173647 0 2024-04-15 07:44:39 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-04-15 07:44:39 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zf5rs,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zf5rs,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0415 07:44:39.951734      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:40.952481      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/15/24 07:44:41.74
  Apr 15 07:44:41.740: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-700 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:44:41.741: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:44:41.743: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:44:41.743: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-700/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/15/24 07:44:41.915
  Apr 15 07:44:41.915: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-700 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:44:41.916: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:44:41.918: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:44:41.918: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-700/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0415 07:44:41.953989      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:44:42.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 15 07:44:42.094: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-700" for this suite. @ 04/15/24 07:44:42.122
• [2.595 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:961
  STEP: Creating a kubernetes client @ 04/15/24 07:44:42.146
  Apr 15 07:44:42.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename statefulset @ 04/15/24 07:44:42.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:44:42.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:44:42.201
  STEP: Creating service test in namespace statefulset-507 @ 04/15/24 07:44:42.207
  Apr 15 07:44:42.249: INFO: Found 0 stateful pods, waiting for 1
  E0415 07:44:42.954066      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:43.954376      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:44.955159      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:45.956164      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:46.956267      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:47.957544      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:48.957508      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:49.958242      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:50.958635      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:51.958896      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:44:52.258: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/15/24 07:44:52.271
  W0415 07:44:52.294494      15 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Apr 15 07:44:52.315: INFO: Found 1 stateful pods, waiting for 2
  E0415 07:44:52.960076      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:53.961147      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:54.961784      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:55.962650      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:56.962987      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:57.963094      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:58.963382      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:44:59.963593      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:00.964622      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:01.964838      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:02.326: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 15 07:45:02.326: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/15/24 07:45:02.339
  STEP: Delete all of the StatefulSets @ 04/15/24 07:45:02.345
  STEP: Verify that StatefulSets have been deleted @ 04/15/24 07:45:02.361
  Apr 15 07:45:02.373: INFO: Deleting all statefulset in ns statefulset-507
  Apr 15 07:45:02.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-507" for this suite. @ 04/15/24 07:45:02.484
• [20.359 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/15/24 07:45:02.509
  Apr 15 07:45:02.509: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename conformance-tests @ 04/15/24 07:45:02.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:02.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:02.577
  STEP: Getting node addresses @ 04/15/24 07:45:02.582
  Apr 15 07:45:02.582: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Apr 15 07:45:02.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-1068" for this suite. @ 04/15/24 07:45:02.628
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/15/24 07:45:02.65
  Apr 15 07:45:02.650: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pods @ 04/15/24 07:45:02.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:02.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:02.711
  Apr 15 07:45:02.723: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: creating the pod @ 04/15/24 07:45:02.727
  STEP: submitting the pod to kubernetes @ 04/15/24 07:45:02.727
  E0415 07:45:02.966335      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:03.966380      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:45:04.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5016" for this suite. @ 04/15/24 07:45:04.858
• [2.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/15/24 07:45:04.883
  Apr 15 07:45:04.883: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename cronjob @ 04/15/24 07:45:04.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:45:04.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:45:04.92
  STEP: Creating a suspended cronjob @ 04/15/24 07:45:04.926
  STEP: Ensuring no jobs are scheduled @ 04/15/24 07:45:04.938
  E0415 07:45:04.967295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:05.968110      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:06.968946      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:07.969581      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:08.970659      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:09.971189      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:10.971664      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:11.972588      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:12.972970      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:13.973329      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:14.973532      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:15.973818      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:16.974261      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:17.974495      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:18.975567      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:19.975922      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:20.976782      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:21.977209      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:22.977809      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:23.978027      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:24.978366      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:25.978575      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:26.978922      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:27.979589      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:28.979698      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:29.980610      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:30.980953      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:31.981110      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:32.981592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:33.981858      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:34.982177      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:35.982474      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:36.982592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:37.983295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:38.984104      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:39.984979      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:40.986628      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:41.986175      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:42.987527      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:43.987688      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:44.987767      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:45.989136      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:46.988840      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:47.990019      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:48.990743      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:49.990931      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:50.991384      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:51.991516      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:52.991738      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:53.991902      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:54.992718      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:55.992796      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:56.993293      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:57.994461      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:58.994426      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:45:59.994639      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:00.995822      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:01.996491      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:02.996688      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:03.997480      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:04.998104      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:05.998330      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:06.999137      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:07.999487      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:09.000433      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:10.000683      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:11.001961      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:12.004765      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:13.005443      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:14.005757      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:15.006518      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:16.007445      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:17.008540      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:18.008787      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:19.009828      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:20.010155      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:21.010858      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:22.011379      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:23.012319      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:24.013271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:25.013328      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:26.013873      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:27.014894      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:28.015564      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:29.016013      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:30.016160      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:31.016697      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:32.016999      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:33.017099      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:34.017391      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:35.017723      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:36.018187      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:37.019016      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:38.019707      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:39.020177      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:40.020442      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:41.021500      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:42.021631      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:43.022037      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:44.022496      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:45.023020      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:46.023110      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:47.026223      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:48.026551      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:49.026502      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:50.026771      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:51.027026      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:52.027154      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:53.027530      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:54.027783      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:55.028657      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:56.028887      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:57.029426      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:58.030319      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:46:59.029983      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:00.030301      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:01.031082      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:02.032340      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:03.032856      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:04.033499      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:05.034377      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:06.034465      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:07.035380      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:08.035410      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:09.035274      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:10.035768      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:11.036607      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:12.037388      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:13.038232      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:14.038923      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:15.040041      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:16.040047      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:17.041038      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:18.041343      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:19.041965      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:20.042628      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:21.043494      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:22.043720      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:23.044423      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:24.044978      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:25.044809      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:26.045480      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:27.046549      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:28.047320      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:29.047936      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:30.048425      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:31.048871      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:32.049687      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:33.050141      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:34.051239      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:35.051568      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:36.051958      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:37.052414      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:38.053058      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:39.054213      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:40.054258      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:41.055247      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:42.055832      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:43.067210      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:44.060450      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:45.061760      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:46.062097      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:47.062739      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:48.062950      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:49.064016      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:50.064609      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:51.065509      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:52.066256      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:53.067029      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:54.067496      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:55.068378      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:56.068401      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:57.069340      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:58.069537      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:47:59.070703      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:00.070820      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:01.071752      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:02.071950      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:03.072926      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:04.073511      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:05.074064      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:06.074185      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:07.074781      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:08.076271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:09.076363      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:10.076979      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:11.077544      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:12.077455      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:13.077777      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:14.078013      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:15.079020      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:16.079221      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:17.079888      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:18.080765      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:19.081822      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:20.082107      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:21.082928      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:22.083293      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:23.084357      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:24.084454      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:25.085521      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:26.085720      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:27.086230      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:28.086407      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:29.087281      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:30.087863      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:31.088073      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:32.088636      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:33.089503      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:34.089677      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:35.089947      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:36.090708      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:37.091049      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:38.091701      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:39.092711      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:40.092888      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:41.093963      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:42.095470      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:43.095574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:44.096327      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:45.097377      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:46.097340      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:47.097804      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:48.098048      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:49.098219      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:50.098995      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:51.099055      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:52.099450      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:53.099532      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:54.099773      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:55.100925      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:56.101813      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:57.102402      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:58.102552      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:48:59.103013      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:00.103647      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:01.104202      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:02.104354      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:03.104563      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:04.104800      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:05.105477      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:06.105614      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:07.106264      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:08.107443      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:09.107898      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:10.108182      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:11.108799      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:12.108941      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:13.109196      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:14.109451      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:15.109694      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:16.109729      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:17.110555      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:18.115034      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:19.111699      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:20.111915      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:21.112832      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:22.113020      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:23.113662      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:24.114045      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:25.114050      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:26.114419      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:27.115830      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:28.116711      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:29.117382      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:30.117672      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:31.118559      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:32.119370      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:33.120470      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:34.120750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:35.121224      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:36.121951      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:37.122679      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:38.122952      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:39.123358      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:40.123889      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:41.124305      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:42.124526      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:43.124795      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:44.125022      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:45.125718      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:46.126469      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:47.127314      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:48.127883      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:49.128866      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:50.129051      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:51.130107      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:52.131138      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:53.131918      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:54.132153      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:55.132912      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:56.133181      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:57.133713      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:58.134178      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:49:59.134234      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:00.134401      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:01.135353      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:02.135592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:03.136973      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:04.136740      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/15/24 07:50:04.953
  STEP: Removing cronjob @ 04/15/24 07:50:04.96
  Apr 15 07:50:04.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7391" for this suite. @ 04/15/24 07:50:04.983
• [300.120 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 04/15/24 07:50:05.007
  Apr 15 07:50:05.008: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename job @ 04/15/24 07:50:05.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:05.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:05.067
  STEP: Creating a job @ 04/15/24 07:50:05.072
  STEP: Ensuring active pods == parallelism @ 04/15/24 07:50:05.089
  E0415 07:50:05.137666      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:06.139027      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 04/15/24 07:50:07.102
  E0415 07:50:07.138649      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:07.676: INFO: Successfully updated pod "adopt-release-8m947"
  STEP: Checking that the Job readopts the Pod @ 04/15/24 07:50:07.677
  E0415 07:50:08.140383      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:09.140424      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 04/15/24 07:50:09.691
  E0415 07:50:10.141075      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:10.212: INFO: Successfully updated pod "adopt-release-8m947"
  STEP: Checking that the Job releases the Pod @ 04/15/24 07:50:10.212
  E0415 07:50:11.142163      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:12.142284      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:12.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2696" for this suite. @ 04/15/24 07:50:12.254
• [7.260 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 04/15/24 07:50:12.269
  Apr 15 07:50:12.269: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:50:12.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:12.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:12.306
  STEP: Creating configMap with name projected-configmap-test-volume-map-c7916d7a-6142-4ea8-bc9e-0b6af1c868e3 @ 04/15/24 07:50:12.315
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:50:12.324
  E0415 07:50:13.143502      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:14.143886      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:15.144160      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:16.144559      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:50:16.371
  Apr 15 07:50:16.377: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-projected-configmaps-6f15276b-020e-45db-b4cb-6208803599a9 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:50:16.409
  Apr 15 07:50:16.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6101" for this suite. @ 04/15/24 07:50:16.451
• [4.193 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/15/24 07:50:16.467
  Apr 15 07:50:16.467: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-runtime @ 04/15/24 07:50:16.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:16.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:16.505
  STEP: create the container @ 04/15/24 07:50:16.512
  W0415 07:50:16.528618      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/15/24 07:50:16.529
  E0415 07:50:17.144347      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:18.145019      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:19.145523      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/15/24 07:50:19.56
  STEP: the container should be terminated @ 04/15/24 07:50:19.58
  STEP: the termination message should be set @ 04/15/24 07:50:19.581
  Apr 15 07:50:19.581: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/15/24 07:50:19.581
  Apr 15 07:50:19.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2790" for this suite. @ 04/15/24 07:50:19.617
• [3.200 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 04/15/24 07:50:19.671
  Apr 15 07:50:19.671: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename limitrange @ 04/15/24 07:50:19.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:19.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:19.708
  STEP: Creating a LimitRange @ 04/15/24 07:50:19.713
  STEP: Setting up watch @ 04/15/24 07:50:19.713
  STEP: Submitting a LimitRange @ 04/15/24 07:50:19.819
  STEP: Verifying LimitRange creation was observed @ 04/15/24 07:50:19.829
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/15/24 07:50:19.83
  Apr 15 07:50:19.837: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 15 07:50:19.838: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/15/24 07:50:19.838
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/15/24 07:50:19.849
  Apr 15 07:50:19.857: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 15 07:50:19.858: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/15/24 07:50:19.858
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/15/24 07:50:19.867
  Apr 15 07:50:19.873: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Apr 15 07:50:19.874: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/15/24 07:50:19.874
  STEP: Failing to create a Pod with more than max resources @ 04/15/24 07:50:19.881
  STEP: Updating a LimitRange @ 04/15/24 07:50:19.886
  STEP: Verifying LimitRange updating is effective @ 04/15/24 07:50:19.903
  E0415 07:50:20.145886      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:21.146911      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 04/15/24 07:50:21.91
  STEP: Failing to create a Pod with more than max resources @ 04/15/24 07:50:21.921
  STEP: Deleting a LimitRange @ 04/15/24 07:50:21.925
  STEP: Verifying the LimitRange was deleted @ 04/15/24 07:50:21.936
  E0415 07:50:22.147472      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:23.147915      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:24.148459      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:25.148904      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:26.149186      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:26.943: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/15/24 07:50:26.944
  Apr 15 07:50:26.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5427" for this suite. @ 04/15/24 07:50:26.968
• [7.315 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 04/15/24 07:50:26.988
  Apr 15 07:50:26.988: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/15/24 07:50:26.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:27.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:27.024
  Apr 15 07:50:27.030: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:50:27.149045      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:28.149209      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:29.150005      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:30.150772      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:31.151918      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:32.152358      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:33.152626      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:33.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4883" for this suite. @ 04/15/24 07:50:33.44
• [6.468 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 04/15/24 07:50:33.458
  Apr 15 07:50:33.459: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename sched-pred @ 04/15/24 07:50:33.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:33.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:33.509
  Apr 15 07:50:33.521: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 15 07:50:33.573: INFO: Waiting for terminating namespaces to be deleted...
  Apr 15 07:50:33.582: INFO: 
  Logging pods the apiserver thinks is on node thuchow3cah4-1 before test
  Apr 15 07:50:33.607: INFO: coredns-5dd5756b68-zq94h from kube-system started at 2024-04-15 06:18:48 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.607: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 07:50:33.607: INFO: kube-addon-manager-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.607: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 15 07:50:33.607: INFO: kube-apiserver-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.607: INFO: 	Container kube-apiserver ready: true, restart count 5
  Apr 15 07:50:33.607: INFO: kube-controller-manager-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.607: INFO: 	Container kube-controller-manager ready: true, restart count 5
  Apr 15 07:50:33.607: INFO: kube-flannel-ds-df2kc from kube-system started at 2024-04-15 06:18:51 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.607: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:50:33.607: INFO: kube-proxy-kr9dm from kube-system started at 2024-04-15 06:18:50 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.607: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:50:33.607: INFO: kube-scheduler-thuchow3cah4-1 from kube-system started at 2024-04-15 06:17:43 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.607: INFO: 	Container kube-scheduler ready: true, restart count 5
  Apr 15 07:50:33.607: INFO: sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-8qkc9 from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:50:33.607: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:50:33.607: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 07:50:33.607: INFO: 
  Logging pods the apiserver thinks is on node thuchow3cah4-2 before test
  Apr 15 07:50:33.632: INFO: coredns-5dd5756b68-jrmfx from kube-system started at 2024-04-15 06:38:22 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.632: INFO: 	Container coredns ready: true, restart count 0
  Apr 15 07:50:33.632: INFO: kube-addon-manager-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.632: INFO: 	Container kube-addon-manager ready: true, restart count 5
  Apr 15 07:50:33.632: INFO: kube-apiserver-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.632: INFO: 	Container kube-apiserver ready: true, restart count 5
  Apr 15 07:50:33.632: INFO: kube-controller-manager-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.633: INFO: 	Container kube-controller-manager ready: true, restart count 5
  Apr 15 07:50:33.633: INFO: kube-flannel-ds-whj7b from kube-system started at 2024-04-15 06:18:51 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.633: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:50:33.633: INFO: kube-proxy-h8dk7 from kube-system started at 2024-04-15 06:18:50 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.633: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:50:33.633: INFO: kube-scheduler-thuchow3cah4-2 from kube-system started at 2024-04-15 06:18:07 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.633: INFO: 	Container kube-scheduler ready: true, restart count 5
  Apr 15 07:50:33.633: INFO: sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-jrrgx from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:50:33.633: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:50:33.633: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 15 07:50:33.633: INFO: 
  Logging pods the apiserver thinks is on node thuchow3cah4-3 before test
  Apr 15 07:50:33.654: INFO: adopt-release-8m947 from job-2696 started at 2024-04-15 07:50:05 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.654: INFO: 	Container c ready: true, restart count 0
  Apr 15 07:50:33.654: INFO: adopt-release-dnnj4 from job-2696 started at 2024-04-15 07:50:05 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.655: INFO: 	Container c ready: true, restart count 0
  Apr 15 07:50:33.655: INFO: adopt-release-gzrfk from job-2696 started at 2024-04-15 07:50:11 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.655: INFO: 	Container c ready: true, restart count 0
  Apr 15 07:50:33.655: INFO: kube-flannel-ds-7gx8r from kube-system started at 2024-04-15 06:41:32 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.655: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 15 07:50:33.656: INFO: kube-proxy-l7lmp from kube-system started at 2024-04-15 06:18:50 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.656: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 15 07:50:33.656: INFO: sonobuoy from sonobuoy started at 2024-04-15 06:18:57 +0000 UTC (1 container statuses recorded)
  Apr 15 07:50:33.656: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 15 07:50:33.657: INFO: sonobuoy-e2e-job-b98cfe9b3400449e from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:50:33.657: INFO: 	Container e2e ready: true, restart count 0
  Apr 15 07:50:33.657: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:50:33.658: INFO: sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-7g2gt from sonobuoy started at 2024-04-15 06:18:58 +0000 UTC (2 container statuses recorded)
  Apr 15 07:50:33.658: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 15 07:50:33.658: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node thuchow3cah4-1 @ 04/15/24 07:50:33.723
  STEP: verifying the node has the label node thuchow3cah4-2 @ 04/15/24 07:50:33.754
  STEP: verifying the node has the label node thuchow3cah4-3 @ 04/15/24 07:50:33.793
  Apr 15 07:50:33.838: INFO: Pod adopt-release-8m947 requesting resource cpu=0m on Node thuchow3cah4-3
  Apr 15 07:50:33.840: INFO: Pod adopt-release-dnnj4 requesting resource cpu=0m on Node thuchow3cah4-3
  Apr 15 07:50:33.842: INFO: Pod adopt-release-gzrfk requesting resource cpu=0m on Node thuchow3cah4-3
  Apr 15 07:50:33.843: INFO: Pod coredns-5dd5756b68-jrmfx requesting resource cpu=100m on Node thuchow3cah4-2
  Apr 15 07:50:33.844: INFO: Pod coredns-5dd5756b68-zq94h requesting resource cpu=100m on Node thuchow3cah4-1
  Apr 15 07:50:33.846: INFO: Pod kube-addon-manager-thuchow3cah4-1 requesting resource cpu=5m on Node thuchow3cah4-1
  Apr 15 07:50:33.850: INFO: Pod kube-addon-manager-thuchow3cah4-2 requesting resource cpu=5m on Node thuchow3cah4-2
  Apr 15 07:50:33.851: INFO: Pod kube-apiserver-thuchow3cah4-1 requesting resource cpu=250m on Node thuchow3cah4-1
  Apr 15 07:50:33.851: INFO: Pod kube-apiserver-thuchow3cah4-2 requesting resource cpu=250m on Node thuchow3cah4-2
  Apr 15 07:50:33.853: INFO: Pod kube-controller-manager-thuchow3cah4-1 requesting resource cpu=200m on Node thuchow3cah4-1
  Apr 15 07:50:33.854: INFO: Pod kube-controller-manager-thuchow3cah4-2 requesting resource cpu=200m on Node thuchow3cah4-2
  Apr 15 07:50:33.856: INFO: Pod kube-flannel-ds-7gx8r requesting resource cpu=100m on Node thuchow3cah4-3
  Apr 15 07:50:33.858: INFO: Pod kube-flannel-ds-df2kc requesting resource cpu=100m on Node thuchow3cah4-1
  Apr 15 07:50:33.859: INFO: Pod kube-flannel-ds-whj7b requesting resource cpu=100m on Node thuchow3cah4-2
  Apr 15 07:50:33.861: INFO: Pod kube-proxy-h8dk7 requesting resource cpu=0m on Node thuchow3cah4-2
  Apr 15 07:50:33.863: INFO: Pod kube-proxy-kr9dm requesting resource cpu=0m on Node thuchow3cah4-1
  Apr 15 07:50:33.865: INFO: Pod kube-proxy-l7lmp requesting resource cpu=0m on Node thuchow3cah4-3
  Apr 15 07:50:33.868: INFO: Pod kube-scheduler-thuchow3cah4-1 requesting resource cpu=100m on Node thuchow3cah4-1
  Apr 15 07:50:33.870: INFO: Pod kube-scheduler-thuchow3cah4-2 requesting resource cpu=100m on Node thuchow3cah4-2
  Apr 15 07:50:33.872: INFO: Pod sonobuoy requesting resource cpu=0m on Node thuchow3cah4-3
  Apr 15 07:50:33.873: INFO: Pod sonobuoy-e2e-job-b98cfe9b3400449e requesting resource cpu=0m on Node thuchow3cah4-3
  Apr 15 07:50:33.875: INFO: Pod sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-7g2gt requesting resource cpu=0m on Node thuchow3cah4-3
  Apr 15 07:50:33.876: INFO: Pod sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-8qkc9 requesting resource cpu=0m on Node thuchow3cah4-1
  Apr 15 07:50:33.876: INFO: Pod sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-jrrgx requesting resource cpu=0m on Node thuchow3cah4-2
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/15/24 07:50:33.876
  Apr 15 07:50:33.876: INFO: Creating a pod which consumes cpu=591m on Node thuchow3cah4-1
  Apr 15 07:50:33.901: INFO: Creating a pod which consumes cpu=591m on Node thuchow3cah4-2
  Apr 15 07:50:33.935: INFO: Creating a pod which consumes cpu=1050m on Node thuchow3cah4-3
  E0415 07:50:34.153564      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:35.154100      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/15/24 07:50:35.993
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-28805ff2-e4b7-45f3-bf97-b5698b3c8147.17c664b4574d44f8], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7005/filler-pod-28805ff2-e4b7-45f3-bf97-b5698b3c8147 to thuchow3cah4-3] @ 04/15/24 07:50:36.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-28805ff2-e4b7-45f3-bf97-b5698b3c8147.17c664b47469eb77], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/15/24 07:50:36.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-28805ff2-e4b7-45f3-bf97-b5698b3c8147.17c664b47dd596a4], Reason = [Created], Message = [Created container filler-pod-28805ff2-e4b7-45f3-bf97-b5698b3c8147] @ 04/15/24 07:50:36.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-28805ff2-e4b7-45f3-bf97-b5698b3c8147.17c664b4801d1e3d], Reason = [Started], Message = [Started container filler-pod-28805ff2-e4b7-45f3-bf97-b5698b3c8147] @ 04/15/24 07:50:36.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2f4dd19f-74c1-44a9-bea3-e6d73ccc715b.17c664b45755d7f4], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7005/filler-pod-2f4dd19f-74c1-44a9-bea3-e6d73ccc715b to thuchow3cah4-2] @ 04/15/24 07:50:36.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2f4dd19f-74c1-44a9-bea3-e6d73ccc715b.17c664b479c9f442], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/15/24 07:50:36.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2f4dd19f-74c1-44a9-bea3-e6d73ccc715b.17c664b483901423], Reason = [Created], Message = [Created container filler-pod-2f4dd19f-74c1-44a9-bea3-e6d73ccc715b] @ 04/15/24 07:50:36.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2f4dd19f-74c1-44a9-bea3-e6d73ccc715b.17c664b485b40605], Reason = [Started], Message = [Started container filler-pod-2f4dd19f-74c1-44a9-bea3-e6d73ccc715b] @ 04/15/24 07:50:36.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-72dedfdc-da3d-4fd4-97e5-135e0c062b42.17c664b45301dbf1], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7005/filler-pod-72dedfdc-da3d-4fd4-97e5-135e0c062b42 to thuchow3cah4-1] @ 04/15/24 07:50:36.005
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-72dedfdc-da3d-4fd4-97e5-135e0c062b42.17c664b474959284], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/15/24 07:50:36.005
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-72dedfdc-da3d-4fd4-97e5-135e0c062b42.17c664b47e8caf58], Reason = [Created], Message = [Created container filler-pod-72dedfdc-da3d-4fd4-97e5-135e0c062b42] @ 04/15/24 07:50:36.005
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-72dedfdc-da3d-4fd4-97e5-135e0c062b42.17c664b480ffab83], Reason = [Started], Message = [Started container filler-pod-72dedfdc-da3d-4fd4-97e5-135e0c062b42] @ 04/15/24 07:50:36.005
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17c664b4d0e82ad2], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod..] @ 04/15/24 07:50:36.043
  E0415 07:50:36.166238      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node thuchow3cah4-2 @ 04/15/24 07:50:37.033
  STEP: verifying the node doesn't have the label node @ 04/15/24 07:50:37.064
  STEP: removing the label node off the node thuchow3cah4-3 @ 04/15/24 07:50:37.082
  STEP: verifying the node doesn't have the label node @ 04/15/24 07:50:37.129
  STEP: removing the label node off the node thuchow3cah4-1 @ 04/15/24 07:50:37.149
  E0415 07:50:37.167360      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the node doesn't have the label node @ 04/15/24 07:50:37.19
  Apr 15 07:50:37.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7005" for this suite. @ 04/15/24 07:50:37.22
• [3.778 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/15/24 07:50:37.24
  Apr 15 07:50:37.240: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename proxy @ 04/15/24 07:50:37.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:37.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:37.29
  STEP: starting an echo server on multiple ports @ 04/15/24 07:50:37.313
  STEP: creating replication controller proxy-service-frqpn in namespace proxy-8738 @ 04/15/24 07:50:37.316
  I0415 07:50:37.331433      15 runners.go:197] Created replication controller with name: proxy-service-frqpn, namespace: proxy-8738, replica count: 1
  E0415 07:50:38.167593      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 07:50:38.388085      15 runners.go:197] proxy-service-frqpn Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0415 07:50:39.167458      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 07:50:39.389982      15 runners.go:197] proxy-service-frqpn Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0415 07:50:40.167520      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 07:50:40.391130      15 runners.go:197] proxy-service-frqpn Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 07:50:40.403: INFO: setup took 3.107997078s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/15/24 07:50:40.404
  Apr 15 07:50:40.448: INFO: (0) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 41.354519ms)
  Apr 15 07:50:40.448: INFO: (0) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 42.659197ms)
  Apr 15 07:50:40.466: INFO: (0) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 59.804307ms)
  Apr 15 07:50:40.466: INFO: (0) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 61.56663ms)
  Apr 15 07:50:40.467: INFO: (0) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 61.464579ms)
  Apr 15 07:50:40.471: INFO: (0) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 66.631379ms)
  Apr 15 07:50:40.473: INFO: (0) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 66.792487ms)
  Apr 15 07:50:40.480: INFO: (0) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 76.111567ms)
  Apr 15 07:50:40.490: INFO: (0) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 83.42329ms)
  Apr 15 07:50:40.491: INFO: (0) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 85.944431ms)
  Apr 15 07:50:40.492: INFO: (0) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 85.799245ms)
  Apr 15 07:50:40.492: INFO: (0) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 87.184822ms)
  Apr 15 07:50:40.492: INFO: (0) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 86.990654ms)
  Apr 15 07:50:40.493: INFO: (0) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 86.824825ms)
  Apr 15 07:50:40.493: INFO: (0) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 86.156303ms)
  Apr 15 07:50:40.493: INFO: (0) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 88.52944ms)
  Apr 15 07:50:40.546: INFO: (1) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 48.744722ms)
  Apr 15 07:50:40.552: INFO: (1) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 55.753367ms)
  Apr 15 07:50:40.553: INFO: (1) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 57.944482ms)
  Apr 15 07:50:40.554: INFO: (1) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 56.422116ms)
  Apr 15 07:50:40.556: INFO: (1) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 59.227137ms)
  Apr 15 07:50:40.557: INFO: (1) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 60.290127ms)
  Apr 15 07:50:40.558: INFO: (1) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 61.248725ms)
  Apr 15 07:50:40.558: INFO: (1) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 61.737205ms)
  Apr 15 07:50:40.558: INFO: (1) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 61.143138ms)
  Apr 15 07:50:40.558: INFO: (1) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 61.386576ms)
  Apr 15 07:50:40.558: INFO: (1) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 60.887524ms)
  Apr 15 07:50:40.559: INFO: (1) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 64.44714ms)
  Apr 15 07:50:40.559: INFO: (1) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 63.603938ms)
  Apr 15 07:50:40.560: INFO: (1) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 64.425707ms)
  Apr 15 07:50:40.560: INFO: (1) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 64.02459ms)
  Apr 15 07:50:40.560: INFO: (1) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 65.256118ms)
  Apr 15 07:50:40.606: INFO: (2) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 41.115414ms)
  Apr 15 07:50:40.609: INFO: (2) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 44.214295ms)
  Apr 15 07:50:40.610: INFO: (2) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 46.562745ms)
  Apr 15 07:50:40.611: INFO: (2) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 48.144552ms)
  Apr 15 07:50:40.614: INFO: (2) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 47.084556ms)
  Apr 15 07:50:40.614: INFO: (2) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 48.094107ms)
  Apr 15 07:50:40.616: INFO: (2) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 54.556732ms)
  Apr 15 07:50:40.617: INFO: (2) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 49.723583ms)
  Apr 15 07:50:40.618: INFO: (2) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 56.040795ms)
  Apr 15 07:50:40.618: INFO: (2) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 56.084364ms)
  Apr 15 07:50:40.619: INFO: (2) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 57.242329ms)
  Apr 15 07:50:40.622: INFO: (2) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 58.722003ms)
  Apr 15 07:50:40.623: INFO: (2) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 59.334437ms)
  Apr 15 07:50:40.623: INFO: (2) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 59.133287ms)
  Apr 15 07:50:40.623: INFO: (2) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 61.71346ms)
  Apr 15 07:50:40.623: INFO: (2) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 60.641208ms)
  Apr 15 07:50:40.652: INFO: (3) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 27.412795ms)
  Apr 15 07:50:40.653: INFO: (3) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 26.165931ms)
  Apr 15 07:50:40.653: INFO: (3) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 29.767347ms)
  Apr 15 07:50:40.654: INFO: (3) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 27.385485ms)
  Apr 15 07:50:40.654: INFO: (3) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 30.135369ms)
  Apr 15 07:50:40.654: INFO: (3) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 29.306948ms)
  Apr 15 07:50:40.656: INFO: (3) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 31.455876ms)
  Apr 15 07:50:40.656: INFO: (3) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 31.666482ms)
  Apr 15 07:50:40.656: INFO: (3) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 32.012209ms)
  Apr 15 07:50:40.659: INFO: (3) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 33.497375ms)
  Apr 15 07:50:40.659: INFO: (3) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 34.005133ms)
  Apr 15 07:50:40.660: INFO: (3) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 36.338742ms)
  Apr 15 07:50:40.661: INFO: (3) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 35.61804ms)
  Apr 15 07:50:40.662: INFO: (3) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 35.98455ms)
  Apr 15 07:50:40.662: INFO: (3) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 37.664466ms)
  Apr 15 07:50:40.672: INFO: (3) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 46.259496ms)
  Apr 15 07:50:40.696: INFO: (4) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 21.882729ms)
  Apr 15 07:50:40.701: INFO: (4) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 27.289393ms)
  Apr 15 07:50:40.702: INFO: (4) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 28.065953ms)
  Apr 15 07:50:40.702: INFO: (4) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 27.8785ms)
  Apr 15 07:50:40.703: INFO: (4) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 30.700583ms)
  Apr 15 07:50:40.704: INFO: (4) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 31.387205ms)
  Apr 15 07:50:40.705: INFO: (4) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 31.055934ms)
  Apr 15 07:50:40.706: INFO: (4) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 33.165247ms)
  Apr 15 07:50:40.709: INFO: (4) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 33.995433ms)
  Apr 15 07:50:40.710: INFO: (4) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 36.649207ms)
  Apr 15 07:50:40.711: INFO: (4) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 37.053478ms)
  Apr 15 07:50:40.711: INFO: (4) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 35.862603ms)
  Apr 15 07:50:40.711: INFO: (4) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 38.431572ms)
  Apr 15 07:50:40.711: INFO: (4) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 36.218185ms)
  Apr 15 07:50:40.712: INFO: (4) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 36.367959ms)
  Apr 15 07:50:40.713: INFO: (4) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 38.255201ms)
  Apr 15 07:50:40.738: INFO: (5) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 23.549297ms)
  Apr 15 07:50:40.738: INFO: (5) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 23.36961ms)
  Apr 15 07:50:40.739: INFO: (5) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 24.210451ms)
  Apr 15 07:50:40.739: INFO: (5) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 23.874158ms)
  Apr 15 07:50:40.739: INFO: (5) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 25.064928ms)
  Apr 15 07:50:40.741: INFO: (5) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 27.112881ms)
  Apr 15 07:50:40.742: INFO: (5) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 26.631139ms)
  Apr 15 07:50:40.742: INFO: (5) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 28.587468ms)
  Apr 15 07:50:40.742: INFO: (5) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 26.637343ms)
  Apr 15 07:50:40.742: INFO: (5) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 28.506262ms)
  Apr 15 07:50:40.742: INFO: (5) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 28.037153ms)
  Apr 15 07:50:40.743: INFO: (5) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 28.654199ms)
  Apr 15 07:50:40.743: INFO: (5) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 30.502973ms)
  Apr 15 07:50:40.743: INFO: (5) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 29.671546ms)
  Apr 15 07:50:40.743: INFO: (5) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 30.766868ms)
  Apr 15 07:50:40.746: INFO: (5) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 33.011242ms)
  Apr 15 07:50:40.769: INFO: (6) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 21.225342ms)
  Apr 15 07:50:40.770: INFO: (6) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 22.804952ms)
  Apr 15 07:50:40.770: INFO: (6) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 22.450697ms)
  Apr 15 07:50:40.770: INFO: (6) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 21.422717ms)
  Apr 15 07:50:40.770: INFO: (6) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 23.376108ms)
  Apr 15 07:50:40.771: INFO: (6) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 22.156888ms)
  Apr 15 07:50:40.771: INFO: (6) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 24.715605ms)
  Apr 15 07:50:40.771: INFO: (6) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 23.774288ms)
  Apr 15 07:50:40.771: INFO: (6) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 23.051587ms)
  Apr 15 07:50:40.772: INFO: (6) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 25.511285ms)
  Apr 15 07:50:40.772: INFO: (6) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 23.778488ms)
  Apr 15 07:50:40.772: INFO: (6) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 24.623056ms)
  Apr 15 07:50:40.773: INFO: (6) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 26.10053ms)
  Apr 15 07:50:40.773: INFO: (6) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 25.756407ms)
  Apr 15 07:50:40.773: INFO: (6) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 25.298778ms)
  Apr 15 07:50:40.777: INFO: (6) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 29.246399ms)
  Apr 15 07:50:40.825: INFO: (7) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 47.471133ms)
  Apr 15 07:50:40.825: INFO: (7) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 46.124257ms)
  Apr 15 07:50:40.827: INFO: (7) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 48.373843ms)
  Apr 15 07:50:40.827: INFO: (7) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 47.697573ms)
  Apr 15 07:50:40.829: INFO: (7) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 50.997054ms)
  Apr 15 07:50:40.829: INFO: (7) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 49.17701ms)
  Apr 15 07:50:40.830: INFO: (7) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 50.007314ms)
  Apr 15 07:50:40.830: INFO: (7) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 51.291345ms)
  Apr 15 07:50:40.831: INFO: (7) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 50.681901ms)
  Apr 15 07:50:40.831: INFO: (7) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 50.851327ms)
  Apr 15 07:50:40.832: INFO: (7) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 53.279086ms)
  Apr 15 07:50:40.833: INFO: (7) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 54.537158ms)
  Apr 15 07:50:40.834: INFO: (7) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 55.692175ms)
  Apr 15 07:50:40.835: INFO: (7) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 55.91973ms)
  Apr 15 07:50:40.836: INFO: (7) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 57.601695ms)
  Apr 15 07:50:40.836: INFO: (7) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 57.071657ms)
  Apr 15 07:50:40.872: INFO: (8) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 35.402456ms)
  Apr 15 07:50:40.873: INFO: (8) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 36.069781ms)
  Apr 15 07:50:40.873: INFO: (8) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 34.875258ms)
  Apr 15 07:50:40.874: INFO: (8) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 35.585997ms)
  Apr 15 07:50:40.874: INFO: (8) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 36.647019ms)
  Apr 15 07:50:40.874: INFO: (8) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 36.328862ms)
  Apr 15 07:50:40.875: INFO: (8) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 36.650982ms)
  Apr 15 07:50:40.876: INFO: (8) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 38.012863ms)
  Apr 15 07:50:40.876: INFO: (8) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 38.164137ms)
  Apr 15 07:50:40.876: INFO: (8) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 38.296548ms)
  Apr 15 07:50:40.876: INFO: (8) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 37.822028ms)
  Apr 15 07:50:40.876: INFO: (8) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 39.076131ms)
  Apr 15 07:50:40.877: INFO: (8) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 38.621707ms)
  Apr 15 07:50:40.878: INFO: (8) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 40.106181ms)
  Apr 15 07:50:40.878: INFO: (8) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 39.841318ms)
  Apr 15 07:50:40.879: INFO: (8) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 40.811487ms)
  Apr 15 07:50:40.895: INFO: (9) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 14.79238ms)
  Apr 15 07:50:40.906: INFO: (9) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 26.75679ms)
  Apr 15 07:50:40.907: INFO: (9) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 27.165634ms)
  Apr 15 07:50:40.908: INFO: (9) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 27.233029ms)
  Apr 15 07:50:40.908: INFO: (9) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 26.90667ms)
  Apr 15 07:50:40.908: INFO: (9) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 27.183011ms)
  Apr 15 07:50:40.909: INFO: (9) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 28.772928ms)
  Apr 15 07:50:40.911: INFO: (9) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 31.071ms)
  Apr 15 07:50:40.911: INFO: (9) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 29.857664ms)
  Apr 15 07:50:40.912: INFO: (9) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 30.302501ms)
  Apr 15 07:50:40.912: INFO: (9) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 30.471239ms)
  Apr 15 07:50:40.912: INFO: (9) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 31.716241ms)
  Apr 15 07:50:40.913: INFO: (9) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 31.797047ms)
  Apr 15 07:50:40.913: INFO: (9) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 32.655007ms)
  Apr 15 07:50:40.913: INFO: (9) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 30.808289ms)
  Apr 15 07:50:40.913: INFO: (9) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 32.137503ms)
  Apr 15 07:50:40.938: INFO: (10) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 22.700509ms)
  Apr 15 07:50:40.938: INFO: (10) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 22.500931ms)
  Apr 15 07:50:40.939: INFO: (10) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 22.847454ms)
  Apr 15 07:50:40.939: INFO: (10) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 22.761403ms)
  Apr 15 07:50:40.939: INFO: (10) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 22.665285ms)
  Apr 15 07:50:40.939: INFO: (10) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 22.401217ms)
  Apr 15 07:50:40.939: INFO: (10) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 22.645423ms)
  Apr 15 07:50:40.939: INFO: (10) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 23.088982ms)
  Apr 15 07:50:40.940: INFO: (10) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 23.841897ms)
  Apr 15 07:50:40.940: INFO: (10) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 25.019382ms)
  Apr 15 07:50:40.940: INFO: (10) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 24.040711ms)
  Apr 15 07:50:40.944: INFO: (10) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 28.387758ms)
  Apr 15 07:50:40.945: INFO: (10) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 28.438209ms)
  Apr 15 07:50:40.947: INFO: (10) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 31.416558ms)
  Apr 15 07:50:40.947: INFO: (10) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 30.428756ms)
  Apr 15 07:50:40.948: INFO: (10) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 31.600531ms)
  Apr 15 07:50:40.969: INFO: (11) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 20.683074ms)
  Apr 15 07:50:40.978: INFO: (11) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 27.951139ms)
  Apr 15 07:50:40.978: INFO: (11) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 27.834573ms)
  Apr 15 07:50:40.978: INFO: (11) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 30.192134ms)
  Apr 15 07:50:40.979: INFO: (11) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 28.810232ms)
  Apr 15 07:50:40.979: INFO: (11) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 31.028473ms)
  Apr 15 07:50:40.979: INFO: (11) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 30.467219ms)
  Apr 15 07:50:40.980: INFO: (11) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 29.975424ms)
  Apr 15 07:50:40.980: INFO: (11) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 31.315416ms)
  Apr 15 07:50:40.980: INFO: (11) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 30.244861ms)
  Apr 15 07:50:40.981: INFO: (11) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 31.014365ms)
  Apr 15 07:50:40.981: INFO: (11) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 32.266847ms)
  Apr 15 07:50:40.982: INFO: (11) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 33.518219ms)
  Apr 15 07:50:40.982: INFO: (11) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 33.497162ms)
  Apr 15 07:50:40.983: INFO: (11) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 33.001347ms)
  Apr 15 07:50:40.984: INFO: (11) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 33.998447ms)
  Apr 15 07:50:41.006: INFO: (12) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 21.038759ms)
  Apr 15 07:50:41.010: INFO: (12) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 24.616271ms)
  Apr 15 07:50:41.010: INFO: (12) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 25.411157ms)
  Apr 15 07:50:41.010: INFO: (12) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 25.355893ms)
  Apr 15 07:50:41.010: INFO: (12) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 25.314521ms)
  Apr 15 07:50:41.010: INFO: (12) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 24.848647ms)
  Apr 15 07:50:41.010: INFO: (12) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 25.888898ms)
  Apr 15 07:50:41.010: INFO: (12) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 25.016895ms)
  Apr 15 07:50:41.010: INFO: (12) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 25.136535ms)
  Apr 15 07:50:41.012: INFO: (12) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 27.613171ms)
  Apr 15 07:50:41.013: INFO: (12) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 28.15432ms)
  Apr 15 07:50:41.014: INFO: (12) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 28.768726ms)
  Apr 15 07:50:41.014: INFO: (12) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 29.139345ms)
  Apr 15 07:50:41.014: INFO: (12) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 29.09402ms)
  Apr 15 07:50:41.014: INFO: (12) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 29.569833ms)
  Apr 15 07:50:41.014: INFO: (12) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 28.241644ms)
  Apr 15 07:50:41.038: INFO: (13) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 23.405251ms)
  Apr 15 07:50:41.039: INFO: (13) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 22.789953ms)
  Apr 15 07:50:41.039: INFO: (13) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 21.533561ms)
  Apr 15 07:50:41.041: INFO: (13) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 25.250553ms)
  Apr 15 07:50:41.042: INFO: (13) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 25.424791ms)
  Apr 15 07:50:41.046: INFO: (13) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 30.153969ms)
  Apr 15 07:50:41.046: INFO: (13) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 30.803733ms)
  Apr 15 07:50:41.047: INFO: (13) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 29.761578ms)
  Apr 15 07:50:41.047: INFO: (13) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 30.762409ms)
  Apr 15 07:50:41.047: INFO: (13) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 30.302925ms)
  Apr 15 07:50:41.048: INFO: (13) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 30.583203ms)
  Apr 15 07:50:41.048: INFO: (13) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 33.039108ms)
  Apr 15 07:50:41.048: INFO: (13) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 32.361481ms)
  Apr 15 07:50:41.048: INFO: (13) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 31.406288ms)
  Apr 15 07:50:41.048: INFO: (13) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 33.204577ms)
  Apr 15 07:50:41.049: INFO: (13) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 32.372077ms)
  Apr 15 07:50:41.063: INFO: (14) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 13.866596ms)
  Apr 15 07:50:41.064: INFO: (14) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 14.293012ms)
  Apr 15 07:50:41.071: INFO: (14) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 21.036679ms)
  Apr 15 07:50:41.075: INFO: (14) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 25.184683ms)
  Apr 15 07:50:41.076: INFO: (14) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 26.706347ms)
  Apr 15 07:50:41.077: INFO: (14) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 26.633054ms)
  Apr 15 07:50:41.077: INFO: (14) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 27.632647ms)
  Apr 15 07:50:41.079: INFO: (14) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 28.69832ms)
  Apr 15 07:50:41.081: INFO: (14) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 30.496262ms)
  Apr 15 07:50:41.081: INFO: (14) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 31.266782ms)
  Apr 15 07:50:41.081: INFO: (14) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 31.352303ms)
  Apr 15 07:50:41.081: INFO: (14) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 31.875486ms)
  Apr 15 07:50:41.084: INFO: (14) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 34.303798ms)
  Apr 15 07:50:41.085: INFO: (14) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 34.550968ms)
  Apr 15 07:50:41.086: INFO: (14) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 35.569519ms)
  Apr 15 07:50:41.087: INFO: (14) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 36.663354ms)
  Apr 15 07:50:41.108: INFO: (15) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 20.179244ms)
  Apr 15 07:50:41.108: INFO: (15) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 21.537364ms)
  Apr 15 07:50:41.109: INFO: (15) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 21.740711ms)
  Apr 15 07:50:41.111: INFO: (15) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 24.090062ms)
  Apr 15 07:50:41.112: INFO: (15) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 25.378305ms)
  Apr 15 07:50:41.115: INFO: (15) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 28.024937ms)
  Apr 15 07:50:41.116: INFO: (15) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 28.328634ms)
  Apr 15 07:50:41.116: INFO: (15) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 29.239949ms)
  Apr 15 07:50:41.117: INFO: (15) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 29.14475ms)
  Apr 15 07:50:41.118: INFO: (15) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 30.549714ms)
  Apr 15 07:50:41.119: INFO: (15) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 31.457215ms)
  Apr 15 07:50:41.119: INFO: (15) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 31.297759ms)
  Apr 15 07:50:41.120: INFO: (15) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 32.878735ms)
  Apr 15 07:50:41.121: INFO: (15) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 33.740321ms)
  Apr 15 07:50:41.121: INFO: (15) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 34.185746ms)
  Apr 15 07:50:41.125: INFO: (15) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 37.794036ms)
  Apr 15 07:50:41.153: INFO: (16) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 28.368616ms)
  Apr 15 07:50:41.153: INFO: (16) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 28.034753ms)
  Apr 15 07:50:41.154: INFO: (16) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 28.62621ms)
  Apr 15 07:50:41.154: INFO: (16) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 27.906744ms)
  Apr 15 07:50:41.155: INFO: (16) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 28.91948ms)
  Apr 15 07:50:41.155: INFO: (16) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 29.407063ms)
  Apr 15 07:50:41.156: INFO: (16) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 29.716497ms)
  Apr 15 07:50:41.157: INFO: (16) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 30.65033ms)
  Apr 15 07:50:41.157: INFO: (16) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 31.097779ms)
  Apr 15 07:50:41.157: INFO: (16) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 31.908008ms)
  Apr 15 07:50:41.157: INFO: (16) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 30.965501ms)
  Apr 15 07:50:41.158: INFO: (16) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 32.417731ms)
  Apr 15 07:50:41.158: INFO: (16) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 32.203548ms)
  Apr 15 07:50:41.159: INFO: (16) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 33.008592ms)
  Apr 15 07:50:41.159: INFO: (16) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 33.308057ms)
  Apr 15 07:50:41.160: INFO: (16) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 33.68858ms)
  E0415 07:50:41.168482      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:41.171: INFO: (17) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 11.059886ms)
  Apr 15 07:50:41.171: INFO: (17) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 10.824092ms)
  Apr 15 07:50:41.193: INFO: (17) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 32.80167ms)
  Apr 15 07:50:41.194: INFO: (17) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 33.278691ms)
  Apr 15 07:50:41.194: INFO: (17) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 33.293139ms)
  Apr 15 07:50:41.194: INFO: (17) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 33.004709ms)
  Apr 15 07:50:41.195: INFO: (17) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 34.42476ms)
  Apr 15 07:50:41.195: INFO: (17) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 34.743115ms)
  Apr 15 07:50:41.195: INFO: (17) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 34.801617ms)
  Apr 15 07:50:41.195: INFO: (17) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 35.131284ms)
  Apr 15 07:50:41.195: INFO: (17) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 35.776391ms)
  Apr 15 07:50:41.196: INFO: (17) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 35.74923ms)
  Apr 15 07:50:41.197: INFO: (17) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 36.439825ms)
  Apr 15 07:50:41.197: INFO: (17) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 36.118939ms)
  Apr 15 07:50:41.197: INFO: (17) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 36.898174ms)
  Apr 15 07:50:41.197: INFO: (17) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 37.272084ms)
  Apr 15 07:50:41.217: INFO: (18) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 16.176217ms)
  Apr 15 07:50:41.218: INFO: (18) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 18.274949ms)
  Apr 15 07:50:41.227: INFO: (18) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 28.986379ms)
  Apr 15 07:50:41.230: INFO: (18) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 27.787426ms)
  Apr 15 07:50:41.231: INFO: (18) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 32.966156ms)
  Apr 15 07:50:41.231: INFO: (18) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 31.940185ms)
  Apr 15 07:50:41.232: INFO: (18) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 33.301025ms)
  Apr 15 07:50:41.231: INFO: (18) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 32.899564ms)
  Apr 15 07:50:41.231: INFO: (18) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 32.751096ms)
  Apr 15 07:50:41.233: INFO: (18) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 30.763008ms)
  Apr 15 07:50:41.233: INFO: (18) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 31.39983ms)
  Apr 15 07:50:41.233: INFO: (18) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 33.18405ms)
  Apr 15 07:50:41.233: INFO: (18) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 33.53036ms)
  Apr 15 07:50:41.233: INFO: (18) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 30.82268ms)
  Apr 15 07:50:41.233: INFO: (18) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 34.388657ms)
  Apr 15 07:50:41.236: INFO: (18) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 36.244629ms)
  Apr 15 07:50:41.266: INFO: (19) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:443/proxy/tlsrewritem... (200; 24.205705ms)
  Apr 15 07:50:41.266: INFO: (19) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:162/proxy/: bar (200; 24.525904ms)
  Apr 15 07:50:41.266: INFO: (19) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:1080/proxy/rewriteme">test<... (200; 24.91704ms)
  Apr 15 07:50:41.267: INFO: (19) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:160/proxy/: foo (200; 24.93069ms)
  Apr 15 07:50:41.270: INFO: (19) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8:162/proxy/: bar (200; 25.510086ms)
  Apr 15 07:50:41.270: INFO: (19) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:160/proxy/: foo (200; 26.073501ms)
  Apr 15 07:50:41.271: INFO: (19) /api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/http:proxy-service-frqpn-qswh8:1080/proxy/rewriteme">... (200; 25.548221ms)
  Apr 15 07:50:41.272: INFO: (19) /api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/: <a href="/api/v1/namespaces/proxy-8738/pods/proxy-service-frqpn-qswh8/proxy/rewriteme">test</a> (200; 29.007116ms)
  Apr 15 07:50:41.272: INFO: (19) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname1/proxy/: foo (200; 30.084732ms)
  Apr 15 07:50:41.273: INFO: (19) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname1/proxy/: foo (200; 28.333979ms)
  Apr 15 07:50:41.275: INFO: (19) /api/v1/namespaces/proxy-8738/services/proxy-service-frqpn:portname2/proxy/: bar (200; 33.843507ms)
  Apr 15 07:50:41.275: INFO: (19) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:460/proxy/: tls baz (200; 30.244661ms)
  Apr 15 07:50:41.276: INFO: (19) /api/v1/namespaces/proxy-8738/pods/https:proxy-service-frqpn-qswh8:462/proxy/: tls qux (200; 33.528945ms)
  Apr 15 07:50:41.277: INFO: (19) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname1/proxy/: tls baz (200; 31.731105ms)
  Apr 15 07:50:41.277: INFO: (19) /api/v1/namespaces/proxy-8738/services/https:proxy-service-frqpn:tlsportname2/proxy/: tls qux (200; 34.085622ms)
  Apr 15 07:50:41.277: INFO: (19) /api/v1/namespaces/proxy-8738/services/http:proxy-service-frqpn:portname2/proxy/: bar (200; 33.841332ms)
  Apr 15 07:50:41.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-frqpn in namespace proxy-8738, will wait for the garbage collector to delete the pods @ 04/15/24 07:50:41.292
  Apr 15 07:50:41.370: INFO: Deleting ReplicationController proxy-service-frqpn took: 14.217662ms
  Apr 15 07:50:41.471: INFO: Terminating ReplicationController proxy-service-frqpn pods took: 100.746665ms
  E0415 07:50:42.168872      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-8738" for this suite. @ 04/15/24 07:50:42.672
• [5.452 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 04/15/24 07:50:42.704
  Apr 15 07:50:42.704: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:50:42.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:42.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:42.769
  STEP: Creating Pod @ 04/15/24 07:50:42.778
  E0415 07:50:43.169214      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:44.173643      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:45.173998      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:46.173993      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:47.174185      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:48.174504      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 04/15/24 07:50:48.855
  Apr 15 07:50:48.855: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9609 PodName:pod-sharedvolume-8348985f-d108-4e4a-9f54-f45673179bf4 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:50:48.855: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:50:48.857: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:50:48.857: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-9609/pods/pod-sharedvolume-8348985f-d108-4e4a-9f54-f45673179bf4/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Apr 15 07:50:48.963: INFO: Exec stderr: ""
  Apr 15 07:50:48.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9609" for this suite. @ 04/15/24 07:50:48.98
• [6.291 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 04/15/24 07:50:48.995
  Apr 15 07:50:48.995: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename replication-controller @ 04/15/24 07:50:48.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:49.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:49.04
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/15/24 07:50:49.046
  E0415 07:50:49.175135      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:50.175726      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 04/15/24 07:50:51.087
  STEP: Then the orphan pod is adopted @ 04/15/24 07:50:51.096
  E0415 07:50:51.176742      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:52.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8504" for this suite. @ 04/15/24 07:50:52.119
• [3.135 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 04/15/24 07:50:52.131
  Apr 15 07:50:52.132: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 07:50:52.134
  E0415 07:50:52.177451      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:50:52.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:50:52.213
  Apr 15 07:50:52.219: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:50:53.177651      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:50:54.178161      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/15/24 07:50:54.345
  Apr 15 07:50:54.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 --namespace=crd-publish-openapi-4552 create -f -'
  E0415 07:50:55.178325      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:55.434: INFO: stderr: ""
  Apr 15 07:50:55.436: INFO: stdout: "e2e-test-crd-publish-openapi-3380-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 15 07:50:55.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 --namespace=crd-publish-openapi-4552 delete e2e-test-crd-publish-openapi-3380-crds test-foo'
  Apr 15 07:50:55.706: INFO: stderr: ""
  Apr 15 07:50:55.706: INFO: stdout: "e2e-test-crd-publish-openapi-3380-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Apr 15 07:50:55.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 --namespace=crd-publish-openapi-4552 apply -f -'
  E0415 07:50:56.180467      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:56.485: INFO: stderr: ""
  Apr 15 07:50:56.485: INFO: stdout: "e2e-test-crd-publish-openapi-3380-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 15 07:50:56.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 --namespace=crd-publish-openapi-4552 delete e2e-test-crd-publish-openapi-3380-crds test-foo'
  Apr 15 07:50:56.684: INFO: stderr: ""
  Apr 15 07:50:56.684: INFO: stdout: "e2e-test-crd-publish-openapi-3380-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/15/24 07:50:56.684
  Apr 15 07:50:56.684: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 --namespace=crd-publish-openapi-4552 create -f -'
  Apr 15 07:50:56.979: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/15/24 07:50:56.979
  Apr 15 07:50:56.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 --namespace=crd-publish-openapi-4552 create -f -'
  E0415 07:50:57.179498      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:57.311: INFO: rc: 1
  Apr 15 07:50:57.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 --namespace=crd-publish-openapi-4552 apply -f -'
  Apr 15 07:50:57.732: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/15/24 07:50:57.732
  Apr 15 07:50:57.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 --namespace=crd-publish-openapi-4552 create -f -'
  Apr 15 07:50:58.020: INFO: rc: 1
  Apr 15 07:50:58.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 --namespace=crd-publish-openapi-4552 apply -f -'
  E0415 07:50:58.179957      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:58.374: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/15/24 07:50:58.374
  Apr 15 07:50:58.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 explain e2e-test-crd-publish-openapi-3380-crds'
  Apr 15 07:50:58.672: INFO: stderr: ""
  Apr 15 07:50:58.672: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3380-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/15/24 07:50:58.673
  Apr 15 07:50:58.673: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 explain e2e-test-crd-publish-openapi-3380-crds.metadata'
  Apr 15 07:50:59.015: INFO: stderr: ""
  Apr 15 07:50:59.015: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3380-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Apr 15 07:50:59.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 explain e2e-test-crd-publish-openapi-3380-crds.spec'
  E0415 07:50:59.180696      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:50:59.291: INFO: stderr: ""
  Apr 15 07:50:59.291: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3380-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Apr 15 07:50:59.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 explain e2e-test-crd-publish-openapi-3380-crds.spec.bars'
  Apr 15 07:50:59.634: INFO: stderr: ""
  Apr 15 07:50:59.634: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-3380-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/15/24 07:50:59.634
  Apr 15 07:50:59.635: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=crd-publish-openapi-4552 explain e2e-test-crd-publish-openapi-3380-crds.spec.bars2'
  Apr 15 07:50:59.909: INFO: rc: 1
  E0415 07:51:00.181691      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:01.182117      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:01.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4552" for this suite. @ 04/15/24 07:51:01.758
• [9.641 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/15/24 07:51:01.776
  Apr 15 07:51:01.777: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pods @ 04/15/24 07:51:01.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:51:01.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:51:01.826
  STEP: creating the pod @ 04/15/24 07:51:01.83
  STEP: submitting the pod to kubernetes @ 04/15/24 07:51:01.831
  W0415 07:51:01.849675      15 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0415 07:51:02.182715      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:03.182891      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/15/24 07:51:03.879
  STEP: updating the pod @ 04/15/24 07:51:03.884
  E0415 07:51:04.183056      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:04.405: INFO: Successfully updated pod "pod-update-activedeadlineseconds-7691134e-a263-4497-a0cf-903f6d9b4268"
  E0415 07:51:05.183697      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:06.183603      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:07.183864      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:08.184429      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:08.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6367" for this suite. @ 04/15/24 07:51:08.436
• [6.671 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 04/15/24 07:51:08.447
  Apr 15 07:51:08.448: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename endpointslice @ 04/15/24 07:51:08.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:51:08.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:51:08.485
  E0415 07:51:09.185574      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:10.186236      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:10.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3091" for this suite. @ 04/15/24 07:51:10.607
• [2.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/15/24 07:51:10.631
  Apr 15 07:51:10.631: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pods @ 04/15/24 07:51:10.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:51:10.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:51:10.664
  STEP: Create a pod @ 04/15/24 07:51:10.668
  E0415 07:51:11.186378      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:12.186761      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/15/24 07:51:12.694
  Apr 15 07:51:12.709: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Apr 15 07:51:12.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1965" for this suite. @ 04/15/24 07:51:12.719
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 04/15/24 07:51:12.74
  Apr 15 07:51:12.740: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:51:12.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:51:12.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:51:12.784
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/15/24 07:51:12.792
  E0415 07:51:13.187802      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:14.188169      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:15.189028      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:16.189779      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:51:16.836
  Apr 15 07:51:16.842: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-a98762f9-a5b9-4973-836d-2d6595af3c22 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:51:16.856
  Apr 15 07:51:16.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7747" for this suite. @ 04/15/24 07:51:16.89
• [4.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 04/15/24 07:51:16.91
  Apr 15 07:51:16.910: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 07:51:16.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:51:16.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:51:16.95
  STEP: Creating pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772 @ 04/15/24 07:51:16.955
  E0415 07:51:17.190336      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:18.191313      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/15/24 07:51:18.984
  Apr 15 07:51:18.990: INFO: Initial restart count of pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 is 0
  Apr 15 07:51:18.995: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:19.191844      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:20.192703      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:21.000: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:21.193241      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:22.193884      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:23.007: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:23.194986      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:24.195330      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:25.015: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:25.196435      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:26.197284      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:27.020: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:27.198351      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:28.198502      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:29.029: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:29.199292      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:30.199932      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:31.034: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:31.200824      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:32.200953      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:33.042: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:33.201041      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:34.201268      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:35.050: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:35.202230      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:36.202939      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:37.057: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:37.203115      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:38.203299      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:39.070: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  Apr 15 07:51:39.070: INFO: Restart count of pod container-probe-6772/liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 is now 1 (20.080335322s elapsed)
  E0415 07:51:39.204523      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:40.205121      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:41.079: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:41.205117      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:42.205308      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:43.089: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:43.205878      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:44.206122      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:45.097: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:45.207139      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:46.207773      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:47.111: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:47.208359      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:48.208550      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:49.120: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:49.208661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:50.208973      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:51.127: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:51.209156      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:52.209962      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:53.145: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:53.210844      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:54.211676      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:55.156: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:55.211788      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:56.212552      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:57.164: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:51:57.213594      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:51:58.214224      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:51:59.172: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  Apr 15 07:51:59.172: INFO: Restart count of pod container-probe-6772/liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 is now 2 (40.182333805s elapsed)
  E0415 07:51:59.214516      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:00.215231      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:01.183: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:01.216287      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:02.217133      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:03.195: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:03.217660      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:04.218216      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:05.204: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:05.219191      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:06.219865      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:07.212: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:07.220281      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:08.220996      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:09.221: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:09.221694      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:10.222184      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:11.222250      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:11.228: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:12.222764      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:13.222964      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:13.238: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:14.223160      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:15.223300      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:15.247: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:16.223915      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:17.224547      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:17.263: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:18.225318      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:19.225610      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:19.273: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  Apr 15 07:52:19.274: INFO: Restart count of pod container-probe-6772/liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 is now 3 (1m0.284218895s elapsed)
  E0415 07:52:20.225723      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:21.225989      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:21.285: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:22.226164      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:23.226447      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:23.296: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:24.226576      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:25.226787      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:25.305: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:26.227273      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:27.227632      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:27.314: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:28.227743      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:29.228619      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:29.324: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:30.228867      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:31.229047      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:31.337: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:32.229334      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:33.230069      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:33.346: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:34.230205      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:35.230355      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:35.398: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:36.230931      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:37.231182      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:37.407: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:38.232154      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:39.232347      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:39.415: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  Apr 15 07:52:39.415: INFO: Restart count of pod container-probe-6772/liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 is now 4 (1m20.425797962s elapsed)
  E0415 07:52:40.232532      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:41.233820      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:41.425: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:42.233363      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:43.234197      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:43.435: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:44.234420      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:45.234631      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:45.442: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:46.235300      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:47.236004      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:47.463: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:48.236888      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:49.237274      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:49.471: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:50.238093      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:51.239282      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:51.482: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:52.239695      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:53.240456      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:53.495: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:54.240705      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:55.240822      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:55.504: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:56.241416      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:57.242214      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:57.514: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:52:58.242336      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:52:59.243358      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:52:59.522: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:00.243538      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:01.244003      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:01.532: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:02.244915      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:03.244525      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:03.542: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:04.244727      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:05.245227      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:05.550: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:06.245679      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:07.245857      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:07.561: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:08.246188      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:09.246918      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:09.575: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:10.247258      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:11.248506      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:11.584: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:12.248394      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:13.249314      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:13.596: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:14.249761      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:15.250297      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:15.604: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:16.250995      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:17.251757      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:17.612: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:18.252119      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:19.253588      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:19.629: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:20.253006      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:21.254128      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:21.638: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:22.254327      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:23.254662      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:23.662: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:24.255888      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:25.255934      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:25.674: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:26.255844      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:27.256477      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:27.684: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:28.257439      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:29.258168      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:29.693: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:30.258374      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:31.259553      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:31.704: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:32.260459      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:33.261158      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:33.716: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:34.261437      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:35.261589      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:35.726: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:36.262623      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:37.262893      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:37.739: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:38.263307      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:39.263462      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:39.747: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  E0415 07:53:40.264633      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:41.264638      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:41.758: INFO: Get pod liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 in namespace container-probe-6772
  Apr 15 07:53:41.758: INFO: Restart count of pod container-probe-6772/liveness-e639fd8d-6a0a-4b3c-a2be-8c9eb828dd22 is now 5 (2m22.768483918s elapsed)
  Apr 15 07:53:41.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/15/24 07:53:41.772
  STEP: Destroying namespace "container-probe-6772" for this suite. @ 04/15/24 07:53:41.806
• [144.912 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 04/15/24 07:53:41.827
  Apr 15 07:53:41.827: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 07:53:41.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:53:41.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:53:41.88
  STEP: creating the pod @ 04/15/24 07:53:41.885
  STEP: waiting for pod running @ 04/15/24 07:53:41.906
  E0415 07:53:42.265468      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:43.266233      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 04/15/24 07:53:43.923
  Apr 15 07:53:43.931: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1832 PodName:var-expansion-08a371ea-4aeb-48e0-bd09-1e63b020deb9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:53:43.931: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:53:43.932: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:53:43.933: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-1832/pods/var-expansion-08a371ea-4aeb-48e0-bd09-1e63b020deb9/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/15/24 07:53:44.057
  Apr 15 07:53:44.066: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1832 PodName:var-expansion-08a371ea-4aeb-48e0-bd09-1e63b020deb9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:53:44.067: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:53:44.068: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:53:44.068: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-1832/pods/var-expansion-08a371ea-4aeb-48e0-bd09-1e63b020deb9/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/15/24 07:53:44.182
  E0415 07:53:44.266696      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:53:44.709: INFO: Successfully updated pod "var-expansion-08a371ea-4aeb-48e0-bd09-1e63b020deb9"
  STEP: waiting for annotated pod running @ 04/15/24 07:53:44.712
  STEP: deleting the pod gracefully @ 04/15/24 07:53:44.718
  Apr 15 07:53:44.718: INFO: Deleting pod "var-expansion-08a371ea-4aeb-48e0-bd09-1e63b020deb9" in namespace "var-expansion-1832"
  Apr 15 07:53:44.734: INFO: Wait up to 5m0s for pod "var-expansion-08a371ea-4aeb-48e0-bd09-1e63b020deb9" to be fully deleted
  E0415 07:53:45.267306      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:46.267698      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:47.269089      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:48.269866      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:49.270005      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:50.270938      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:51.271748      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:52.272741      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:53.272750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:54.273012      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:55.273201      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:56.274009      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:57.274232      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:58.274281      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:53:59.275055      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:00.275227      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:01.276104      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:02.276147      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:03.276885      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:04.277759      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:05.278555      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:06.278913      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:07.279168      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:08.279253      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:09.280084      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:10.280518      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:11.281382      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:12.281593      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:13.282784      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:14.283327      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:15.283559      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:16.284268      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:54:16.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1832" for this suite. @ 04/15/24 07:54:16.897
• [35.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 04/15/24 07:54:16.915
  Apr 15 07:54:16.915: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:54:16.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:54:16.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:54:16.961
  STEP: Creating the pod @ 04/15/24 07:54:16.967
  E0415 07:54:17.285017      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:18.285538      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:19.286286      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:54:19.586: INFO: Successfully updated pod "annotationupdate8ea0ba54-2d59-48b0-9845-6be7cdab12de"
  E0415 07:54:20.287221      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:21.287283      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:54:21.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4192" for this suite. @ 04/15/24 07:54:21.645
• [4.754 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 04/15/24 07:54:21.671
  Apr 15 07:54:21.671: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 07:54:21.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:54:21.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:54:21.734
  STEP: Creating configMap with name configmap-test-volume-3c844193-a73b-48ba-952c-4ef9dc6489a0 @ 04/15/24 07:54:21.744
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:54:21.76
  E0415 07:54:22.287424      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:23.287901      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:24.288083      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:25.288713      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:54:25.831
  Apr 15 07:54:25.840: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-configmaps-60b0b4e0-65d2-4563-aebb-2dd52d65d5e5 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:54:25.856
  Apr 15 07:54:25.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2816" for this suite. @ 04/15/24 07:54:25.907
• [4.254 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 04/15/24 07:54:25.926
  Apr 15 07:54:25.926: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 07:54:25.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:54:25.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:54:25.975
  STEP: Creating a test namespace @ 04/15/24 07:54:25.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:54:26.017
  STEP: Creating a pod in the namespace @ 04/15/24 07:54:26.028
  STEP: Waiting for the pod to have running status @ 04/15/24 07:54:26.049
  E0415 07:54:26.289491      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:27.304696      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 04/15/24 07:54:28.088
  STEP: Waiting for the namespace to be removed. @ 04/15/24 07:54:28.103
  E0415 07:54:28.293604      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:29.294265      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:30.294456      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:31.295248      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:32.296160      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:33.297296      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:34.299280      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:35.299241      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:36.299285      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:37.299661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:38.300601      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:39.301060      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/15/24 07:54:40.117
  STEP: Verifying there are no pods in the namespace @ 04/15/24 07:54:40.189
  Apr 15 07:54:40.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6009" for this suite. @ 04/15/24 07:54:40.215
  STEP: Destroying namespace "nsdeletetest-4459" for this suite. @ 04/15/24 07:54:40.234
  Apr 15 07:54:40.241: INFO: Namespace nsdeletetest-4459 was already deleted
  STEP: Destroying namespace "nsdeletetest-671" for this suite. @ 04/15/24 07:54:40.242
• [14.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 04/15/24 07:54:40.275
  Apr 15 07:54:40.276: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 07:54:40.282
  E0415 07:54:40.301057      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:54:40.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:54:40.328
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/15/24 07:54:40.336
  E0415 07:54:41.302306      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:42.303034      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 04/15/24 07:54:42.385
  STEP: Then the orphan pod is adopted @ 04/15/24 07:54:42.401
  E0415 07:54:43.303998      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 04/15/24 07:54:43.423
  Apr 15 07:54:43.432: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/15/24 07:54:43.46
  Apr 15 07:54:43.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8434" for this suite. @ 04/15/24 07:54:43.498
• [3.239 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 04/15/24 07:54:43.516
  Apr 15 07:54:43.516: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:54:43.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:54:43.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:54:43.594
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/15/24 07:54:43.6
  E0415 07:54:44.304358      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:45.304628      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:46.305596      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:47.306075      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:54:47.705
  Apr 15 07:54:47.712: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-608575ed-e375-472b-ae64-31877f385026 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:54:47.731
  Apr 15 07:54:47.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5643" for this suite. @ 04/15/24 07:54:47.775
• [4.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 04/15/24 07:54:47.806
  Apr 15 07:54:47.806: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:54:47.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:54:47.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:54:47.86
  STEP: Setting up server cert @ 04/15/24 07:54:47.936
  E0415 07:54:48.306869      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:54:48.571
  STEP: Deploying the webhook pod @ 04/15/24 07:54:48.595
  STEP: Wait for the deployment to be ready @ 04/15/24 07:54:48.63
  Apr 15 07:54:48.649: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0415 07:54:49.306940      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:50.307191      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:54:50.671
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:54:50.696
  E0415 07:54:51.307997      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:54:51.697: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/15/24 07:54:51.714
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 07:54:51.751
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/15/24 07:54:51.772
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 07:54:51.796
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/15/24 07:54:51.82
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/15/24 07:54:51.841
  Apr 15 07:54:51.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5682" for this suite. @ 04/15/24 07:54:52.009
  STEP: Destroying namespace "webhook-markers-9814" for this suite. @ 04/15/24 07:54:52.031
• [4.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/15/24 07:54:52.059
  Apr 15 07:54:52.060: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/15/24 07:54:52.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:54:52.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:54:52.112
  STEP: creating a target pod @ 04/15/24 07:54:52.124
  E0415 07:54:52.308064      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:53.308325      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/15/24 07:54:54.168
  E0415 07:54:54.308494      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:55.309012      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/15/24 07:54:56.227
  Apr 15 07:54:56.227: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1599 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 07:54:56.227: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:54:56.229: INFO: ExecWithOptions: Clientset creation
  Apr 15 07:54:56.229: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-1599/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  E0415 07:54:56.309577      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:54:56.325: INFO: Exec stderr: ""
  Apr 15 07:54:56.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1599" for this suite. @ 04/15/24 07:54:56.35
• [4.304 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 04/15/24 07:54:56.368
  Apr 15 07:54:56.368: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/15/24 07:54:56.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:54:56.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:54:56.418
  STEP: getting /apis @ 04/15/24 07:54:56.424
  STEP: getting /apis/storage.k8s.io @ 04/15/24 07:54:56.436
  STEP: getting /apis/storage.k8s.io/v1 @ 04/15/24 07:54:56.439
  STEP: creating @ 04/15/24 07:54:56.444
  STEP: watching @ 04/15/24 07:54:56.483
  Apr 15 07:54:56.483: INFO: starting watch
  STEP: getting @ 04/15/24 07:54:56.505
  STEP: listing in namespace @ 04/15/24 07:54:56.52
  STEP: listing across namespaces @ 04/15/24 07:54:56.528
  STEP: patching @ 04/15/24 07:54:56.536
  STEP: updating @ 04/15/24 07:54:56.552
  Apr 15 07:54:56.565: INFO: waiting for watch events with expected annotations in namespace
  Apr 15 07:54:56.566: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/15/24 07:54:56.566
  STEP: deleting a collection @ 04/15/24 07:54:56.622
  Apr 15 07:54:56.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-280" for this suite. @ 04/15/24 07:54:56.696
• [0.354 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 04/15/24 07:54:56.723
  Apr 15 07:54:56.723: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/15/24 07:54:56.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:54:56.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:54:56.787
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/15/24 07:54:56.807
  Apr 15 07:54:56.808: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:54:57.310066      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:54:58.310054      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:54:58.979: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 07:54:59.311172      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:00.311103      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:01.312062      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:02.312110      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:03.313267      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:04.314097      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:05.315110      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:06.315752      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:06.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6859" for this suite. @ 04/15/24 07:55:07.011
• [10.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/15/24 07:55:07.027
  Apr 15 07:55:07.027: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename deployment @ 04/15/24 07:55:07.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:55:07.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:55:07.081
  Apr 15 07:55:07.107: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0415 07:55:07.316580      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:08.317683      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:09.318175      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:10.318192      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:11.319022      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:12.116: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 07:55:12.116
  Apr 15 07:55:12.116: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0415 07:55:12.320189      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:13.321109      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:14.125: INFO: Creating deployment "test-rollover-deployment"
  Apr 15 07:55:14.144: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0415 07:55:14.321281      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:15.321607      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:16.158: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Apr 15 07:55:16.168: INFO: Ensure that both replica sets have 1 created replica
  Apr 15 07:55:16.183: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Apr 15 07:55:16.202: INFO: Updating deployment test-rollover-deployment
  Apr 15 07:55:16.203: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0415 07:55:16.323002      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:17.323182      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:18.228: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Apr 15 07:55:18.237: INFO: Make sure deployment "test-rollover-deployment" is complete
  Apr 15 07:55:18.247: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 07:55:18.248: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 55, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:55:18.323241      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:19.323755      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:20.264: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 07:55:20.264: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 55, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:55:20.324585      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:21.325082      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:22.262: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 07:55:22.263: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 55, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:55:22.325790      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:23.326168      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:24.264: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 07:55:24.265: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 55, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:55:24.326760      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:25.327036      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:26.265: INFO: all replica sets need to contain the pod-template-hash label
  Apr 15 07:55:26.265: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 7, 55, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 7, 55, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 07:55:26.327950      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:27.328247      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:28.261: INFO: 
  Apr 15 07:55:28.261: INFO: Ensure that both old replica sets have no replicas
  Apr 15 07:55:28.283: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6802",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb5daa61-51f3-4125-bcfb-543778cb8b29",
      ResourceVersion: (string) (len=6) "175968",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 07:55:28.292: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6802",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc57a9e9-c746-47a2-b41f-9a8ceb7bbd7c",
      ResourceVersion: (string) (len=6) "175958",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "bb5daa61-51f3-4125-bcfb-543778cb8b29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 62 35 64 61 61  36 31 2d 35 31 66 33 2d  |\"bb5daa61-51f3-|
              00000120  34 31 32 35 2d 62 63 66  62 2d 35 34 33 37 37 38  |4125-bcfb-543778|
              00000130  63 62 38 62 32 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cb8b29\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:55:28.308: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Apr 15 07:55:28.308: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6802",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "880ba997-03ac-4258-8b11-eca566473bff",
      ResourceVersion: (string) (len=6) "175967",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764507,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "bb5daa61-51f3-4125-bcfb-543778cb8b29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764507,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  62 62 35 64 61 61 36 31  2d 35 31 66 33 2d 34 31  |bb5daa61-51f3-41|
              000000c0  32 35 2d 62 63 66 62 2d  35 34 33 37 37 38 63 62  |25-bcfb-543778cb|
              000000d0  38 62 32 39 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |8b29\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:55:28.310: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6802",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "633cef2a-9a9b-4b61-a4b2-eaf9a91e383b",
      ResourceVersion: (string) (len=6) "175931",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "bb5daa61-51f3-4125-bcfb-543778cb8b29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 62 35 64 61 61  36 31 2d 35 31 66 33 2d  |\"bb5daa61-51f3-|
              00000120  34 31 32 35 2d 62 63 66  62 2d 35 34 33 37 37 38  |4125-bcfb-543778|
              00000130  63 62 38 62 32 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cb8b29\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 07:55:28.321: INFO: Pod "test-rollover-deployment-68774655d5-4kzkk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-4kzkk",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-6802",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "51a4f418-7c39-4bad-88a6-d55485378b35",
      ResourceVersion: (string) (len=6) "175939",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "dc57a9e9-c746-47a2-b41f-9a8ceb7bbd7c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 63  35 37 61 39 65 39 2d 63  |d\":\"dc57a9e9-c|
              00000090  37 34 36 2d 34 37 61 32  2d 62 34 31 66 2d 39 61  |746-47a2-b41f-9a|
              000000a0  38 63 65 62 37 62 62 64  37 63 5c 22 7d 22 3a 7b  |8ceb7bbd7c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 30 36 5c 22 7d  |10.233.66.106\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v9czn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v9czn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.252",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848764516,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://1c92ed5d5708ec781f5b15232ff614d2960835420f8ecd4ea2879a1d085e0ae4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 07:55:28.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 07:55:28.328440      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-6802" for this suite. @ 04/15/24 07:55:28.337
• [21.322 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 04/15/24 07:55:28.349
  Apr 15 07:55:28.349: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:55:28.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:55:28.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:55:28.388
  STEP: Setting up server cert @ 04/15/24 07:55:28.431
  E0415 07:55:29.329453      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:55:29.935
  STEP: Deploying the webhook pod @ 04/15/24 07:55:29.953
  STEP: Wait for the deployment to be ready @ 04/15/24 07:55:29.981
  Apr 15 07:55:30.009: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 07:55:30.330213      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:31.331295      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:55:32.042
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:55:32.067
  E0415 07:55:32.332117      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:33.067: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/15/24 07:55:33.083
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/15/24 07:55:33.13
  Apr 15 07:55:33.130: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 07:55:33.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2257" for this suite. @ 04/15/24 07:55:33.293
  STEP: Destroying namespace "webhook-markers-5321" for this suite. @ 04/15/24 07:55:33.306
• [4.969 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 04/15/24 07:55:33.32
  Apr 15 07:55:33.320: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:55:33.324
  E0415 07:55:33.333250      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:55:33.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:55:33.367
  STEP: Creating configMap with name projected-configmap-test-volume-256ce222-935a-4ec1-abd7-b01dd3edc613 @ 04/15/24 07:55:33.377
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:55:33.387
  E0415 07:55:34.333592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:35.334354      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:36.334032      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:37.334419      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:55:37.456
  Apr 15 07:55:37.462: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-projected-configmaps-6854b48d-7a46-4936-b8e1-ad93eb464451 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:55:37.48
  Apr 15 07:55:37.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2440" for this suite. @ 04/15/24 07:55:37.518
• [4.211 seconds]
------------------------------
SSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/15/24 07:55:37.533
  Apr 15 07:55:37.533: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename subjectreview @ 04/15/24 07:55:37.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:55:37.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:55:37.579
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7263" @ 04/15/24 07:55:37.595
  Apr 15 07:55:37.608: INFO: saUsername: "system:serviceaccount:subjectreview-7263:e2e"
  Apr 15 07:55:37.608: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7263"}
  Apr 15 07:55:37.608: INFO: saUID: "dff8458e-d245-495f-986d-f27604bf7599"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7263:e2e" @ 04/15/24 07:55:37.608
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7263:e2e" @ 04/15/24 07:55:37.609
  Apr 15 07:55:37.614: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7263:e2e" api 'list' configmaps in "subjectreview-7263" namespace @ 04/15/24 07:55:37.614
  Apr 15 07:55:37.618: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7263:e2e" @ 04/15/24 07:55:37.618
  Apr 15 07:55:37.622: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Apr 15 07:55:37.622: INFO: LocalSubjectAccessReview has been verified
  Apr 15 07:55:37.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7263" for this suite. @ 04/15/24 07:55:37.633
• [0.120 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/15/24 07:55:37.656
  Apr 15 07:55:37.656: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:55:37.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:55:37.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:55:37.708
  STEP: Creating projection with secret that has name projected-secret-test-abf3b2d7-a17c-421d-a6c8-89495b18a381 @ 04/15/24 07:55:37.714
  STEP: Creating a pod to test consume secrets @ 04/15/24 07:55:37.729
  E0415 07:55:38.335491      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:39.335532      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:55:39.764
  Apr 15 07:55:39.770: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-projected-secrets-57262185-bbed-45e8-aae5-408b8edb5a9d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:55:39.784
  Apr 15 07:55:39.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4718" for this suite. @ 04/15/24 07:55:39.828
• [2.183 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 04/15/24 07:55:39.84
  Apr 15 07:55:39.841: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 07:55:39.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:55:39.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:55:39.895
  STEP: Creating namespace "e2e-ns-r2bz9" @ 04/15/24 07:55:39.9
  Apr 15 07:55:39.937: INFO: Namespace "e2e-ns-r2bz9-9557" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-r2bz9-9557" @ 04/15/24 07:55:39.937
  Apr 15 07:55:39.963: INFO: Namespace "e2e-ns-r2bz9-9557" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-r2bz9-9557" @ 04/15/24 07:55:39.963
  Apr 15 07:55:39.982: INFO: Namespace "e2e-ns-r2bz9-9557" has []v1.FinalizerName{"kubernetes"}
  Apr 15 07:55:39.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8155" for this suite. @ 04/15/24 07:55:39.993
  STEP: Destroying namespace "e2e-ns-r2bz9-9557" for this suite. @ 04/15/24 07:55:40.006
• [0.185 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 04/15/24 07:55:40.027
  Apr 15 07:55:40.028: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:55:40.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:55:40.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:55:40.099
  STEP: Creating the pod @ 04/15/24 07:55:40.105
  E0415 07:55:40.335913      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:41.336332      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:42.337212      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:42.714: INFO: Successfully updated pod "annotationupdateab2a1b92-2f94-4957-81bf-db4ac37c894d"
  E0415 07:55:43.337715      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:44.338586      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:44.749: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3124" for this suite. @ 04/15/24 07:55:44.758
• [4.744 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 04/15/24 07:55:44.791
  Apr 15 07:55:44.791: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:55:44.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:55:44.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:55:44.84
  Apr 15 07:55:44.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8102 create -f -'
  E0415 07:55:45.339409      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:46.340140      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:46.371: INFO: stderr: ""
  Apr 15 07:55:46.371: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Apr 15 07:55:46.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8102 create -f -'
  Apr 15 07:55:47.063: INFO: stderr: ""
  Apr 15 07:55:47.063: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/15/24 07:55:47.063
  E0415 07:55:47.341373      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:48.073: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:55:48.074: INFO: Found 1 / 1
  Apr 15 07:55:48.074: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 15 07:55:48.081: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:55:48.081: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 15 07:55:48.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8102 describe pod agnhost-primary-nkpvw'
  Apr 15 07:55:48.313: INFO: stderr: ""
  Apr 15 07:55:48.313: INFO: stdout: "Name:             agnhost-primary-nkpvw\nNamespace:        kubectl-8102\nPriority:         0\nService Account:  default\nNode:             thuchow3cah4-3/192.168.121.252\nStart Time:       Mon, 15 Apr 2024 07:55:46 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.66.111\nIPs:\n  IP:           10.233.66.111\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://7552f1734e322ae8fad64d0a37ba2b7eee17504c8d0b73f9d28e5f7b47022686\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 15 Apr 2024 07:55:47 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-78r7w (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-78r7w:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-8102/agnhost-primary-nkpvw to thuchow3cah4-3\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Apr 15 07:55:48.314: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8102 describe rc agnhost-primary'
  E0415 07:55:48.341992      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:48.511: INFO: stderr: ""
  Apr 15 07:55:48.511: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8102\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-nkpvw\n"
  Apr 15 07:55:48.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8102 describe service agnhost-primary'
  Apr 15 07:55:48.696: INFO: stderr: ""
  Apr 15 07:55:48.696: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-8102\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.5.111\nIPs:               10.233.5.111\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.66.111:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Apr 15 07:55:48.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8102 describe node thuchow3cah4-1'
  Apr 15 07:55:48.925: INFO: stderr: ""
  Apr 15 07:55:48.925: INFO: stdout: "Name:               thuchow3cah4-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=thuchow3cah4-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"9a:7c:8a:17:c4:17\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.121.227\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 14 Apr 2024 14:55:03 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  thuchow3cah4-1\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 15 Apr 2024 07:55:48 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 15 Apr 2024 06:18:56 +0000   Mon, 15 Apr 2024 06:18:56 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Mon, 15 Apr 2024 07:51:18 +0000   Mon, 15 Apr 2024 06:09:00 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 15 Apr 2024 07:51:18 +0000   Mon, 15 Apr 2024 06:09:00 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 15 Apr 2024 07:51:18 +0000   Mon, 15 Apr 2024 06:09:00 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 15 Apr 2024 07:51:18 +0000   Mon, 15 Apr 2024 06:17:53 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.121.227\n  Hostname:    thuchow3cah4-1\nCapacity:\n  cpu:                2\n  ephemeral-storage:  115008636Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8123560Ki\n  pods:               110\nAllocatable:\n  cpu:                1600m\n  ephemeral-storage:  111880401014\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3273896Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 b7f9ad5ec3ba4226812f09393b3346b8\n  System UUID:                b7f9ad5e-c3ba-4226-812f-09393b3346b8\n  Boot ID:                    212cdfe9-afa4-4aed-bf86-848664ffbb9a\n  Kernel Version:             6.5.0-27-generic\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.28.4\n  Kubelet Version:            v1.28.8\n  Kube-Proxy Version:         v1.28.8\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-5dd5756b68-zq94h                                   100m (6%)     0 (0%)      70Mi (2%)        170Mi (5%)     97m\n  kube-system                 kube-addon-manager-thuchow3cah4-1                          5m (0%)       0 (0%)      50Mi (1%)        0 (0%)         97m\n  kube-system                 kube-apiserver-thuchow3cah4-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         96m\n  kube-system                 kube-controller-manager-thuchow3cah4-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         96m\n  kube-system                 kube-flannel-ds-df2kc                                      100m (6%)     0 (0%)      50Mi (1%)        0 (0%)         96m\n  kube-system                 kube-proxy-kr9dm                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         96m\n  kube-system                 kube-scheduler-thuchow3cah4-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         96m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-65e1bef5b81f4b1d-8qkc9    0 (0%)        0 (0%)      0 (0%)           0 (0%)         96m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                755m (47%)  0 (0%)\n  memory             170Mi (5%)  170Mi (5%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  Apr 15 07:55:48.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-8102 describe namespace kubectl-8102'
  Apr 15 07:55:49.091: INFO: stderr: ""
  Apr 15 07:55:49.091: INFO: stdout: "Name:         kubectl-8102\nLabels:       e2e-framework=kubectl\n              e2e-run=d013de23-84f9-4d57-a303-6d8e87369628\n              kubernetes.io/metadata.name=kubectl-8102\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Apr 15 07:55:49.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8102" for this suite. @ 04/15/24 07:55:49.102
• [4.326 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 04/15/24 07:55:49.118
  Apr 15 07:55:49.118: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename svcaccounts @ 04/15/24 07:55:49.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:55:49.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:55:49.166
  E0415 07:55:49.342909      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:50.343639      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 04/15/24 07:55:51.213
  Apr 15 07:55:51.214: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3017 pod-service-account-b9acb6e9-c136-43e2-8620-13a13487e812 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  E0415 07:55:51.344394      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 04/15/24 07:55:51.53
  Apr 15 07:55:51.531: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3017 pod-service-account-b9acb6e9-c136-43e2-8620-13a13487e812 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/15/24 07:55:51.816
  Apr 15 07:55:51.817: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-3017 pod-service-account-b9acb6e9-c136-43e2-8620-13a13487e812 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Apr 15 07:55:52.122: INFO: Got root ca configmap in namespace "svcaccounts-3017"
  Apr 15 07:55:52.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3017" for this suite. @ 04/15/24 07:55:52.141
• [3.041 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 04/15/24 07:55:52.16
  Apr 15 07:55:52.160: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:55:52.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:55:52.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:55:52.237
  STEP: validating cluster-info @ 04/15/24 07:55:52.242
  Apr 15 07:55:52.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-5541 cluster-info'
  E0415 07:55:52.344964      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:55:52.397: INFO: stderr: ""
  Apr 15 07:55:52.397: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Apr 15 07:55:52.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5541" for this suite. @ 04/15/24 07:55:52.409
• [0.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 04/15/24 07:55:52.43
  Apr 15 07:55:52.430: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/15/24 07:55:52.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:55:52.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:55:52.477
  STEP: create the container to handle the HTTPGet hook request. @ 04/15/24 07:55:52.496
  E0415 07:55:53.346077      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:54.346037      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/15/24 07:55:54.553
  E0415 07:55:55.346308      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:56.347012      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/15/24 07:55:56.599
  E0415 07:55:57.351208      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:58.347944      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:55:59.348298      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:00.349790      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/15/24 07:56:00.655
  Apr 15 07:56:00.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2242" for this suite. @ 04/15/24 07:56:00.72
• [8.304 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 04/15/24 07:56:00.737
  Apr 15 07:56:00.738: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:56:00.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:56:00.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:56:00.779
  STEP: Setting up server cert @ 04/15/24 07:56:00.823
  E0415 07:56:01.350624      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:56:02.121
  STEP: Deploying the webhook pod @ 04/15/24 07:56:02.142
  STEP: Wait for the deployment to be ready @ 04/15/24 07:56:02.174
  Apr 15 07:56:02.190: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 07:56:02.351399      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:03.352241      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:56:04.233
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:56:04.264
  E0415 07:56:04.352844      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:05.265: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/15/24 07:56:05.282
  STEP: create a namespace for the webhook @ 04/15/24 07:56:05.321
  E0415 07:56:05.353053      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/15/24 07:56:05.361
  Apr 15 07:56:05.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8956" for this suite. @ 04/15/24 07:56:05.551
  STEP: Destroying namespace "webhook-markers-6315" for this suite. @ 04/15/24 07:56:05.573
  STEP: Destroying namespace "fail-closed-namespace-5948" for this suite. @ 04/15/24 07:56:05.591
• [4.878 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 04/15/24 07:56:05.616
  Apr 15 07:56:05.616: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:56:05.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:56:05.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:56:05.66
  STEP: Creating a pod to test downward API volume plugin @ 04/15/24 07:56:05.664
  E0415 07:56:06.363480      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:07.357779      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:08.357806      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:09.358413      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:56:09.726
  Apr 15 07:56:09.732: INFO: Trying to get logs from node thuchow3cah4-3 pod downwardapi-volume-3d1639df-3313-42d9-84db-f5e552fdeb6b container client-container: <nil>
  STEP: delete the pod @ 04/15/24 07:56:09.746
  Apr 15 07:56:09.780: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3885" for this suite. @ 04/15/24 07:56:09.792
• [4.192 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 04/15/24 07:56:09.809
  Apr 15 07:56:09.810: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename configmap @ 04/15/24 07:56:09.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:56:09.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:56:09.861
  STEP: Creating configMap with name configmap-test-volume-map-6a5be5a5-1cba-45b7-afc7-25288f017850 @ 04/15/24 07:56:09.867
  STEP: Creating a pod to test consume configMaps @ 04/15/24 07:56:09.881
  E0415 07:56:10.363307      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:11.362747      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:56:11.937
  Apr 15 07:56:11.946: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-configmaps-2369d858-d1ca-4ba4-9a91-e0fd4502bc94 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:56:11.961
  Apr 15 07:56:11.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3158" for this suite. @ 04/15/24 07:56:12.008
• [2.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/15/24 07:56:12.036
  Apr 15 07:56:12.037: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 07:56:12.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:56:12.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:56:12.088
  STEP: Creating configMap with name configmap-projected-all-test-volume-302e587a-61c5-4319-bd0a-55bdbab2f155 @ 04/15/24 07:56:12.101
  STEP: Creating secret with name secret-projected-all-test-volume-672f315f-3c77-47be-839c-669bde37063a @ 04/15/24 07:56:12.111
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/15/24 07:56:12.123
  E0415 07:56:12.363727      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:13.363801      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:14.364976      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:15.365338      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:56:16.187
  Apr 15 07:56:16.215: INFO: Trying to get logs from node thuchow3cah4-3 pod projected-volume-d148ce5c-f711-4c1b-bf45-1968c85408be container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 07:56:16.242
  Apr 15 07:56:16.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2364" for this suite. @ 04/15/24 07:56:16.284
• [4.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 04/15/24 07:56:16.31
  Apr 15 07:56:16.310: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 07:56:16.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:56:16.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:56:16.363
  E0415 07:56:16.365066      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test env composition @ 04/15/24 07:56:16.37
  E0415 07:56:17.365298      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:18.365681      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:19.365850      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:20.366752      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:56:20.424
  Apr 15 07:56:20.430: INFO: Trying to get logs from node thuchow3cah4-3 pod var-expansion-2baff99b-e97c-46d8-809a-7d1b026df3d4 container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 07:56:20.446
  Apr 15 07:56:20.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4766" for this suite. @ 04/15/24 07:56:20.487
• [4.189 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 04/15/24 07:56:20.503
  Apr 15 07:56:20.503: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename replicaset @ 04/15/24 07:56:20.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:56:20.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:56:20.55
  STEP: Create a Replicaset @ 04/15/24 07:56:20.559
  STEP: Verify that the required pods have come up. @ 04/15/24 07:56:20.572
  Apr 15 07:56:20.582: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0415 07:56:21.367511      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:22.367564      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:23.368090      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:24.368253      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:25.368296      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:25.595: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 07:56:25.596
  STEP: Getting /status @ 04/15/24 07:56:25.596
  Apr 15 07:56:25.611: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/15/24 07:56:25.612
  Apr 15 07:56:25.635: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/15/24 07:56:25.635
  Apr 15 07:56:25.640: INFO: Observed &ReplicaSet event: ADDED
  Apr 15 07:56:25.641: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:56:25.643: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:56:25.644: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:56:25.645: INFO: Found replicaset test-rs in namespace replicaset-9187 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 15 07:56:25.645: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/15/24 07:56:25.647
  Apr 15 07:56:25.647: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 15 07:56:25.679: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/15/24 07:56:25.679
  Apr 15 07:56:25.691: INFO: Observed &ReplicaSet event: ADDED
  Apr 15 07:56:25.692: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:56:25.692: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:56:25.693: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:56:25.693: INFO: Observed replicaset test-rs in namespace replicaset-9187 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 07:56:25.693: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 15 07:56:25.693: INFO: Found replicaset test-rs in namespace replicaset-9187 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Apr 15 07:56:25.694: INFO: Replicaset test-rs has a patched status
  Apr 15 07:56:25.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9187" for this suite. @ 04/15/24 07:56:25.703
• [5.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 04/15/24 07:56:25.739
  Apr 15 07:56:25.739: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:56:25.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:56:25.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:56:25.79
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/15/24 07:56:25.809
  E0415 07:56:26.369584      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:27.370223      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:28.371241      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:29.372251      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:56:29.852
  Apr 15 07:56:29.860: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-97ad15ba-5167-475d-a7c4-8688fa6fedf1 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:56:29.875
  Apr 15 07:56:29.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5519" for this suite. @ 04/15/24 07:56:29.924
• [4.203 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 04/15/24 07:56:29.942
  Apr 15 07:56:29.942: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:56:29.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:56:29.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:56:29.986
  STEP: Creating a pod to test downward api env vars @ 04/15/24 07:56:29.992
  E0415 07:56:30.373119      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:31.373988      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:32.375108      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:33.375357      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:56:34.041
  Apr 15 07:56:34.047: INFO: Trying to get logs from node thuchow3cah4-3 pod downward-api-6309da9d-7390-4039-9ba9-f66b1cb72f1a container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 07:56:34.064
  Apr 15 07:56:34.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4659" for this suite. @ 04/15/24 07:56:34.108
• [4.189 seconds]
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 04/15/24 07:56:34.132
  Apr 15 07:56:34.132: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 07:56:34.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:56:34.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:56:34.173
  STEP: creating service nodeport-test with type=NodePort in namespace services-7403 @ 04/15/24 07:56:34.179
  STEP: creating replication controller nodeport-test in namespace services-7403 @ 04/15/24 07:56:34.203
  I0415 07:56:34.222726      15 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-7403, replica count: 2
  E0415 07:56:34.376123      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:35.377006      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:36.378404      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 07:56:37.274204      15 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 15 07:56:37.274: INFO: Creating new exec pod
  E0415 07:56:37.379109      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:38.379376      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:39.380351      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:40.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7403 exec execpodzsknf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0415 07:56:40.380855      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:40.711: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Apr 15 07:56:40.711: INFO: stdout: "nodeport-test-vtdb4"
  Apr 15 07:56:40.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7403 exec execpodzsknf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.162 80'
  Apr 15 07:56:40.969: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.27.162 80\nConnection to 10.233.27.162 80 port [tcp/http] succeeded!\n"
  Apr 15 07:56:40.969: INFO: stdout: "nodeport-test-vtdb4"
  Apr 15 07:56:40.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7403 exec execpodzsknf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.227 31943'
  Apr 15 07:56:41.252: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.227 31943\nConnection to 192.168.121.227 31943 port [tcp/*] succeeded!\n"
  Apr 15 07:56:41.252: INFO: stdout: "nodeport-test-vtdb4"
  Apr 15 07:56:41.252: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7403 exec execpodzsknf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.217 31943'
  E0415 07:56:41.381650      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:41.536: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.217 31943\nConnection to 192.168.121.217 31943 port [tcp/*] succeeded!\n"
  Apr 15 07:56:41.536: INFO: stdout: ""
  E0415 07:56:42.381988      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:42.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7403 exec execpodzsknf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.217 31943'
  Apr 15 07:56:42.817: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.217 31943\nConnection to 192.168.121.217 31943 port [tcp/*] succeeded!\n"
  Apr 15 07:56:42.817: INFO: stdout: ""
  E0415 07:56:43.382076      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:43.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-7403 exec execpodzsknf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.217 31943'
  Apr 15 07:56:43.910: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.217 31943\nConnection to 192.168.121.217 31943 port [tcp/*] succeeded!\n"
  Apr 15 07:56:43.910: INFO: stdout: "nodeport-test-2nxkk"
  Apr 15 07:56:43.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7403" for this suite. @ 04/15/24 07:56:43.927
• [9.818 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 04/15/24 07:56:43.952
  Apr 15 07:56:43.952: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename disruption @ 04/15/24 07:56:43.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:56:43.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:56:44.006
  STEP: Waiting for the pdb to be processed @ 04/15/24 07:56:44.029
  STEP: Updating PodDisruptionBudget status @ 04/15/24 07:56:44.042
  STEP: Waiting for all pods to be running @ 04/15/24 07:56:44.064
  Apr 15 07:56:44.077: INFO: running pods: 0 < 1
  E0415 07:56:44.383206      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:45.384085      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/15/24 07:56:46.089
  STEP: Waiting for the pdb to be processed @ 04/15/24 07:56:46.128
  STEP: Patching PodDisruptionBudget status @ 04/15/24 07:56:46.149
  STEP: Waiting for the pdb to be processed @ 04/15/24 07:56:46.173
  Apr 15 07:56:46.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9402" for this suite. @ 04/15/24 07:56:46.204
• [2.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 04/15/24 07:56:46.234
  Apr 15 07:56:46.234: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename downward-api @ 04/15/24 07:56:46.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:56:46.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:56:46.28
  STEP: Creating a pod to test downward api env vars @ 04/15/24 07:56:46.286
  E0415 07:56:46.385287      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:47.386184      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:48.386557      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:49.386720      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:56:50.343
  Apr 15 07:56:50.353: INFO: Trying to get logs from node thuchow3cah4-3 pod downward-api-0839750d-db57-4803-a1d8-bfe3e0f3e72c container dapi-container: <nil>
  STEP: delete the pod @ 04/15/24 07:56:50.371
  E0415 07:56:50.387460      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:50.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9863" for this suite. @ 04/15/24 07:56:50.436
• [4.217 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 04/15/24 07:56:50.452
  Apr 15 07:56:50.452: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/15/24 07:56:50.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:56:50.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:56:50.508
  STEP: create the container to handle the HTTPGet hook request. @ 04/15/24 07:56:50.546
  E0415 07:56:51.388281      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:52.388600      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/15/24 07:56:52.674
  E0415 07:56:53.389413      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:54.390196      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/15/24 07:56:54.765
  STEP: delete the pod with lifecycle hook @ 04/15/24 07:56:54.784
  E0415 07:56:55.390850      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:56:56.391681      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:56.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4075" for this suite. @ 04/15/24 07:56:56.835
• [6.401 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 04/15/24 07:56:56.858
  Apr 15 07:56:56.858: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename kubectl @ 04/15/24 07:56:56.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:56:56.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:56:56.917
  STEP: creating Agnhost RC @ 04/15/24 07:56:56.925
  Apr 15 07:56:56.925: INFO: namespace kubectl-4065
  Apr 15 07:56:56.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-4065 create -f -'
  E0415 07:56:57.391794      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:57.482: INFO: stderr: ""
  Apr 15 07:56:57.482: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/15/24 07:56:57.482
  E0415 07:56:58.392043      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:58.494: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:56:58.494: INFO: Found 0 / 1
  E0415 07:56:59.392143      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:56:59.494: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:56:59.494: INFO: Found 1 / 1
  Apr 15 07:56:59.495: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 15 07:56:59.504: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 15 07:56:59.504: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 15 07:56:59.504: INFO: wait on agnhost-primary startup in kubectl-4065 
  Apr 15 07:56:59.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-4065 logs agnhost-primary-ccdrq agnhost-primary'
  Apr 15 07:56:59.798: INFO: stderr: ""
  Apr 15 07:56:59.798: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 04/15/24 07:56:59.799
  Apr 15 07:56:59.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-4065 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Apr 15 07:57:00.054: INFO: stderr: ""
  Apr 15 07:57:00.054: INFO: stdout: "service/rm2 exposed\n"
  Apr 15 07:57:00.067: INFO: Service rm2 in namespace kubectl-4065 found.
  E0415 07:57:00.392443      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:01.392549      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 04/15/24 07:57:02.085
  Apr 15 07:57:02.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=kubectl-4065 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  E0415 07:57:02.392716      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:57:02.556: INFO: stderr: ""
  Apr 15 07:57:02.557: INFO: stdout: "service/rm3 exposed\n"
  Apr 15 07:57:02.586: INFO: Service rm3 in namespace kubectl-4065 found.
  E0415 07:57:03.393174      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:04.393806      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:57:04.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4065" for this suite. @ 04/15/24 07:57:04.621
• [7.783 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/15/24 07:57:04.641
  Apr 15 07:57:04.642: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/15/24 07:57:04.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:04.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:04.699
  STEP: mirroring a new custom Endpoint @ 04/15/24 07:57:04.73
  Apr 15 07:57:04.752: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0415 07:57:05.394492      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:06.395172      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 04/15/24 07:57:06.764
  STEP: mirroring deletion of a custom Endpoint @ 04/15/24 07:57:06.798
  Apr 15 07:57:06.848: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0415 07:57:07.395204      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:08.395527      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:57:08.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-4176" for this suite. @ 04/15/24 07:57:08.873
• [4.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 04/15/24 07:57:08.899
  Apr 15 07:57:08.899: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename namespaces @ 04/15/24 07:57:08.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:08.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:08.96
  STEP: Updating Namespace "namespaces-284" @ 04/15/24 07:57:08.97
  Apr 15 07:57:08.991: INFO: Namespace "namespaces-284" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"d013de23-84f9-4d57-a303-6d8e87369628", "kubernetes.io/metadata.name":"namespaces-284", "namespaces-284":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Apr 15 07:57:08.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-284" for this suite. @ 04/15/24 07:57:09.015
• [0.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 04/15/24 07:57:09.054
  Apr 15 07:57:09.054: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename var-expansion @ 04/15/24 07:57:09.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:09.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:09.114
  E0415 07:57:09.396104      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:10.395985      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:57:11.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 15 07:57:11.192: INFO: Deleting pod "var-expansion-7c686ae7-862d-440b-a9a1-5824ccc6f616" in namespace "var-expansion-8638"
  Apr 15 07:57:11.207: INFO: Wait up to 5m0s for pod "var-expansion-7c686ae7-862d-440b-a9a1-5824ccc6f616" to be fully deleted
  E0415 07:57:11.396768      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:12.397139      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-8638" for this suite. @ 04/15/24 07:57:13.226
• [4.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 04/15/24 07:57:13.257
  Apr 15 07:57:13.257: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 07:57:13.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:13.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:13.331
  E0415 07:57:13.397221      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 04/15/24 07:57:13.403
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 07:57:14.174
  STEP: Deploying the webhook pod @ 04/15/24 07:57:14.193
  STEP: Wait for the deployment to be ready @ 04/15/24 07:57:14.234
  Apr 15 07:57:14.260: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0415 07:57:14.398985      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:15.398899      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 07:57:16.295
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 07:57:16.32
  E0415 07:57:16.398808      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:57:17.321: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0415 07:57:17.399434      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 04/15/24 07:57:17.486
  STEP: Creating a configMap that should be mutated @ 04/15/24 07:57:17.533
  STEP: Deleting the collection of validation webhooks @ 04/15/24 07:57:17.647
  STEP: Creating a configMap that should not be mutated @ 04/15/24 07:57:17.843
  Apr 15 07:57:17.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-275" for this suite. @ 04/15/24 07:57:17.985
  STEP: Destroying namespace "webhook-markers-8447" for this suite. @ 04/15/24 07:57:18.005
• [4.772 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/15/24 07:57:18.035
  Apr 15 07:57:18.035: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pods @ 04/15/24 07:57:18.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:18.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:18.109
  STEP: creating the pod @ 04/15/24 07:57:18.117
  STEP: setting up watch @ 04/15/24 07:57:18.118
  STEP: submitting the pod to kubernetes @ 04/15/24 07:57:18.23
  STEP: verifying the pod is in kubernetes @ 04/15/24 07:57:18.252
  STEP: verifying pod creation was observed @ 04/15/24 07:57:18.262
  E0415 07:57:18.400020      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:19.400581      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/15/24 07:57:20.297
  STEP: verifying pod deletion was observed @ 04/15/24 07:57:20.323
  E0415 07:57:20.400483      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:21.401072      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:57:21.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7430" for this suite. @ 04/15/24 07:57:21.476
• [3.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 04/15/24 07:57:21.5
  Apr 15 07:57:21.500: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename containers @ 04/15/24 07:57:21.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:21.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:21.552
  STEP: Creating a pod to test override all @ 04/15/24 07:57:21.558
  E0415 07:57:22.401841      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:23.402134      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:24.402339      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:25.403089      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:57:25.628
  Apr 15 07:57:25.636: INFO: Trying to get logs from node thuchow3cah4-3 pod client-containers-3cfa350c-8b05-48b1-9d10-00d0550a74d7 container agnhost-container: <nil>
  STEP: delete the pod @ 04/15/24 07:57:25.651
  Apr 15 07:57:25.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5834" for this suite. @ 04/15/24 07:57:25.693
• [4.211 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 04/15/24 07:57:25.714
  Apr 15 07:57:25.714: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:57:25.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:25.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:25.763
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/15/24 07:57:25.77
  E0415 07:57:26.403165      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:27.403726      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:28.403833      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:29.404734      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:57:29.828
  Apr 15 07:57:29.843: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-8d2899fd-760f-4830-bc47-3333825cb018 container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:57:29.857
  Apr 15 07:57:29.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-276" for this suite. @ 04/15/24 07:57:29.914
• [4.220 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 04/15/24 07:57:29.936
  Apr 15 07:57:29.936: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename container-probe @ 04/15/24 07:57:29.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:57:29.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:57:29.981
  E0415 07:57:30.405746      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:31.405753      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:32.406677      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:33.407598      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:34.407851      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:35.409007      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:36.408987      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:37.409159      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:38.409455      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:39.410217      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:40.410218      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:41.410364      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:42.410426      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:43.411289      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:44.412603      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:45.413035      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:46.413377      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:47.414323      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:48.414796      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:49.415083      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:50.415937      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:51.416866      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:52.418130      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:53.419089      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:54.419644      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:55.420561      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:56.421273      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:57.421869      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:58.422272      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:57:59.423418      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:00.424127      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:01.423976      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:02.424650      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:03.425129      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:04.425517      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:05.426016      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:06.426109      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:07.426661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:08.427016      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:09.427211      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:10.430511      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:11.429355      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:12.429533      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:13.429721      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:14.430060      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:15.430926      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:16.431377      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:17.431673      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:18.431932      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:19.432198      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:20.432504      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:21.432783      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:22.432959      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:23.433308      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:24.433250      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:25.433448      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:26.433876      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:27.434218      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:28.434453      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:29.434719      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:30.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9937" for this suite. @ 04/15/24 07:58:30.028
• [60.108 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 04/15/24 07:58:30.046
  Apr 15 07:58:30.046: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename emptydir @ 04/15/24 07:58:30.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:30.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:30.109
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/15/24 07:58:30.116
  E0415 07:58:30.435943      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:31.436078      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:32.437003      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:33.437286      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 07:58:34.166
  Apr 15 07:58:34.174: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-6a7c146e-b6cd-4c97-8379-146d9f001d5d container test-container: <nil>
  STEP: delete the pod @ 04/15/24 07:58:34.193
  Apr 15 07:58:34.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4749" for this suite. @ 04/15/24 07:58:34.235
• [4.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 04/15/24 07:58:34.265
  Apr 15 07:58:34.265: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename services @ 04/15/24 07:58:34.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:34.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:34.314
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-5763 @ 04/15/24 07:58:34.322
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/15/24 07:58:34.372
  STEP: creating service externalsvc in namespace services-5763 @ 04/15/24 07:58:34.373
  STEP: creating replication controller externalsvc in namespace services-5763 @ 04/15/24 07:58:34.403
  I0415 07:58:34.421251      15 runners.go:197] Created replication controller with name: externalsvc, namespace: services-5763, replica count: 2
  E0415 07:58:34.438097      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:35.438689      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:36.439425      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:37.439768      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0415 07:58:37.473787      15 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/15/24 07:58:37.483
  Apr 15 07:58:37.524: INFO: Creating new exec pod
  E0415 07:58:38.439749      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:39.439915      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:39.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1462319970 --namespace=services-5763 exec execpodzsf7v -- /bin/sh -x -c nslookup nodeport-service.services-5763.svc.cluster.local'
  Apr 15 07:58:40.002: INFO: stderr: "+ nslookup nodeport-service.services-5763.svc.cluster.local\n"
  Apr 15 07:58:40.002: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-5763.svc.cluster.local\tcanonical name = externalsvc.services-5763.svc.cluster.local.\nName:\texternalsvc.services-5763.svc.cluster.local\nAddress: 10.233.57.189\n\n"
  Apr 15 07:58:40.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-5763, will wait for the garbage collector to delete the pods @ 04/15/24 07:58:40.015
  Apr 15 07:58:40.093: INFO: Deleting ReplicationController externalsvc took: 17.280855ms
  Apr 15 07:58:40.194: INFO: Terminating ReplicationController externalsvc pods took: 101.411255ms
  E0415 07:58:40.440206      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:41.441003      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:42.441331      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 07:58:43.262: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-5763" for this suite. @ 04/15/24 07:58:43.303
• [9.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/15/24 07:58:43.327
  Apr 15 07:58:43.327: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename secrets @ 04/15/24 07:58:43.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 07:58:43.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 07:58:43.424
  E0415 07:58:43.442562      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating secret with name s-test-opt-del-5a25bddd-8eb4-46b0-8ed1-db541cef1a62 @ 04/15/24 07:58:43.443
  STEP: Creating secret with name s-test-opt-upd-52e1e5e5-53f7-46d0-a3c8-e8c937f1304a @ 04/15/24 07:58:43.454
  STEP: Creating the pod @ 04/15/24 07:58:43.463
  E0415 07:58:44.442742      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:45.443120      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-5a25bddd-8eb4-46b0-8ed1-db541cef1a62 @ 04/15/24 07:58:45.554
  STEP: Updating secret s-test-opt-upd-52e1e5e5-53f7-46d0-a3c8-e8c937f1304a @ 04/15/24 07:58:45.567
  STEP: Creating secret with name s-test-opt-create-dbf1b123-c9aa-4dfe-8325-ca1032f47d9b @ 04/15/24 07:58:45.58
  STEP: waiting to observe update in volume @ 04/15/24 07:58:45.592
  E0415 07:58:46.444369      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:47.444378      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:48.445486      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:49.446618      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:50.447494      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:51.448384      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:52.449825      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:53.449970      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:54.450123      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:55.450554      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:56.451044      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:57.451299      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:58.451470      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:58:59.452259      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:00.453154      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:01.454371      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:02.455089      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:03.455708      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:04.456672      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:05.457536      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:06.458140      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:07.458832      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:08.459361      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:09.459829      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:10.459881      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:11.460218      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:12.460602      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:13.461697      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:14.462694      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:15.462887      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:16.463977      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:17.465388      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:18.465402      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:19.465694      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:20.466092      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:21.466482      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:22.467506      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:23.467838      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:24.468079      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:25.468646      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:26.469013      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:27.469750      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:28.469791      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:29.470640      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:30.471749      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:31.471881      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:32.472899      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:33.473576      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:34.473712      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:35.474173      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:36.474544      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:37.474783      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:38.474849      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:39.475115      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:40.475592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:41.476074      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:42.476968      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:43.477659      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:44.478380      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:45.478999      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:46.479125      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:47.479519      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:48.479800      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:49.480463      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:50.481146      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:51.481375      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:52.481844      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:53.482098      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:54.483027      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:55.483309      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:56.483788      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:57.484172      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:58.484964      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 07:59:59.485145      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:00.486138      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:01.487211      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:02.488514      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:03.487877      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:04.488219      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:05.488414      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:06.489181      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:07.489287      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:08.489610      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:09.489751      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:10.490752      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:11.490987      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:12.491731      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:13.491971      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:14.492163      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:15.492427      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:16.493592      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:16.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1674" for this suite. @ 04/15/24 08:00:16.719
• [93.411 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 04/15/24 08:00:16.74
  Apr 15 08:00:16.741: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:00:16.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:16.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:16.79
  STEP: Setting up server cert @ 04/15/24 08:00:16.847
  E0415 08:00:17.498406      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:18.495043      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:00:18.542
  STEP: Deploying the webhook pod @ 04/15/24 08:00:18.567
  STEP: Wait for the deployment to be ready @ 04/15/24 08:00:18.6
  Apr 15 08:00:18.616: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0415 08:00:19.495967      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:20.495661      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:20.660: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:21.496807      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:22.497515      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:22.669: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:23.498063      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:24.498899      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:24.672: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:25.498914      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:26.499289      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:26.670: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:27.499519      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:28.499715      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:28.669: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:29.499966      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:30.500249      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 08:00:30.669
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:00:30.691
  E0415 08:00:31.500299      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:31.692: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/15/24 08:00:31.711
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/15/24 08:00:31.77
  STEP: Creating a configMap that should not be mutated @ 04/15/24 08:00:31.785
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/15/24 08:00:31.812
  STEP: Creating a configMap that should be mutated @ 04/15/24 08:00:31.828
  Apr 15 08:00:31.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7607" for this suite. @ 04/15/24 08:00:32.009
  STEP: Destroying namespace "webhook-markers-3233" for this suite. @ 04/15/24 08:00:32.031
• [15.337 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 04/15/24 08:00:32.084
  Apr 15 08:00:32.084: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename aggregator @ 04/15/24 08:00:32.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:32.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:32.148
  Apr 15 08:00:32.155: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Registering the sample API server. @ 04/15/24 08:00:32.158
  E0415 08:00:32.500330      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:33.207: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Apr 15 08:00:33.290: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0415 08:00:33.502556      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:34.502768      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:35.440: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:35.503894      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:36.504061      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:37.450: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:37.504412      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:38.504754      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:39.451: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:39.505516      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:40.506371      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:41.455: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:41.506649      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:42.506922      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:43.451: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:43.507729      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:44.508023      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:45.452: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:45.508271      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:46.508482      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:47.452: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:47.509509      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:48.510280      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:49.450: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:49.510597      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:50.510813      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:51.449: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:51.511257      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:52.511968      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:53.450: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:00:53.512546      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:54.512894      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:00:55.518245      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:55.598: INFO: Waited 128.507074ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/15/24 08:00:55.697
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/15/24 08:00:55.709
  STEP: List APIServices @ 04/15/24 08:00:55.728
  Apr 15 08:00:55.751: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/15/24 08:00:55.752
  Apr 15 08:00:55.790: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/15/24 08:00:55.79
  Apr 15 08:00:55.815: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.April, 15, 8, 0, 55, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/15/24 08:00:55.815
  Apr 15 08:00:55.823: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-04-15 08:00:55 +0000 UTC Passed all checks passed}
  Apr 15 08:00:55.824: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 08:00:55.824: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/15/24 08:00:55.824
  Apr 15 08:00:55.847: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-123787083" @ 04/15/24 08:00:55.847
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/15/24 08:00:55.877
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/15/24 08:00:55.891
  STEP: Patch APIService Status @ 04/15/24 08:00:55.9
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/15/24 08:00:55.919
  Apr 15 08:00:55.929: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-04-15 08:00:55 +0000 UTC Passed all checks passed}
  Apr 15 08:00:55.929: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 15 08:00:55.930: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Apr 15 08:00:55.931: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 04/15/24 08:00:55.931
  STEP: Confirm that the generated APIService has been deleted @ 04/15/24 08:00:55.946
  Apr 15 08:00:55.946: INFO: Requesting list of APIServices to confirm quantity
  Apr 15 08:00:55.959: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Apr 15 08:00:55.959: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Apr 15 08:00:56.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6360" for this suite. @ 04/15/24 08:00:56.407
• [24.340 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 04/15/24 08:00:56.424
  Apr 15 08:00:56.424: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 08:00:56.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:56.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:56.476
  E0415 08:00:56.518175      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 04/15/24 08:00:56.529
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/15/24 08:00:56.543
  Apr 15 08:00:56.560: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:00:56.561: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  E0415 08:00:57.520337      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:57.589: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 08:00:57.590: INFO: Node thuchow3cah4-1 is running 0 daemon pod, expected 1
  E0415 08:00:58.520941      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:00:58.584: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 15 08:00:58.584: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/15/24 08:00:58.59
  STEP: DeleteCollection of the DaemonSets @ 04/15/24 08:00:58.603
  STEP: Verify that ReplicaSets have been deleted @ 04/15/24 08:00:58.62
  Apr 15 08:00:58.699: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"177956"},"items":null}

  Apr 15 08:00:58.712: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"177956"},"items":[{"metadata":{"name":"daemon-set-krqf6","generateName":"daemon-set-","namespace":"daemonsets-6394","uid":"1388d268-b4fc-484f-b988-1981f92c3843","resourceVersion":"177951","creationTimestamp":"2024-04-15T08:00:56Z","deletionTimestamp":"2024-04-15T08:01:28Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d56a7c3e-3361-48da-a489-a4b00575f4fd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-15T08:00:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d56a7c3e-3361-48da-a489-a4b00575f4fd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-15T08:00:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.247\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-44rl7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-44rl7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"thuchow3cah4-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["thuchow3cah4-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T08:00:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T08:00:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T08:00:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T08:00:56Z"}],"hostIP":"192.168.121.227","podIP":"10.233.64.247","podIPs":[{"ip":"10.233.64.247"}],"startTime":"2024-04-15T08:00:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-15T08:00:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://1373c7da2aefe5a1757d0f1e96d1077bab40ce8222a6e11ca7a3b66b4a0743fa","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-nmch7","generateName":"daemon-set-","namespace":"daemonsets-6394","uid":"2c1de56f-10f2-46a6-a1b3-1c0f7cc0a59e","resourceVersion":"177953","creationTimestamp":"2024-04-15T08:00:56Z","deletionTimestamp":"2024-04-15T08:01:28Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d56a7c3e-3361-48da-a489-a4b00575f4fd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-15T08:00:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d56a7c3e-3361-48da-a489-a4b00575f4fd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-15T08:00:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.245\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-kbbhg","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-kbbhg","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"thuchow3cah4-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["thuchow3cah4-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T08:00:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T08:00:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T08:00:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T08:00:56Z"}],"hostIP":"192.168.121.217","podIP":"10.233.65.245","podIPs":[{"ip":"10.233.65.245"}],"startTime":"2024-04-15T08:00:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-15T08:00:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://80cd68433043d3d5b63296acdb17f40c952f4f7a3350e11e9b2508741c8e20c0","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-r7klq","generateName":"daemon-set-","namespace":"daemonsets-6394","uid":"f53cf6d0-40f0-4ae8-9ad2-3f8924f9bc04","resourceVersion":"177952","creationTimestamp":"2024-04-15T08:00:56Z","deletionTimestamp":"2024-04-15T08:01:28Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d56a7c3e-3361-48da-a489-a4b00575f4fd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-15T08:00:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d56a7c3e-3361-48da-a489-a4b00575f4fd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-15T08:00:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.139\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lckqg","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lckqg","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"thuchow3cah4-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["thuchow3cah4-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T08:00:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T08:00:57Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T08:00:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-15T08:00:56Z"}],"hostIP":"192.168.121.252","podIP":"10.233.66.139","podIPs":[{"ip":"10.233.66.139"}],"startTime":"2024-04-15T08:00:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-15T08:00:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://6a897f41c7efd0997b01cb1892263decff8ca9836a8bb738257cc92ac930200b","started":true}],"qosClass":"BestEffort"}}]}

  Apr 15 08:00:58.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6394" for this suite. @ 04/15/24 08:00:58.76
• [2.352 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/15/24 08:00:58.783
  Apr 15 08:00:58.784: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename deployment @ 04/15/24 08:00:58.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:00:58.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:00:58.864
  Apr 15 08:00:58.908: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0415 08:00:59.521314      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:00.521283      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:01.522398      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:02.522851      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:03.523149      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:03.931: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/15/24 08:01:03.931
  Apr 15 08:01:03.931: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/15/24 08:01:03.957
  Apr 15 08:01:03.997: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4989",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5c2d1be-0d40-4105-8d0f-c4e9c3c983af",
      ResourceVersion: (string) (len=6) "178015",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 15 08:01:04.030: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4989",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee49e841-756d-4835-b90a-d479a6d27b36",
      ResourceVersion: (string) (len=6) "178020",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "b5c2d1be-0d40-4105-8d0f-c4e9c3c983af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 35 63 32 64 31  62 65 2d 30 64 34 30 2d  |\"b5c2d1be-0d40-|
              00000120  34 31 30 35 2d 38 64 30  66 2d 63 34 65 39 63 33  |4105-8d0f-c4e9c3|
              00000130  63 39 38 33 61 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c983af\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 08:01:04.032: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Apr 15 08:01:04.033: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4989",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df0c49a0-fbaf-444b-b698-b84fc91b2ced",
      ResourceVersion: (string) (len=6) "178017",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764858,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "b5c2d1be-0d40-4105-8d0f-c4e9c3c983af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764860,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 62 35 63 32 64 31 62  |"uid\":\"b5c2d1b|
              00000040  65 2d 30 64 34 30 2d 34  31 30 35 2d 38 64 30 66  |e-0d40-4105-8d0f|
              00000050  2d 63 34 65 39 63 33 63  39 38 33 61 66 5c 22 7d  |-c4e9c3c983af\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 15 08:01:04.045: INFO: Pod "test-cleanup-controller-ls6h5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-ls6h5",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-4989",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91688eac-19bc-42f1-9f3b-f7d5bb97a709",
      ResourceVersion: (string) (len=6) "177981",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764858,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "df0c49a0-fbaf-444b-b698-b84fc91b2ced",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  64 66 30 63 34 39 61 30  |uid\":\"df0c49a0|
              00000080  2d 66 62 61 66 2d 34 34  34 62 2d 62 36 39 38 2d  |-fbaf-444b-b698-|
              00000090  62 38 34 66 63 39 31 62  32 63 65 64 5c 22 7d 22  |b84fc91b2ced\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764860,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 34 30 5c 22 7d  |10.233.66.140\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9gnzn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9gnzn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "thuchow3cah4-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764860,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764860,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.252",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764858,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63848764859,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://0804db9ea78eb23671dfd8db4a403d6a1cbedd5f695341290ccce60e18caeb1e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:01:04.055: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-6pk7v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-6pk7v",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-4989",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60db2699-f8c8-42a9-849e-f3ba234d9376",
      ResourceVersion: (string) (len=6) "178023",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63848764864,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "ee49e841-756d-4835-b90a-d479a6d27b36",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63848764864,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 65  34 39 65 38 34 31 2d 37  |d\":\"ee49e841-7|
              00000090  35 36 64 2d 34 38 33 35  2d 62 39 30 61 2d 64 34  |56d-4835-b90a-d4|
              000000a0  37 39 61 36 64 32 37 62  33 36 5c 22 7d 22 3a 7b  |79a6d27b36\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jd294",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jd294",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 15 08:01:04.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4989" for this suite. @ 04/15/24 08:01:04.074
• [5.318 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/15/24 08:01:04.099
  Apr 15 08:01:04.099: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename init-container @ 04/15/24 08:01:04.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:04.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:04.202
  STEP: creating the pod @ 04/15/24 08:01:04.209
  Apr 15 08:01:04.210: INFO: PodSpec: initContainers in spec.initContainers
  E0415 08:01:04.523167      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:05.524210      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:06.524572      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:07.525343      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:07.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8929" for this suite. @ 04/15/24 08:01:07.643
• [3.590 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/15/24 08:01:07.691
  Apr 15 08:01:07.691: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename projected @ 04/15/24 08:01:07.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:07.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:07.744
  STEP: Creating projection with secret that has name projected-secret-test-map-40cb1808-4921-4743-8e92-4e3c98ac3920 @ 04/15/24 08:01:07.751
  STEP: Creating a pod to test consume secrets @ 04/15/24 08:01:07.763
  E0415 08:01:08.525668      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:09.527623      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:10.529571      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:11.530786      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/15/24 08:01:11.807
  Apr 15 08:01:11.814: INFO: Trying to get logs from node thuchow3cah4-3 pod pod-projected-secrets-c8838938-9dee-46b1-8c6b-6ee59fb18be6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/15/24 08:01:11.835
  Apr 15 08:01:11.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1637" for this suite. @ 04/15/24 08:01:11.886
• [4.210 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 04/15/24 08:01:11.904
  Apr 15 08:01:11.904: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/15/24 08:01:11.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:11.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:11.948
  STEP: Setting up the test @ 04/15/24 08:01:11.955
  STEP: Creating hostNetwork=false pod @ 04/15/24 08:01:11.956
  E0415 08:01:12.530784      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:13.531195      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 04/15/24 08:01:14.005
  E0415 08:01:14.531584      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:15.531570      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 04/15/24 08:01:16.047
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/15/24 08:01:16.047
  Apr 15 08:01:16.047: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3163 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:01:16.047: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 08:01:16.051: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:01:16.051: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3163/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 15 08:01:16.239: INFO: Exec stderr: ""
  Apr 15 08:01:16.239: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3163 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:01:16.239: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 08:01:16.240: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:01:16.241: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3163/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 15 08:01:16.370: INFO: Exec stderr: ""
  Apr 15 08:01:16.373: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3163 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:01:16.373: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 08:01:16.375: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:01:16.376: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3163/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 15 08:01:16.526: INFO: Exec stderr: ""
  Apr 15 08:01:16.527: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3163 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:01:16.527: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 08:01:16.531: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:01:16.532: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3163/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E0415 08:01:16.532842      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:16.678: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/15/24 08:01:16.678
  Apr 15 08:01:16.678: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3163 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:01:16.678: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 08:01:16.681: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:01:16.681: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3163/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 15 08:01:16.836: INFO: Exec stderr: ""
  Apr 15 08:01:16.836: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3163 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:01:16.836: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 08:01:16.838: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:01:16.839: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3163/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 15 08:01:16.951: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/15/24 08:01:16.951
  Apr 15 08:01:16.951: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3163 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:01:16.951: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 08:01:16.955: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:01:16.955: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3163/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 15 08:01:17.089: INFO: Exec stderr: ""
  Apr 15 08:01:17.090: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3163 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:01:17.090: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 08:01:17.094: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:01:17.095: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3163/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 15 08:01:17.200: INFO: Exec stderr: ""
  Apr 15 08:01:17.200: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3163 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:01:17.200: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 08:01:17.204: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:01:17.204: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3163/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 15 08:01:17.341: INFO: Exec stderr: ""
  Apr 15 08:01:17.342: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3163 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:01:17.342: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 08:01:17.345: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:01:17.345: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3163/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 15 08:01:17.438: INFO: Exec stderr: ""
  Apr 15 08:01:17.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-3163" for this suite. @ 04/15/24 08:01:17.458
• [5.574 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/15/24 08:01:17.483
  Apr 15 08:01:17.483: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename daemonsets @ 04/15/24 08:01:17.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:17.528
  E0415 08:01:17.532742      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:17.536
  Apr 15 08:01:17.597: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/15/24 08:01:17.611
  Apr 15 08:01:17.618: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:01:17.619: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/15/24 08:01:17.619
  Apr 15 08:01:17.691: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:01:17.691: INFO: Node thuchow3cah4-3 is running 0 daemon pod, expected 1
  E0415 08:01:18.533117      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:18.702: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 08:01:18.702: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/15/24 08:01:18.711
  Apr 15 08:01:18.759: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 08:01:18.759: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0415 08:01:19.533607      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:19.769: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:01:19.769: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/15/24 08:01:19.769
  Apr 15 08:01:19.806: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:01:19.806: INFO: Node thuchow3cah4-3 is running 0 daemon pod, expected 1
  E0415 08:01:20.535162      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:20.815: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 15 08:01:20.815: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/15/24 08:01:20.831
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7775, will wait for the garbage collector to delete the pods @ 04/15/24 08:01:20.832
  Apr 15 08:01:20.902: INFO: Deleting DaemonSet.extensions daemon-set took: 13.044462ms
  Apr 15 08:01:21.003: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.590553ms
  E0415 08:01:21.535160      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:22.536681      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:22.911: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 15 08:01:22.912: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 15 08:01:22.935: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"178254"},"items":null}

  Apr 15 08:01:22.947: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"178256"},"items":null}

  Apr 15 08:01:23.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7775" for this suite. @ 04/15/24 08:01:23.051
• [5.595 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 04/15/24 08:01:23.106
  Apr 15 08:01:23.106: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename webhook @ 04/15/24 08:01:23.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:23.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:23.164
  STEP: Setting up server cert @ 04/15/24 08:01:23.215
  E0415 08:01:23.537523      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:24.537678      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/15/24 08:01:24.656
  STEP: Deploying the webhook pod @ 04/15/24 08:01:24.676
  STEP: Wait for the deployment to be ready @ 04/15/24 08:01:24.704
  Apr 15 08:01:24.721: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0415 08:01:25.538054      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:26.538204      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:26.743: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:01:27.540262      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:28.539531      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:28.751: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:01:29.540089      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:30.540151      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:30.752: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:01:31.540222      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:32.540596      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:32.752: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:01:33.541135      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:34.541809      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:34.752: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 15, 8, 1, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0415 08:01:35.542238      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:36.542408      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 08:01:36.751
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:01:36.773
  E0415 08:01:37.543156      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:01:37.773: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/15/24 08:01:37.79
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/15/24 08:01:37.829
  STEP: Creating a dummy validating-webhook-configuration object @ 04/15/24 08:01:37.862
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/15/24 08:01:37.887
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/15/24 08:01:37.907
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/15/24 08:01:37.925
  Apr 15 08:01:37.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2639" for this suite. @ 04/15/24 08:01:38.091
  STEP: Destroying namespace "webhook-markers-1722" for this suite. @ 04/15/24 08:01:38.112
• [15.020 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 04/15/24 08:01:38.131
  Apr 15 08:01:38.131: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename pod-network-test @ 04/15/24 08:01:38.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:01:38.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:01:38.17
  STEP: Performing setup for networking test in namespace pod-network-test-5241 @ 04/15/24 08:01:38.178
  STEP: creating a selector @ 04/15/24 08:01:38.178
  STEP: Creating the service pods in kubernetes @ 04/15/24 08:01:38.178
  Apr 15 08:01:38.179: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0415 08:01:38.543714      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:39.544062      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:40.545048      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:41.545075      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:42.545760      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:43.546341      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:44.546359      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:45.546933      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:46.547242      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:47.547653      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:48.548687      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:49.548902      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:50.550342      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:51.551103      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:52.552044      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:53.552188      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:54.552951      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:55.553398      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:56.554379      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:57.554760      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:58.555484      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:01:59.556052      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/15/24 08:02:00.407
  E0415 08:02:00.555997      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:01.556156      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:02:02.448: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 15 08:02:02.448: INFO: Breadth first check of 10.233.64.248 on host 192.168.121.227...
  Apr 15 08:02:02.456: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.148:9080/dial?request=hostname&protocol=udp&host=10.233.64.248&port=8081&tries=1'] Namespace:pod-network-test-5241 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:02:02.456: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 08:02:02.459: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:02:02.459: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5241/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.148%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.248%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0415 08:02:02.556508      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:02:02.640: INFO: Waiting for responses: map[]
  Apr 15 08:02:02.640: INFO: reached 10.233.64.248 after 0/1 tries
  Apr 15 08:02:02.641: INFO: Breadth first check of 10.233.65.246 on host 192.168.121.217...
  Apr 15 08:02:02.647: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.148:9080/dial?request=hostname&protocol=udp&host=10.233.65.246&port=8081&tries=1'] Namespace:pod-network-test-5241 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:02:02.647: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 08:02:02.649: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:02:02.649: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5241/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.148%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.246%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 08:02:02.777: INFO: Waiting for responses: map[]
  Apr 15 08:02:02.778: INFO: reached 10.233.65.246 after 0/1 tries
  Apr 15 08:02:02.778: INFO: Breadth first check of 10.233.66.147 on host 192.168.121.252...
  Apr 15 08:02:02.786: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.148:9080/dial?request=hostname&protocol=udp&host=10.233.66.147&port=8081&tries=1'] Namespace:pod-network-test-5241 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 15 08:02:02.787: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  Apr 15 08:02:02.788: INFO: ExecWithOptions: Clientset creation
  Apr 15 08:02:02.788: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5241/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.148%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.147%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 15 08:02:02.909: INFO: Waiting for responses: map[]
  Apr 15 08:02:02.910: INFO: reached 10.233.66.147 after 0/1 tries
  Apr 15 08:02:02.910: INFO: Going to retry 0 out of 3 pods....
  Apr 15 08:02:02.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5241" for this suite. @ 04/15/24 08:02:02.926
• [24.815 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 04/15/24 08:02:02.947
  Apr 15 08:02:02.947: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename endpointslice @ 04/15/24 08:02:02.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:02:03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:02:03.008
  E0415 08:02:03.556932      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:04.557354      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:05.559224      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:06.558487      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:07.558651      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 04/15/24 08:02:08.211
  E0415 08:02:08.561109      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:09.560365      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:10.560925      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:11.560586      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:12.561212      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 04/15/24 08:02:13.234
  E0415 08:02:13.561458      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:14.561971      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:15.562225      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:16.562160      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:17.563004      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/15/24 08:02:18.259
  E0415 08:02:18.563756      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:19.563681      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:20.563727      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:21.563848      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:22.564031      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 04/15/24 08:02:23.278
  Apr 15 08:02:23.339: INFO: EndpointSlice for Service endpointslice-3540/example-named-port not found
  E0415 08:02:23.564164      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:24.564637      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:25.564933      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:26.565836      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:27.566045      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:28.566161      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:29.566572      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:30.567211      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:31.567332      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:32.567997      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:02:33.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3540" for this suite. @ 04/15/24 08:02:33.382
• [30.458 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 04/15/24 08:02:33.414
  Apr 15 08:02:33.414: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename containers @ 04/15/24 08:02:33.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:02:33.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:02:33.479
  E0415 08:02:33.568150      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:34.568964      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:02:35.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 08:02:35.568921      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "containers-6851" for this suite. @ 04/15/24 08:02:35.573
• [2.182 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 04/15/24 08:02:35.597
  Apr 15 08:02:35.597: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  STEP: Building a namespace api object, basename crd-webhook @ 04/15/24 08:02:35.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/15/24 08:02:35.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/15/24 08:02:35.69
  STEP: Setting up server cert @ 04/15/24 08:02:35.696
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/15/24 08:02:36.541
  STEP: Deploying the custom resource conversion webhook pod @ 04/15/24 08:02:36.558
  E0415 08:02:36.570069      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 04/15/24 08:02:36.587
  Apr 15 08:02:36.609: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0415 08:02:37.570441      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:38.570546      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/15/24 08:02:38.642
  STEP: Verifying the service has paired with the endpoint @ 04/15/24 08:02:38.68
  E0415 08:02:39.571368      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 15 08:02:39.681: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 15 08:02:39.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1462319970
  E0415 08:02:40.572141      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0415 08:02:41.573174      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/15/24 08:02:42.519
  STEP: v2 custom resource should be converted @ 04/15/24 08:02:42.539
  Apr 15 08:02:42.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0415 08:02:42.573310      15 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-9236" for this suite. @ 04/15/24 08:02:43.258
• [7.679 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Apr 15 08:02:43.303: INFO: Running AfterSuite actions on node 1
  Apr 15 08:02:43.303: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.123 seconds]
------------------------------

Ran 380 of 7389 Specs in 6221.604 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7009 Skipped
PASS

Ginkgo ran 1 suite in 1h43m43.396510483s
Test Suite Passed
